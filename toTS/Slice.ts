export const Packages = {
    "net": {
        "minecraft": {
            "client": {
                "gui": {
                    "ScreenChatOptions": {
                        "parentScreen": {},
                        "field_146399_a": {},
                        "game_settings": {},
                        "field_146401_i": {}
                    },
                    "GuiDownloadTerrain": {
                        "netHandlerPlayClient": {},
                        "progress": {},
                        "customLoadingScreen": {}
                    },
                    "spectator": {
                        "ISpectatorMenuView": {},
                        "categories": {
                            "SpectatorDetails": {
                                "field_178684_a": {},
                                "field_178682_b": {},
                                "field_178683_c": {}
                            },
                            "TeleportToTeam": {
                                "field_178672_a": {}
                            },
                            "TeleportToTeam$TeamSelectionObject": {
                                "this$0": {},
                                "field_178677_c": {},
                                "field_178675_d": {},
                                "field_178676_b": {}
                            }
                        },
                        "BaseSpectatorGroup": {
                            "field_178671_a": {}
                        },
                        "ISpectatorMenuRecipient": {},
                        "SpectatorMenu$EndSpectatorObject": {},
                        "ISpectatorMenuObject": {},
                        "SpectatorMenu$MoveMenuObject": {
                            "field_178666_a": {},
                            "field_178665_b": {}
                        },
                        "SpectatorMenu": {
                            "access$102": function() {},
                            "field_178659_h": {},
                            "field_178658_j": {},
                            "field_178655_b": {},
                            "field_178653_d": {},
                            "field_178651_f": {},
                            "field_178657_a": {},
                            "field_178660_i": {},
                            "field_178656_c": {},
                            "field_178654_e": {},
                            "field_178652_g": {}
                        }
                    },
                    "GuiScreenCustomizePresets": {
                        "access$200": function() {},
                        "access$100": function() {},
                        "access$000": function() {},
                        "field_175317_i": {},
                        "field_175310_f": {},
                        "field_175314_r": {},
                        "field_175315_a": {},
                        "field_175313_s": {},
                        "field_175312_t": {},
                        "field_175311_g": {},
                        "field_175316_h": {}
                    },
                    "achievement": {
                        "GuiStats$StatsGeneral": {
                            "this$0": {}
                        },
                        "GuiStats$StatsMobsList": {
                            "field_148222_l": {},
                            "this$0": {}
                        },
                        "GuiStats$StatsItem": {
                            "this$0": {}
                        },
                        "GuiAchievements": {
                            "field_146554_D": {},
                            "field_146555_f": {},
                            "parentScreen": {},
                            "field_146564_i": {},
                            "field_146559_A": {},
                            "field_146563_h": {},
                            "field_146560_B": {},
                            "loadingAchievements": {},
                            "field_146569_s": {},
                            "field_146568_t": {},
                            "field_146567_u": {},
                            "field_146566_v": {},
                            "field_146565_w": {},
                            "field_146571_z": {},
                            "field_146572_y": {},
                            "field_146573_x": {},
                            "ACHIEVEMENT_BACKGROUND": {},
                            "field_146570_r": {},
                            "statFileWriter": {},
                            "field_146557_g": {}
                        },
                        "GuiStats$StatsBlock": {
                            "this$0": {}
                        },
                        "GuiAchievement": {
                            "achievementTitle": {},
                            "notificationTime": {},
                            "mc": {},
                            "achievementBg": {},
                            "permanentNotification": {},
                            "width": {},
                            "theAchievement": {},
                            "renderItem": {},
                            "height": {},
                            "achievementDescription": {}
                        },
                        "GuiStats": {
                            "access$1000": function() {},
                            "access$2200": function() {},
                            "access$700": function() {},
                            "access$600": function() {},
                            "access$500": function() {},
                            "access$400": function() {},
                            "access$300": function() {},
                            "access$200": function() {},
                            "access$100": function() {},
                            "access$2000": function() {},
                            "access$000": function() {},
                            "access$2100": function() {},
                            "access$900": function() {},
                            "access$800": function() {},
                            "access$1900": function() {},
                            "access$1100": function() {},
                            "access$1200": function() {},
                            "access$1300": function() {},
                            "access$1400": function() {},
                            "access$1500": function() {},
                            "access$1600": function() {},
                            "access$1700": function() {},
                            "access$1800": function() {},
                            "screenTitle": {},
                            "parentScreen": {},
                            "doesGuiPauseGame": {},
                            "blockStats": {},
                            "field_146546_t": {},
                            "mobStats": {},
                            "itemStats": {},
                            "displaySlot": {},
                            "generalStats": {}
                        },
                        "GuiStats$Stats": {
                            "field_148215_p": {},
                            "field_148218_l": {},
                            "statSorter": {},
                            "this$0": {},
                            "statsHolder": {},
                            "field_148217_o": {}
                        }
                    },
                    "GuiOptionsRowList$Row": {
                        "field_148323_b": {},
                        "field_148325_a": {},
                        "field_148324_c": {}
                    },
                    "GuiOverlayDebug": {
                        "bytesToMb": function() {},
                        "debugInfoLeft": {},
                        "mc": {},
                        "updateInfoRightTimeMs": {},
                        "updateInfoLeftTimeMs": {},
                        "debugInfoRight": {},
                        "debugOF": {},
                        "fontRenderer": {}
                    },
                    "GuiSimpleScrolledSelectionListProxy": {
                        "field_178050_u": {}
                    },
                    "GuiLanguage$List": {
                        "langCodeList": {},
                        "this$0": {},
                        "languageMap": {}
                    },
                    "MapItemRenderer": {
                        "access$500": function() {},
                        "access$400": function() {},
                        "mapIcons": {},
                        "loadedMaps": {},
                        "textureManager": {}
                    },
                    "inventory": {
                        "GuiFurnace": {
                            "tileFurnace": {},
                            "playerInventory": {},
                            "furnaceGuiTextures": {}
                        },
                        "GuiDispenser": {
                            "dispenserGuiTextures": {},
                            "playerInventory": {},
                            "dispenserInventory": {}
                        },
                        "GuiChest": {
                            "lowerChestInventory": {},
                            "inventoryRows": {},
                            "CHEST_GUI_TEXTURE": {},
                            "upperChestInventory": {}
                        },
                        "GuiBrewingStand": {
                            "brewingStandGuiTextures": {},
                            "playerInventory": {},
                            "tileBrewingStand": {}
                        },
                        "GuiEditSign": {
                            "tileSign": {},
                            "editLine": {},
                            "doneBtn": {},
                            "updateCounter": {}
                        },
                        "GuiInventory": {
                            "drawEntityOnScreen": function() {},
                            "oldMouseX": {},
                            "oldMouseY": {}
                        },
                        "GuiCrafting": {
                            "craftingTableGuiTextures": {}
                        },
                        "GuiBeacon$Button": {
                            "field_146145_o": {},
                            "field_146144_p": {},
                            "field_146143_q": {},
                            "field_146142_r": {}
                        },
                        "GuiScreenHorseInventory": {
                            "horseInventory": {},
                            "horseGuiTextures": {},
                            "playerInventory": {},
                            "mousePosx": {},
                            "horseEntity": {},
                            "mousePosY": {}
                        },
                        "CreativeCrafting": {
                            "mc": {}
                        },
                        "GuiBeacon$CancelButton": {
                            "this$0": {}
                        },
                        "GuiContainerCreative$CreativeSlot": {
                            "access$000": function() {},
                            "this$0": {},
                            "slot": {}
                        },
                        "GuiContainerCreative": {
                            "access$100": function() {},
                            "currentScroll": {},
                            "field_147057_D": {},
                            "creativeInventoryTabs": {},
                            "wasClicking": {},
                            "field_147059_E": {},
                            "searchField": {},
                            "field_147063_B": {},
                            "field_147060_v": {},
                            "field_147064_C": {},
                            "selectedTabIndex": {},
                            "isScrolling": {}
                        },
                        "GuiContainer": {
                            "dragSplittingButton": {},
                            "ySize": {},
                            "clickedSlot": {},
                            "theSlot": {},
                            "lastClickTime": {},
                            "guiLeft": {},
                            "lastClickButton": {},
                            "ignoreMouseUp": {},
                            "xSize": {},
                            "lastClickSlot": {},
                            "isRightMouseClick": {},
                            "returningStack": {},
                            "inventorySlots": {},
                            "returningStackDestSlot": {},
                            "dragSplittingSlots": {},
                            "draggedStack": {},
                            "dragSplittingRemnant": {},
                            "currentDragTargetSlot": {},
                            "returningStackTime": {},
                            "dragSplitting": {},
                            "shiftClickedSlot": {},
                            "doubleClick": {},
                            "dragItemDropDelay": {},
                            "inventoryBackground": {},
                            "touchUpX": {},
                            "touchUpY": {},
                            "dragSplittingLimit": {},
                            "guiTop": {}
                        },
                        "GuiBeacon$PowerButton": {
                            "this$0": {},
                            "field_146149_p": {},
                            "field_146148_q": {}
                        },
                        "GuiContainerCreative$ContainerCreative": {
                            "itemList": {}
                        },
                        "GuiBeacon$ConfirmButton": {
                            "this$0": {}
                        }
                    },
                    "ChatLine": {
                        "chatLineID": {},
                        "lineString": {},
                        "updateCounterCreated": {}
                    },
                    "GuiPageButtonList": {
                        "field_178075_A": {},
                        "field_178074_u": {},
                        "field_178073_v": {},
                        "field_178072_w": {},
                        "field_178078_x": {},
                        "field_178077_y": {},
                        "field_178076_z": {}
                    },
                    "stream": {
                        "GuiIngestServers$ServerList": {
                            "this$0": {}
                        },
                        "GuiIngestServers": {
                            "access$700": function() {},
                            "access$600": function() {},
                            "access$500": function() {},
                            "access$400": function() {},
                            "access$300": function() {},
                            "access$200": function() {},
                            "access$100": function() {},
                            "access$000": function() {},
                            "field_152309_a": {},
                            "field_152311_g": {},
                            "field_152310_f": {}
                        },
                        "GuiStreamOptions": {
                            "field_152313_r": {},
                            "field_152312_a": {},
                            "field_152319_i": {},
                            "parentScreen": {},
                            "field_152318_h": {},
                            "field_152316_f": {},
                            "field_152315_t": {},
                            "field_152314_s": {}
                        },
                        "GuiStreamUnavailable$Reason": {
                            "valueOf": function() {},
                            "values": function() {},
                            "UNSUPPORTED_OS_OTHER": {},
                            "ACCOUNT_NOT_MIGRATED": {},
                            "field_152575_n": {},
                            "NO_FBO": {},
                            "LIBRARY_ARCH_MISMATCH": {},
                            "field_152574_m": {},
                            "LIBRARY_FAILURE": {},
                            "FAILED_TWITCH_AUTH_ERROR": {},
                            "FAILED_TWITCH_AUTH": {},
                            "INITIALIZATION_FAILURE": {},
                            "UNKNOWN": {},
                            "UNSUPPORTED_OS_WINDOWS": {},
                            "UNSUPPORTED_OS_MAC": {},
                            "$VALUES": {},
                            "ACCOUNT_NOT_BOUND": {}
                        }
                    },
                    "GuiCreateFlatWorld": {
                        "access$000": function() {},
                        "createWorldGui": {},
                        "theFlatGeneratorInfo": {},
                        "field_146389_t": {},
                        "field_146388_u": {},
                        "field_146394_i": {},
                        "field_146386_v": {},
                        "createFlatWorldListSlotGui": {},
                        "flatWorldTitle": {},
                        "field_146391_r": {}
                    },
                    "GuiDisconnected": {
                        "reason": {},
                        "parentScreen": {},
                        "multilineMessage": {},
                        "field_175353_i": {},
                        "message": {}
                    },
                    "GuiPageButtonList$GuiListEntry": {
                        "field_178939_a": {},
                        "field_178938_c": {},
                        "field_178937_b": {}
                    },
                    "GuiOptionButton": {
                        "enumOptions": {}
                    },
                    "GuiConfirmOpenLink": {
                        "openLinkWarning": {},
                        "copyLinkButtonText": {},
                        "showSecurityWarning": {},
                        "linkText": {}
                    },
                    "GuiListExtended": {},
                    "Gui": {
                        "drawModalRectWithCustomSizedTexture": function() {},
                        "drawCenteredString": function() {},
                        "drawScaledCustomSizeModalRect": function() {},
                        "drawRect": function() {},
                        "drawCenteredStringStatic": function() {},
                        "zLevel": {},
                        "optionsBackground": {},
                        "icons": {},
                        "statIcons": {}
                    },
                    "GuiPageButtonList$GuiSlideEntry": {
                        "field_178948_c": {},
                        "field_178947_b": {},
                        "field_178949_a": {},
                        "field_178946_d": {}
                    },
                    "GuiKeyBindingList": {
                        "access$300": function() {},
                        "access$200": function() {},
                        "access$100": function() {},
                        "maxListLabelWidth": {},
                        "mc": {},
                        "field_148191_k": {},
                        "listEntries": {}
                    },
                    "GuiErrorScreen": {
                        "field_146312_f": {},
                        "field_146313_a": {}
                    },
                    "GuiRepair": {
                        "anvilResource": {},
                        "anvil": {},
                        "playerInventory": {},
                        "nameField": {}
                    },
                    "ServerListEntryLanDetected": {
                        "field_148292_c": {},
                        "field_148290_d": {},
                        "mc": {},
                        "field_148291_b": {}
                    },
                    "GuiSlider": {
                        "sliderPosition": {},
                        "min": {},
                        "isMouseDown": {},
                        "max": {},
                        "name": {},
                        "responder": {},
                        "formatHelper": {}
                    },
                    "IProgressMeter": {
                        "lanSearchStates": {}
                    },
                    "GuiButtonRealmsProxy": {
                        "realmsButton": {}
                    },
                    "GuiScreenServerList": {
                        "field_146303_a": {},
                        "field_146302_g": {},
                        "field_146301_f": {}
                    },
                    "GuiButton": {
                        "xPosition": {},
                        "visible": {},
                        "displayString": {},
                        "yPosition": {},
                        "width": {},
                        "buttonTextures": {},
                        "id": {},
                        "hovered": {},
                        "enabled": {},
                        "height": {}
                    },
                    "GuiPageButtonList$GuiLabelEntry": {},
                    "GuiLanguage": {
                        "access$300": function() {},
                        "access$200": function() {},
                        "access$100": function() {},
                        "access$000": function() {},
                        "confirmSettingsBtn": {},
                        "parentScreen": {},
                        "forceUnicodeFontBtn": {},
                        "game_settings_3": {},
                        "list": {},
                        "languageManager": {}
                    },
                    "GuiKeyBindingList$KeyEntry": {
                        "btnChangeKeyBinding": {},
                        "this$0": {},
                        "keybinding": {},
                        "keyDesc": {},
                        "btnReset": {}
                    },
                    "GuiScreenCustomizePresets$Info": {
                        "field_178955_a": {},
                        "field_178954_c": {},
                        "field_178953_b": {}
                    },
                    "GuiYesNoCallback": {},
                    "GuiHopper": {
                        "hopperInventory": {},
                        "playerInventory": {},
                        "HOPPER_GUI_TEXTURE": {}
                    },
                    "GuiResourcePackAvailable": {},
                    "GuiScreenBook$NextPageButton": {
                        "field_146151_o": {}
                    },
                    "GuiResourcePackList": {
                        "field_148204_l": {},
                        "mc": {}
                    },
                    "GuiStreamIndicator": {
                        "mc": {},
                        "streamAlphaDelta": {},
                        "streamAlpha": {},
                        "locationStreamIndicator": {}
                    },
                    "GuiResourcePackSelected": {},
                    "GuiListExtended$IGuiListEntry": {},
                    "ScaledResolution": {
                        "scaledHeight": {},
                        "scaleFactor": {},
                        "scaledWidth": {},
                        "scaledHeightD": {},
                        "scaledWidthD": {}
                    },
                    "GuiMemoryErrorScreen": {},
                    "GuiPlayerTabOverlay$PlayerComparator": {},
                    "GuiMerchant$MerchantButton": {
                        "field_146157_o": {}
                    },
                    "GuiFlatPresets$ListSlot": {
                        "field_148175_k": {},
                        "this$0": {}
                    },
                    "GuiOptionSlider": {
                        "dragging": {},
                        "field_146132_r": {},
                        "field_146131_s": {},
                        "sliderValue": {},
                        "options": {}
                    },
                    "GuiOptions": {
                        "field_146441_g": {},
                        "game_settings_1": {},
                        "field_146440_f": {},
                        "field_175356_r": {},
                        "field_146442_a": {},
                        "field_175357_i": {}
                    },
                    "GuiPageButtonList$GuiButtonEntry": {
                        "field_178941_a": {}
                    },
                    "MapItemRenderer$Instance": {
                        "access$300": function() {},
                        "access$100": function() {},
                        "access$000": function() {},
                        "mapData": {},
                        "mapTexture": {},
                        "mapTextureData": {},
                        "this$0": {},
                        "location": {}
                    },
                    "GuiControls": {
                        "screenTitle": {},
                        "parentScreen": {},
                        "keyBindingList": {},
                        "options": {},
                        "buttonId": {},
                        "time": {},
                        "buttonReset": {},
                        "optionsArr": {}
                    },
                    "GuiEnchantment": {
                        "container": {},
                        "MODEL_BOOK": {},
                        "field_147069_w": {},
                        "playerInventory": {},
                        "field_175380_I": {},
                        "ENCHANTMENT_TABLE_GUI_TEXTURE": {},
                        "field_147073_u": {},
                        "field_147071_v": {},
                        "field_147082_x": {},
                        "field_147081_y": {},
                        "field_147080_z": {},
                        "random": {},
                        "ENCHANTMENT_TABLE_BOOK_TEXTURE": {},
                        "field_147076_A": {},
                        "field_147077_B": {}
                    },
                    "GuiOptionsRowList": {
                        "field_148184_k": {}
                    },
                    "GuiRenameWorld": {
                        "field_146583_f": {},
                        "parentScreen": {},
                        "saveName": {}
                    },
                    "GuiSelectWorld$List": {
                        "this$0": {}
                    },
                    "GuiFlatPresets$LayerItem": {
                        "field_148232_b": {},
                        "field_148234_a": {},
                        "field_179037_b": {},
                        "field_148233_c": {}
                    },
                    "GuiSlotRealmsProxy": {
                        "selectionList": {}
                    },
                    "GuiYesNo": {
                        "messageLine2": {},
                        "messageLine1": {},
                        "field_175298_s": {},
                        "parentScreen": {},
                        "ticksUntilEnable": {},
                        "parentButtonClickedId": {},
                        "confirmButtonText": {},
                        "cancelButtonText": {}
                    },
                    "GuiScreenCustomizePresets$ListPreset": {
                        "field_178053_u": {},
                        "this$0": {}
                    },
                    "GuiScreenRealmsProxy": {
                        "field_154330_a": {}
                    },
                    "GuiLabel": {
                        "visible": {},
                        "field_146169_o": {},
                        "centered": {},
                        "field_146168_n": {},
                        "field_146166_p": {},
                        "field_146165_q": {},
                        "field_146163_s": {},
                        "field_175204_i": {},
                        "fontRenderer": {},
                        "field_146167_a": {},
                        "field_146162_g": {},
                        "field_146161_f": {},
                        "field_146173_k": {},
                        "field_146174_h": {},
                        "labelBgEnabled": {}
                    },
                    "GuiIngameMenu": {
                        "field_146445_a": {},
                        "field_146444_f": {}
                    },
                    "GuiButtonLanguage": {},
                    "GuiCreateWorld": {
                        "getUncollidingSaveDirName": function() {},
                        "btnMoreOptions": {},
                        "allowCheatsWasSetByUser": {},
                        "btnMapType": {},
                        "gameModeDesc2": {},
                        "gameModeDesc1": {},
                        "parentScreen": {},
                        "inMoreWorldOptionsDisplay": {},
                        "saveDirName": {},
                        "bonusChestEnabled": {},
                        "btnMapFeatures": {},
                        "allowCheats": {},
                        "btnCustomizeType": {},
                        "worldSeed": {},
                        "worldName": {},
                        "disallowedFilenames": {},
                        "alreadyGenerated": {},
                        "btnBonusItems": {},
                        "chunkProviderSettingsJson": {},
                        "worldSeedField": {},
                        "hardCoreMode": {},
                        "btnAllowCommands": {},
                        "generateStructuresEnabled": {},
                        "btnGameMode": {},
                        "selectedIndex": {},
                        "savedGameMode": {},
                        "worldNameField": {},
                        "gameMode": {}
                    },
                    "ServerListEntryLanScan": {
                        "mc": {}
                    },
                    "GuiSnooper$List": {
                        "this$0": {}
                    },
                    "GuiPageButtonList$GuiResponder": {},
                    "GuiSlider$FormatHelper": {},
                    "GuiSlot": {
                        "mouseX": {},
                        "scrollDownButtonID": {},
                        "bottom": {},
                        "mouseY": {},
                        "lastClicked": {},
                        "slotHeight": {},
                        "right": {},
                        "field_178041_q": {},
                        "enabled": {},
                        "scrollUpButtonID": {},
                        "showSelectionBox": {},
                        "field_148163_i": {},
                        "headerPadding": {},
                        "top": {},
                        "scrollMultiplier": {},
                        "left": {},
                        "mc": {},
                        "initialClickY": {},
                        "amountScrolled": {},
                        "selectedElement": {},
                        "width": {},
                        "hasListHeader": {},
                        "height": {}
                    },
                    "GuiScreenWorking": {
                        "doneWorking": {},
                        "field_146589_f": {},
                        "progress": {},
                        "field_146591_a": {},
                        "customLoadingScreen": {}
                    },
                    "GuiVideoSettings": {
                        "drawGradientRect": function() {},
                        "getGuiChatText": function() {},
                        "getButtonWidth": function() {},
                        "getButtonHeight": function() {},
                        "guiGameSettings": {},
                        "screenTitle": {},
                        "videoOptions": {},
                        "tooltipManager": {},
                        "parentGuiScreen": {}
                    },
                    "GuiUtilRenderComponents": {
                        "func_178909_a": function() {},
                        "splitText": function() {}
                    },
                    "GuiFlatPresets": {
                        "access$200": function() {},
                        "access$100": function() {},
                        "access$000": function() {},
                        "func_146425_a": function() {},
                        "func_146421_a": function() {},
                        "func_175354_a": function() {},
                        "parentScreen": {},
                        "field_146436_r": {},
                        "field_146435_s": {},
                        "field_146434_t": {},
                        "field_146433_u": {},
                        "presetsTitle": {},
                        "presetsShare": {},
                        "FLAT_WORLD_PRESETS": {}
                    },
                    "GuiClickableScrolledSelectionListProxy": {
                        "field_178046_u": {}
                    },
                    "GuiLockIconButton": {
                        "field_175231_o": {}
                    },
                    "GuiSleepMP": {},
                    "GuiSnooper": {
                        "access$100": function() {},
                        "access$000": function() {},
                        "game_settings_2": {},
                        "field_146604_g": {},
                        "field_146608_a": {},
                        "field_146610_i": {},
                        "field_146607_r": {},
                        "field_146606_s": {},
                        "field_146605_t": {},
                        "field_146609_h": {}
                    },
                    "GuiCreateFlatWorld$Details": {
                        "this$0": {},
                        "field_148228_k": {}
                    },
                    "ServerSelectionList": {
                        "owner": {},
                        "serverListInternet": {},
                        "serverListLan": {},
                        "lanScanEntry": {},
                        "selectedSlotIndex": {}
                    },
                    "GuiScreenOptionsSounds": {
                        "access$000": function() {},
                        "field_146505_f": {},
                        "game_settings_4": {},
                        "field_146507_a": {},
                        "field_146508_h": {}
                    },
                    "GuiShareToLan": {
                        "field_146596_f": {},
                        "field_146598_a": {},
                        "field_146597_g": {},
                        "field_146600_i": {},
                        "field_146599_h": {}
                    },
                    "GuiPageButtonList$GuiEntry": {
                        "access$200": function() {},
                        "access$100": function() {},
                        "access$000": function() {},
                        "field_178028_d": {},
                        "field_178029_b": {},
                        "field_178030_c": {},
                        "field_178031_a": {}
                    },
                    "GuiCustomizeSkin$ButtonPart": {
                        "access$100": function() {},
                        "this$0": {},
                        "playerModelParts": {}
                    },
                    "GuiCustomizeSkin": {
                        "access$200": function() {},
                        "parentScreen": {},
                        "title": {}
                    },
                    "GuiSpectator": {
                        "field_175271_i": {},
                        "field_175269_a": {},
                        "field_175270_h": {},
                        "field_175268_g": {},
                        "field_175267_f": {}
                    },
                    "GuiListButton": {
                        "field_175216_o": {},
                        "localizationStr": {},
                        "guiResponder": {}
                    },
                    "GuiKeyBindingList$CategoryEntry": {
                        "labelText": {},
                        "this$0": {},
                        "labelWidth": {}
                    },
                    "GuiLockIconButton$Icon": {
                        "valueOf": function() {},
                        "values": function() {},
                        "UNLOCKED": {},
                        "LOCKED_HOVER": {},
                        "UNLOCKED_DISABLED": {},
                        "LOCKED": {},
                        "LOCKED_DISABLED": {},
                        "UNLOCKED_HOVER": {},
                        "field_178914_g": {},
                        "field_178920_h": {},
                        "$VALUES": {}
                    },
                    "GuiGameOver": {
                        "field_146346_f": {},
                        "enableButtonsTimer": {}
                    },
                    "GuiScreenOptionsSounds$Button": {
                        "field_146153_r": {},
                        "field_146152_s": {},
                        "field_146156_o": {},
                        "field_146155_p": {},
                        "this$0": {}
                    }
                },
                "model": {
                    "ModelGhast": {
                        "body": {},
                        "tentacles": {}
                    },
                    "ModelLeashKnot": {
                        "field_110723_a": {}
                    },
                    "ModelBoat": {
                        "boatSides": {}
                    },
                    "ModelSheep2": {
                        "headRotationAngleX": {}
                    },
                    "ModelSheep1": {
                        "headRotationAngleX": {}
                    },
                    "ModelPlayer": {
                        "bipedDeadmau5Head": {},
                        "bipedRightArmwear": {},
                        "bipedLeftArmwear": {},
                        "smallArms": {},
                        "bipedBodyWear": {},
                        "bipedCape": {},
                        "bipedLeftLegwear": {},
                        "bipedRightLegwear": {}
                    },
                    "ModelPig": {},
                    "ModelCow": {},
                    "ModelChest": {
                        "chestLid": {},
                        "chestBelow": {},
                        "chestKnob": {}
                    },
                    "ModelHumanoidHead": {
                        "head": {}
                    },
                    "ModelSilverfish": {
                        "silverfishTexturePositions": {},
                        "silverfishBodyParts": {},
                        "silverfishWings": {},
                        "field_78170_c": {},
                        "silverfishBoxLength": {}
                    },
                    "ModelWither": {
                        "field_82905_a": {},
                        "field_82904_b": {}
                    },
                    "ModelBase": {
                        "copyModelAngles": function() {},
                        "boxList": {},
                        "isRiding": {},
                        "modelTextureMap": {},
                        "textureWidth": {},
                        "swingProgress": {},
                        "textureHeight": {},
                        "isChild": {}
                    },
                    "ModelBlaze": {
                        "blazeSticks": {},
                        "blazeHead": {}
                    },
                    "ModelMinecart": {
                        "sideModels": {}
                    },
                    "ModelRabbit": {
                        "rabbitNose": {},
                        "rabbitRightArm": {},
                        "rabbitTail": {},
                        "rabbitLeftEar": {},
                        "rabbitLeftArm": {},
                        "rabbitRightEar": {},
                        "field_178699_n": {},
                        "rabbitHead": {},
                        "rabbitRightFoot": {},
                        "rabbitRightThigh": {},
                        "rabbitLeftFoot": {},
                        "rabbitLeftThigh": {},
                        "field_178701_m": {},
                        "rabbitBody": {}
                    },
                    "ModelSign": {
                        "signStick": {},
                        "signBoard": {}
                    },
                    "TexturedQuad": {
                        "vertexPositions": {},
                        "nVertices": {},
                        "invertNormal": {}
                    },
                    "ModelEnderman": {
                        "isAttacking": {},
                        "isCarrying": {}
                    },
                    "ModelIronGolem": {
                        "ironGolemLeftArm": {},
                        "ironGolemRightLeg": {},
                        "ironGolemRightArm": {},
                        "ironGolemLeftLeg": {},
                        "ironGolemBody": {},
                        "ironGolemHead": {}
                    },
                    "ModelSquid": {
                        "squidTentacles": {},
                        "squidBody": {}
                    },
                    "ModelBook": {
                        "coverLeft": {},
                        "flippingPageLeft": {},
                        "coverRight": {},
                        "pagesRight": {},
                        "flippingPageRight": {},
                        "pagesLeft": {},
                        "bookSpine": {}
                    },
                    "ModelChicken": {
                        "head": {},
                        "rightLeg": {},
                        "chin": {},
                        "bill": {},
                        "leftLeg": {},
                        "body": {},
                        "leftWing": {},
                        "rightWing": {}
                    },
                    "TextureOffset": {
                        "textureOffsetX": {},
                        "textureOffsetY": {}
                    },
                    "ModelSpider": {
                        "spiderLeg5": {},
                        "spiderLeg6": {},
                        "spiderLeg7": {},
                        "spiderLeg8": {},
                        "spiderLeg1": {},
                        "spiderLeg2": {},
                        "spiderLeg3": {},
                        "spiderLeg4": {},
                        "spiderNeck": {},
                        "spiderHead": {},
                        "spiderBody": {}
                    },
                    "ModelGuardian": {
                        "guardianSpines": {},
                        "guardianBody": {},
                        "guardianTail": {},
                        "guardianEye": {}
                    },
                    "ModelDragon": {
                        "frontFoot": {},
                        "wingTip": {},
                        "jaw": {},
                        "rearLeg": {},
                        "frontLeg": {},
                        "spine": {},
                        "body": {},
                        "rearLegTip": {},
                        "head": {},
                        "frontLegTip": {},
                        "rearFoot": {},
                        "wing": {},
                        "partialTicks": {}
                    },
                    "ModelSlime": {
                        "slimeBodies": {},
                        "slimeMouth": {},
                        "slimeLeftEye": {},
                        "slimeRightEye": {}
                    },
                    "ModelOcelot": {
                        "ocelotTail2": {},
                        "ocelotBody": {},
                        "ocelotBackLeftLeg": {},
                        "ocelotHead": {},
                        "ocelotBackRightLeg": {},
                        "field_78163_i": {},
                        "ocelotTail": {},
                        "ocelotFrontRightLeg": {},
                        "ocelotFrontLeftLeg": {}
                    },
                    "ModelEnderCrystal": {
                        "glass": {},
                        "cube": {},
                        "base": {}
                    },
                    "ModelQuadruped": {
                        "head": {},
                        "leg1": {},
                        "leg4": {},
                        "leg2": {},
                        "childYOffset": {},
                        "leg3": {},
                        "body": {},
                        "childZOffset": {}
                    },
                    "ModelHorse": {
                        "horseRightEar": {},
                        "horseSaddleBack": {},
                        "muleLeftEar": {},
                        "tailBase": {},
                        "frontLeftHoof": {},
                        "horseLeftSaddleMetal": {},
                        "tailMiddle": {},
                        "backRightShin": {},
                        "body": {},
                        "field_178711_b": {},
                        "field_178712_c": {},
                        "muleRightChest": {},
                        "head": {},
                        "frontRightLeg": {},
                        "horseLeftEar": {},
                        "horseRightRein": {},
                        "horseSaddleFront": {},
                        "horseRightFaceMetal": {},
                        "backLeftShin": {},
                        "horseFaceRopes": {},
                        "backLeftLeg": {},
                        "frontRightHoof": {},
                        "backLeftHoof": {},
                        "horseRightSaddleRope": {},
                        "horseLeftRein": {},
                        "neck": {},
                        "horseLeftFaceMetal": {},
                        "backRightLeg": {},
                        "backRightHoof": {},
                        "frontLeftLeg": {},
                        "horseSaddleBottom": {},
                        "horseLeftSaddleRope": {},
                        "mane": {},
                        "tailTip": {},
                        "frontRightShin": {},
                        "horseRightSaddleMetal": {},
                        "frontLeftShin": {},
                        "muleLeftChest": {},
                        "muleRightEar": {}
                    },
                    "ModelBiped": {
                        "bipedRightArm": {},
                        "bipedRightLeg": {},
                        "bipedLeftLeg": {},
                        "bipedHeadwear": {},
                        "bipedLeftArm": {},
                        "heldItemRight": {},
                        "bipedBody": {},
                        "aimedBow": {},
                        "isSneak": {},
                        "bipedHead": {},
                        "heldItemLeft": {}
                    },
                    "ModelArmorStand": {
                        "standWaist": {},
                        "standRightSide": {},
                        "standLeftSide": {},
                        "standBase": {}
                    },
                    "ModelSnowMan": {
                        "head": {},
                        "leftHand": {},
                        "bottomBody": {},
                        "rightHand": {},
                        "body": {}
                    },
                    "PositionTextureVertex": {
                        "vector3D": {},
                        "texturePositionY": {},
                        "texturePositionX": {}
                    },
                    "ModelCreeper": {
                        "head": {},
                        "leg1": {},
                        "leg4": {},
                        "leg2": {},
                        "leg3": {},
                        "body": {},
                        "creeperArmor": {}
                    },
                    "ModelLargeChest": {},
                    "ModelBat": {
                        "batOuterRightWing": {},
                        "batHead": {},
                        "batBody": {},
                        "batLeftWing": {},
                        "batRightWing": {},
                        "batOuterLeftWing": {}
                    },
                    "ModelBox": {
                        "posX2": {},
                        "posY1": {},
                        "posZ2": {},
                        "vertexPositions": {},
                        "posX1": {},
                        "posY2": {},
                        "posZ1": {},
                        "boxName": {},
                        "quadList": {}
                    },
                    "ModelMagmaCube": {
                        "core": {},
                        "segments": {}
                    },
                    "ModelArmorStandArmor": {},
                    "ModelZombie": {},
                    "ModelSkeleton": {},
                    "ModelWolf": {
                        "wolfMane": {},
                        "wolfBody": {},
                        "wolfLeg4": {},
                        "wolfHeadMain": {},
                        "wolfLeg1": {},
                        "wolfLeg2": {},
                        "wolfLeg3": {},
                        "wolfTail": {}
                    },
                    "ModelSkeletonHead": {
                        "skeletonHead": {}
                    },
                    "ModelBanner": {
                        "bannerTop": {},
                        "bannerStand": {},
                        "bannerSlate": {}
                    },
                    "ModelRenderer": {
                        "mirror": {},
                        "textureWidth": {},
                        "mirrorV": {},
                        "cubeList": {},
                        "textureLocation": {},
                        "spriteList": {},
                        "textureHeight": {},
                        "scaleZ": {},
                        "offsetX": {},
                        "scaleX": {},
                        "childModels": {},
                        "scaleY": {},
                        "rotationPointX": {},
                        "compiled": {},
                        "offsetZ": {},
                        "renderGlobal": {},
                        "rotationPointY": {},
                        "offsetY": {},
                        "id": {},
                        "modelUpdater": {},
                        "rotationPointZ": {},
                        "rotateAngleY": {},
                        "rotateAngleX": {},
                        "showModel": {},
                        "rotateAngleZ": {},
                        "baseModel": {},
                        "countResetDisplayList": {},
                        "displayList": {},
                        "textureOffsetX": {},
                        "textureOffsetY": {},
                        "isHidden": {},
                        "boxName": {}
                    },
                    "ModelZombieVillager": {},
                    "ModelEnderMite": {
                        "field_178714_b": {},
                        "field_178716_a": {},
                        "field_178713_d": {},
                        "field_178715_c": {}
                    },
                    "ModelWitch": {
                        "field_82900_g": {},
                        "witchHat": {},
                        "field_82901_h": {}
                    },
                    "ModelVillager": {
                        "villagerArms": {},
                        "rightVillagerLeg": {},
                        "villagerBody": {},
                        "villagerHead": {},
                        "leftVillagerLeg": {},
                        "villagerNose": {}
                    }
                },
                "renderer": {
                    "chunk": {
                        "SetVisibility": {
                            "bits": {},
                            "COUNT_FACES": {}
                        },
                        "VisGraph": {
                            "getIndex": function() {},
                            "field_178616_a": {},
                            "field_178611_f": {},
                            "field_178615_c": {},
                            "field_178613_e": {},
                            "field_178614_b": {},
                            "field_178612_d": {}
                        },
                        "ChunkCompileTaskGenerator": {
                            "compiledChunk": {},
                            "listFinishRunnables": {},
                            "lock": {},
                            "renderChunk": {},
                            "finished": {},
                            "regionRenderCacheBuilder": {},
                            "type": {},
                            "status": {}
                        },
                        "ListedRenderChunk": {
                            "baseDisplayList": {}
                        },
                        "ListChunkFactory": {},
                        "ChunkCompileTaskGenerator$Type": {
                            "valueOf": function() {},
                            "values": function() {},
                            "RESORT_TRANSPARENCY": {},
                            "REBUILD_CHUNK": {},
                            "$VALUES": {}
                        },
                        "RenderChunk": {
                            "setTileEntities": {},
                            "boundingBox": {},
                            "frameIndex": {},
                            "compiledChunk": {},
                            "needsUpdate": {},
                            "renderInfo": {},
                            "lockCompiledChunk": {},
                            "chunk": {},
                            "fixBlockLayer": {},
                            "renderGlobal": {},
                            "world": {},
                            "regionX": {},
                            "vertexBuffers": {},
                            "regionZ": {},
                            "lockCompileTask": {},
                            "renderChunkNeighboursUpated": {},
                            "positionOffsets16": {},
                            "renderChunkNeighboursValid": {},
                            "isMipmaps": {},
                            "playerUpdate": {},
                            "renderChunkNeighbours": {},
                            "boundingBoxParent": {},
                            "index": {},
                            "blockLayersSingle": {},
                            "renderChunksOfset16": {},
                            "ENUM_WORLD_BLOCK_LAYERS": {},
                            "mapEnumFacing": {},
                            "compileTask": {},
                            "renderChunksOffset16Updated": {},
                            "renderChunksUpdated": {},
                            "position": {},
                            "modelviewMatrix": {}
                        },
                        "VboChunkFactory": {},
                        "CompiledChunk": {
                            "layersStarted": {},
                            "tileEntities": {},
                            "animatedSprites": {},
                            "state": {},
                            "layersUsed": {},
                            "DUMMY": {},
                            "empty": {},
                            "setVisibility": {}
                        },
                        "IRenderChunkFactory": {},
                        "ChunkCompileTaskGenerator$Status": {
                            "valueOf": function() {},
                            "values": function() {},
                            "COMPILING": {},
                            "UPLOADING": {},
                            "DONE": {},
                            "PENDING": {},
                            "$VALUES": {}
                        }
                    },
                    "entity": {
                        "RenderMagmaCube": {
                            "magmaCubeTextures": {}
                        },
                        "RenderSlime": {
                            "slimeTextures": {}
                        },
                        "RenderHorse": {
                            "skeletonHorseTextures": {},
                            "muleTextures": {},
                            "whiteHorseTextures": {},
                            "donkeyTextures": {},
                            "zombieHorseTextures": {},
                            "field_110852_a": {}
                        },
                        "RenderLightningBolt": {},
                        "RenderWither": {
                            "invulnerableWitherTextures": {},
                            "witherTextures": {}
                        },
                        "RenderLiving": {},
                        "layers": {
                            "LayerEnderDragonEyes": {
                                "TEXTURE": {},
                                "dragonRenderer": {}
                            },
                            "LayerHeldItemWitch": {
                                "witchRenderer": {}
                            },
                            "LayerEnderDragonDeath": {},
                            "LayerSheepWool": {
                                "TEXTURE": {},
                                "sheepModel": {},
                                "sheepRenderer": {}
                            },
                            "LayerArmorBase": {
                                "colorR": {},
                                "colorB": {},
                                "ARMOR_TEXTURE_RES_MAP": {},
                                "renderer": {},
                                "modelArmor": {},
                                "alpha": {},
                                "colorG": {},
                                "ENCHANTED_ITEM_GLINT_RES": {},
                                "modelLeggings": {},
                                "skipRenderGlint": {}
                            },
                            "LayerEndermanEyes": {
                                "RES_ENDERMAN_EYES": {},
                                "endermanRenderer": {}
                            },
                            "LayerWitherAura": {
                                "WITHER_ARMOR": {},
                                "witherRenderer": {},
                                "witherModel": {}
                            },
                            "LayerRenderer": {},
                            "LayerVillagerArmor": {},
                            "LayerSaddle": {
                                "pigRenderer": {},
                                "TEXTURE": {},
                                "pigModel": {}
                            },
                            "LayerDeadmau5Head": {
                                "playerRenderer": {}
                            },
                            "LayerHeldBlock": {
                                "endermanRenderer": {}
                            },
                            "LayerWolfCollar": {
                                "WOLF_COLLAR": {},
                                "wolfRenderer": {}
                            },
                            "LayerSlimeGel": {
                                "slimeRenderer": {},
                                "slimeModel": {}
                            },
                            "LayerCreeperCharge": {
                                "creeperRenderer": {},
                                "LIGHTNING_TEXTURE": {},
                                "creeperModel": {}
                            },
                            "LayerBipedArmor": {},
                            "LayerCape": {
                                "playerRenderer": {}
                            },
                            "LayerSpiderEyes": {
                                "spiderRenderer": {},
                                "SPIDER_EYES": {}
                            },
                            "LayerIronGolemFlower": {
                                "ironGolemRenderer": {}
                            },
                            "LayerArrow": {
                                "field_177168_a": {}
                            },
                            "LayerHeldItem": {
                                "livingEntityRenderer": {}
                            },
                            "LayerMooshroomMushroom": {
                                "update": function() {},
                                "hasTextureMushroom": {},
                                "modelRendererMushroom": {},
                                "mooshroomRenderer": {},
                                "LOCATION_MUSHROOM_RED": {}
                            },
                            "LayerSnowmanHead": {
                                "snowManRenderer": {}
                            },
                            "LayerCustomHead": {
                                "field_177209_a": {}
                            }
                        },
                        "RenderPlayer": {
                            "smallArms": {}
                        },
                        "RenderEntity": {},
                        "RenderBiped": {
                            "field_77070_b": {},
                            "DEFAULT_RES_LOC": {},
                            "modelBipedMain": {}
                        },
                        "RenderIronGolem": {
                            "ironGolemTextures": {}
                        },
                        "RenderPotion": {},
                        "RenderSquid": {
                            "squidTextures": {}
                        },
                        "RenderEnderman": {
                            "endermanModel": {},
                            "rnd": {},
                            "endermanTextures": {}
                        },
                        "RenderZombie": {
                            "field_82434_o": {},
                            "field_177122_o": {},
                            "field_177121_n": {},
                            "zombieTextures": {},
                            "zombieVillagerModel": {},
                            "zombieVillagerTextures": {}
                        },
                        "RenderBat": {
                            "batTextures": {}
                        },
                        "RenderMinecart": {
                            "modelMinecart": {},
                            "minecartTextures": {}
                        },
                        "RenderSkeleton": {
                            "skeletonTextures": {},
                            "witherSkeletonTextures": {}
                        },
                        "RenderTntMinecart": {},
                        "RenderGuardian": {
                            "GUARDIAN_ELDER_TEXTURE": {},
                            "GUARDIAN_BEAM_TEXTURE": {},
                            "GUARDIAN_TEXTURE": {},
                            "field_177115_a": {}
                        },
                        "RenderSheep": {
                            "shearedSheepTextures": {}
                        },
                        "RenderTNTPrimed": {},
                        "RenderPigZombie": {
                            "ZOMBIE_PIGMAN_TEXTURE": {}
                        },
                        "RenderManager": {
                            "playerRenderer": {},
                            "renderRender": {},
                            "skinMap": {},
                            "renderEngine": {},
                            "playerViewY": {},
                            "playerViewX": {},
                            "entityRenderMap": {},
                            "debugBoundingBox": {},
                            "worldObj": {},
                            "renderPosX": {},
                            "renderShadow": {},
                            "renderPosY": {},
                            "pointedEntity": {},
                            "textRenderer": {},
                            "viewerPosZ": {},
                            "renderPosZ": {},
                            "options": {},
                            "renderOutlines": {},
                            "viewerPosY": {},
                            "livingPlayer": {},
                            "viewerPosX": {}
                        },
                        "RenderFireball": {
                            "scale": {}
                        },
                        "RenderCaveSpider": {
                            "caveSpiderTextures": {}
                        },
                        "RenderSilverfish": {
                            "silverfishTextures": {}
                        },
                        "RenderItem": {
                            "forgeHooksClient_putQuadColor": function() {},
                            "notRenderingEffectsInGUI": {},
                            "itemModelMesher": {},
                            "renderModelEmissive": {},
                            "renderModelHasEmissive": {},
                            "modelLocation": {},
                            "renderItemGui": {},
                            "zLevel": {},
                            "modelManager": {},
                            "textureManager": {},
                            "RES_ITEM_GLINT": {}
                        },
                        "RenderFallingBlock": {},
                        "RenderSpider": {
                            "spiderTextures": {}
                        },
                        "RenderPainting": {
                            "KRISTOFFER_PAINTING_TEXTURE": {}
                        },
                        "RenderArrow": {
                            "arrowTextures": {}
                        },
                        "RenderCreeper": {
                            "creeperTextures": {}
                        },
                        "RenderPig": {
                            "pigTextures": {}
                        },
                        "RenderWitch": {
                            "witchTextures": {}
                        },
                        "RenderCow": {
                            "cowTextures": {}
                        },
                        "RenderBlaze": {
                            "blazeTextures": {}
                        },
                        "RenderSnowMan": {
                            "snowManTextures": {}
                        },
                        "Render": {
                            "renderOffsetAABB": function() {},
                            "setModelBipedMain": function() {},
                            "locationTextureCustom": {},
                            "entityClass": {},
                            "shadowOpaque": {},
                            "shadowTextures": {},
                            "shadowSize": {},
                            "renderManager": {}
                        },
                        "RenderXPOrb": {
                            "experienceOrbTextures": {}
                        },
                        "RenderDragon": {
                            "enderDragonTextures": {},
                            "modelDragon": {},
                            "enderDragonCrystalBeamTextures": {},
                            "enderDragonExplodingTextures": {}
                        },
                        "RenderVillager": {
                            "farmerVillagerTextures": {},
                            "priestVillagerTextures": {},
                            "smithVillagerTextures": {},
                            "librarianVillagerTextures": {},
                            "villagerTextures": {},
                            "butcherVillagerTextures": {}
                        },
                        "RenderEntityItem": {
                            "itemRenderer": {},
                            "field_177079_e": {}
                        },
                        "RenderRabbit": {
                            "SALT": {},
                            "GOLD": {},
                            "WHITE_SPLOTCHED": {},
                            "WHITE": {},
                            "TOAST": {},
                            "CAERBANNOG": {},
                            "BLACK": {},
                            "BROWN": {}
                        },
                        "RenderLeashKnot": {
                            "leashKnotTextures": {},
                            "leashKnotModel": {}
                        },
                        "RenderGiantZombie": {
                            "zombieTextures": {},
                            "scale": {}
                        },
                        "RenderEndermite": {
                            "ENDERMITE_TEXTURES": {}
                        },
                        "RenderWolf": {
                            "tamedWolfTextures": {},
                            "anrgyWolfTextures": {},
                            "wolfTextures": {}
                        },
                        "RenderFish": {
                            "FISH_PARTICLES": {}
                        },
                        "RenderOcelot": {
                            "ocelotTextures": {},
                            "siameseOcelotTextures": {},
                            "blackOcelotTextures": {},
                            "redOcelotTextures": {}
                        },
                        "RenderBoat": {
                            "boatTextures": {},
                            "modelBoat": {}
                        },
                        "RenderChicken": {
                            "chickenTextures": {}
                        },
                        "RenderMooshroom": {
                            "mooshroomTextures": {}
                        },
                        "ArmorStandRenderer": {
                            "TEXTURE_ARMOR_STAND": {}
                        },
                        "RenderSnowball": {
                            "field_177083_e": {},
                            "field_177084_a": {}
                        },
                        "RenderGhast": {
                            "ghastShootingTextures": {},
                            "ghastTextures": {}
                        },
                        "RenderMinecartMobSpawner": {}
                    },
                    "GlStateManager$TexGenState": {
                        "q": {},
                        "r": {},
                        "s": {},
                        "t": {}
                    },
                    "GlStateManager$CullState": {
                        "mode": {},
                        "cullFace": {}
                    },
                    "texture": {
                        "DynamicTexture": {
                            "width": {},
                            "dynamicTextureData": {},
                            "height": {}
                        },
                        "Stitcher$Holder": {
                            "mipmapLevelHolder": {},
                            "scaleFactor": {},
                            "width": {},
                            "rotated": {},
                            "theTexture": {},
                            "height": {}
                        },
                        "ITickable": {},
                        "ITextureObject": {},
                        "TextureAtlasSprite": {
                            "getFrameTextureData": function() {},
                            "setLocationNameCompass": function() {},
                            "makeAtlasSprite": function() {},
                            "setLocationNameClock": function() {},
                            "maxV": {},
                            "glSpriteTextureId": {},
                            "maxU": {},
                            "sheetWidth": {},
                            "indexInMap": {},
                            "spriteSpecular": {},
                            "isSpriteSingle": {},
                            "framesTextureData": {},
                            "isShadersSprite": {},
                            "interpolatedFrameData": {},
                            "height": {},
                            "animationActive": {},
                            "locationNameClock": {},
                            "animationMetadata": {},
                            "iconName": {},
                            "originX": {},
                            "spriteNormal": {},
                            "originY": {},
                            "spriteEmissive": {},
                            "rotated": {},
                            "animationIndex": {},
                            "isEmissive": {},
                            "locationNameCompass": {},
                            "mipmapLevels": {},
                            "minU": {},
                            "spriteSingle": {},
                            "frameCounter": {},
                            "baseU": {},
                            "minV": {},
                            "baseV": {},
                            "width": {},
                            "tickCounter": {},
                            "sheetHeight": {}
                        },
                        "AbstractTexture": {
                            "mipmap": {},
                            "multiTex": {},
                            "blurLast": {},
                            "blur": {},
                            "mipmapLast": {},
                            "glTextureId": {}
                        },
                        "ITickableTextureObject": {},
                        "TextureCompass": {
                            "angleDelta": {},
                            "locationSprite": {},
                            "currentAngle": {}
                        },
                        "Stitcher": {
                            "access$000": function() {},
                            "getMipmapDimension": function() {},
                            "mipmapLevelStitcher": {},
                            "forcePowerOf2": {},
                            "currentWidth": {},
                            "maxHeight": {},
                            "setStitchHolders": {},
                            "stitchSlots": {},
                            "maxTileDimension": {},
                            "currentHeight": {},
                            "maxWidth": {}
                        },
                        "IIconCreator": {},
                        "TextureClock": {
                            "angleDelta": {},
                            "currentAngle": {}
                        },
                        "Stitcher$Slot": {
                            "originX": {},
                            "originY": {},
                            "width": {},
                            "subSlots": {},
                            "holder": {},
                            "height": {}
                        }
                    },
                    "vertex": {
                        "VertexFormatElement$EnumType": {
                            "valueOf": function() {},
                            "values": function() {},
                            "UBYTE": {},
                            "FLOAT": {},
                            "size": {},
                            "glConstant": {},
                            "displayName": {},
                            "BYTE": {},
                            "USHORT": {},
                            "UINT": {},
                            "INT": {},
                            "$VALUES": {},
                            "SHORT": {}
                        },
                        "VertexFormatElement$EnumUsage": {
                            "valueOf": function() {},
                            "values": function() {},
                            "POSITION": {},
                            "UV": {},
                            "MATRIX": {},
                            "COLOR": {},
                            "displayName": {},
                            "PADDING": {},
                            "BLEND_WEIGHT": {},
                            "NORMAL": {},
                            "$VALUES": {}
                        },
                        "VertexBuffer": {
                            "vertexFormat": {},
                            "vboRange": {},
                            "drawMode": {},
                            "count": {},
                            "vboRegion": {},
                            "glBufferId": {}
                        },
                        "DefaultVertexFormats": {
                            "updateVertexFormats": function() {},
                            "getFieldValue": function() {},
                            "POSITION_TEX_NORMAL": {},
                            "TEX_2F": {},
                            "PARTICLE_POSITION_TEX_COLOR_LMAP": {},
                            "POSITION_TEX_LMAP_COLOR": {},
                            "POSITION_TEX_COLOR_NORMAL": {},
                            "BLOCK": {},
                            "Attributes": {},
                            "OLDMODEL_POSITION_TEX_NORMAL": {},
                            "POSITION_TEX": {},
                            "POSITION_TEX_COLOR": {},
                            "POSITION_3F": {},
                            "FORGE_BAKED": {},
                            "ITEM": {},
                            "POSITION": {},
                            "POSITION_COLOR": {},
                            "BLOCK_VANILLA": {},
                            "TEX_2S": {},
                            "NORMAL_3B": {},
                            "PADDING_1B": {},
                            "POSITION_NORMAL": {},
                            "COLOR_4UB": {},
                            "ITEM_VANILLA": {},
                            "Attributes_DEFAULT_BAKED_FORMAT": {}
                        }
                    },
                    "block": {
                        "statemap": {
                            "StateMap$Builder": {
                                "ignored": {},
                                "name": {},
                                "suffix": {}
                            },
                            "IStateMapper": {},
                            "DefaultStateMapper": {},
                            "BlockStateMapper": {
                                "setBuiltInBlocks": {},
                                "blockStateMap": {}
                            },
                            "StateMapperBase": {
                                "mapStateModelLocations": {}
                            },
                            "StateMap": {
                                "ignored": {},
                                "name": {},
                                "suffix": {}
                            }
                        },
                        "model": {
                            "ItemCameraTransforms": {
                                "field_181690_b": {},
                                "field_181692_d": {},
                                "field_181691_c": {},
                                "head": {},
                                "field_181698_j": {},
                                "field_181697_i": {},
                                "field_181694_f": {},
                                "thirdPerson": {},
                                "gui": {},
                                "ground": {},
                                "fixed": {},
                                "field_181693_e": {},
                                "field_181696_h": {},
                                "DEFAULT": {},
                                "field_181695_g": {},
                                "firstPerson": {}
                            },
                            "BreakingFour": {
                                "texture": {}
                            },
                            "ModelBlockDefinition$MissingVariantException": {
                                "this$0": {}
                            },
                            "ModelBlockDefinition$Variant": {
                                "modelRotation": {},
                                "modelLocation": {},
                                "uvLock": {},
                                "weight": {}
                            },
                            "ModelBlock$LoopException": {},
                            "ItemModelGenerator$SpanFacing": {
                                "valueOf": function() {},
                                "values": function() {},
                                "access$000": function() {},
                                "field_178374_g": {},
                                "DOWN": {},
                                "field_178373_f": {},
                                "LEFT": {},
                                "RIGHT": {},
                                "facing": {},
                                "UP": {},
                                "$VALUES": {}
                            },
                            "BlockPartFace": {
                                "tintIndex": {},
                                "cullFace": {},
                                "FACING_DEFAULT": {},
                                "texture": {},
                                "blockFaceUV": {}
                            },
                            "BlockFaceUV": {
                                "uvs": {},
                                "rotation": {}
                            },
                            "ModelBlock$Bookkeep": {
                                "modelExt": {},
                                "model": {}
                            },
                            "ItemModelGenerator": {
                                "LAYERS": {}
                            },
                            "BakedQuad": {
                                "makeVertexDataSingle": function() {},
                                "compactVertexData": function() {},
                                "expandVertexData": function() {},
                                "getSpriteByUv": function() {},
                                "quadEmissive": {},
                                "tintIndex": {},
                                "face": {},
                                "quadEmissiveChecked": {},
                                "sprite": {},
                                "vertexData": {},
                                "quadBounds": {},
                                "vertexDataSingle": {}
                            },
                            "ItemModelGenerator$Span": {
                                "field_178388_c": {},
                                "spanFacing": {},
                                "field_178386_d": {},
                                "field_178387_b": {}
                            },
                            "ItemCameraTransforms$TransformType": {
                                "valueOf": function() {},
                                "values": function() {},
                                "HEAD": {},
                                "THIRD_PERSON": {},
                                "GROUND": {},
                                "FIXED": {},
                                "GUI": {},
                                "NONE": {},
                                "FIRST_PERSON": {},
                                "$VALUES": {}
                            },
                            "ModelBlockDefinition$Variants": {
                                "access$000": function() {},
                                "listVariants": {},
                                "name": {}
                            }
                        }
                    },
                    "GlStateManager": {
                        "glNewList": function() {},
                        "disableDepth": function() {},
                        "disableColorLogic": function() {},
                        "glGetTexImage": function() {},
                        "texGen": function() {},
                        "disableColorMaterial": function() {},
                        "lockBlend": function() {},
                        "lockAlpha": function() {},
                        "bindCurrentTexture": function() {},
                        "doPolygonOffset": function() {},
                        "enableColorMaterial": function() {},
                        "pushAttrib": function() {},
                        "disableTexture2D": function() {},
                        "disableLight": function() {},
                        "glFogi": function() {},
                        "shadeModel": function() {},
                        "enableLighting": function() {},
                        "glTexParameterf": function() {},
                        "disableFog": function() {},
                        "depthFunc": function() {},
                        "glTexImage2D": function() {},
                        "callLists": function() {},
                        "checkBoundTexture": function() {},
                        "cullFace": function() {},
                        "glFog": function() {},
                        "enableCull": function() {},
                        "disableNormalize": function() {},
                        "enableColorLogic": function() {},
                        "popMatrix": function() {},
                        "enableNormalize": function() {},
                        "disableLighting": function() {},
                        "enableDepth": function() {},
                        "depthMask": function() {},
                        "setBlendState": function() {},
                        "tryBlendFuncSeparate": function() {},
                        "disableTexGenCoord": function() {},
                        "isFogEnabled": function() {},
                        "enableTexGenCoord": function() {},
                        "texGenCoord": function() {},
                        "glNormalPointer": function() {},
                        "deleteTextures": function() {},
                        "enableFog": function() {},
                        "unlockBlend": function() {},
                        "glCopyTexSubImage2D": function() {},
                        "glEnd": function() {},
                        "setFogStart": function() {},
                        "pushMatrix": function() {},
                        "enableRescaleNormal": function() {},
                        "glBegin": function() {},
                        "generateTexture": function() {},
                        "rotate": function() {},
                        "unlockAlpha": function() {},
                        "getAlphaState": function() {},
                        "colorMaterial": function() {},
                        "glGetTexLevelParameteri": function() {},
                        "translate": function() {},
                        "setFogEnabled": function() {},
                        "setActiveTexture": function() {},
                        "colorLogicOp": function() {},
                        "enableLight": function() {},
                        "glMultiDrawArrays": function() {},
                        "setFogEnd": function() {},
                        "glEndList": function() {},
                        "bindTexture": function() {},
                        "glDeleteLists": function() {},
                        "enableTexture2D": function() {},
                        "disablePolygonOffset": function() {},
                        "setAlphaState": function() {},
                        "enablePolygonOffset": function() {},
                        "loadIdentity": function() {},
                        "matrixMode": function() {},
                        "popAttrib": function() {},
                        "callList": function() {},
                        "glColorPointer": function() {},
                        "enableAlpha": function() {},
                        "enableBlend": function() {},
                        "glTexSubImage2D": function() {},
                        "clearDepth": function() {},
                        "deleteTexture": function() {},
                        "glTexCoordPointer": function() {},
                        "multMatrix": function() {},
                        "glEnableClientState": function() {},
                        "color": function() {},
                        "disableAlpha": function() {},
                        "glTexParameteri": function() {},
                        "scale": function() {},
                        "getFloat": function() {},
                        "glDrawArrays": function() {},
                        "getActiveTextureUnit": function() {},
                        "clearColor": function() {},
                        "resetColor": function() {},
                        "alphaFunc": function() {},
                        "disableCull": function() {},
                        "getBlendState": function() {},
                        "colorMask": function() {},
                        "glVertexPointer": function() {},
                        "clear": function() {},
                        "ortho": function() {},
                        "disableBlend": function() {},
                        "blendFunc": function() {},
                        "disableRescaleNormal": function() {},
                        "getBoundTexture": function() {},
                        "viewport": function() {},
                        "glDisableClientState": function() {},
                        "setFogDensity": function() {},
                        "setFog": function() {},
                        "glGetError": function() {},
                        "rescaleNormalState": {},
                        "activeShadeModel": {},
                        "blendLockState": {},
                        "depthState": {},
                        "polygonOffsetState": {},
                        "textureState": {},
                        "stencilState": {},
                        "clearEnabled": {},
                        "colorState": {},
                        "texGenState": {},
                        "alphaState": {},
                        "creatingDisplayList": {},
                        "fogState": {},
                        "activeTextureUnit": {},
                        "cullState": {},
                        "blendState": {},
                        "clearState": {},
                        "lightState": {},
                        "alphaLock": {},
                        "colorLogicState": {},
                        "colorMaskState": {},
                        "lightingState": {},
                        "alphaLockState": {},
                        "normalizeState": {},
                        "blendLock": {},
                        "colorMaterialState": {}
                    },
                    "culling": {
                        "Frustum": {
                            "xPosition": {},
                            "yPosition": {},
                            "zPosition": {},
                            "clippingHelper": {}
                        },
                        "ICamera": {},
                        "ClippingHelper": {
                            "projectionMatrix": {},
                            "frustum": {},
                            "disabled": {},
                            "clippingMatrix": {},
                            "modelviewMatrix": {}
                        },
                        "ClippingHelperImpl": {
                            "getInstance": function() {},
                            "instance": {},
                            "projectionMatrixBuffer": {},
                            "modelviewMatrixBuffer": {},
                            "field_78564_h": {}
                        }
                    },
                    "GlStateManager$BooleanState": {
                        "access$1200": function() {},
                        "capability": {},
                        "currentState": {}
                    },
                    "StitcherException": {
                        "holder": {}
                    },
                    "GlStateManager$TextureState": {
                        "texture2DState": {},
                        "textureName": {}
                    },
                    "Tessellator": {
                        "getInstance": function() {},
                        "instance": {},
                        "vboUploader": {},
                        "worldRenderer": {}
                    },
                    "GlStateManager$DepthState": {
                        "maskEnabled": {},
                        "depthTest": {},
                        "depthFunc": {}
                    },
                    "VboRenderList": {
                        "viewEntityX": {},
                        "viewEntityY": {},
                        "viewEntityZ": {}
                    },
                    "tileentity": {
                        "TileEntityChestRenderer": {
                            "textureTrapped": {},
                            "simpleChest": {},
                            "isChristmas": {},
                            "textureChristmas": {},
                            "textureTrappedDouble": {},
                            "textureChristmasDouble": {},
                            "largeChest": {},
                            "textureNormalDouble": {},
                            "textureNormal": {}
                        },
                        "TileEntitySpecialRenderer": {
                            "locationTextureCustom": {},
                            "DESTROY_STAGES": {},
                            "tileEntityClass": {},
                            "rendererDispatcher": {}
                        },
                        "TileEntityPistonRenderer": {
                            "blockRenderer": {}
                        },
                        "TileEntityEnchantmentTableRenderer": {
                            "TEXTURE_BOOK": {},
                            "field_147541_c": {}
                        },
                        "RenderItemFrame": {
                            "updateItemRenderDistance": function() {},
                            "itemFrameModel": {},
                            "itemRenderer": {},
                            "mapModel": {},
                            "mapBackgroundTextures": {},
                            "mc": {},
                            "itemRenderDistanceSq": {}
                        },
                        "TileEntityEnderChestRenderer": {
                            "ENDER_CHEST_TEXTURE": {},
                            "field_147521_c": {}
                        },
                        "TileEntityMobSpawnerRenderer": {
                            "renderMob": function() {}
                        },
                        "TileEntitySignRenderer": {
                            "isRenderText": function() {},
                            "updateTextRenderDistance": function() {},
                            "SIGN_TEXTURE": {},
                            "model": {},
                            "textRenderDistanceSq": {}
                        },
                        "TileEntityBannerRenderer": {
                            "bannerModel": {},
                            "DESIGNS": {},
                            "BANNERTEXTURES": {}
                        },
                        "RenderEnderCrystal": {
                            "modelEnderCrystal": {},
                            "enderCrystalTextures": {}
                        },
                        "TileEntityBannerRenderer$TimedBannerTexture": {
                            "bannerTexture": {},
                            "systemTime": {}
                        },
                        "TileEntityItemStackRenderer": {
                            "instance": {},
                            "field_147717_b": {},
                            "banner": {},
                            "field_147718_c": {},
                            "skull": {},
                            "enderChest": {}
                        },
                        "TileEntityRendererDispatcher": {
                            "mapSpecialRenderers": {},
                            "renderEngine": {},
                            "instance": {},
                            "batchBuffer": {},
                            "drawingBatch": {},
                            "entityY": {},
                            "entityZ": {},
                            "entityX": {},
                            "worldObj": {},
                            "fontRenderer": {},
                            "entityPitch": {},
                            "staticPlayerX": {},
                            "staticPlayerZ": {},
                            "staticPlayerY": {},
                            "entityYaw": {},
                            "tileEntityRendered": {},
                            "entity": {}
                        },
                        "TileEntityBeaconRenderer": {
                            "beaconBeam": {}
                        },
                        "RenderWitherSkull": {
                            "invulnerableWitherTextures": {},
                            "witherTextures": {},
                            "skeletonHeadModel": {}
                        },
                        "TileEntityEndPortalRenderer": {
                            "END_PORTAL_TEXTURE": {},
                            "field_147528_b": {},
                            "END_SKY_TEXTURE": {},
                            "field_147527_e": {}
                        }
                    },
                    "BlockModelRenderer$AmbientOcclusionFace": {
                        "access$100": function() {},
                        "access$000": function() {},
                        "vertexBrightness": {},
                        "vertexColorMultiplier": {}
                    },
                    "GlStateManager$ColorMask": {
                        "red": {},
                        "green": {},
                        "blue": {},
                        "alpha": {}
                    },
                    "BlockModelRenderer$VertexTranslations": {
                        "access$500": function() {},
                        "access$400": function() {},
                        "access$300": function() {},
                        "access$200": function() {},
                        "valueOf": function() {},
                        "values": function() {},
                        "getVertexTranslations": function() {},
                        "DOWN": {},
                        "NORTH": {},
                        "WEST": {},
                        "field_178200_h": {},
                        "field_178201_i": {},
                        "VALUES": {},
                        "UP": {},
                        "SOUTH": {},
                        "field_178191_g": {},
                        "EAST": {},
                        "field_178198_j": {},
                        "$VALUES": {}
                    },
                    "ImageBufferDownload": {
                        "imageWidth": {},
                        "imageData": {},
                        "imageHeight": {}
                    },
                    "RenderList": {
                        "bufferLists": {},
                        "viewEntityX": {},
                        "viewEntityY": {},
                        "viewEntityZ": {}
                    },
                    "BlockModelRenderer$EnumNeighborInfo": {
                        "getNeighbourInfo": function() {},
                        "valueOf": function() {},
                        "values": function() {},
                        "DOWN": {},
                        "WEST": {},
                        "field_178289_i": {},
                        "field_178287_k": {},
                        "field_178285_m": {},
                        "field_178276_g": {},
                        "field_178288_h": {},
                        "field_178286_j": {},
                        "field_178284_l": {},
                        "NORTH": {},
                        "VALUES": {},
                        "UP": {},
                        "SOUTH": {},
                        "EAST": {},
                        "$VALUES": {}
                    },
                    "RenderHelper": {
                        "enableGUIStandardItemLighting": function() {},
                        "enableStandardItemLighting": function() {},
                        "setColorBuffer": function() {},
                        "disableStandardItemLighting": function() {},
                        "colorBuffer": {},
                        "LIGHT0_POS": {},
                        "LIGHT1_POS": {}
                    },
                    "BlockRendererDispatcher": {
                        "blockModelShapes": {},
                        "gameSettings": {},
                        "blockModelRenderer": {},
                        "chestRenderer": {},
                        "fluidRenderer": {}
                    },
                    "ViewFrustum": {
                        "renderGlobal": {},
                        "world": {},
                        "mapVboRegions": {},
                        "countChunksX": {},
                        "countChunksZ": {},
                        "renderChunks": {},
                        "countChunksY": {}
                    },
                    "BlockModelShapes": {
                        "blockStateMapper": {},
                        "modelManager": {},
                        "bakedModelStore": {}
                    },
                    "ActiveRenderInfo": {
                        "getRotationZ": function() {},
                        "getRotationX": function() {},
                        "getPosition": function() {},
                        "projectViewFromEntity": function() {},
                        "getBlockAtEntityViewpoint": function() {},
                        "getRotationXZ": function() {},
                        "getRotationXY": function() {},
                        "getRotationYZ": function() {},
                        "updateRenderInfo": function() {},
                        "MODELVIEW": {},
                        "PROJECTION": {},
                        "rotationX": {},
                        "rotationXZ": {},
                        "rotationZ": {},
                        "position": {},
                        "rotationYZ": {},
                        "rotationXY": {},
                        "VIEWPORT": {},
                        "OBJECTCOORDS": {}
                    },
                    "EnumFaceDirection$VertexInformation": {
                        "xIndex": {},
                        "yIndex": {},
                        "zIndex": {}
                    },
                    "WorldRenderer": {
                        "getDistanceSq": function() {},
                        "sVertexBuilder": {},
                        "yOffset": {},
                        "modeTriangles": {},
                        "renderEnv": {},
                        "quadSprite": {},
                        "noColor": {},
                        "animatedSprites": {},
                        "byteBufferTriangles": {},
                        "blockLayer": {},
                        "quadSpritesPrev": {},
                        "animatedSpritesCached": {},
                        "vertexFormat": {},
                        "xOffset": {},
                        "isDrawing": {},
                        "vertexFormatElement": {},
                        "quadSprites": {},
                        "rawFloatBuffer": {},
                        "rawShortBuffer": {},
                        "vertexCount": {},
                        "vertexFormatIndex": {},
                        "drawMode": {},
                        "rawIntBuffer": {},
                        "zOffset": {},
                        "drawnIcons": {},
                        "byteBuffer": {}
                    },
                    "RegionRenderCache": {
                        "freeStates": function() {},
                        "freeLights": function() {},
                        "allocateLights": function() {},
                        "allocateStates": function() {},
                        "DEFAULT_STATE": {},
                        "maxCacheSize": {},
                        "blockStates": {},
                        "cacheStates": {},
                        "position": {},
                        "combinedLights": {},
                        "cacheLights": {}
                    },
                    "EnumFaceDirection$Constants": {
                        "SOUTH_INDEX": {},
                        "NORTH_INDEX": {},
                        "UP_INDEX": {},
                        "DOWN_INDEX": {},
                        "WEST_INDEX": {},
                        "EAST_INDEX": {}
                    },
                    "ChunkRenderContainer": {
                        "animatedSpritesRendered": {},
                        "initialized": {},
                        "viewEntityX": {},
                        "viewEntityY": {},
                        "viewEntityZ": {},
                        "renderChunks": {},
                        "animatedSpritesCached": {}
                    },
                    "GlStateManager$ClearState": {
                        "field_179204_c": {},
                        "depth": {},
                        "color": {}
                    },
                    "GlStateManager$ColorMaterialState": {
                        "mode": {},
                        "face": {},
                        "colorMaterial": {}
                    },
                    "ItemModelMesher": {
                        "modelManager": {},
                        "simpleShapes": {},
                        "simpleShapesCache": {},
                        "shapers": {}
                    },
                    "RenderGlobal$ContainerLocalRenderInformation": {
                        "access$000": function() {},
                        "facing": {},
                        "renderChunk": {},
                        "setFacing": {}
                    },
                    "ChestRenderer": {},
                    "GlStateManager$TexGenCoord": {
                        "coord": {},
                        "param": {},
                        "textureGen": {}
                    },
                    "ItemMeshDefinition": {},
                    "OpenGlHelper": {
                        "glBlendFunc": function() {},
                        "glShaderSource": function() {},
                        "glCompileShader": function() {},
                        "glRenderbufferStorage": function() {},
                        "glBufferSubData": function() {},
                        "glBufferData": function() {},
                        "glBindFramebuffer": function() {},
                        "setActiveTexture": function() {},
                        "useVbo": function() {},
                        "glAttachShader": function() {},
                        "glUniform2": function() {},
                        "glUniform1": function() {},
                        "glUniform4": function() {},
                        "glGetAttribLocation": function() {},
                        "glUniform3": function() {},
                        "glCreateShader": function() {},
                        "glDeleteProgram": function() {},
                        "glGenFramebuffers": function() {},
                        "glBindRenderbuffer": function() {},
                        "isFramebufferEnabled": function() {},
                        "glGetShaderInfoLog": function() {},
                        "glGetProgramInfoLog": function() {},
                        "glUniformMatrix4": function() {},
                        "glDeleteShader": function() {},
                        "glUniformMatrix3": function() {},
                        "setLightmapTextureCoords": function() {},
                        "glUniformMatrix2": function() {},
                        "glCopyBufferSubData": function() {},
                        "glBindBuffer": function() {},
                        "areShadersSupported": function() {},
                        "glGetShaderi": function() {},
                        "setClientActiveTexture": function() {},
                        "glDeleteFramebuffers": function() {},
                        "glDeleteRenderbuffers": function() {},
                        "glGenBuffers": function() {},
                        "glCheckFramebufferStatus": function() {},
                        "glCreateProgram": function() {},
                        "initializeTextures": function() {},
                        "glUniform1i": function() {},
                        "glGetUniformLocation": function() {},
                        "getLogText": function() {},
                        "glUseProgram": function() {},
                        "glFramebufferRenderbuffer": function() {},
                        "glFramebufferTexture2D": function() {},
                        "glGetProgrami": function() {},
                        "glDeleteBuffers": function() {},
                        "getCpu": function() {},
                        "glLinkProgram": function() {},
                        "glGenRenderbuffers": function() {},
                        "arbTextureEnvCombine": {},
                        "extBlendFuncSeparate": {},
                        "GL_COPY_WRITE_BUFFER": {},
                        "GL_COMBINE_RGB": {},
                        "GL_FRAMEBUFFER": {},
                        "vboSupportedAti": {},
                        "lightmapTexUnit": {},
                        "GL_TRIANGLES": {},
                        "GL_OPERAND1_ALPHA": {},
                        "GL_SOURCE2_ALPHA": {},
                        "GL_FRAMEBUFFER_COMPLETE": {},
                        "GL_QUADS": {},
                        "framebufferType": {},
                        "GL_FB_INCOMPLETE_DRAW_BUFFER": {},
                        "ati": {},
                        "vboRegions": {},
                        "GL_ARRAY_BUFFER": {},
                        "GL_VERTEX_SHADER": {},
                        "vboSupported": {},
                        "GL_DEPTH_ATTACHMENT": {},
                        "openGL31": {},
                        "cpu": {},
                        "GL_OPERAND2_RGB": {},
                        "defaultTexUnit": {},
                        "lastBrightnessY": {},
                        "shadersSupported": {},
                        "GL_TEXTURE2": {},
                        "GL_LINK_STATUS": {},
                        "lastBrightnessX": {},
                        "GL_STATIC_DRAW": {},
                        "GL_RENDERBUFFER": {},
                        "GL_COPY_READ_BUFFER": {},
                        "shadersAvailable": {},
                        "GL_OPERAND2_ALPHA": {},
                        "GL_OPERAND1_RGB": {},
                        "arbShaders": {},
                        "GL_COLOR_ATTACHMENT0": {},
                        "GL_COMPILE_STATUS": {},
                        "GL_PRIMARY_COLOR": {},
                        "GL_SOURCE0_RGB": {},
                        "arbVbo": {},
                        "GL_FB_INCOMPLETE_MISS_ATTACH": {},
                        "GL_FRAGMENT_SHADER": {},
                        "GL_PREVIOUS": {},
                        "openGL21": {},
                        "framebufferSupported": {},
                        "logText": {},
                        "GL_CONSTANT": {},
                        "GL_OPERAND0_RGB": {},
                        "GL_INTERPOLATE": {},
                        "GL_FB_INCOMPLETE_READ_BUFFER": {},
                        "GL_SOURCE1_RGB": {},
                        "GL_SOURCE0_ALPHA": {},
                        "nvidia": {},
                        "GL_SOURCE2_RGB": {},
                        "arbMultitexture": {},
                        "GL_OPERAND0_ALPHA": {},
                        "GL_COMBINE": {},
                        "GL_SOURCE1_ALPHA": {},
                        "openGL14": {},
                        "GL_COMBINE_ALPHA": {},
                        "GL_FB_INCOMPLETE_ATTACHMENT": {}
                    },
                    "GlStateManager$AlphaState": {
                        "ref": {},
                        "func": {},
                        "alphaTest": {}
                    },
                    "WorldRenderer$State": {
                        "access$000": function() {},
                        "this$0": {},
                        "stateQuadSprites": {},
                        "stateRawBuffer": {},
                        "stateVertexFormat": {}
                    },
                    "GlStateManager$ColorLogicState": {
                        "colorLogicOp": {},
                        "opcode": {}
                    },
                    "GlStateManager$TexGen": {
                        "valueOf": function() {},
                        "values": function() {},
                        "Q": {},
                        "R": {},
                        "S": {},
                        "T": {},
                        "$VALUES": {}
                    },
                    "GlStateManager$BlendState": {
                        "blend": {},
                        "srcFactor": {},
                        "dstFactorAlpha": {},
                        "srcFactorAlpha": {},
                        "dstFactor": {}
                    },
                    "DestroyBlockProgress": {
                        "position": {},
                        "partialBlockProgress": {},
                        "createdAtCloudUpdateTick": {},
                        "miningPlayerEntId": {}
                    },
                    "GlStateManager$PolygonOffsetState": {
                        "polygonOffsetFill": {},
                        "polygonOffsetLine": {},
                        "units": {},
                        "factor": {}
                    },
                    "BlockModelRenderer$Orientation": {
                        "valueOf": function() {},
                        "values": function() {},
                        "field_178229_m": {},
                        "FLIP_DOWN": {},
                        "DOWN": {},
                        "FLIP_UP": {},
                        "WEST": {},
                        "FLIP_NORTH": {},
                        "NORTH": {},
                        "FLIP_SOUTH": {},
                        "FLIP_EAST": {},
                        "UP": {},
                        "SOUTH": {},
                        "FLIP_WEST": {},
                        "EAST": {},
                        "$VALUES": {}
                    },
                    "BlockFluidRenderer": {
                        "atlasSpritesLava": {},
                        "atlasSpritesWater": {}
                    },
                    "EnumFaceDirection": {
                        "valueOf": function() {},
                        "values": function() {},
                        "getFacing": function() {},
                        "DOWN": {},
                        "NORTH": {},
                        "WEST": {},
                        "vertexInfos": {},
                        "UP": {},
                        "SOUTH": {},
                        "EAST": {},
                        "$VALUES": {},
                        "facings": {}
                    },
                    "RegionRenderCacheBuilder": {
                        "worldRenderers": {}
                    },
                    "IImageBuffer": {},
                    "ItemRenderer": {
                        "itemRenderer": {},
                        "itemToRender": {},
                        "mc": {},
                        "equippedItemSlot": {},
                        "equippedProgress": {},
                        "prevEquippedProgress": {},
                        "RES_MAP_BACKGROUND": {},
                        "RES_UNDERWATER_OVERLAY": {},
                        "renderManager": {}
                    },
                    "GlStateManager$StencilState": {
                        "field_179078_a": {},
                        "field_179076_b": {},
                        "field_179074_d": {},
                        "field_179077_c": {},
                        "field_179075_e": {}
                    },
                    "GlStateManager$Color": {
                        "red": {},
                        "green": {},
                        "blue": {},
                        "alpha": {}
                    },
                    "WorldVertexBufferUploader": {},
                    "VertexBufferUploader": {
                        "vertexBuffer": {}
                    },
                    "GLAllocation": {
                        "deleteDisplayLists": function() {},
                        "createDirectByteBuffer": function() {},
                        "createDirectFloatBuffer": function() {},
                        "createDirectIntBuffer": function() {},
                        "generateDisplayLists": function() {}
                    },
                    "GlStateManager$FogState": {
                        "mode": {},
                        "density": {},
                        "start": {},
                        "end": {},
                        "fog": {}
                    },
                    "GlStateManager$StencilFunc": {
                        "field_179079_b": {},
                        "field_179080_c": {},
                        "field_179081_a": {}
                    },
                    "BlockModelRenderer": {
                        "fixAoLightValue": function() {},
                        "updateAoLightValue": function() {},
                        "aoLightValueOpaque": {},
                        "separateAoLightValue": {},
                        "OVERLAY_LAYERS": {}
                    },
                    "InventoryEffectRenderer": {
                        "hasActivePotionEffects": {}
                    }
                },
                "player": {
                    "inventory": {
                        "ContainerLocalMenu": {
                            "field_174895_b": {},
                            "guiID": {}
                        },
                        "LocalBlockIntercommunication": {
                            "guiID": {},
                            "displayName": {}
                        }
                    }
                },
                "particle": {
                    "EntityHeartFX$Factory": {},
                    "EntityExplodeFX": {},
                    "EntityLargeExplodeFX$Factory": {},
                    "EntityFlameFX$Factory": {},
                    "EntityDiggingFX$Factory": {},
                    "EntityAuraFX$Factory": {},
                    "EntitySnowShovelFX": {
                        "snowDigParticleScale": {}
                    },
                    "EntityReddustFX": {
                        "reddustParticleScale": {}
                    },
                    "EntitySpellParticleFX$Factory": {},
                    "EntityRainFX$Factory": {},
                    "EntityCrit2FX": {
                        "field_174839_a": {}
                    },
                    "EntityBreakingFX$SlimeFactory": {},
                    "MobAppearance$Factory": {},
                    "EntitySmokeFX$Factory": {},
                    "EntityLavaFX$Factory": {},
                    "EntityFlameFX": {
                        "flameScale": {}
                    },
                    "EntitySuspendFX": {},
                    "EntityDiggingFX": {
                        "sourceState": {},
                        "sourcePos": {}
                    },
                    "EntityHeartFX": {
                        "particleScaleOverTime": {}
                    },
                    "Barrier": {},
                    "Barrier$Factory": {},
                    "EntityFirework$OverlayFX": {},
                    "EntityPickupFX": {
                        "field_174840_a": {},
                        "field_174842_aB": {},
                        "maxAge": {},
                        "field_174843_ax": {},
                        "field_174841_aA": {},
                        "age": {}
                    },
                    "EntityBubbleFX$Factory": {},
                    "EntityHeartFX$AngryVillagerFactory": {},
                    "EntitySpellParticleFX$AmbientMobFactory": {},
                    "EntityBlockDustFX": {},
                    "EntityCloudFX$Factory": {},
                    "EntityHugeExplodeFX": {
                        "timeSinceStart": {},
                        "maximumTime": {}
                    },
                    "EntityBubbleFX": {},
                    "EntityFootStepFX": {
                        "currentFootSteps": {},
                        "footstepAge": {},
                        "FOOTPRINT_TEXTURE": {},
                        "footstepMaxAge": {}
                    },
                    "EffectRenderer": {
                        "rand": {},
                        "renderer": {},
                        "particleEmitters": {},
                        "fxLayers": {},
                        "particleTextures": {},
                        "particleTypes": {},
                        "worldObj": {}
                    },
                    "EntityEnchantmentTableParticleFX": {
                        "coordX": {},
                        "coordY": {},
                        "coordZ": {},
                        "field_70565_a": {}
                    },
                    "EntitySpellParticleFX$WitchFactory": {},
                    "EntitySpellParticleFX$MobFactory": {},
                    "EntityBreakingFX$Factory": {},
                    "EntityPortalFX": {
                        "portalPosX": {},
                        "portalPosY": {},
                        "portalParticleScale": {},
                        "portalPosZ": {}
                    },
                    "EntityFootStepFX$Factory": {},
                    "EntitySplashFX$Factory": {},
                    "EntityParticleEmitter": {
                        "lifetime": {},
                        "particleTypes": {},
                        "attachedEntity": {},
                        "age": {}
                    },
                    "EntityAuraFX$HappyVillagerFactory": {},
                    "EntitySpellParticleFX$InstantFactory": {},
                    "EntityNoteFX$Factory": {},
                    "EntityHugeExplodeFX$Factory": {},
                    "EntityDropParticleFX$LavaFactory": {},
                    "EntityLavaFX": {
                        "lavaParticleScale": {}
                    },
                    "EntityDropParticleFX$WaterFactory": {},
                    "EntityCrit2FX$Factory": {},
                    "EntityBreakingFX$SnowballFactory": {},
                    "EntityCloudFX": {
                        "field_70569_a": {}
                    },
                    "EntityBreakingFX": {},
                    "EntityCritFX": {},
                    "EntityFX": {
                        "particleTextureIndexY": {},
                        "particleGreen": {},
                        "interpPosY": {},
                        "particleTextureIndexX": {},
                        "particleScale": {},
                        "interpPosX": {},
                        "particleIcon": {},
                        "interpPosZ": {},
                        "particleMaxAge": {},
                        "particleRed": {},
                        "particleAlpha": {},
                        "particleGravity": {},
                        "particleBlue": {},
                        "particleTextureJitterY": {},
                        "particleTextureJitterX": {},
                        "particleAge": {}
                    },
                    "EntityCrit2FX$MagicFactory": {},
                    "IParticleFactory": {},
                    "EntitySpellParticleFX": {
                        "baseSpellTextureIndex": {},
                        "RANDOM": {}
                    },
                    "EntityFirework$StarterFX": {
                        "twinkle": {},
                        "fireworkExplosions": {},
                        "theEffectRenderer": {},
                        "fireworkAge": {}
                    },
                    "EntityCritFX$Factory": {},
                    "EntityAuraFX": {},
                    "EntityExplodeFX$Factory": {},
                    "MobAppearance": {
                        "entity": {}
                    },
                    "EntityFirework$SparkFX": {
                        "trail": {},
                        "twinkle": {},
                        "fadeColourGreen": {},
                        "fadeColourBlue": {},
                        "fadeColourRed": {},
                        "hasFadeColour": {},
                        "baseTextureIndex": {},
                        "field_92047_az": {}
                    },
                    "EntityDropParticleFX": {
                        "bobTimer": {},
                        "materialType": {}
                    },
                    "EntityFirework$Factory": {},
                    "EntityFishWakeFX$Factory": {},
                    "EntityBlockDustFX$Factory": {},
                    "EntityPortalFX$Factory": {},
                    "EntityLargeExplodeFX": {
                        "EXPLOSION_TEXTURE": {},
                        "field_181549_az": {},
                        "field_70584_aq": {},
                        "theRenderEngine": {},
                        "field_70581_a": {},
                        "field_70582_as": {}
                    },
                    "EntitySuspendFX$Factory": {},
                    "EntitySmokeFX": {
                        "smokeParticleScale": {}
                    },
                    "EntityEnchantmentTableParticleFX$EnchantmentTable": {},
                    "EntityRainFX": {},
                    "EntitySnowShovelFX$Factory": {},
                    "EntitySplashFX": {},
                    "EntityFirework": {},
                    "EntityNoteFX": {
                        "noteParticleScale": {}
                    },
                    "EntityFishWakeFX": {},
                    "EntityReddustFX$Factory": {}
                },
                "multiplayer": {
                    "ServerData": {
                        "getServerDataFromNBTCompound": function() {},
                        "field_78841_f": {},
                        "serverMOTD": {},
                        "resourceMode": {},
                        "playerList": {},
                        "serverName": {},
                        "serverIP": {},
                        "gameVersion": {},
                        "serverIcon": {},
                        "lanServer": {},
                        "populationInfo": {},
                        "pingToServer": {},
                        "version": {}
                    },
                    "ServerData$ServerResourceMode": {
                        "valueOf": function() {},
                        "values": function() {},
                        "DISABLED": {},
                        "motd": {},
                        "PROMPT": {},
                        "ENABLED": {},
                        "$VALUES": {}
                    },
                    "ServerAddress": {
                        "getServerAddress": function() {},
                        "parseIntWithDefault": function() {},
                        "fromString": function() {},
                        "ipAddress": {},
                        "serverPort": {}
                    },
                    "WorldClient": {
                        "access$200": function() {},
                        "access$100": function() {},
                        "access$000": function() {},
                        "clientChunkProvider": {},
                        "entityList": {},
                        "mc": {},
                        "entitySpawnQueue": {},
                        "playerUpdate": {},
                        "sendQueue": {},
                        "previousActiveChunkSet": {}
                    },
                    "PlayerControllerMP": {
                        "clickBlockCreative": function() {},
                        "currentItemHittingBlock": {},
                        "curBlockDamageMP": {},
                        "currentBlock": {},
                        "mc": {},
                        "netClientHandler": {},
                        "isHittingBlock": {},
                        "currentPlayerItem": {},
                        "blockHitDelay": {},
                        "currentGameType": {},
                        "stepSoundTickCounter": {}
                    }
                },
                "resources": {
                    "data": {
                        "AnimationFrame": {
                            "frameIndex": {},
                            "frameTime": {}
                        },
                        "LanguageMetadataSection": {
                            "languages": {}
                        },
                        "IMetadataSection": {},
                        "PackMetadataSection": {
                            "packDescription": {},
                            "packFormat": {}
                        },
                        "TextureMetadataSection": {
                            "textureClamp": {},
                            "textureBlur": {},
                            "listMipmaps": {}
                        },
                        "FontMetadataSection": {
                            "charLefts": {},
                            "charSpacings": {},
                            "charWidths": {}
                        },
                        "AnimationMetadataSection": {
                            "frameHeight": {},
                            "animationFrames": {},
                            "frameWidth": {},
                            "frameTime": {},
                            "interpolate": {}
                        }
                    },
                    "model": {
                        "BuiltInModel": {
                            "cameraTransforms": {}
                        },
                        "WeightedBakedModel": {
                            "models": {},
                            "baseModel": {},
                            "totalWeight": {}
                        },
                        "ModelManager": {
                            "modelRegistry": {},
                            "defaultModel": {},
                            "modelProvider": {},
                            "texMap": {}
                        },
                        "WeightedBakedModel$MyWeighedRandomItem": {
                            "model": {}
                        },
                        "SimpleBakedModel": {
                            "ambientOcclusion": {},
                            "texture": {},
                            "generalQuads": {},
                            "faceQuads": {},
                            "cameraTransforms": {},
                            "gui3d": {}
                        },
                        "IBakedModel": {},
                        "SimpleBakedModel$Builder": {
                            "builderFaceQuads": {},
                            "builderCameraTransforms": {},
                            "builderGui3d": {},
                            "builderAmbientOcclusion": {},
                            "builderGeneralQuads": {},
                            "builderTexture": {}
                        },
                        "WeightedBakedModel$Builder": {
                            "listItems": {}
                        },
                        "ModelResourceLocation": {
                            "parsePathString": function() {},
                            "variant": {}
                        }
                    },
                    "IReloadableResourceManager": {},
                    "IResourcePack": {},
                    "FallbackResourceManager$InputStreamLeakedResourceLogger": {
                        "isClosed": {},
                        "inputStream": {},
                        "message": {}
                    },
                    "DefaultResourcePack": {
                        "defaultResourceDomains": {},
                        "mapAssets": {}
                    },
                    "DefaultPlayerSkin": {
                        "isSlimSkin": function() {},
                        "getSkinType": function() {},
                        "getDefaultSkin": function() {},
                        "getDefaultSkinLegacy": function() {},
                        "TEXTURE_STEVE": {},
                        "TEXTURE_ALEX": {}
                    },
                    "I18n": {
                        "format": function() {},
                        "getLocaleProperties": function() {},
                        "setLocale": function() {},
                        "i18nLocale": {}
                    },
                    "Language": {
                        "bidirectional": {},
                        "name": {},
                        "languageCode": {},
                        "region": {}
                    },
                    "ResourcePackListEntry": {
                        "field_183020_d": {},
                        "field_183021_e": {},
                        "mc": {},
                        "resourcePacksGUI": {},
                        "RESOURCE_PACKS_TEXTURE": {},
                        "field_183022_f": {}
                    },
                    "GrassColorReloadListener": {
                        "LOC_GRASS_PNG": {}
                    },
                    "IResourceManagerReloadListener": {},
                    "ResourcePackFileNotFoundException": {},
                    "FoliageColorReloadListener": {
                        "LOC_FOLIAGE_PNG": {}
                    },
                    "ResourcePackRepository$Entry": {
                        "rePackMetadataSection": {},
                        "resourcePackFile": {},
                        "this$0": {},
                        "texturePackIcon": {},
                        "locationTexturePackIcon": {},
                        "reResourcePack": {}
                    },
                    "IResource": {},
                    "ResourcePackListEntryFound": {
                        "field_148319_c": {}
                    },
                    "IResourceManager": {}
                },
                "audio": {
                    "SoundList": {
                        "replaceExisting": {},
                        "category": {},
                        "soundList": {}
                    },
                    "GuardianSound": {
                        "guardian": {}
                    },
                    "SoundPoolEntry": {
                        "volume": {},
                        "streamingSound": {},
                        "location": {},
                        "pitch": {}
                    },
                    "MovingSoundMinecartRiding": {
                        "minecart": {},
                        "player": {}
                    },
                    "SoundList$SoundEntry$Type": {
                        "getType": function() {},
                        "valueOf": function() {},
                        "values": function() {},
                        "field_148583_c": {},
                        "SOUND_EVENT": {},
                        "FILE": {},
                        "$VALUES": {}
                    },
                    "ISoundEventAccessor": {},
                    "PositionedSoundRecord": {
                        "create": function() {}
                    },
                    "MusicTicker": {
                        "rand": {},
                        "mc": {},
                        "currentMusic": {},
                        "timeUntilNextMusic": {}
                    },
                    "ISound": {},
                    "SoundEventAccessorComposite": {
                        "eventPitch": {},
                        "soundLocation": {},
                        "rnd": {},
                        "category": {},
                        "eventVolume": {},
                        "soundPool": {}
                    },
                    "MusicTicker$MusicType": {
                        "valueOf": function() {},
                        "values": function() {},
                        "minDelay": {},
                        "maxDelay": {},
                        "CREDITS": {},
                        "GAME": {},
                        "NETHER": {},
                        "CREATIVE": {},
                        "END": {},
                        "MENU": {},
                        "END_BOSS": {},
                        "musicLocation": {},
                        "$VALUES": {}
                    },
                    "MovingSoundMinecart": {
                        "minecart": {},
                        "distance": {}
                    },
                    "SoundEventAccessor": {
                        "entry": {},
                        "weight": {}
                    },
                    "MovingSound": {
                        "donePlaying": {}
                    },
                    "ISound$AttenuationType": {
                        "valueOf": function() {},
                        "values": function() {},
                        "NONE": {},
                        "LINEAR": {},
                        "type": {},
                        "$VALUES": {}
                    },
                    "SoundRegistry": {
                        "soundRegistry": {}
                    },
                    "SoundCategory": {
                        "valueOf": function() {},
                        "values": function() {},
                        "getCategory": function() {},
                        "ANIMALS": {},
                        "MUSIC": {},
                        "MASTER": {},
                        "WEATHER": {},
                        "NAME_CATEGORY_MAP": {},
                        "AMBIENT": {},
                        "ID_CATEGORY_MAP": {},
                        "categoryName": {},
                        "RECORDS": {},
                        "PLAYERS": {},
                        "BLOCKS": {},
                        "MOBS": {},
                        "categoryId": {},
                        "$VALUES": {}
                    },
                    "SoundList$SoundEntry": {
                        "volume": {},
                        "streaming": {},
                        "name": {},
                        "weight": {},
                        "pitch": {},
                        "type": {}
                    },
                    "PositionedSound": {
                        "volume": {},
                        "zPosF": {},
                        "yPosF": {},
                        "attenuationType": {},
                        "repeat": {},
                        "pitch": {},
                        "xPosF": {},
                        "repeatDelay": {},
                        "positionedSoundLocation": {}
                    },
                    "ITickableSound": {}
                },
                "util": {
                    "JsonException": {
                        "func_151379_a": function() {},
                        "field_151383_a": {},
                        "exceptionMessage": {}
                    },
                    "JsonException$Entry": {
                        "access$202": function() {},
                        "access$100": function() {},
                        "field_151376_a": {},
                        "field_151375_b": {}
                    }
                },
                "main": {
                    "GameConfiguration$ServerInformation": {
                        "serverName": {},
                        "serverPort": {}
                    },
                    "GameConfiguration$GameInformation": {
                        "isDemo": {},
                        "version": {}
                    },
                    "GameConfiguration$FolderInformation": {
                        "mcDataDir": {},
                        "resourcePacksDir": {},
                        "assetsDir": {},
                        "assetIndex": {}
                    },
                    "GameConfiguration": {
                        "userInfo": {},
                        "serverInfo": {},
                        "gameInfo": {},
                        "displayInfo": {},
                        "folderInfo": {}
                    },
                    "GameConfiguration$DisplayInformation": {
                        "fullscreen": {},
                        "width": {},
                        "checkGlErrors": {},
                        "height": {}
                    }
                },
                "stream": {
                    "IStream$AuthFailureReason": {
                        "valueOf": function() {},
                        "values": function() {},
                        "INVALID_TOKEN": {},
                        "ERROR": {},
                        "$VALUES": {}
                    },
                    "MetadataCombat": {},
                    "IngestServerTester$IngestTestListener": {},
                    "ChatController$EnumChannelState": {
                        "valueOf": function() {},
                        "values": function() {},
                        "Connected": {},
                        "Disconnecting": {},
                        "Connecting": {},
                        "Disconnected": {},
                        "$VALUES": {},
                        "Created": {}
                    },
                    "BroadcastController$BroadcastState": {
                        "valueOf": function() {},
                        "values": function() {},
                        "Authenticated": {},
                        "Initialized": {},
                        "Stopping": {},
                        "IngestTesting": {},
                        "LoggedIn": {},
                        "ReadyToBroadcast": {},
                        "FindingIngestServer": {},
                        "ReceivedIngestServers": {},
                        "LoggingIn": {},
                        "Starting": {},
                        "Uninitialized": {},
                        "Broadcasting": {},
                        "Authenticating": {},
                        "$VALUES": {},
                        "Paused": {}
                    },
                    "MetadataAchievement": {},
                    "IngestServerTester$IngestTestState": {
                        "valueOf": function() {},
                        "values": function() {},
                        "TestingServer": {},
                        "ConnectingToServer": {},
                        "Finished": {},
                        "Failed": {},
                        "Starting": {},
                        "Uninitalized": {},
                        "DoneTestingServer": {},
                        "Cancelled": {},
                        "Cancelling": {},
                        "$VALUES": {}
                    },
                    "MetadataPlayerDeath": {},
                    "ChatController$ChatState": {
                        "valueOf": function() {},
                        "values": function() {},
                        "Initialized": {},
                        "Uninitialized": {},
                        "ShuttingDown": {},
                        "$VALUES": {},
                        "Initializing": {}
                    },
                    "ChatController$EnumEmoticonMode": {
                        "valueOf": function() {},
                        "values": function() {},
                        "TextureAtlas": {},
                        "None": {},
                        "Url": {},
                        "$VALUES": {}
                    }
                },
                "shader": {
                    "Framebuffer": {
                        "framebufferTexture": {},
                        "useDepth": {},
                        "depthBuffer": {},
                        "framebufferTextureHeight": {},
                        "framebufferTextureWidth": {},
                        "framebufferFilter": {},
                        "framebufferWidth": {},
                        "framebufferHeight": {},
                        "framebufferObject": {},
                        "framebufferColor": {}
                    },
                    "ShaderLoader$ShaderType": {
                        "valueOf": function() {},
                        "values": function() {},
                        "shaderName": {},
                        "loadedShaders": {},
                        "VERTEX": {},
                        "FRAGMENT": {},
                        "shaderExtension": {},
                        "shaderMode": {},
                        "$VALUES": {}
                    },
                    "ShaderLoader": {
                        "toByteArray": function() {},
                        "loadShader": function() {},
                        "shader": {},
                        "shaderAttachCount": {},
                        "shaderType": {},
                        "shaderFilename": {}
                    }
                },
                "settings": {
                    "GameSettings$Options": {
                        "getEnumOptions": function() {},
                        "valueOf": function() {},
                        "access$100": function() {},
                        "values": function() {},
                        "access$000": function() {},
                        "SHOW_FPS": {},
                        "SKY": {},
                        "PROFILER": {},
                        "ANIMATED_TEXTURES": {},
                        "ALTERNATE_BLOCKS": {},
                        "REDUCED_DEBUG_INFO": {},
                        "AMBIENT_OCCLUSION": {},
                        "BETTER_SNOW": {},
                        "ENTITY_SHADOWS": {},
                        "STREAM_BYTES_PER_PIXEL": {},
                        "CHAT_HEIGHT_FOCUSED": {},
                        "RENDER_CLOUDS": {},
                        "SNOOPER_ENABLED": {},
                        "CHUNK_UPDATES_DYNAMIC": {},
                        "POTION_PARTICLES": {},
                        "CUSTOM_FONTS": {},
                        "BETTER_GRASS": {},
                        "PORTAL_PARTICLES": {},
                        "CHAT_HEIGHT_UNFOCUSED": {},
                        "GRAPHICS": {},
                        "FRAMERATE_LIMIT": {},
                        "DRIPPING_WATER_LAVA": {},
                        "GUI_SCALE": {},
                        "FAST_MATH": {},
                        "ANIMATED_FIRE": {},
                        "RENDER_REGIONS": {},
                        "STREAM_COMPRESSION": {},
                        "CLOUD_HEIGHT": {},
                        "INVERT_MOUSE": {},
                        "PARTICLES": {},
                        "DYNAMIC_LIGHTS": {},
                        "AF_LEVEL": {},
                        "USE_VBO": {},
                        "CHUNK_UPDATES": {},
                        "CUSTOM_ENTITY_MODELS": {},
                        "WATER_PARTICLES": {},
                        "STREAM_FPS": {},
                        "NATURAL_TEXTURES": {},
                        "ANIMATED_TERRAIN": {},
                        "FAST_RENDER": {},
                        "CUSTOM_COLORS": {},
                        "WEATHER": {},
                        "FIREWORK_PARTICLES": {},
                        "BLOCK_ALTERNATIVES": {},
                        "AUTOSAVE_TICKS": {},
                        "SCREENSHOT_SIZE": {},
                        "CHAT_LINKS": {},
                        "CLEAR_WATER": {},
                        "FULLSCREEN_MODE": {},
                        "DYNAMIC_FOV": {},
                        "MIPMAP_LEVELS": {},
                        "ANIMATED_REDSTONE": {},
                        "CLOUDS": {},
                        "STREAM_SEND_METADATA": {},
                        "SMOOTH_WORLD": {},
                        "SHOW_GL_ERRORS": {},
                        "ANIMATED_PORTAL": {},
                        "HELD_ITEM_TOOLTIPS": {},
                        "CHAT_SCALE": {},
                        "GAMMA": {},
                        "CHAT_VISIBILITY": {},
                        "FOG_START": {},
                        "CUSTOM_SKY": {},
                        "valueStep": {},
                        "SENSITIVITY": {},
                        "AA_LEVEL": {},
                        "EMISSIVE_TEXTURES": {},
                        "ANAGLYPH": {},
                        "ANIMATED_LAVA": {},
                        "SMART_ANIMATIONS": {},
                        "FORCE_UNICODE_FONT": {},
                        "$VALUES": {},
                        "RANDOM_ENTITIES": {},
                        "STREAM_VOLUME_MIC": {},
                        "MIPMAP_TYPE": {},
                        "SHOW_CAPES": {},
                        "FOV": {},
                        "REALMS_NOTIFICATIONS": {},
                        "SMOOTH_BIOMES": {},
                        "STREAM_CHAT_ENABLED": {},
                        "RAIN": {},
                        "TREES": {},
                        "AO_LEVEL": {},
                        "CHAT_OPACITY": {},
                        "CUSTOM_GUIS": {},
                        "CHAT_COLOR": {},
                        "ADVANCED_TOOLTIPS": {},
                        "ANIMATED_SMOKE": {},
                        "VOID_PARTICLES": {},
                        "valueMax": {},
                        "CHAT_LINKS_PROMPT": {},
                        "CHAT_WIDTH": {},
                        "STREAM_VOLUME_SYSTEM": {},
                        "LAZY_CHUNK_LOADING": {},
                        "USE_FULLSCREEN": {},
                        "ANIMATED_FLAME": {},
                        "SMOOTH_FPS": {},
                        "RAIN_SPLASH": {},
                        "valueMin": {},
                        "ANIMATED_EXPLOSION": {},
                        "VIEW_BOBBING": {},
                        "SUN_MOON": {},
                        "enumFloat": {},
                        "TOUCHSCREEN": {},
                        "STREAM_CHAT_USER_FILTER": {},
                        "FBO_ENABLE": {},
                        "SWAMP_COLORS": {},
                        "CUSTOM_ITEMS": {},
                        "enumBoolean": {},
                        "VIGNETTE": {},
                        "LAGOMETER": {},
                        "STREAM_KBPS": {},
                        "TIME": {},
                        "FOG_FANCY": {},
                        "RENDER_DISTANCE": {},
                        "STREAM_MIC_TOGGLE_BEHAVIOR": {},
                        "ENABLE_VSYNC": {},
                        "TRANSLUCENT_BLOCKS": {},
                        "STARS": {},
                        "ANIMATED_WATER": {},
                        "SATURATION": {},
                        "CONNECTED_TEXTURES": {},
                        "DROPPED_ITEMS": {},
                        "enumString": {}
                    },
                    "KeyBinding": {
                        "onTick": function() {},
                        "setKeyBindState": function() {},
                        "unPressAllKeys": function() {},
                        "getKeybinds": function() {},
                        "resetKeyBindingArrayAndHash": function() {},
                        "keyCode": {},
                        "pressed": {},
                        "pressTime": {},
                        "keyDescription": {},
                        "keybindArray": {},
                        "keyCodeDefault": {},
                        "keyCategory": {},
                        "keybindSet": {},
                        "hash": {}
                    }
                },
                "AnvilConverterException": {},
                "LoadingScreenRenderer": {
                    "loadingSuccess": {},
                    "mc": {},
                    "scaledResolution": {},
                    "message": {},
                    "systemTime": {},
                    "currentlyDisplayedText": {},
                    "framebuffer": {}
                },
                "ClientBrandRetriever": {
                    "getClientModName": function() {}
                },
                "network": {
                    "LanServerDetector$LanServer": {
                        "timeLastSeen": {},
                        "lanServerMotd": {},
                        "lanServerIpPort": {}
                    },
                    "LanServerDetector$LanServerList": {
                        "wasUpdated": {},
                        "listOfLanServers": {}
                    },
                    "LanServerDetector$ThreadLanServerFind": {
                        "localServerList": {},
                        "socket": {},
                        "broadcastAddress": {}
                    }
                }
            },
            "util": {
                "ReportedException": {
                    "theReportedExceptionCrashReport": {}
                },
                "EntityDamageSourceIndirect": {
                    "indirectEntity": {}
                },
                "LongHashMap": {
                    "access$000": function() {},
                    "getHashIndex": function() {},
                    "getHashedKey": function() {},
                    "hash": function() {},
                    "percentUseable": {},
                    "modCount": {},
                    "hashArray": {},
                    "numHashElements": {},
                    "mask": {},
                    "capacity": {}
                },
                "Tuple": {
                    "a": {},
                    "b": {}
                },
                "RegistryNamespaced": {
                    "inverseObjectRegistry": {},
                    "underlyingIntegerMap": {}
                },
                "RegistryDefaulted": {
                    "defaultObject": {}
                },
                "MovingObjectPosition": {
                    "blockPos": {},
                    "hitVec": {},
                    "sideHit": {},
                    "entityHit": {},
                    "typeOfHit": {}
                },
                "TupleIntJsonSerializable": {
                    "jsonSerializableValue": {},
                    "integerValue": {}
                },
                "Timer": {
                    "lastHRTime": {},
                    "elapsedTicks": {},
                    "lastSyncSysClock": {},
                    "renderPartialTicks": {},
                    "elapsedPartialTicks": {},
                    "counter": {},
                    "timeSyncAdjustment": {},
                    "lastSyncHRClock": {},
                    "timerSpeed": {},
                    "ticksPerSecond": {}
                },
                "ThreadSafeBoundList": {
                    "field_152760_b": {},
                    "field_152761_c": {},
                    "field_152762_d": {},
                    "field_152763_e": {},
                    "field_152759_a": {}
                },
                "IStringSerializable": {},
                "BlockPos$MutableBlockPos": {
                    "access$202": function() {},
                    "access$102": function() {},
                    "access$002": function() {},
                    "x": {},
                    "y": {},
                    "z": {}
                },
                "ChatComponentProcessor": {
                    "processComponent": function() {}
                },
                "Cartesian$Product": {
                    "clazz": {},
                    "iterables": {}
                },
                "Vec3i": {
                    "NULL_VECTOR": {},
                    "x": {},
                    "y": {},
                    "z": {}
                },
                "FoodStats": {
                    "prevFoodLevel": {},
                    "foodSaturationLevel": {},
                    "foodTimer": {},
                    "foodLevel": {},
                    "foodExhaustionLevel": {}
                },
                "Vec4b": {
                    "field_176117_a": {},
                    "field_176114_d": {},
                    "field_176116_c": {},
                    "field_176115_b": {}
                },
                "IntHashMap$Entry": {
                    "nextEntry": {},
                    "hashEntry": {},
                    "valueEntry": {},
                    "slotHash": {}
                },
                "IProgressUpdate": {},
                "Vec3": {
                    "yCoord": {},
                    "xCoord": {},
                    "zCoord": {}
                },
                "MouseFilter": {
                    "field_76335_c": {},
                    "field_76336_a": {},
                    "field_76334_b": {}
                },
                "Rotations": {
                    "x": {},
                    "y": {},
                    "z": {}
                },
                "MovementInput": {
                    "moveForward": {},
                    "moveStrafe": {},
                    "sneak": {},
                    "jump": {}
                },
                "ITickable": {},
                "WeightedRandomFishable": {
                    "maxDamagePercent": {},
                    "returnStack": {},
                    "enchantable": {}
                },
                "Session$Type": {
                    "valueOf": function() {},
                    "values": function() {},
                    "setSessionType": function() {},
                    "MOJANG": {},
                    "LEGACY": {},
                    "sessionType": {},
                    "SESSION_TYPES": {},
                    "$VALUES": {}
                },
                "MathHelper": {
                    "sqrt_double": function() {},
                    "func_180183_b": function() {},
                    "average": function() {},
                    "randomFloatClamp": function() {},
                    "sqrt_float": function() {},
                    "clamp_double": function() {},
                    "cos": function() {},
                    "parseIntWithDefault": function() {},
                    "denormalizeClamp": function() {},
                    "func_180188_d": function() {},
                    "floor_double": function() {},
                    "hsvToRGB": function() {},
                    "func_181162_h": function() {},
                    "func_181161_i": function() {},
                    "calculateLogBaseTwoDeBruijn": function() {},
                    "getRandomDoubleInRange": function() {},
                    "func_181160_c": function() {},
                    "getRandomIntegerInRange": function() {},
                    "sin": function() {},
                    "abs_int": function() {},
                    "ceiling_float_int": function() {},
                    "roundUp": function() {},
                    "atan2": function() {},
                    "func_154353_e": function() {},
                    "clamp_int": function() {},
                    "ceiling_double_int": function() {},
                    "bucketInt": function() {},
                    "parseDoubleWithDefaultAndMax": function() {},
                    "epsilonEquals": function() {},
                    "getPositionRandom": function() {},
                    "wrapAngleTo180_double": function() {},
                    "floor_double_long": function() {},
                    "abs_max": function() {},
                    "truncateDoubleToInt": function() {},
                    "getRandomUuid": function() {},
                    "calculateLogBaseTwo": function() {},
                    "isPowerOfTwo": function() {},
                    "parseIntWithDefaultAndMax": function() {},
                    "abs": function() {},
                    "wrapAngleTo180_float": function() {},
                    "floor_float": function() {},
                    "roundUpToPowerOfTwo": function() {},
                    "clamp_float": function() {},
                    "normalizeAngle": function() {},
                    "getCoordinateRandom": function() {},
                    "parseDoubleWithDefault": function() {},
                    "func_180181_b": function() {},
                    "SIN_TABLE": {},
                    "PId2": {},
                    "deg2Rad": {},
                    "radToIndex": {},
                    "SIN_COUNT_D4": {},
                    "SIN_TABLE_FAST": {},
                    "field_181163_d": {},
                    "SQRT_2": {},
                    "field_181165_f": {},
                    "SIN_BITS": {},
                    "SIN_MASK": {},
                    "field_181164_e": {},
                    "SIN_COUNT": {},
                    "PI2": {},
                    "PI": {},
                    "fastMath": {},
                    "multiplyDeBruijnBitPosition": {}
                },
                "EntityDamageSource": {
                    "damageSourceEntity": {},
                    "isThornsDamage": {}
                },
                "ChatComponentTranslationFormatException": {},
                "CombatTracker": {
                    "field_94552_d": {},
                    "fighter": {},
                    "field_152776_e": {},
                    "field_152775_d": {},
                    "field_94555_c": {},
                    "field_94553_e": {},
                    "combatEntries": {},
                    "field_94551_f": {}
                },
                "MovementInputFromOptions": {
                    "gameSettings": {}
                },
                "ChatAllowedCharacters": {
                    "isAllowedCharacter": function() {},
                    "filterAllowedCharacters": function() {},
                    "allowedCharactersArray": {}
                },
                "IChatComponent": {},
                "EnchantmentNameParts": {
                    "getInstance": function() {},
                    "rand": {},
                    "instance": {},
                    "namePartsArray": {}
                },
                "LazyLoadBase": {
                    "value": {},
                    "isLoaded": {}
                },
                "ClassInheritanceMultiMap": {
                    "access$000": function() {},
                    "field_181158_a": {},
                    "knownKeys": {},
                    "values": {},
                    "baseClass": {},
                    "map": {},
                    "empty": {}
                },
                "CombatEntry": {
                    "damageSrc": {},
                    "damage": {},
                    "fallDistance": {},
                    "health": {},
                    "field_94566_e": {},
                    "field_94567_b": {}
                },
                "WeightedRandomChestContent": {
                    "generateDispenserContents": function() {},
                    "func_177629_a": function() {},
                    "generateChestContents": function() {},
                    "maxStackSize": {},
                    "minStackSize": {},
                    "theItemId": {}
                },
                "IRegistry": {},
                "Vector3d": {
                    "x": {},
                    "y": {},
                    "z": {}
                },
                "AxisAlignedBB": {
                    "fromBounds": function() {},
                    "minY": {},
                    "minX": {},
                    "maxZ": {},
                    "maxY": {},
                    "maxX": {},
                    "minZ": {}
                },
                "ChatStyle": {
                    "access$700": function() {},
                    "access$502": function() {},
                    "access$600": function() {},
                    "access$402": function() {},
                    "access$302": function() {},
                    "access$500": function() {},
                    "access$202": function() {},
                    "access$400": function() {},
                    "access$102": function() {},
                    "access$300": function() {},
                    "access$002": function() {},
                    "access$200": function() {},
                    "access$100": function() {},
                    "access$000": function() {},
                    "access$802": function() {},
                    "access$702": function() {},
                    "access$800": function() {},
                    "access$602": function() {},
                    "color": {},
                    "chatHoverEvent": {},
                    "rootStyle": {},
                    "underlined": {},
                    "insertion": {},
                    "bold": {},
                    "strikethrough": {},
                    "chatClickEvent": {},
                    "italic": {},
                    "obfuscated": {},
                    "parentStyle": {}
                },
                "DamageSource": {
                    "setExplosionSource": function() {},
                    "causeFireballDamage": function() {},
                    "causePlayerDamage": function() {},
                    "causeMobDamage": function() {},
                    "causeIndirectMagicDamage": function() {},
                    "causeThornsDamage": function() {},
                    "causeThrownDamage": function() {},
                    "causeArrowDamage": function() {},
                    "magic": {},
                    "anvil": {},
                    "fireDamage": {},
                    "magicDamage": {},
                    "starve": {},
                    "drown": {},
                    "lightningBolt": {},
                    "lava": {},
                    "difficultyScaled": {},
                    "fall": {},
                    "cactus": {},
                    "damageIsAbsolute": {},
                    "inFire": {},
                    "isUnblockable": {},
                    "onFire": {},
                    "inWall": {},
                    "fallingBlock": {},
                    "generic": {},
                    "explosion": {},
                    "outOfWorld": {},
                    "isDamageAllowedInCreativeMode": {},
                    "hungerDamage": {},
                    "damageType": {},
                    "wither": {},
                    "projectile": {}
                },
                "FrameTimer": {
                    "frames": {},
                    "index": {},
                    "lastIndex": {},
                    "counter": {}
                },
                "MovingObjectPosition$MovingObjectType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "ENTITY": {},
                    "MISS": {},
                    "BLOCK": {},
                    "$VALUES": {}
                },
                "EnumChatFormatting": {
                    "getValidValues": function() {},
                    "func_175744_a": function() {},
                    "getTextWithoutFormattingCodes": function() {},
                    "valueOf": function() {},
                    "values": function() {},
                    "getValueByName": function() {},
                    "func_175745_c": function() {},
                    "GOLD": {},
                    "GRAY": {},
                    "BLUE": {},
                    "formattingCode": {},
                    "OBFUSCATED": {},
                    "DARK_AQUA": {},
                    "colorIndex": {},
                    "RESET": {},
                    "UNDERLINE": {},
                    "DARK_RED": {},
                    "LIGHT_PURPLE": {},
                    "BLACK": {},
                    "BOLD": {},
                    "$VALUES": {},
                    "ITALIC": {},
                    "AQUA": {},
                    "WHITE": {},
                    "DARK_BLUE": {},
                    "GREEN": {},
                    "formattingCodePattern": {},
                    "RED": {},
                    "fancyStyling": {},
                    "nameMapping": {},
                    "DARK_PURPLE": {},
                    "STRIKETHROUGH": {},
                    "name": {},
                    "DARK_GREEN": {},
                    "YELLOW": {},
                    "controlString": {},
                    "DARK_GRAY": {}
                },
                "MapPopulator": {
                    "createMap": function() {},
                    "populateMap": function() {}
                },
                "EnumParticleTypes": {
                    "valueOf": function() {},
                    "getParticleNames": function() {},
                    "values": function() {},
                    "getParticleFromId": function() {},
                    "SMOKE_NORMAL": {},
                    "ENCHANTMENT_TABLE": {},
                    "REDSTONE": {},
                    "SNOW_SHOVEL": {},
                    "ITEM_TAKE": {},
                    "SPELL_MOB": {},
                    "FOOTSTEP": {},
                    "BLOCK_DUST": {},
                    "WATER_SPLASH": {},
                    "SLIME": {},
                    "$VALUES": {},
                    "ITEM_CRACK": {},
                    "WATER_BUBBLE": {},
                    "VILLAGER_ANGRY": {},
                    "HEART": {},
                    "CRIT_MAGIC": {},
                    "SUSPENDED": {},
                    "WATER_DROP": {},
                    "SPELL": {},
                    "SPELL_INSTANT": {},
                    "argumentCount": {},
                    "LAVA": {},
                    "shouldIgnoreRange": {},
                    "VILLAGER_HAPPY": {},
                    "PARTICLES": {},
                    "CRIT": {},
                    "CLOUD": {},
                    "particleName": {},
                    "EXPLOSION_LARGE": {},
                    "TOWN_AURA": {},
                    "SUSPENDED_DEPTH": {},
                    "NOTE": {},
                    "particleID": {},
                    "SNOWBALL": {},
                    "SPELL_MOB_AMBIENT": {},
                    "SMOKE_LARGE": {},
                    "PARTICLE_NAMES": {},
                    "BARRIER": {},
                    "EXPLOSION_NORMAL": {},
                    "FLAME": {},
                    "PORTAL": {},
                    "MOB_APPEARANCE": {},
                    "SPELL_WITCH": {},
                    "DRIP_WATER": {},
                    "EXPLOSION_HUGE": {},
                    "WATER_WAKE": {},
                    "FIREWORKS_SPARK": {},
                    "DRIP_LAVA": {},
                    "BLOCK_CRACK": {}
                },
                "Util$EnumOS": {
                    "valueOf": function() {},
                    "values": function() {},
                    "LINUX": {},
                    "OSX": {},
                    "WINDOWS": {},
                    "SOLARIS": {},
                    "UNKNOWN": {},
                    "$VALUES": {}
                },
                "MouseHelper": {
                    "deltaX": {},
                    "deltaY": {}
                },
                "IntHashMap": {
                    "access$000": function() {},
                    "computeHash": function() {},
                    "getSlotIndex": function() {},
                    "slots": {},
                    "growFactor": {},
                    "count": {},
                    "threshold": {}
                },
                "EnumWorldBlockLayer": {
                    "valueOf": function() {},
                    "values": function() {},
                    "CUTOUT": {},
                    "TRANSLUCENT": {},
                    "CUTOUT_MIPPED": {},
                    "layerName": {},
                    "SOLID": {},
                    "$VALUES": {}
                },
                "ResourceLocation": {
                    "splitObjectName": function() {},
                    "resourcePath": {},
                    "resourceDomain": {}
                },
                "StatCollector": {
                    "translateToLocalFormatted": function() {},
                    "canTranslate": function() {},
                    "translateToLocal": function() {},
                    "getLastTranslationUpdateTimeInMilliseconds": function() {},
                    "translateToFallback": function() {},
                    "fallbackTranslator": {},
                    "localizedName": {}
                },
                "LongHashMap$Entry": {
                    "nextEntry": {},
                    "value": {},
                    "key": {},
                    "hash": {}
                },
                "EnumFacing$AxisDirection": {
                    "valueOf": function() {},
                    "values": function() {},
                    "POSITIVE": {},
                    "offset": {},
                    "NEGATIVE": {},
                    "description": {},
                    "$VALUES": {}
                },
                "BlockPos": {
                    "getAllInBoxMutable": function() {},
                    "fromLong": function() {},
                    "getAllInBox": function() {},
                    "ORIGIN": {},
                    "Z_MASK": {},
                    "NUM_Z_BITS": {},
                    "Y_SHIFT": {},
                    "NUM_Y_BITS": {},
                    "X_MASK": {},
                    "Y_MASK": {},
                    "NUM_X_BITS": {},
                    "X_SHIFT": {}
                },
                "IntegerCache": {
                    "getInteger": function() {},
                    "CACHE": {}
                },
                "IObjectIntIterable": {},
                "StringUtils": {
                    "ticksToElapsedTime": function() {},
                    "isNullOrEmpty": function() {},
                    "stripControlCodes": function() {},
                    "patternControlCode": {}
                },
                "MinecraftError": {},
                "RegistryNamespacedDefaultedByKey": {
                    "defaultValueKey": {},
                    "defaultValue": {}
                },
                "WeightedRandom$Item": {
                    "itemWeight": {}
                },
                "ObjectIntIdentityMap": {
                    "identityMap": {},
                    "objectList": {}
                },
                "WeightedRandom": {
                    "getRandomItem": function() {},
                    "getTotalWeight": function() {}
                }
            },
            "entity": {
                "item": {
                    "EntityMinecart$EnumMinecartType": {
                        "valueOf": function() {},
                        "values": function() {},
                        "byNetworkID": function() {},
                        "CHEST": {},
                        "FURNACE": {},
                        "name": {},
                        "RIDEABLE": {},
                        "COMMAND_BLOCK": {},
                        "networkID": {},
                        "TNT": {},
                        "ID_LOOKUP": {},
                        "SPAWNER": {},
                        "$VALUES": {},
                        "HOPPER": {}
                    },
                    "EntityMinecartEmpty": {},
                    "EntityMinecartTNT": {
                        "minecartTNTFuse": {}
                    },
                    "EntityMinecartChest": {},
                    "EntityMinecart": {
                        "getMinecart": function() {},
                        "minecartY": {},
                        "minecartZ": {},
                        "minecartPitch": {},
                        "minecartX": {},
                        "isInReverse": {},
                        "turnProgress": {},
                        "minecartYaw": {},
                        "entityName": {},
                        "velocityX": {},
                        "matrix": {},
                        "velocityZ": {},
                        "velocityY": {}
                    },
                    "EntityExpBottle": {},
                    "EntityEnderEye": {
                        "despawnTimer": {},
                        "shatterOrDrop": {},
                        "targetZ": {},
                        "targetY": {},
                        "targetX": {}
                    },
                    "EntityFireworkRocket": {
                        "lifetime": {},
                        "fireworkAge": {}
                    },
                    "EntityEnderCrystal": {
                        "health": {},
                        "innerRotation": {}
                    },
                    "EntityXPOrb": {
                        "getXPSplit": function() {},
                        "xpOrbAge": {},
                        "delayBeforeCanPickup": {},
                        "xpColor": {},
                        "xpOrbHealth": {},
                        "xpTargetColor": {},
                        "closestPlayer": {},
                        "xpValue": {}
                    },
                    "EntityTNTPrimed": {
                        "fuse": {},
                        "tntPlacedBy": {}
                    },
                    "EntityPainting": {
                        "art": {}
                    },
                    "EntityEnderPearl": {
                        "field_181555_c": {}
                    },
                    "EntityMinecartFurnace": {
                        "pushZ": {},
                        "fuel": {},
                        "pushX": {}
                    },
                    "EntityItemFrame": {
                        "itemDropChance": {}
                    },
                    "EntityFallingBlock": {
                        "fallTile": {},
                        "fallTime": {},
                        "fallHurtAmount": {},
                        "tileEntityData": {},
                        "hurtEntities": {},
                        "canSetAsBlock": {},
                        "shouldDropItem": {},
                        "fallHurtMax": {}
                    },
                    "EntityMinecartContainer": {
                        "minecartContainerItems": {},
                        "dropContentsWhenDead": {}
                    },
                    "EntityBoat": {
                        "boatX": {},
                        "boatY": {},
                        "boatZ": {},
                        "isBoatEmpty": {},
                        "boatPosRotationIncrements": {},
                        "boatYaw": {},
                        "speedMultiplier": {},
                        "velocityX": {},
                        "boatPitch": {},
                        "velocityZ": {},
                        "velocityY": {}
                    },
                    "EntityPainting$EnumArt": {
                        "valueOf": function() {},
                        "values": function() {},
                        "PLANT": {},
                        "AZTEC_2": {},
                        "DONKEY_KONG": {},
                        "KEBAB": {},
                        "title": {},
                        "SKELETON": {},
                        "offsetX": {},
                        "WITHER": {},
                        "field_180001_A": {},
                        "ALBAN": {},
                        "offsetY": {},
                        "CREEBET": {},
                        "$VALUES": {},
                        "PIGSCENE": {},
                        "BURNING_SKULL": {},
                        "SUNSET": {},
                        "STAGE": {},
                        "AZTEC": {},
                        "FIGHTERS": {},
                        "BUST": {},
                        "COURBET": {},
                        "SEA": {},
                        "WANDERER": {},
                        "SKULL_AND_ROSES": {},
                        "sizeX": {},
                        "GRAHAM": {},
                        "POINTER": {},
                        "POOL": {},
                        "VOID": {},
                        "BOMB": {},
                        "MATCH": {},
                        "sizeY": {},
                        "WASTELAND": {}
                    },
                    "EntityMinecartHopper": {
                        "isBlocked": {},
                        "transferTicker": {},
                        "field_174900_c": {}
                    }
                },
                "passive": {
                    "EntityVillager$ListItemForEmeralds": {
                        "priceInfo": {},
                        "itemToBuy": {}
                    },
                    "EntityHorse$GroupData": {
                        "horseVariant": {},
                        "horseType": {}
                    },
                    "EntityRabbit$EnumMoveType": {
                        "valueOf": function() {},
                        "values": function() {},
                        "duration": {},
                        "field_180085_i": {},
                        "field_180077_g": {},
                        "SPRINT": {},
                        "HOP": {},
                        "ATTACK": {},
                        "STEP": {},
                        "NONE": {},
                        "speed": {},
                        "$VALUES": {}
                    },
                    "EntityRabbit$AIPanic": {
                        "theEntity": {}
                    },
                    "IAnimals": {},
                    "EntityRabbit$RabbitJumpHelper": {
                        "theEntity": {},
                        "field_180068_d": {},
                        "this$0": {}
                    },
                    "EntitySquid$AIMoveRandom": {
                        "squid": {}
                    },
                    "EntityVillager$EmeraldForItems": {
                        "price": {},
                        "sellItem": {}
                    },
                    "EntityRabbit$RabbitTypeData": {
                        "typeData": {}
                    },
                    "EntityRabbit$RabbitMoveHelper": {
                        "theEntity": {}
                    },
                    "EntityVillager$ItemAndEmeraldToItem": {
                        "buyingItemStack": {},
                        "field_179408_d": {},
                        "buyingPriceInfo": {},
                        "sellingItemstack": {}
                    },
                    "EntityRabbit$AIRaidFarm": {
                        "field_179499_e": {},
                        "field_179498_d": {},
                        "rabbit": {}
                    },
                    "EntityVillager$ListEnchantedBookForEmeralds": {},
                    "EntityRabbit$AIEvilAttack": {},
                    "EntityVillager$ListEnchantedItemForEmeralds": {
                        "priceInfo": {},
                        "enchantedItemStack": {}
                    },
                    "EntityVillager$PriceInfo": {},
                    "EntityVillager$ITradeList": {}
                },
                "ai": {
                    "EntitySenses": {
                        "unseenEntities": {},
                        "seenEntities": {},
                        "entityObj": {}
                    },
                    "EntityAIFollowGolem": {
                        "takeGolemRoseTick": {},
                        "theVillager": {},
                        "tookGolemRose": {},
                        "theGolem": {}
                    },
                    "attributes": {
                        "IAttribute": {},
                        "BaseAttribute": {
                            "unlocalizedName": {},
                            "defaultValue": {},
                            "field_180373_a": {},
                            "shouldWatch": {}
                        },
                        "ModifiableAttributeInstance": {
                            "mapByOperation": {},
                            "mapByName": {},
                            "needsUpdate": {},
                            "baseValue": {},
                            "cachedValue": {},
                            "attributeMap": {},
                            "genericAttribute": {},
                            "mapByUUID": {}
                        },
                        "IAttributeInstance": {},
                        "RangedAttribute": {
                            "minimumValue": {},
                            "description": {},
                            "maximumValue": {}
                        }
                    },
                    "EntityLookHelper": {
                        "posX": {},
                        "posY": {},
                        "posZ": {},
                        "isLooking": {},
                        "deltaLookYaw": {},
                        "deltaLookPitch": {},
                        "entity": {}
                    },
                    "EntityAIBeg": {
                        "theWolf": {},
                        "minPlayerDistance": {},
                        "worldObject": {},
                        "thePlayer": {},
                        "timeoutCounter": {}
                    },
                    "EntityAIMoveThroughVillage": {
                        "theEntity": {},
                        "doorInfo": {},
                        "doorList": {},
                        "entityPathNavigate": {},
                        "isNocturnal": {},
                        "movementSpeed": {}
                    },
                    "EntityAIVillagerInteract": {
                        "villager": {},
                        "interactionDelay": {}
                    },
                    "EntityAIHarvestFarmland": {
                        "theVillager": {},
                        "field_179501_f": {},
                        "hasFarmItem": {},
                        "field_179503_e": {}
                    },
                    "EntityAIHurtByTarget": {
                        "targetClasses": {},
                        "entityCallsForHelp": {},
                        "revengeTimerOld": {}
                    },
                    "EntityAIOcelotSit": {
                        "ocelot": {}
                    },
                    "EntityAIMoveToBlock": {
                        "theEntity": {},
                        "destinationBlock": {},
                        "runDelay": {},
                        "timeoutCounter": {},
                        "isAboveDestination": {},
                        "searchLength": {},
                        "field_179490_f": {},
                        "movementSpeed": {}
                    },
                    "EntityAIRunAroundLikeCrazy": {
                        "horseHost": {},
                        "targetZ": {},
                        "targetY": {},
                        "targetX": {},
                        "speed": {}
                    },
                    "EntityAIControlledByPlayer": {
                        "speedBoosted": {},
                        "maxSpeed": {},
                        "currentSpeed": {},
                        "maxSpeedBoostTime": {},
                        "thisEntity": {},
                        "speedBoostTime": {}
                    },
                    "EntityAILookAtTradePlayer": {
                        "theMerchant": {}
                    },
                    "EntityJumpHelper": {
                        "isJumping": {},
                        "entity": {}
                    },
                    "EntityAIOpenDoor": {
                        "closeDoor": {},
                        "closeDoorTemporisation": {}
                    },
                    "EntityAITempt": {
                        "temptingPlayer": {},
                        "temptedEntity": {},
                        "scaredByPlayerMovement": {},
                        "targetZ": {},
                        "targetY": {},
                        "targetX": {},
                        "speed": {},
                        "yaw": {},
                        "avoidWater": {},
                        "isRunning": {},
                        "temptItem": {},
                        "pitch": {},
                        "delayTemptCounter": {}
                    },
                    "EntityAIFleeSun": {
                        "theCreature": {},
                        "shelterX": {},
                        "shelterY": {},
                        "shelterZ": {},
                        "theWorld": {},
                        "movementSpeed": {}
                    },
                    "EntityAIDoorInteract": {
                        "theEntity": {},
                        "doorBlock": {},
                        "hasStoppedDoorInteraction": {},
                        "doorPosition": {},
                        "entityPositionZ": {},
                        "entityPositionX": {}
                    },
                    "EntityAILookIdle": {
                        "idleEntity": {},
                        "lookZ": {},
                        "idleTime": {},
                        "lookX": {}
                    },
                    "EntityMinecartMobSpawner": {
                        "mobSpawnerLogic": {}
                    },
                    "EntityAILeapAtTarget": {
                        "leapTarget": {},
                        "leaper": {},
                        "leapMotionY": {}
                    },
                    "EntityAITasks$EntityAITaskEntry": {
                        "this$0": {},
                        "action": {},
                        "priority": {}
                    },
                    "EntityAILookAtVillager": {
                        "theVillager": {},
                        "lookTime": {},
                        "theGolem": {}
                    },
                    "RandomPositionGenerator": {
                        "findRandomTarget": function() {},
                        "findRandomTargetBlockTowards": function() {},
                        "findRandomTargetBlockAwayFrom": function() {},
                        "findRandomTargetBlock": function() {},
                        "staticVector": {}
                    },
                    "EntityAIWatchClosest": {
                        "chance": {},
                        "lookTime": {},
                        "maxDistanceForPlayer": {},
                        "watchedClass": {},
                        "theWatcher": {},
                        "closestEntity": {}
                    },
                    "EntityAIVillagerMate": {
                        "mate": {},
                        "villageObj": {},
                        "villagerObj": {},
                        "worldObj": {},
                        "matingTimeout": {}
                    },
                    "EntityAIPanic": {
                        "theEntityCreature": {},
                        "randPosY": {},
                        "randPosZ": {},
                        "randPosX": {},
                        "speed": {}
                    },
                    "EntityAIWatchClosest2": {},
                    "EntityAIOcelotAttack": {
                        "theEntity": {},
                        "theVictim": {},
                        "theWorld": {},
                        "attackCountdown": {}
                    },
                    "EntityAIArrowAttack": {
                        "attackTarget": {},
                        "entityMoveSpeed": {},
                        "maxAttackDistance": {},
                        "field_96562_i": {},
                        "rangedAttackEntityHost": {},
                        "maxRangedAttackTime": {},
                        "field_96561_g": {},
                        "rangedAttackTime": {},
                        "entityHost": {},
                        "field_75318_f": {}
                    },
                    "EntityAIAttackOnCollide": {
                        "attackTick": {},
                        "speedTowardsTarget": {},
                        "entityPathEntity": {},
                        "targetZ": {},
                        "targetY": {},
                        "targetX": {},
                        "attacker": {},
                        "classTarget": {},
                        "worldObj": {},
                        "delayCounter": {},
                        "longMemory": {}
                    },
                    "EntityAIOwnerHurtByTarget": {
                        "field_142051_e": {},
                        "theOwnerAttacker": {},
                        "theDefendingTameable": {}
                    },
                    "EntityAINearestAttackableTarget$Sorter": {
                        "theEntity": {}
                    },
                    "EntityAIRestrictSun": {
                        "theEntity": {}
                    },
                    "EntityAISwimming": {
                        "theEntity": {}
                    },
                    "EntityAIOwnerHurtTarget": {
                        "theTarget": {},
                        "field_142050_e": {},
                        "theEntityTameable": {}
                    },
                    "EntityAIRestrictOpenDoor": {
                        "frontDoor": {},
                        "entityObj": {}
                    },
                    "EntityAIFollowOwner": {
                        "maxDist": {},
                        "thePet": {},
                        "theOwner": {},
                        "theWorld": {},
                        "followSpeed": {},
                        "field_75343_h": {},
                        "minDist": {},
                        "field_75344_i": {},
                        "petPathfinder": {}
                    },
                    "EntityAIPlay": {
                        "targetVillager": {},
                        "villagerObj": {},
                        "playTime": {},
                        "speed": {}
                    },
                    "EntityAIMoveTowardsTarget": {
                        "theEntity": {},
                        "movePosX": {},
                        "movePosY": {},
                        "movePosZ": {},
                        "targetEntity": {},
                        "speed": {},
                        "maxTargetDistance": {}
                    },
                    "EntityAITradePlayer": {
                        "villager": {}
                    },
                    "EntityAIDefendVillage": {
                        "irongolem": {},
                        "villageAgressorTarget": {}
                    },
                    "EntityAIBreakDoor": {
                        "breakingTime": {},
                        "previousBreakProgress": {}
                    },
                    "EntityAITarget": {
                        "isSuitableTarget": function() {},
                        "shouldCheckSight": {},
                        "taskOwner": {},
                        "targetSearchStatus": {},
                        "nearbyOnly": {},
                        "targetSearchDelay": {},
                        "targetUnseenTicks": {}
                    },
                    "EntityAISit": {
                        "theEntity": {},
                        "isSitting": {}
                    },
                    "EntityAIFollowParent": {
                        "moveSpeed": {},
                        "parentAnimal": {},
                        "childAnimal": {},
                        "delayCounter": {}
                    },
                    "EntityAIMoveIndoors": {
                        "doorInfo": {},
                        "insidePosZ": {},
                        "insidePosX": {},
                        "entityObj": {}
                    },
                    "EntityAIMoveTowardsRestriction": {
                        "theEntity": {},
                        "movePosX": {},
                        "movePosY": {},
                        "movePosZ": {},
                        "movementSpeed": {}
                    },
                    "EntityAICreeperSwell": {
                        "creeperAttackTarget": {},
                        "swellingCreeper": {}
                    },
                    "EntityMoveHelper": {
                        "posX": {},
                        "posY": {},
                        "posZ": {},
                        "update": {},
                        "entity": {},
                        "speed": {}
                    },
                    "EntityAIBase": {
                        "mutexBits": {}
                    },
                    "EntityAIMate": {
                        "theAnimal": {},
                        "spawnBabyDelay": {},
                        "moveSpeed": {},
                        "theWorld": {},
                        "targetMate": {}
                    },
                    "EntityAIWander": {
                        "xPosition": {},
                        "yPosition": {},
                        "mustUpdate": {},
                        "zPosition": {},
                        "executionChance": {},
                        "entity": {},
                        "speed": {}
                    }
                },
                "monster": {
                    "EntityGuardian$AIGuardianAttack": {
                        "theEntity": {},
                        "tickCounter": {}
                    },
                    "EntitySlime$AISlimeFloat": {
                        "slime": {}
                    },
                    "EntityBlaze$AIFireballAttack": {
                        "field_179468_c": {},
                        "blaze": {},
                        "field_179467_b": {}
                    },
                    "EntitySilverfish$AIHideInStone": {
                        "silverfish": {},
                        "field_179484_c": {},
                        "facing": {}
                    },
                    "EntityZombie$GroupData": {
                        "this$0": {},
                        "isVillager": {},
                        "isChild": {}
                    },
                    "EntitySlime$AISlimeFaceRandom": {
                        "field_179459_b": {},
                        "field_179460_c": {},
                        "slime": {}
                    },
                    "EntityPigZombie$AIHurtByAggressor": {},
                    "EntityEnderman$AITakeBlock": {
                        "enderman": {}
                    },
                    "EntityGhast$GhastMoveHelper": {
                        "courseChangeCooldown": {},
                        "parentEntity": {}
                    },
                    "EntityEnderman$AIPlaceBlock": {
                        "enderman": {}
                    },
                    "EntityGhast$AIRandomFly": {
                        "parentEntity": {}
                    },
                    "EntitySlime$AISlimeHop": {
                        "slime": {}
                    },
                    "EntityGhast$AIFireballAttack": {
                        "parentEntity": {},
                        "attackTimer": {}
                    },
                    "EntitySpider$GroupData": {
                        "potionEffectId": {}
                    },
                    "EntitySlime$AISlimeAttack": {
                        "field_179465_b": {},
                        "slime": {}
                    },
                    "EntitySpider$AISpiderAttack": {},
                    "EntitySlime$SlimeMoveHelper": {
                        "field_179922_g": {},
                        "field_179924_h": {},
                        "field_179923_j": {},
                        "slime": {}
                    },
                    "EntityGuardian$GuardianMoveHelper": {
                        "entityGuardian": {}
                    },
                    "EntityGhast$AILookAround": {
                        "parentEntity": {}
                    },
                    "EntitySilverfish$AISummonSilverfish": {
                        "silverfish": {},
                        "field_179463_b": {}
                    }
                },
                "NpcMerchant": {
                    "theMerchantInventory": {},
                    "field_175548_d": {},
                    "recipeList": {},
                    "customer": {}
                },
                "DataWatcher$WatchableObject": {
                    "access$002": function() {},
                    "watched": {},
                    "dataValueId": {},
                    "watchedObject": {},
                    "objectType": {}
                },
                "boss": {
                    "IBossDisplayData": {},
                    "EntityDragonPart": {
                        "entityDragonObj": {},
                        "partName": {}
                    },
                    "BossStatus": {
                        "setBossStatus": function() {},
                        "healthScale": {},
                        "bossName": {},
                        "statusBarTime": {},
                        "hasColorModifier": {}
                    }
                },
                "EnumCreatureAttribute": {
                    "valueOf": function() {},
                    "values": function() {},
                    "ARTHROPOD": {},
                    "UNDEFINED": {},
                    "UNDEAD": {},
                    "$VALUES": {}
                },
                "projectile": {
                    "EntitySmallFireball": {},
                    "EntityThrowable": {
                        "inTile": {},
                        "ticksInGround": {},
                        "throwerName": {},
                        "ticksInAir": {},
                        "xTile": {},
                        "zTile": {},
                        "throwableShake": {},
                        "thrower": {},
                        "yTile": {},
                        "inGround": {}
                    },
                    "EntitySnowball": {},
                    "EntityEgg": {},
                    "EntityFireball": {
                        "accelerationY": {},
                        "inTile": {},
                        "accelerationX": {},
                        "ticksInAir": {},
                        "accelerationZ": {},
                        "xTile": {},
                        "zTile": {},
                        "yTile": {},
                        "inGround": {},
                        "ticksAlive": {},
                        "shootingEntity": {}
                    },
                    "EntityPotion": {
                        "potionDamage": {}
                    },
                    "EntityLargeFireball": {
                        "explosionPower": {}
                    },
                    "EntityFishHook": {
                        "func_174855_j": function() {},
                        "ticksCatchableDelay": {},
                        "ticksInGround": {},
                        "shake": {},
                        "xTile": {},
                        "clientMotionX": {},
                        "clientMotionY": {},
                        "clientMotionZ": {},
                        "fishZ": {},
                        "fishX": {},
                        "fishY": {},
                        "inTile": {},
                        "ticksInAir": {},
                        "fishPitch": {},
                        "zTile": {},
                        "ticksCatchable": {},
                        "yTile": {},
                        "fishYaw": {},
                        "fishPosRotationIncrements": {},
                        "fishApproachAngle": {},
                        "inGround": {},
                        "JUNK": {},
                        "ticksCaughtDelay": {},
                        "TREASURE": {},
                        "FISH": {},
                        "angler": {},
                        "caughtEntity": {}
                    },
                    "EntityArrow": {
                        "ticksInGround": {},
                        "damage": {},
                        "xTile": {},
                        "inGround": {},
                        "arrowShake": {},
                        "shootingEntity": {},
                        "canBePickedUp": {},
                        "inTile": {},
                        "ticksInAir": {},
                        "inData": {},
                        "zTile": {},
                        "yTile": {},
                        "knockbackStrength": {}
                    },
                    "EntityWitherSkull": {}
                },
                "player": {
                    "EntityPlayer$EnumStatus": {
                        "valueOf": function() {},
                        "values": function() {},
                        "NOT_POSSIBLE_HERE": {},
                        "NOT_POSSIBLE_NOW": {},
                        "NOT_SAFE": {},
                        "OTHER_PROBLEM": {},
                        "TOO_FAR_AWAY": {},
                        "OK": {},
                        "$VALUES": {}
                    },
                    "EnumPlayerModelParts": {
                        "valueOf": function() {},
                        "values": function() {},
                        "partMask": {},
                        "RIGHT_PANTS_LEG": {},
                        "LEFT_PANTS_LEG": {},
                        "JACKET": {},
                        "RIGHT_SLEEVE": {},
                        "partId": {},
                        "field_179339_k": {},
                        "HAT": {},
                        "LEFT_SLEEVE": {},
                        "CAPE": {},
                        "partName": {},
                        "$VALUES": {}
                    },
                    "InventoryPlayer": {
                        "getHotbarSize": function() {},
                        "itemStack": {},
                        "mainInventory": {},
                        "armorInventory": {},
                        "inventoryChanged": {},
                        "currentItem": {},
                        "player": {}
                    },
                    "EntityPlayer$EnumChatVisibility": {
                        "valueOf": function() {},
                        "values": function() {},
                        "getEnumChatVisibility": function() {},
                        "SYSTEM": {},
                        "chatVisibility": {},
                        "resourceKey": {},
                        "HIDDEN": {},
                        "ID_LOOKUP": {},
                        "FULL": {},
                        "$VALUES": {}
                    },
                    "PlayerCapabilities": {
                        "allowFlying": {},
                        "walkSpeed": {},
                        "disableDamage": {},
                        "allowEdit": {},
                        "isCreativeMode": {},
                        "isFlying": {},
                        "flySpeed": {}
                    }
                },
                "IEntityMultiPart": {},
                "effect": {
                    "EntityWeatherEffect": {},
                    "EntityLightningBolt": {
                        "boltLivingTime": {},
                        "lightningState": {},
                        "boltVertex": {}
                    }
                },
                "EntityBodyHelper": {
                    "rotationTickCounter": {},
                    "theLiving": {},
                    "prevRenderYawHead": {}
                },
                "EntitySpawnPlacementRegistry": {
                    "getPlacementForEntity": function() {},
                    "ENTITY_PLACEMENTS": {}
                },
                "IMerchant": {},
                "IRangedAttackMob": {},
                "EnumCreatureType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "WATER_CREATURE": {},
                    "isAnimal": {},
                    "AMBIENT": {},
                    "CREATURE": {},
                    "isPeacefulCreature": {},
                    "maxNumberOfCreature": {},
                    "MONSTER": {},
                    "creatureClass": {},
                    "creatureMaterial": {},
                    "$VALUES": {}
                },
                "IEntityLivingData": {},
                "EntityList$EntityEggInfo": {
                    "field_151513_e": {},
                    "field_151512_d": {},
                    "primaryColor": {},
                    "spawnedID": {},
                    "secondaryColor": {}
                },
                "EntityMinecartCommandBlock": {
                    "commandBlockLogic": {},
                    "activatorRailCooldown": {}
                },
                "EntityHanging": {
                    "facingDirection": {},
                    "tickCounter1": {},
                    "hangingPosition": {}
                },
                "EntityLiving$SpawnPlacementType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "IN_AIR": {},
                    "IN_WATER": {},
                    "ON_GROUND": {},
                    "$VALUES": {}
                },
                "INpc": {},
                "IProjectile": {},
                "Entity": {
                    "renderDistanceWeight": {},
                    "isCollidedHorizontally": {},
                    "isInWeb": {},
                    "isAirBorne": {},
                    "isOutsideBorder": {},
                    "forceSpawn": {},
                    "firstUpdate": {},
                    "isDead": {},
                    "rand": {},
                    "preventEntitySpawning": {},
                    "lastTickPosX": {},
                    "entityRiderYawDelta": {},
                    "fire": {},
                    "prevDistanceWalkedModified": {},
                    "lastTickPosY": {},
                    "lastTickPosZ": {},
                    "height": {},
                    "entityRiderPitchDelta": {},
                    "velocityChanged": {},
                    "entityUniqueID": {},
                    "isCollidedVertically": {},
                    "worldObj": {},
                    "ZERO_AABB": {},
                    "posX": {},
                    "posY": {},
                    "rotationPitch": {},
                    "posZ": {},
                    "lastPortalVec": {},
                    "addedToChunk": {},
                    "teleportDirection": {},
                    "nextStepDistance": {},
                    "stepHeight": {},
                    "isCollided": {},
                    "noClip": {},
                    "serverPosY": {},
                    "boundingBox": {},
                    "serverPosZ": {},
                    "rotationYaw": {},
                    "ticksExisted": {},
                    "portalCounter": {},
                    "fallDistance": {},
                    "timeUntilPortal": {},
                    "prevRotationYaw": {},
                    "serverPosX": {},
                    "prevPosY": {},
                    "prevPosZ": {},
                    "invulnerable": {},
                    "fireResistance": {},
                    "hurtResistantTime": {},
                    "distanceWalkedOnStepModified": {},
                    "cmdResultStats": {},
                    "nextEntityID": {},
                    "dimension": {},
                    "entityCollisionReduction": {},
                    "prevPosX": {},
                    "motionZ": {},
                    "dataWatcher": {},
                    "riddenByEntity": {},
                    "motionY": {},
                    "motionX": {},
                    "ridingEntity": {},
                    "inWater": {},
                    "entityId": {},
                    "prevRotationPitch": {},
                    "distanceWalkedModified": {},
                    "isImmuneToFire": {},
                    "inPortal": {},
                    "lastPortalPos": {},
                    "onGround": {},
                    "ignoreFrustumCheck": {},
                    "width": {},
                    "chunkCoordZ": {},
                    "chunkCoordX": {},
                    "chunkCoordY": {}
                },
                "IEntityOwnable": {},
                "EntityLeashKnot": {
                    "getKnotForPosition": function() {},
                    "createKnot": function() {}
                }
            },
            "world": {
                "storage": {
                    "ISaveFormat": {},
                    "ThreadedFileIOBase": {
                        "getThreadedIOInstance": function() {},
                        "writeQueuedCounter": {},
                        "threadedIOInstance": {},
                        "threadedIOQueue": {},
                        "isThreadWaiting": {},
                        "savedIOCounter": {}
                    },
                    "ISaveHandler": {},
                    "SaveDataMemoryStorage": {},
                    "SaveHandlerMP": {},
                    "SaveFormatComparator": {
                        "requiresConversion": {},
                        "fileName": {},
                        "hardcore": {},
                        "displayName": {},
                        "theEnumGameType": {},
                        "cheatsEnabled": {},
                        "sizeOnDisk": {},
                        "lastTimePlayed": {}
                    },
                    "MapData$MapInfo": {
                        "field_176105_d": {},
                        "minY": {},
                        "minX": {},
                        "maxY": {},
                        "maxX": {},
                        "this$0": {},
                        "entityplayerObj": {},
                        "field_82569_d": {},
                        "field_176109_i": {}
                    },
                    "IThreadedFileIO": {},
                    "DerivedWorldInfo": {
                        "theWorldInfo": {}
                    },
                    "IPlayerFileData": {},
                    "MapStorage": {
                        "loadedDataMap": {},
                        "saveHandler": {},
                        "loadedDataList": {},
                        "idCounts": {}
                    },
                    "WorldInfo": {
                        "access$1000": function() {},
                        "access$600": function() {},
                        "access$400": function() {},
                        "access$200": function() {},
                        "access$000": function() {},
                        "access$800": function() {},
                        "access$1200": function() {},
                        "access$1400": function() {},
                        "access$1600": function() {},
                        "access$700": function() {},
                        "access$500": function() {},
                        "access$300": function() {},
                        "access$100": function() {},
                        "access$900": function() {},
                        "access$1100": function() {},
                        "access$1300": function() {},
                        "access$1500": function() {},
                        "theGameType": {},
                        "saveVersion": {},
                        "borderSafeZone": {},
                        "borderCenterZ": {},
                        "borderSize": {},
                        "raining": {},
                        "borderCenterX": {},
                        "sizeOnDisk": {},
                        "DEFAULT_DIFFICULTY": {},
                        "mapFeaturesEnabled": {},
                        "worldTime": {},
                        "playerTag": {},
                        "borderWarningTime": {},
                        "borderDamagePerBlock": {},
                        "initialized": {},
                        "allowCommands": {},
                        "dimension": {},
                        "lastTimePlayed": {},
                        "borderSizeLerpTime": {},
                        "rainTime": {},
                        "thunderTime": {},
                        "hardcore": {},
                        "totalTime": {},
                        "spawnX": {},
                        "spawnZ": {},
                        "levelName": {},
                        "thundering": {},
                        "spawnY": {},
                        "borderWarningDistance": {},
                        "randomSeed": {},
                        "generatorOptions": {},
                        "difficulty": {},
                        "borderSizeLerpTarget": {},
                        "cleanWeatherTime": {},
                        "terrainType": {},
                        "difficultyLocked": {},
                        "theGameRules": {}
                    },
                    "MapData": {
                        "zCenter": {},
                        "playersArrayList": {},
                        "playersHashMap": {},
                        "mapDecorations": {},
                        "scale": {},
                        "dimension": {},
                        "xCenter": {},
                        "colors": {}
                    }
                },
                "gen": {
                    "NoiseGeneratorOctaves": {
                        "octaves": {},
                        "generatorCollection": {}
                    },
                    "ChunkProviderEnd": {
                        "noiseData1": {},
                        "endRNG": {},
                        "noiseData2": {},
                        "noiseData3": {},
                        "biomesForGeneration": {},
                        "endWorld": {},
                        "noiseGen4": {},
                        "noiseData4": {},
                        "noiseGen5": {},
                        "noiseData5": {},
                        "noiseGen2": {},
                        "noiseGen3": {},
                        "densities": {},
                        "noiseGen1": {}
                    },
                    "structure": {
                        "StructureComponent": {
                            "findIntersecting": function() {},
                            "boundingBox": {},
                            "componentType": {},
                            "coordBaseMode": {}
                        },
                        "StructureOceanMonument": {
                            "field_175803_h": {},
                            "field_175801_g": {},
                            "field_175800_f": {},
                            "field_175802_d": {}
                        },
                        "StructureOceanMonumentPieces$ZDoubleRoomFitHelper": {},
                        "StructureStrongholdPieces$ChestCorridor": {
                            "func_175868_a": function() {},
                            "hasMadeChest": {},
                            "strongholdChestContents": {}
                        },
                        "MapGenStronghold$Start": {},
                        "StructureOceanMonumentPieces$YDoubleRoomFitHelper": {},
                        "StructureVillagePieces$PieceWeight": {
                            "villagePiecesLimit": {},
                            "villagePieceWeight": {},
                            "villagePieceClass": {},
                            "villagePiecesSpawned": {}
                        },
                        "ComponentScatteredFeaturePieces$DesertPyramid": {
                            "hasPlacedChest": {},
                            "itemsToGenerateInTemple": {}
                        },
                        "MapGenStronghold": {
                            "field_151546_e": {},
                            "ranBiomeCheck": {},
                            "structureCoords": {},
                            "field_82672_i": {},
                            "field_82671_h": {}
                        },
                        "MapGenVillage$Start": {
                            "hasMoreThanTwoComponents": {}
                        },
                        "StructureVillagePieces$House3": {
                            "func_175849_a": function() {}
                        },
                        "StructureVillagePieces$House1": {
                            "func_175850_a": function() {}
                        },
                        "StructureVillagePieces$House2": {
                            "func_175855_a": function() {},
                            "villageBlacksmithChestContents": {},
                            "hasMadeChest": {}
                        },
                        "StructureOceanMonumentPieces$MonumentBuilding": {
                            "field_175845_o": {},
                            "field_175844_p": {},
                            "field_175843_q": {}
                        },
                        "StructureNetherBridgePieces$Corridor": {
                            "func_175879_a": function() {},
                            "field_111021_b": {}
                        },
                        "StructureOceanMonumentPieces$XDoubleRoomFitHelper": {},
                        "StructureOceanMonumentPieces$SimpleRoom": {
                            "field_175833_o": {}
                        },
                        "MapGenStructureData": {
                            "formatChunkCoords": function() {},
                            "tagCompound": {}
                        },
                        "StructureStrongholdPieces$Stairs2": {
                            "field_75026_c": {},
                            "strongholdPieceWeight": {},
                            "strongholdPortalRoom": {}
                        },
                        "MapGenScatteredFeature$Start": {},
                        "StructureNetherBridgePieces$Straight": {
                            "func_175882_a": function() {}
                        },
                        "StructureVillagePieces$Start": {
                            "field_74932_i": {},
                            "terrainType": {},
                            "inDesert": {},
                            "structVillagePieceWeight": {},
                            "worldChunkMngr": {},
                            "structureVillageWeightedPieceList": {},
                            "field_74930_j": {}
                        },
                        "StructureMineshaftPieces$Cross": {
                            "func_175813_a": function() {},
                            "isMultipleFloors": {},
                            "corridorDirection": {}
                        },
                        "MapGenStructure": {
                            "structureMap": {},
                            "structureData": {}
                        },
                        "StructureOceanMonumentPieces$RoomDefinition": {
                            "field_175965_b": {},
                            "field_175963_d": {},
                            "field_175967_a": {},
                            "field_175962_f": {},
                            "field_175966_c": {},
                            "field_175964_e": {}
                        },
                        "StructureVillagePieces$Torch": {
                            "func_175856_a": function() {}
                        },
                        "StructureNetherBridgePieces$Stairs": {
                            "func_175872_a": function() {}
                        },
                        "StructureOceanMonumentPieces$DoubleZRoom": {},
                        "StructureStrongholdPieces$Stones": {},
                        "StructureMineshaftPieces$Stairs": {
                            "func_175812_a": function() {}
                        },
                        "StructureVillagePieces": {
                            "getStructureVillageWeightedPieceList": function() {},
                            "func_75079_a": function() {},
                            "func_176065_a": function() {},
                            "access$100": function() {},
                            "access$000": function() {},
                            "func_176067_c": function() {},
                            "func_176066_d": function() {},
                            "registerVillagePieces": function() {},
                            "func_176069_e": function() {}
                        },
                        "StructureStrongholdPieces$Stronghold": {
                            "canStrongholdGoDeeper": function() {},
                            "field_143013_d": {}
                        },
                        "StructureMineshaftPieces": {
                            "access$100": function() {},
                            "registerStructurePieces": function() {},
                            "access$000": function() {},
                            "func_175890_b": function() {},
                            "func_175892_a": function() {},
                            "CHEST_CONTENT_WEIGHT_LIST": {}
                        },
                        "StructureMineshaftStart": {},
                        "ComponentScatteredFeaturePieces$JunglePyramid": {
                            "placedTrap2": {},
                            "placedMainChest": {},
                            "placedTrap1": {},
                            "placedHiddenChest": {},
                            "field_175816_i": {},
                            "field_175815_j": {},
                            "junglePyramidsRandomScatteredStones": {}
                        },
                        "StructureNetherBridgePieces$Start": {
                            "primaryWeights": {},
                            "secondaryWeights": {},
                            "theNetherBridgePieceWeight": {},
                            "field_74967_d": {}
                        },
                        "StructureStrongholdPieces$Crossing": {
                            "func_175866_a": function() {},
                            "field_74999_h": {},
                            "field_74996_b": {},
                            "field_74997_c": {},
                            "field_74995_d": {}
                        },
                        "StructureOceanMonumentPieces$SimpleTopRoom": {},
                        "StructureStrongholdPieces": {
                            "access$202": function() {},
                            "access$300": function() {},
                            "func_175953_c": function() {},
                            "func_175954_a": function() {},
                            "access$100": function() {},
                            "canAddStructurePieces": function() {},
                            "registerStrongholdPieces": function() {},
                            "func_175955_b": function() {},
                            "prepareStructurePieces": function() {},
                            "structurePieceList": {},
                            "pieceWeightArray": {},
                            "strongComponentType": {},
                            "totalWeight": {},
                            "strongholdStones": {}
                        },
                        "StructureOceanMonumentPieces$DoubleXRoom": {},
                        "StructureVillagePieces$Road": {},
                        "StructureMineshaftPieces$Corridor": {
                            "func_175814_a": function() {},
                            "hasSpiders": {},
                            "hasRails": {},
                            "spawnerPlaced": {},
                            "sectionCount": {}
                        },
                        "StructureOceanMonumentPieces$MonumentRoomFitHelper": {},
                        "StructureVillagePieces$Church": {
                            "func_175854_a": function() {}
                        },
                        "StructureOceanMonumentPieces$DoubleYZRoom": {},
                        "StructureStrongholdPieces$PortalRoom": {
                            "func_175865_a": function() {},
                            "hasSpawner": {}
                        },
                        "StructureComponent$BlockSelector": {
                            "blockstate": {}
                        },
                        "StructureOceanMonumentPieces$WingRoom": {
                            "field_175834_o": {}
                        },
                        "MapGenVillage": {
                            "villageSpawnBiomes": {},
                            "field_82666_h": {},
                            "terrainType": {},
                            "field_82665_g": {}
                        },
                        "StructureStrongholdPieces$Stairs": {
                            "func_175863_a": function() {},
                            "field_75024_a": {}
                        },
                        "StructureNetherBridgePieces": {
                            "func_175887_b": function() {},
                            "access$200": function() {},
                            "access$100": function() {},
                            "registerNetherFortressPieces": function() {},
                            "access$000": function() {},
                            "secondaryComponents": {},
                            "primaryComponents": {}
                        },
                        "StructureVillagePieces$Hall": {
                            "func_175857_a": function() {}
                        },
                        "StructureStrongholdPieces$Stronghold$Door": {
                            "valueOf": function() {},
                            "values": function() {},
                            "IRON_DOOR": {},
                            "GRATES": {},
                            "OPENING": {},
                            "$VALUES": {},
                            "WOOD_DOOR": {}
                        },
                        "StructureStrongholdPieces$RoomCrossing": {
                            "func_175859_a": function() {},
                            "strongholdRoomCrossingChestContents": {},
                            "roomType": {}
                        },
                        "ComponentScatteredFeaturePieces$JunglePyramid$Stones": {},
                        "MapGenScatteredFeature": {
                            "minDistanceBetweenScatteredFeatures": {},
                            "scatteredFeatureSpawnList": {},
                            "maxDistanceBetweenScatteredFeatures": {},
                            "biomelist": {}
                        },
                        "StructureVillagePieces$Well": {},
                        "StructureVillagePieces$Village": {
                            "canVillageGoDeeper": function() {},
                            "field_143015_k": {},
                            "isDesertVillage": {},
                            "villagersSpawned": {}
                        },
                        "StructureStart": {
                            "boundingBox": {},
                            "components": {},
                            "chunkPosX": {},
                            "chunkPosZ": {}
                        },
                        "StructureNetherBridgePieces$NetherStalkRoom": {
                            "func_175875_a": function() {}
                        },
                        "StructureBoundingBox": {
                            "func_175899_a": function() {},
                            "getNewBoundingBox": function() {},
                            "getComponentToAddBoundingBox": function() {},
                            "minY": {},
                            "minX": {},
                            "maxZ": {},
                            "maxY": {},
                            "maxX": {},
                            "minZ": {}
                        },
                        "StructureOceanMonumentPieces$DoubleXYRoom": {},
                        "StructureNetherBridgePieces$Throne": {
                            "func_175874_a": function() {},
                            "hasSpawner": {}
                        },
                        "StructureStrongholdPieces$Straight": {
                            "func_175862_a": function() {},
                            "expandsX": {},
                            "expandsZ": {}
                        },
                        "StructureStrongholdPieces$Prison": {
                            "func_175860_a": function() {}
                        },
                        "StructureStrongholdPieces$RightTurn": {},
                        "StructureVillagePieces$House4Garden": {
                            "func_175858_a": function() {},
                            "isRoofAccessible": {}
                        },
                        "StructureNetherBridgePieces$Crossing": {
                            "func_175873_a": function() {}
                        },
                        "MapGenNetherBridge": {
                            "spawnList": {}
                        },
                        "StructureNetherBridgePieces$Entrance": {
                            "func_175881_a": function() {}
                        },
                        "StructureMineshaftPieces$Room": {
                            "roomsLinkedToTheRoom": {}
                        },
                        "StructureNetherBridgePieces$Corridor3": {
                            "func_175883_a": function() {}
                        },
                        "StructureNetherBridgePieces$Corridor2": {
                            "func_175876_a": function() {},
                            "field_111020_b": {}
                        },
                        "StructureNetherBridgePieces$Corridor5": {
                            "func_175877_a": function() {}
                        },
                        "StructureNetherBridgePieces$Corridor4": {
                            "func_175880_a": function() {}
                        },
                        "MapGenNetherBridge$Start": {},
                        "StructureVillagePieces$Path": {
                            "func_175848_a": function() {},
                            "length": {}
                        },
                        "StructureOceanMonumentPieces$FitSimpleRoomTopHelper": {},
                        "StructureOceanMonument$StartMonument": {
                            "field_175791_c": {},
                            "field_175790_d": {}
                        },
                        "StructureOceanMonumentPieces$EntryRoom": {},
                        "StructureOceanMonumentPieces$XYDoubleRoomFitHelper": {},
                        "StructureOceanMonumentPieces$YZDoubleRoomFitHelper": {},
                        "StructureNetherBridgePieces$PieceWeight": {
                            "weightClass": {},
                            "field_78826_b": {},
                            "field_78824_d": {},
                            "field_78827_c": {},
                            "field_78825_e": {}
                        },
                        "StructureOceanMonumentPieces$Penthouse": {},
                        "StructureOceanMonumentPieces$Piece": {
                            "func_175820_a": function() {},
                            "field_175829_j": {},
                            "field_175831_h": {},
                            "field_175826_b": {},
                            "field_175824_d": {},
                            "field_175822_f": {},
                            "field_175828_a": {},
                            "field_175832_i": {},
                            "field_175830_k": {},
                            "field_175827_c": {},
                            "field_175825_e": {},
                            "field_175823_g": {}
                        },
                        "StructureOceanMonumentPieces$DoubleYRoom": {},
                        "StructureVillagePieces$Field1": {
                            "func_175851_a": function() {},
                            "cropTypeA": {},
                            "cropTypeD": {},
                            "cropTypeC": {},
                            "cropTypeB": {}
                        },
                        "StructureVillagePieces$Field2": {
                            "func_175852_a": function() {},
                            "cropTypeA": {},
                            "cropTypeB": {}
                        },
                        "StructureNetherBridgePieces$End": {
                            "func_175884_a": function() {},
                            "fillSeed": {}
                        },
                        "StructureStrongholdPieces$PieceWeight": {
                            "pieceClass": {},
                            "instancesLimit": {},
                            "pieceWeight": {},
                            "instancesSpawned": {}
                        },
                        "ComponentScatteredFeaturePieces$SwampHut": {
                            "hasWitch": {}
                        },
                        "ComponentScatteredFeaturePieces$Feature": {
                            "scatteredFeatureSizeY": {},
                            "scatteredFeatureSizeX": {},
                            "scatteredFeatureSizeZ": {},
                            "field_74936_d": {}
                        },
                        "StructureVillagePieces$WoodHut": {
                            "func_175853_a": function() {},
                            "isTallHouse": {},
                            "tablePosition": {}
                        },
                        "MapGenMineshaft": {
                            "field_82673_e": {}
                        },
                        "StructureNetherBridgePieces$Crossing2": {
                            "func_175878_a": function() {}
                        },
                        "StructureNetherBridgePieces$Crossing3": {
                            "func_175885_a": function() {}
                        },
                        "StructureOceanMonumentPieces": {
                            "registerOceanMonumentPieces": function() {}
                        },
                        "StructureOceanMonumentPieces$FitSimpleRoomHelper": {},
                        "StructureStrongholdPieces$Library": {
                            "func_175864_a": function() {},
                            "isLargeRoom": {},
                            "strongholdLibraryChestContents": {}
                        },
                        "StructureStrongholdPieces$LeftTurn": {
                            "func_175867_a": function() {}
                        },
                        "StructureStrongholdPieces$StairsStraight": {
                            "func_175861_a": function() {}
                        },
                        "ComponentScatteredFeaturePieces": {
                            "registerScatteredFeaturePieces": function() {}
                        },
                        "StructureStrongholdPieces$Corridor": {
                            "func_175869_a": function() {},
                            "field_74993_a": {}
                        },
                        "StructureOceanMonumentPieces$MonumentCoreRoom": {},
                        "StructureNetherBridgePieces$Piece": {
                            "isAboveGround": function() {},
                            "field_111019_a": {}
                        }
                    },
                    "layer": {
                        "GenLayerRiver": {},
                        "GenLayer": {
                            "biomesEqualOrMesaPlateau": function() {},
                            "initializeAllBiomeGenerators": function() {},
                            "isBiomeOceanic": function() {},
                            "worldGenSeed": {},
                            "parent": {},
                            "baseSeed": {},
                            "chunkSeed": {}
                        },
                        "GenLayerBiome": {
                            "field_151622_e": {},
                            "field_175973_g": {},
                            "field_151621_d": {},
                            "field_151623_c": {},
                            "field_151620_f": {}
                        },
                        "GenLayerEdge$Mode": {
                            "valueOf": function() {},
                            "values": function() {},
                            "HEAT_ICE": {},
                            "SPECIAL": {},
                            "COOL_WARM": {},
                            "$VALUES": {}
                        },
                        "GenLayerRemoveTooMuchOcean": {},
                        "GenLayerZoom": {
                            "magnify": function() {}
                        },
                        "GenLayerVoronoiZoom": {},
                        "GenLayerRiverInit": {},
                        "GenLayerRareBiome": {},
                        "GenLayerFuzzyZoom": {},
                        "GenLayerRiverMix": {
                            "riverPatternGeneratorChain": {},
                            "biomePatternGeneratorChain": {}
                        },
                        "GenLayerShore": {},
                        "GenLayerAddIsland": {},
                        "GenLayerEdge": {
                            "field_151627_c": {}
                        },
                        "GenLayerSmooth": {},
                        "GenLayerAddMushroomIsland": {},
                        "IntCache": {
                            "getCacheSizes": function() {},
                            "resetIntCache": function() {},
                            "getIntCache": function() {},
                            "freeSmallArrays": {},
                            "freeLargeArrays": {},
                            "inUseLargeArrays": {},
                            "inUseSmallArrays": {},
                            "intCacheSize": {}
                        },
                        "GenLayerIsland": {},
                        "GenLayerBiomeEdge": {},
                        "GenLayerDeepOcean": {},
                        "GenLayerAddSnow": {}
                    },
                    "feature": {
                        "WorldGenIcePath": {
                            "basePathWidth": {},
                            "block": {}
                        },
                        "WorldGenHugeTrees": {
                            "extraRandomHeight": {},
                            "woodMetadata": {},
                            "leavesMetadata": {},
                            "baseHeight": {}
                        },
                        "WorldGenDoublePlant": {
                            "field_150549_a": {}
                        },
                        "WorldGeneratorBonusChest": {
                            "itemsToGenerateInBonusChest": {},
                            "chestItems": {}
                        },
                        "WorldGenFlowers": {
                            "field_175915_b": {},
                            "flower": {}
                        },
                        "WorldGenVines": {},
                        "WorldGenSpikes": {
                            "baseBlockRequired": {}
                        },
                        "WorldGenHellLava": {
                            "field_150553_a": {},
                            "field_94524_b": {}
                        },
                        "WorldGenMegaJungle": {},
                        "WorldGenBigMushroom": {
                            "mushroomType": {}
                        },
                        "WorldGenMegaPineTree": {
                            "field_181633_e": {},
                            "field_181634_f": {},
                            "field_181635_g": {},
                            "useBaseHeight": {}
                        },
                        "WorldGenFire": {},
                        "WorldGenLiquids": {
                            "block": {}
                        },
                        "WorldGenBigTree$FoliageCoordinates": {
                            "field_178000_b": {}
                        },
                        "WorldGenWaterlily": {},
                        "WorldGenSand": {
                            "block": {},
                            "radius": {}
                        },
                        "WorldGenDeadBush": {},
                        "WorldGenClay": {
                            "field_150546_a": {},
                            "numberOfBlocks": {}
                        },
                        "WorldGenSavannaTree": {
                            "field_181643_a": {},
                            "field_181644_b": {}
                        },
                        "WorldGenAbstractTree": {},
                        "WorldGenBigTree": {
                            "scaleWidth": {},
                            "field_175948_j": {},
                            "heightLimitLimit": {},
                            "leafDensity": {},
                            "basePos": {},
                            "rand": {},
                            "world": {},
                            "heightLimit": {},
                            "trunkSize": {},
                            "heightAttenuation": {},
                            "branchSlope": {},
                            "height": {},
                            "leafDistanceLimit": {}
                        },
                        "WorldGenForest": {
                            "field_181630_b": {},
                            "field_181629_a": {},
                            "useExtraRandomHeight": {}
                        },
                        "WorldGenShrub": {
                            "woodMetadata": {},
                            "leavesMetadata": {}
                        },
                        "WorldGenTrees": {
                            "minTreeHeight": {},
                            "metaWood": {},
                            "metaLeaves": {},
                            "vinesGrow": {},
                            "field_181653_a": {},
                            "field_181654_b": {}
                        },
                        "WorldGenMelon": {},
                        "WorldGenSwamp": {
                            "field_181649_b": {},
                            "field_181648_a": {}
                        },
                        "WorldGenCactus": {},
                        "WorldGenGlowStone1": {},
                        "WorldGenGlowStone2": {},
                        "WorldGenIceSpike": {},
                        "WorldGenerator": {
                            "doBlockNotify": {}
                        },
                        "WorldGenTaiga2": {
                            "field_181645_a": {},
                            "field_181646_b": {}
                        },
                        "WorldGenTaiga1": {
                            "field_181637_b": {},
                            "field_181636_a": {}
                        },
                        "WorldGenPumpkin": {},
                        "WorldGenBlockBlob": {
                            "field_150545_a": {},
                            "field_150544_b": {}
                        },
                        "WorldGenReed": {},
                        "WorldGenTallGrass": {
                            "tallGrassState": {}
                        },
                        "WorldGenCanopyTree": {
                            "field_181640_a": {},
                            "field_181641_b": {}
                        },
                        "WorldGenLakes": {
                            "block": {}
                        }
                    },
                    "ChunkProviderFlat": {
                        "hasDungeons": {},
                        "waterLakeGenerator": {},
                        "random": {},
                        "cachedBlockIDs": {},
                        "flatWorldGenInfo": {},
                        "lavaLakeGenerator": {},
                        "structureGenerators": {},
                        "hasDecoration": {},
                        "worldObj": {}
                    },
                    "ChunkProviderSettings": {
                        "useTemples": {},
                        "useLavaOceans": {},
                        "diamondSize": {},
                        "lapisCenterHeight": {},
                        "lavaLakeChance": {},
                        "redstoneMaxHeight": {},
                        "biomeDepthWeight": {},
                        "diamondMaxHeight": {},
                        "baseSize": {},
                        "coalMaxHeight": {},
                        "coalMinHeight": {},
                        "seaLevel": {},
                        "graniteCount": {},
                        "riverSize": {},
                        "gravelMinHeight": {},
                        "graniteSize": {},
                        "redstoneSize": {},
                        "useStrongholds": {},
                        "fixedBiome": {},
                        "heightScale": {},
                        "waterLakeChance": {},
                        "useMonuments": {},
                        "dioriteMinHeight": {},
                        "useRavines": {},
                        "andesiteCount": {},
                        "graniteMaxHeight": {},
                        "redstoneMinHeight": {},
                        "depthNoiseScaleX": {},
                        "depthNoiseScaleZ": {},
                        "useCaves": {},
                        "stretchY": {},
                        "depthNoiseScaleExponent": {},
                        "lapisSize": {},
                        "coordinateScale": {},
                        "dirtCount": {},
                        "useDungeons": {},
                        "ironMinHeight": {},
                        "dioriteMaxHeight": {},
                        "coalCount": {},
                        "gravelCount": {},
                        "coalSize": {},
                        "lowerLimitScale": {},
                        "gravelSize": {},
                        "ironMaxHeight": {},
                        "useWaterLakes": {},
                        "biomeScaleWeight": {},
                        "mainNoiseScaleZ": {},
                        "mainNoiseScaleY": {},
                        "mainNoiseScaleX": {},
                        "lapisSpread": {},
                        "dioriteCount": {},
                        "andesiteSize": {},
                        "biomeSize": {},
                        "graniteMinHeight": {},
                        "goldCount": {},
                        "diamondCount": {},
                        "dirtSize": {},
                        "gravelMaxHeight": {},
                        "upperLimitScale": {},
                        "useMineShafts": {},
                        "goldSize": {},
                        "biomeDepthOffSet": {},
                        "ironCount": {},
                        "diamondMinHeight": {},
                        "ironSize": {},
                        "redstoneCount": {},
                        "andesiteMinHeight": {},
                        "dioriteSize": {},
                        "useVillages": {},
                        "goldMaxHeight": {},
                        "dungeonChance": {},
                        "andesiteMaxHeight": {},
                        "biomeScaleOffset": {},
                        "useLavaLakes": {},
                        "dirtMinHeight": {},
                        "lapisCount": {},
                        "goldMinHeight": {},
                        "dirtMaxHeight": {}
                    },
                    "FlatGeneratorInfo": {
                        "createFlatGeneratorFromString": function() {},
                        "func_180716_a": function() {},
                        "getDefaultFlatGenerator": function() {},
                        "func_180715_a": function() {},
                        "biomeToUse": {},
                        "worldFeatures": {},
                        "flatLayers": {}
                    },
                    "NoiseGeneratorPerlin": {
                        "field_151603_a": {},
                        "field_151602_b": {}
                    },
                    "NoiseGenerator": {},
                    "FlatLayerInfo": {
                        "layerCount": {},
                        "layerMinimumY": {},
                        "layerMaterial": {},
                        "field_175902_a": {}
                    },
                    "GeneratorBushFeature": {
                        "field_175908_a": {}
                    },
                    "MapGenCaves": {},
                    "MapGenRavine": {
                        "field_75046_d": {}
                    },
                    "NoiseGeneratorImproved": {
                        "yCoord": {},
                        "field_152385_i": {},
                        "xCoord": {},
                        "zCoord": {},
                        "field_152382_f": {},
                        "field_152381_e": {},
                        "permutations": {},
                        "field_152384_h": {},
                        "field_152383_g": {}
                    },
                    "MapGenCavesHell": {},
                    "NoiseGeneratorSimplex": {
                        "func_151607_a": function() {},
                        "func_151604_a": function() {},
                        "field_151611_e": {},
                        "field_151613_c": {},
                        "field_151612_b": {},
                        "field_151610_d": {},
                        "field_151614_a": {},
                        "field_151608_f": {},
                        "field_151609_g": {},
                        "field_151615_h": {}
                    },
                    "ChunkProviderGenerate": {
                        "field_147431_j": {},
                        "oceanMonumentGenerator": {},
                        "noiseGen6": {},
                        "rand": {},
                        "mapFeaturesEnabled": {},
                        "upperLimitNoiseArray": {},
                        "oceanBlockTmpl": {},
                        "field_177475_o": {},
                        "mobSpawnerNoise": {},
                        "mainNoiseArray": {},
                        "field_147434_q": {},
                        "strongholdGenerator": {},
                        "stoneNoise": {},
                        "field_147432_k": {},
                        "field_147430_m": {},
                        "settings": {},
                        "parabolicField": {},
                        "mineshaftGenerator": {},
                        "depthNoiseArray": {},
                        "villageGenerator": {},
                        "worldObj": {},
                        "caveGenerator": {},
                        "biomesForGeneration": {},
                        "ravineGenerator": {},
                        "lowerLimitNoiseArray": {},
                        "field_147429_l": {},
                        "scatteredFeatureGenerator": {},
                        "noiseGen5": {}
                    },
                    "ChunkProviderDebug": {
                        "func_177461_b": function() {},
                        "world": {},
                        "field_177462_b": {},
                        "field_181039_c": {},
                        "field_177464_a": {}
                    },
                    "MapGenBase": {
                        "rand": {},
                        "range": {},
                        "worldObj": {}
                    }
                },
                "biome": {
                    "BiomeCache$Block": {
                        "xPosition": {},
                        "lastAccessTime": {},
                        "biomes": {},
                        "rainfallValues": {},
                        "this$0": {},
                        "zPosition": {}
                    },
                    "WorldChunkManagerHell": {
                        "biomeGenerator": {},
                        "rainfall": {}
                    },
                    "BiomeGenSavanna$Mutated": {},
                    "BiomeGenMutated": {
                        "baseBiome": {}
                    },
                    "BiomeGenOcean": {},
                    "BiomeGenStoneBeach": {},
                    "BiomeGenSnow": {
                        "field_150615_aC": {},
                        "field_150616_aD": {},
                        "field_150617_aE": {}
                    },
                    "BiomeDecorator": {
                        "coalGen": {},
                        "flowersPerChunk": {},
                        "currentWorld": {},
                        "sandGen": {},
                        "reedGen": {},
                        "bigMushroomGen": {},
                        "cactiPerChunk": {},
                        "cactusGen": {},
                        "mushroomRedGen": {},
                        "clayGen": {},
                        "treesPerChunk": {},
                        "mushroomBrownGen": {},
                        "chunkProviderSettings": {},
                        "dirtGen": {},
                        "redstoneGen": {},
                        "dioriteGen": {},
                        "mushroomsPerChunk": {},
                        "sandPerChunk2": {},
                        "lapisGen": {},
                        "diamondGen": {},
                        "waterlilyPerChunk": {},
                        "gravelGen": {},
                        "deadBushPerChunk": {},
                        "reedsPerChunk": {},
                        "clayPerChunk": {},
                        "andesiteGen": {},
                        "sandPerChunk": {},
                        "gravelAsSandGen": {},
                        "graniteGen": {},
                        "ironGen": {},
                        "waterlilyGen": {},
                        "generateLakes": {},
                        "field_180294_c": {},
                        "grassPerChunk": {},
                        "bigMushroomsPerChunk": {},
                        "yellowFlowerGen": {},
                        "randomGenerator": {},
                        "goldGen": {}
                    },
                    "BiomeGenRiver": {},
                    "BiomeEndDecorator": {
                        "spikeGen": {}
                    },
                    "BiomeColorHelper": {
                        "getGrassColorAtPos": function() {},
                        "getFoliageColorAtPos": function() {},
                        "getColorAtPos": function() {},
                        "getWaterColorAtPos": function() {},
                        "FOLIAGE_COLOR": {},
                        "GRASS_COLOR": {},
                        "WATER_COLOR_MULTIPLIER": {}
                    },
                    "BiomeGenBase$SpawnListEntry": {
                        "entityClass": {},
                        "minGroupCount": {},
                        "maxGroupCount": {}
                    },
                    "BiomeCache": {
                        "access$000": function() {},
                        "cache": {},
                        "chunkManager": {},
                        "cacheMap": {},
                        "lastCleanupTime": {}
                    },
                    "BiomeGenMesa": {
                        "field_150626_aH": {},
                        "field_150624_aF": {},
                        "field_150625_aG": {},
                        "field_150620_aI": {},
                        "field_150622_aD": {},
                        "field_150623_aE": {},
                        "field_150621_aC": {}
                    },
                    "BiomeGenBeach": {},
                    "WorldChunkManager": {
                        "generatorOptions": {},
                        "biomeIndexLayer": {},
                        "biomesToSpawnIn": {},
                        "genBiomes": {},
                        "biomeCache": {}
                    },
                    "BiomeGenJungle": {
                        "field_181620_aE": {},
                        "field_181621_aF": {},
                        "field_150614_aC": {},
                        "field_181622_aG": {}
                    },
                    "BiomeGenMushroomIsland": {},
                    "BiomeGenForest": {
                        "field_150629_aC": {},
                        "field_150630_aD": {},
                        "field_150631_aE": {},
                        "field_150632_aF": {}
                    },
                    "BiomeGenEnd": {},
                    "BiomeGenSavanna": {
                        "field_150627_aC": {}
                    },
                    "BiomeGenSwamp": {},
                    "BiomeGenBase$TempCategory": {
                        "valueOf": function() {},
                        "values": function() {},
                        "MEDIUM": {},
                        "OCEAN": {},
                        "COLD": {},
                        "WARM": {},
                        "$VALUES": {}
                    },
                    "BiomeGenHills": {
                        "field_150638_aH": {},
                        "theWorldGenerator": {},
                        "field_150634_aD": {},
                        "field_150635_aE": {},
                        "field_150636_aF": {},
                        "field_150637_aG": {}
                    },
                    "BiomeColorHelper$ColorResolver": {},
                    "BiomeGenHell": {},
                    "BiomeGenDesert": {},
                    "BiomeGenBase$Height": {
                        "rootHeight": {},
                        "variation": {}
                    },
                    "BiomeGenTaiga": {
                        "field_150644_aH": {},
                        "field_150639_aC": {},
                        "field_150642_aF": {},
                        "field_150643_aG": {},
                        "field_150640_aD": {},
                        "field_150641_aE": {}
                    },
                    "BiomeGenPlains": {
                        "field_150628_aC": {}
                    }
                },
                "pathfinder": {
                    "NodeProcessor": {
                        "entitySizeZ": {},
                        "entitySizeY": {},
                        "entitySizeX": {},
                        "pointMap": {},
                        "blockaccess": {}
                    },
                    "WalkNodeProcessor": {
                        "func_176170_a": function() {},
                        "canBreakDoors": {},
                        "avoidsWater": {},
                        "canEnterDoors": {},
                        "canSwim": {},
                        "shouldAvoidWater": {}
                    },
                    "SwimNodeProcessor": {}
                },
                "LockCode": {
                    "fromNBT": function() {},
                    "lock": {},
                    "EMPTY_CODE": {}
                },
                "NextTickListEntry": {
                    "tickEntryID": {},
                    "nextTickEntryID": {},
                    "scheduledTime": {},
                    "block": {},
                    "position": {},
                    "priority": {}
                },
                "GameRules$ValueType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "ANY_VALUE": {},
                    "NUMERICAL_VALUE": {},
                    "$VALUES": {},
                    "BOOLEAN_VALUE": {}
                },
                "GameRules$Value": {
                    "valueBoolean": {},
                    "valueString": {},
                    "valueDouble": {},
                    "valueInteger": {},
                    "type": {}
                },
                "chunk": {
                    "NibbleArray": {
                        "data": {}
                    },
                    "storage": {
                        "NibbleArrayReader": {
                            "depthBitsPlusFour": {},
                            "data": {},
                            "depthBits": {}
                        },
                        "RegionFile": {
                            "fileName": {},
                            "sectorFree": {},
                            "offsets": {},
                            "chunkTimestamps": {},
                            "emptySector": {},
                            "dataFile": {},
                            "lastModified": {},
                            "sizeDelta": {}
                        },
                        "ChunkLoader$AnvilConverterData": {
                            "heightmap": {},
                            "lastUpdated": {},
                            "tileTicks": {},
                            "terrainPopulated": {},
                            "data": {},
                            "entities": {},
                            "blocks": {},
                            "blockLight": {},
                            "x": {},
                            "skyLight": {},
                            "tileEntities": {},
                            "z": {}
                        },
                        "RegionFileCache": {
                            "clearRegionFileReferences": function() {},
                            "getChunkInputStream": function() {},
                            "getChunkOutputStream": function() {},
                            "createOrLoadRegionFile": function() {},
                            "regionsByFilename": {}
                        },
                        "AnvilSaveHandler": {},
                        "ExtendedBlockStorage": {
                            "yBase": {},
                            "blocklightArray": {},
                            "blockRefCount": {},
                            "data": {},
                            "skylightArray": {},
                            "tickRefCount": {}
                        },
                        "RegionFile$ChunkBuffer": {
                            "this$0": {},
                            "chunkX": {},
                            "chunkZ": {}
                        },
                        "ChunkLoader": {
                            "convertToAnvilFormat": function() {},
                            "load": function() {}
                        },
                        "IChunkLoader": {}
                    },
                    "IChunkProvider": {},
                    "Chunk$EnumCreateEntityType": {
                        "valueOf": function() {},
                        "values": function() {},
                        "QUEUED": {},
                        "CHECK": {},
                        "IMMEDIATE": {},
                        "$VALUES": {}
                    },
                    "ChunkPrimer": {
                        "data": {},
                        "defaultState": {}
                    }
                },
                "WorldSavedData": {
                    "dirty": {},
                    "mapName": {}
                },
                "WorldType": {
                    "parseWorldType": function() {},
                    "AMPLIFIED": {},
                    "worldType": {},
                    "worldTypeId": {},
                    "isWorldTypeVersioned": {},
                    "generatorVersion": {},
                    "LARGE_BIOMES": {},
                    "CUSTOMIZED": {},
                    "worldTypes": {},
                    "hasNotificationData": {},
                    "FLAT": {},
                    "DEFAULT": {},
                    "DEFAULT_1_1": {},
                    "canBeCreated": {},
                    "DEBUG_WORLD": {}
                },
                "WorldProviderHell": {},
                "WorldProviderEnd": {},
                "IInteractionObject": {},
                "Explosion": {
                    "explosionX": {},
                    "explosionRNG": {},
                    "isFlaming": {},
                    "explosionY": {},
                    "exploder": {},
                    "explosionZ": {},
                    "explosionSize": {},
                    "playerKnockbackMap": {},
                    "affectedBlockPositions": {},
                    "worldObj": {},
                    "isSmoking": {}
                },
                "WorldSettings$GameType": {
                    "getByID": function() {},
                    "valueOf": function() {},
                    "values": function() {},
                    "getByName": function() {},
                    "SURVIVAL": {},
                    "SPECTATOR": {},
                    "NOT_SET": {},
                    "CREATIVE": {},
                    "name": {},
                    "ADVENTURE": {},
                    "id": {},
                    "$VALUES": {}
                },
                "EnumSkyBlock": {
                    "valueOf": function() {},
                    "values": function() {},
                    "SKY": {},
                    "defaultLightValue": {},
                    "BLOCK": {},
                    "$VALUES": {}
                },
                "MinecraftException": {},
                "WorldManager": {
                    "mcServer": {},
                    "theWorldServer": {}
                },
                "WorldProvider": {
                    "getProviderForDimension": function() {},
                    "isHellWorld": {},
                    "lightBrightnessTable": {},
                    "generatorSettings": {},
                    "moonPhaseFactors": {},
                    "hasNoSky": {},
                    "dimensionId": {},
                    "colorsSunriseSunset": {},
                    "terrainType": {},
                    "worldChunkMgr": {},
                    "worldObj": {}
                },
                "WorldProviderSurface": {},
                "ILockableContainer": {},
                "DifficultyInstance": {
                    "additionalDifficulty": {},
                    "worldDifficulty": {}
                },
                "ChunkCoordIntPair": {
                    "chunkXZ2Int": function() {},
                    "chunkXPos": {},
                    "chunkZPos": {},
                    "cachedHashCode": {}
                },
                "IBlockAccess": {},
                "ColorizerFoliage": {
                    "getFoliageColor": function() {},
                    "setFoliageBiomeColorizer": function() {},
                    "getFoliageColorBirch": function() {},
                    "getFoliageColorPine": function() {},
                    "getFoliageColorBasic": function() {},
                    "foliageBuffer": {}
                },
                "IWorldNameable": {},
                "ColorizerGrass": {
                    "setGrassBiomeColorizer": function() {},
                    "getGrassColor": function() {},
                    "grassBuffer": {}
                },
                "border": {
                    "IBorderListener": {},
                    "WorldBorder": {
                        "endDiameter": {},
                        "damageBuffer": {},
                        "startDiameter": {},
                        "centerZ": {},
                        "listeners": {},
                        "centerX": {},
                        "warningDistance": {},
                        "startTime": {},
                        "damageAmount": {},
                        "endTime": {},
                        "warningTime": {},
                        "worldSize": {}
                    },
                    "EnumBorderStatus": {
                        "valueOf": function() {},
                        "values": function() {},
                        "GROWING": {},
                        "SHRINKING": {},
                        "id": {},
                        "$VALUES": {},
                        "STATIONARY": {}
                    }
                },
                "IWorldAccess": {},
                "WorldSettings": {
                    "getGameTypeById": function() {},
                    "mapFeaturesEnabled": {},
                    "commandsAllowed": {},
                    "theGameType": {},
                    "seed": {},
                    "worldName": {},
                    "terrainType": {},
                    "bonusChestEnabled": {},
                    "hardcoreEnabled": {}
                },
                "ChunkCache": {
                    "chunkArray": {},
                    "hasExtendedLevels": {},
                    "chunkX": {},
                    "chunkZ": {},
                    "worldObj": {}
                },
                "Teleporter": {
                    "random": {},
                    "destinationCoordinateCache": {},
                    "worldServerInstance": {},
                    "destinationCoordinateKeys": {}
                },
                "EnumDifficulty": {
                    "valueOf": function() {},
                    "values": function() {},
                    "getDifficultyEnum": function() {},
                    "difficultyResourceKey": {},
                    "EASY": {},
                    "difficultyEnums": {},
                    "PEACEFUL": {},
                    "HARD": {},
                    "difficultyId": {},
                    "NORMAL": {},
                    "$VALUES": {}
                },
                "SpawnerAnimals": {
                    "performWorldGenSpawning": function() {},
                    "getRandomChunkPosition": function() {},
                    "canCreatureTypeSpawnAtLocation": function() {},
                    "countChunkPos": {},
                    "eligibleChunksForSpawning": {},
                    "lastPlayerChunkX": {},
                    "mapSampleEntitiesByClass": {},
                    "MOB_COUNT_DIV": {},
                    "lastPlayerChunkZ": {}
                },
                "GameRules": {
                    "theGameRules": {}
                },
                "Teleporter$PortalPosition": {
                    "this$0": {},
                    "lastUpdateTime": {}
                },
                "demo": {
                    "DemoWorldManager": {
                        "field_73105_c": {},
                        "field_73102_f": {},
                        "field_73104_e": {},
                        "demoTimeExpired": {}
                    }
                }
            },
            "block": {
                "BlockSnow": {
                    "LAYERS": {}
                },
                "BlockWall": {
                    "NORTH": {},
                    "WEST": {},
                    "UP": {},
                    "SOUTH": {},
                    "EAST": {},
                    "VARIANT": {}
                },
                "BlockSandStone$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "metadata": {},
                    "unlocalizedName": {},
                    "CHISELED": {},
                    "name": {},
                    "SMOOTH": {},
                    "DEFAULT": {},
                    "$VALUES": {}
                },
                "BlockButtonWood": {},
                "BlockFlowerPot$EnumFlowerType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "PINK_TULIP": {},
                    "OAK_SAPLING": {},
                    "JUNGLE_SAPLING": {},
                    "WHITE_TULIP": {},
                    "CACTUS": {},
                    "BLUE_ORCHID": {},
                    "OXEYE_DAISY": {},
                    "MUSHROOM_BROWN": {},
                    "RED_TULIP": {},
                    "HOUSTONIA": {},
                    "DEAD_BUSH": {},
                    "POPPY": {},
                    "DARK_OAK_SAPLING": {},
                    "DANDELION": {},
                    "name": {},
                    "ORANGE_TULIP": {},
                    "ACACIA_SAPLING": {},
                    "BIRCH_SAPLING": {},
                    "MUSHROOM_RED": {},
                    "FERN": {},
                    "EMPTY": {},
                    "ALLIUM": {},
                    "SPRUCE_SAPLING": {},
                    "$VALUES": {}
                },
                "BlockPressurePlate$Sensitivity": {
                    "valueOf": function() {},
                    "values": function() {},
                    "MOBS": {},
                    "EVERYTHING": {},
                    "$VALUES": {}
                },
                "BlockBush": {},
                "BlockPressurePlateWeighted": {
                    "field_150068_a": {},
                    "POWER": {}
                },
                "BlockHugeMushroom$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "NORTH_WEST": {},
                    "WEST": {},
                    "STEM": {},
                    "CENTER": {},
                    "NORTH": {},
                    "NORTH_EAST": {},
                    "meta": {},
                    "name": {},
                    "ALL_INSIDE": {},
                    "ALL_OUTSIDE": {},
                    "SOUTH_EAST": {},
                    "SOUTH": {},
                    "SOUTH_WEST": {},
                    "EAST": {},
                    "$VALUES": {},
                    "ALL_STEM": {}
                },
                "BlockClay": {},
                "BlockQuartz$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "unlocalizedName": {},
                    "CHISELED": {},
                    "meta": {},
                    "LINES_Z": {},
                    "DEFAULT": {},
                    "LINES_Y": {},
                    "$VALUES": {},
                    "LINES_X": {},
                    "field_176805_h": {}
                },
                "BlockCactus": {
                    "AGE": {}
                },
                "BlockGrass": {
                    "SNOWY": {}
                },
                "BlockStoneBrick": {
                    "CHISELED_META": {},
                    "MOSSY_META": {},
                    "CRACKED_META": {},
                    "VARIANT": {},
                    "DEFAULT_META": {}
                },
                "BlockBasePressurePlate": {},
                "IGrowable": {},
                "BlockStandingSign": {
                    "ROTATION": {}
                },
                "BlockCarpet": {
                    "COLOR": {}
                },
                "BlockTrapDoor$DoorHalf": {
                    "valueOf": function() {},
                    "values": function() {},
                    "TOP": {},
                    "name": {},
                    "BOTTOM": {},
                    "$VALUES": {}
                },
                "Block$EnumOffsetType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "XZ": {},
                    "XYZ": {},
                    "NONE": {},
                    "$VALUES": {}
                },
                "BlockSapling": {
                    "STAGE": {},
                    "TYPE": {}
                },
                "BlockFalling": {
                    "canFallInto": function() {},
                    "fallInstantly": {}
                },
                "BlockTNT": {
                    "EXPLODE": {}
                },
                "BlockRotatedPillar": {
                    "AXIS": {}
                },
                "BlockFence": {
                    "NORTH": {},
                    "WEST": {},
                    "SOUTH": {},
                    "EAST": {}
                },
                "BlockPane": {
                    "canDrop": {},
                    "NORTH": {},
                    "WEST": {},
                    "SOUTH": {},
                    "EAST": {}
                },
                "BlockMobSpawner": {},
                "BlockRedstoneComparator$Mode": {
                    "valueOf": function() {},
                    "values": function() {},
                    "COMPARE": {},
                    "name": {},
                    "SUBTRACT": {},
                    "$VALUES": {}
                },
                "BlockNetherBrick": {},
                "BlockEndPortal": {},
                "properties": {
                    "IProperty": {},
                    "PropertyHelper": {
                        "name": {},
                        "valueClass": {}
                    }
                },
                "material": {
                    "Material": {
                        "sponge": {},
                        "craftedSnow": {},
                        "canBurn": {},
                        "anvil": {},
                        "ice": {},
                        "air": {},
                        "redstoneLight": {},
                        "clay": {},
                        "rock": {},
                        "lava": {},
                        "mobilityFlag": {},
                        "barrier": {},
                        "leaves": {},
                        "web": {},
                        "grass": {},
                        "plants": {},
                        "coral": {},
                        "cake": {},
                        "isAdventureModeExempt": {},
                        "cactus": {},
                        "requiresNoTool": {},
                        "fire": {},
                        "wood": {},
                        "portal": {},
                        "vine": {},
                        "circuits": {},
                        "isTranslucent": {},
                        "gourd": {},
                        "glass": {},
                        "dragonEgg": {},
                        "piston": {},
                        "replaceable": {},
                        "materialMapColor": {},
                        "packedIce": {},
                        "water": {},
                        "sand": {},
                        "snow": {},
                        "carpet": {},
                        "iron": {},
                        "ground": {},
                        "tnt": {},
                        "cloth": {}
                    },
                    "MaterialLiquid": {},
                    "MaterialPortal": {},
                    "MaterialLogic": {},
                    "MaterialTransparent": {},
                    "MapColor": {
                        "blueColor": {},
                        "mapColorArray": {},
                        "tntColor": {},
                        "colorIndex": {},
                        "waterColor": {},
                        "silverColor": {},
                        "obsidianColor": {},
                        "clayColor": {},
                        "airColor": {},
                        "quartzColor": {},
                        "brownColor": {},
                        "colorValue": {},
                        "foliageColor": {},
                        "lightBlueColor": {},
                        "lapisColor": {},
                        "netherrackColor": {},
                        "adobeColor": {},
                        "snowColor": {},
                        "grayColor": {},
                        "grassColor": {},
                        "greenColor": {},
                        "diamondColor": {},
                        "dirtColor": {},
                        "magentaColor": {},
                        "limeColor": {},
                        "stoneColor": {},
                        "blackColor": {},
                        "redColor": {},
                        "yellowColor": {},
                        "goldColor": {},
                        "woodColor": {},
                        "sandColor": {},
                        "pinkColor": {},
                        "iceColor": {},
                        "cyanColor": {},
                        "emeraldColor": {},
                        "purpleColor": {},
                        "clothColor": {},
                        "ironColor": {}
                    }
                },
                "BlockLever$EnumOrientation": {
                    "forFacings": function() {},
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "WEST": {},
                    "facing": {},
                    "DOWN_X": {},
                    "UP_Z": {},
                    "UP_X": {},
                    "NORTH": {},
                    "DOWN_Z": {},
                    "meta": {},
                    "name": {},
                    "SOUTH": {},
                    "EAST": {},
                    "$VALUES": {}
                },
                "BlockPistonExtension$EnumPistonType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "STICKY": {},
                    "VARIANT": {},
                    "DEFAULT": {},
                    "$VALUES": {}
                },
                "BlockCompressedPowered": {},
                "BlockSnowBlock": {},
                "BlockMycelium": {
                    "SNOWY": {}
                },
                "BlockDoublePlant$EnumPlantType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "SYRINGA": {},
                    "PAEONIA": {},
                    "unlocalizedName": {},
                    "SUNFLOWER": {},
                    "meta": {},
                    "GRASS": {},
                    "name": {},
                    "ROSE": {},
                    "FERN": {},
                    "$VALUES": {}
                },
                "BlockBeacon": {
                    "updateColorAsync": function() {}
                },
                "BlockWeb": {},
                "BlockDirt": {
                    "SNOWY": {},
                    "VARIANT": {}
                },
                "BlockMushroom": {},
                "BlockPressurePlate": {
                    "sensitivity": {},
                    "POWERED": {}
                },
                "BlockPlanks$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "SPRUCE": {},
                    "BIRCH": {},
                    "JUNGLE": {},
                    "ACACIA": {},
                    "unlocalizedName": {},
                    "meta": {},
                    "OAK": {},
                    "name": {},
                    "mapColor": {},
                    "$VALUES": {},
                    "DARK_OAK": {}
                },
                "BlockSign": {},
                "BlockDispenser": {
                    "getDispensePosition": function() {},
                    "getFacing": function() {},
                    "rand": {},
                    "TRIGGERED": {},
                    "FACING": {},
                    "dispenseBehaviorRegistry": {}
                },
                "BlockDynamicLiquid": {
                    "adjacentSourceBlocks": {}
                },
                "BlockStainedGlassPane": {
                    "COLOR": {}
                },
                "BlockDirt$DirtType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "field_181067_h": {},
                    "metadata": {},
                    "COARSE_DIRT": {},
                    "unlocalizedName": {},
                    "DIRT": {},
                    "name": {},
                    "METADATA_LOOKUP": {},
                    "$VALUES": {},
                    "PODZOL": {}
                },
                "BlockDoubleStoneSlab": {},
                "BlockLeavesBase": {
                    "fancyGraphics": {}
                },
                "BlockStoneSlabNew$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "field_181069_e": {},
                    "meta": {},
                    "name": {},
                    "RED_SANDSTONE": {},
                    "$VALUES": {}
                },
                "BlockWorkbench": {},
                "BlockStoneSlab$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "field_181075_k": {},
                    "SAND": {},
                    "WOOD": {},
                    "COBBLESTONE": {},
                    "BRICK": {},
                    "NETHERBRICK": {},
                    "unlocalizedName": {},
                    "meta": {},
                    "name": {},
                    "SMOOTHBRICK": {},
                    "STONE": {},
                    "QUARTZ": {},
                    "$VALUES": {}
                },
                "BlockCauldron": {
                    "LEVEL": {}
                },
                "BlockAir": {
                    "restoreLightOpacity": function() {},
                    "setLightOpacity": function() {},
                    "mapOriginalOpacity": {}
                },
                "BlockSoulSand": {},
                "BlockPackedIce": {},
                "BlockIce": {},
                "BlockSand$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "SAND": {},
                    "unlocalizedName": {},
                    "meta": {},
                    "name": {},
                    "mapColor": {},
                    "RED_SAND": {},
                    "$VALUES": {}
                },
                "BlockBed$EnumPartType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "HEAD": {},
                    "name": {},
                    "$VALUES": {},
                    "FOOT": {}
                },
                "BlockRedstoneWire$EnumAttachPosition": {
                    "valueOf": function() {},
                    "values": function() {},
                    "SIDE": {},
                    "name": {},
                    "UP": {},
                    "NONE": {},
                    "$VALUES": {}
                },
                "BlockRailBase$EnumRailDirection": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "NORTH_WEST": {},
                    "NORTH_SOUTH": {},
                    "EAST_WEST": {},
                    "ASCENDING_SOUTH": {},
                    "ASCENDING_WEST": {},
                    "NORTH_EAST": {},
                    "meta": {},
                    "name": {},
                    "SOUTH_EAST": {},
                    "SOUTH_WEST": {},
                    "ASCENDING_EAST": {},
                    "$VALUES": {},
                    "ASCENDING_NORTH": {}
                },
                "BlockRedstoneOre": {
                    "isOn": {}
                },
                "BlockNote": {
                    "INSTRUMENTS": {}
                },
                "BlockHalfStoneSlab": {},
                "BlockEnchantmentTable": {},
                "state": {
                    "BlockPistonStructureHelper": {
                        "pistonPos": {},
                        "blockToMove": {},
                        "world": {},
                        "moveDirection": {},
                        "toMove": {},
                        "toDestroy": {}
                    }
                },
                "BlockPrismarine$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "ROUGH": {},
                    "unlocalizedName": {},
                    "meta": {},
                    "BRICKS": {},
                    "name": {},
                    "DARK": {},
                    "$VALUES": {}
                },
                "BlockStoneSlabNew": {
                    "SEAMLESS": {},
                    "VARIANT": {}
                },
                "BlockWall$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "MOSSY": {},
                    "unlocalizedName": {},
                    "meta": {},
                    "name": {},
                    "NORMAL": {},
                    "$VALUES": {}
                },
                "BlockRedSandstone": {
                    "TYPE": {}
                },
                "BlockSand": {
                    "VARIANT": {}
                },
                "BlockDeadBush": {},
                "BlockTallGrass$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "DEAD_BUSH": {},
                    "meta": {},
                    "GRASS": {},
                    "name": {},
                    "FERN": {},
                    "$VALUES": {}
                },
                "BlockSourceImpl": {
                    "pos": {},
                    "worldObj": {}
                },
                "BlockSlab$EnumBlockHalf": {
                    "valueOf": function() {},
                    "values": function() {},
                    "TOP": {},
                    "name": {},
                    "BOTTOM": {},
                    "$VALUES": {}
                },
                "BlockStainedGlass": {
                    "COLOR": {}
                },
                "BlockDoubleStoneSlabNew": {},
                "BlockDoor$EnumDoorHalf": {
                    "valueOf": function() {},
                    "values": function() {},
                    "UPPER": {},
                    "LOWER": {},
                    "$VALUES": {}
                },
                "BlockBarrier": {},
                "BlockRedSandstone$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "unlocalizedName": {},
                    "CHISELED": {},
                    "meta": {},
                    "name": {},
                    "SMOOTH": {},
                    "DEFAULT": {},
                    "$VALUES": {}
                },
                "BlockTallGrass": {
                    "TYPE": {}
                },
                "BlockLiquid": {
                    "getLiquidHeightPercent": function() {},
                    "getStaticBlock": function() {},
                    "getFlowingBlock": function() {},
                    "getFlowDirection": function() {},
                    "LEVEL": {}
                },
                "BlockDoublePlant$EnumBlockHalf": {
                    "valueOf": function() {},
                    "values": function() {},
                    "UPPER": {},
                    "LOWER": {},
                    "$VALUES": {}
                },
                "BlockButtonStone": {},
                "BlockRedstoneWire": {
                    "canConnectTo": function() {},
                    "canConnectUpwardsTo": function() {},
                    "NORTH": {},
                    "WEST": {},
                    "POWER": {},
                    "canProvidePower": {},
                    "SOUTH": {},
                    "EAST": {},
                    "blocksNeedingUpdate": {}
                },
                "BlockReed": {
                    "AGE": {}
                },
                "BlockEventData": {
                    "eventID": {},
                    "blockType": {},
                    "eventParameter": {},
                    "position": {}
                },
                "BlockPistonExtension": {
                    "getFacing": function() {},
                    "FACING": {},
                    "TYPE": {},
                    "SHORT": {}
                },
                "BlockSandStone": {
                    "TYPE": {}
                },
                "BlockLilyPad": {},
                "BlockBreakable": {
                    "ignoreSimilarity": {}
                },
                "BlockCake": {
                    "BITES": {}
                },
                "BlockCarrot": {},
                "BlockGlowstone": {},
                "BlockDoublePlant": {
                    "HALF": {},
                    "FACING": {},
                    "VARIANT": {}
                },
                "BlockPrismarine": {
                    "BRICKS_META": {},
                    "ROUGH_META": {},
                    "VARIANT": {},
                    "DARK_META": {}
                },
                "BlockRailBase": {
                    "isRailBlock": function() {},
                    "isPowered": {}
                },
                "BlockStairs$EnumHalf": {
                    "valueOf": function() {},
                    "values": function() {},
                    "TOP": {},
                    "name": {},
                    "BOTTOM": {},
                    "$VALUES": {}
                },
                "Block$SoundType": {
                    "volume": {},
                    "soundName": {},
                    "frequency": {}
                },
                "BlockLeaves": {
                    "CHECK_DECAY": {},
                    "isTransparent": {},
                    "DECAYABLE": {},
                    "surroundings": {},
                    "iconIndex": {}
                },
                "BlockNetherWart": {
                    "AGE": {}
                },
                "BlockVine": {
                    "getNumGrownFaces": function() {},
                    "getPropertyFor": function() {},
                    "ALL_FACES": {},
                    "NORTH": {},
                    "WEST": {},
                    "UP": {},
                    "SOUTH": {},
                    "EAST": {}
                },
                "BlockRail": {
                    "SHAPE": {}
                },
                "BlockWoodSlab": {
                    "VARIANT": {}
                },
                "BlockCrops": {
                    "getGrowthChance": function() {},
                    "AGE": {}
                },
                "BlockHay": {},
                "BlockPlanks": {
                    "VARIANT": {}
                },
                "BlockDoor$EnumHingePosition": {
                    "valueOf": function() {},
                    "values": function() {},
                    "LEFT": {},
                    "RIGHT": {},
                    "$VALUES": {}
                },
                "BlockStone": {
                    "VARIANT": {}
                },
                "BlockDoubleWoodSlab": {},
                "BlockDaylightDetector": {
                    "POWER": {},
                    "inverted": {}
                },
                "BlockHardenedClay": {},
                "BlockGlass": {},
                "BlockStaticLiquid": {},
                "BlockStoneBrick$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "MOSSY": {},
                    "unlocalizedName": {},
                    "CHISELED": {},
                    "meta": {},
                    "name": {},
                    "CRACKED": {},
                    "DEFAULT": {},
                    "$VALUES": {}
                },
                "BlockHalfWoodSlab": {},
                "BlockSponge": {
                    "WET": {}
                },
                "BlockBrewingStand": {
                    "HAS_BOTTLE": {}
                },
                "BlockHugeMushroom": {
                    "smallBlock": {},
                    "VARIANT": {}
                },
                "BlockJukebox$TileEntityJukebox": {
                    "record": {}
                },
                "BlockLog": {
                    "LOG_AXIS": {}
                },
                "BlockMelon": {},
                "BlockStoneSlab": {
                    "SEAMLESS": {},
                    "VARIANT": {}
                },
                "BlockHalfStoneSlabNew": {},
                "BlockPotato": {},
                "BlockQuartz": {
                    "VARIANT": {}
                },
                "BlockSlime": {},
                "BlockFire": {
                    "init": function() {},
                    "UPPER": {},
                    "NORTH": {},
                    "WEST": {},
                    "encouragements": {},
                    "ALT": {},
                    "SOUTH": {},
                    "FLIP": {},
                    "EAST": {},
                    "AGE": {},
                    "flammabilities": {}
                },
                "BlockRailBase$Rail": {
                    "world": {},
                    "pos": {},
                    "this$0": {},
                    "field_150657_g": {},
                    "block": {},
                    "state": {},
                    "isPowered": {}
                },
                "BlockBookshelf": {},
                "Block": {
                    "getBlockFromName": function() {},
                    "getIdFromBlock": function() {},
                    "registerBlock": function() {},
                    "getBlockById": function() {},
                    "spawnAsEntity": function() {},
                    "getStateById": function() {},
                    "getBlockFromItem": function() {},
                    "registerBlocks": function() {},
                    "getStateId": function() {},
                    "isEqualTo": function() {},
                    "blockState": {},
                    "translucent": {},
                    "lightOpacity": {},
                    "maxZ": {},
                    "AIR_ID": {},
                    "maxY": {},
                    "maxX": {},
                    "soundTypeWood": {},
                    "isBlockContainer": {},
                    "SLIME_SOUND": {},
                    "defaultBlockState": {},
                    "fullBlock": {},
                    "blockRegistry": {},
                    "soundTypePiston": {},
                    "BLOCK_STATE_IDS": {},
                    "blockParticleGravity": {},
                    "soundTypeCloth": {},
                    "displayOnCreativeTab": {},
                    "soundTypeLadder": {},
                    "stepSound": {},
                    "blockMaterial": {},
                    "soundTypeGrass": {},
                    "soundTypeMetal": {},
                    "soundTypeStone": {},
                    "blockMapColor": {},
                    "needsRandomTick": {},
                    "soundTypeSnow": {},
                    "enableStats": {},
                    "soundTypeSand": {},
                    "lightValue": {},
                    "blockResistance": {},
                    "minY": {},
                    "minX": {},
                    "unlocalizedName": {},
                    "useNeighborBrightness": {},
                    "slipperiness": {},
                    "soundTypeAnvil": {},
                    "soundTypeGlass": {},
                    "minZ": {},
                    "blockHardness": {},
                    "soundTypeGravel": {}
                },
                "BlockFlower$EnumFlowerColor": {
                    "valueOf": function() {},
                    "values": function() {},
                    "RED": {},
                    "YELLOW": {},
                    "$VALUES": {}
                },
                "BlockStairs$EnumShape": {
                    "valueOf": function() {},
                    "values": function() {},
                    "INNER_LEFT": {},
                    "INNER_RIGHT": {},
                    "OUTER_LEFT": {},
                    "OUTER_RIGHT": {},
                    "name": {},
                    "STRAIGHT": {},
                    "$VALUES": {}
                },
                "BlockPistonMoving": {
                    "newTileEntity": function() {},
                    "FACING": {},
                    "TYPE": {}
                },
                "BlockDropper": {
                    "dropBehavior": {}
                },
                "BlockNetherrack": {},
                "BlockPistonBase": {
                    "canPush": function() {},
                    "getFacingFromEntity": function() {},
                    "getFacing": function() {},
                    "EXTENDED": {},
                    "FACING": {},
                    "isSticky": {}
                },
                "BlockRedstoneTorch$Toggle": {
                    "pos": {},
                    "time": {}
                },
                "BlockGravel": {},
                "BlockCommandBlock": {
                    "TRIGGERED": {}
                },
                "BlockRedstoneLight": {
                    "isOn": {}
                },
                "BlockSilverfish": {
                    "canContainSilverfish": function() {},
                    "VARIANT": {}
                },
                "BlockWorkbench$InterfaceCraftingTable": {
                    "world": {},
                    "position": {}
                },
                "BlockSeaLantern": {},
                "BlockTripWire": {
                    "isConnectedTo": function() {},
                    "NORTH": {},
                    "SUSPENDED": {},
                    "ATTACHED": {},
                    "WEST": {},
                    "SOUTH": {},
                    "EAST": {},
                    "DISARMED": {},
                    "POWERED": {}
                },
                "BlockDragonEgg": {},
                "BlockSlab": {
                    "isSlab": function() {},
                    "HALF": {}
                },
                "BlockFlowerPot": {
                    "LEGACY_DATA": {},
                    "CONTENTS": {}
                },
                "BlockColored": {
                    "COLOR": {}
                },
                "BlockJukebox": {
                    "HAS_RECORD": {}
                },
                "BlockContainer": {},
                "BlockLever": {
                    "getMetadataForFacing": function() {},
                    "func_181090_a": function() {},
                    "FACING": {},
                    "POWERED": {}
                },
                "BlockObsidian": {},
                "BlockFarmland": {
                    "MOISTURE": {}
                },
                "BlockStone$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "field_181073_l": {},
                    "GRANITE": {},
                    "GRANITE_SMOOTH": {},
                    "DIORITE": {},
                    "ANDESITE_SMOOTH": {},
                    "unlocalizedName": {},
                    "meta": {},
                    "name": {},
                    "ANDESITE": {},
                    "STONE": {},
                    "$VALUES": {},
                    "DIORITE_SMOOTH": {}
                },
                "BlockOre": {},
                "BlockButton": {
                    "func_181088_a": function() {},
                    "wooden": {},
                    "FACING": {},
                    "POWERED": {}
                },
                "BlockAnvil$Anvil": {
                    "world": {},
                    "position": {}
                },
                "ITileEntityProvider": {},
                "BlockSilverfish$EnumType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "forModelBlock": function() {},
                    "META_LOOKUP": {},
                    "STONEBRICK": {},
                    "MOSSY_STONEBRICK": {},
                    "CHISELED_STONEBRICK": {},
                    "unlocalizedName": {},
                    "CRACKED_STONEBRICK": {},
                    "meta": {},
                    "COBBLESTONE": {},
                    "name": {},
                    "STONE": {},
                    "$VALUES": {}
                }
            },
            "scoreboard": {
                "GoalColor": {
                    "goalName": {}
                },
                "ScoreDummyCriteria": {
                    "dummyName": {}
                },
                "ScoreObjective": {
                    "theScoreboard": {},
                    "objectiveCriteria": {},
                    "displayName": {},
                    "name": {},
                    "renderType": {}
                },
                "Scoreboard": {
                    "getObjectiveDisplaySlot": function() {},
                    "getDisplaySlotStrings": function() {},
                    "getObjectiveDisplaySlotNumber": function() {},
                    "scoreObjectives": {},
                    "teamMemberships": {},
                    "teams": {},
                    "entitiesScoreObjectives": {},
                    "objectiveDisplaySlots": {},
                    "scoreObjectiveCriterias": {},
                    "field_178823_g": {}
                },
                "ServerScoreboard": {
                    "scoreboardMCServer": {},
                    "scoreboardSaveData": {},
                    "field_96553_b": {}
                },
                "Score": {
                    "theScoreboard": {},
                    "theScoreObjective": {},
                    "scorePlayerName": {},
                    "forceUpdate": {},
                    "scoreComparator": {},
                    "locked": {},
                    "scorePoints": {}
                },
                "ScorePlayerTeam": {
                    "formatPlayerName": function() {},
                    "allowFriendlyFire": {},
                    "chatFormat": {},
                    "theScoreboard": {},
                    "registeredName": {},
                    "colorSuffix": {},
                    "nameTagVisibility": {},
                    "canSeeFriendlyInvisibles": {},
                    "teamNameSPT": {},
                    "namePrefixSPT": {},
                    "deathMessageVisibility": {},
                    "membershipSet": {}
                },
                "IScoreObjectiveCriteria$EnumRenderType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "func_178795_a": function() {},
                    "HEARTS": {},
                    "field_178798_d": {},
                    "field_178801_c": {},
                    "$VALUES": {},
                    "INTEGER": {}
                },
                "Team": {},
                "IScoreObjectiveCriteria": {
                    "playerKillCount": {},
                    "TRIGGER": {},
                    "totalKillCount": {},
                    "field_178792_h": {},
                    "health": {},
                    "INSTANCES": {},
                    "deathCount": {},
                    "field_178793_i": {},
                    "DUMMY": {}
                },
                "ScoreHealthCriteria": {},
                "Team$EnumVisible": {
                    "func_178825_a": function() {},
                    "valueOf": function() {},
                    "values": function() {},
                    "func_178824_a": function() {},
                    "internalName": {},
                    "HIDE_FOR_OTHER_TEAMS": {},
                    "field_178828_g": {},
                    "NEVER": {},
                    "id": {},
                    "ALWAYS": {},
                    "$VALUES": {},
                    "HIDE_FOR_OWN_TEAM": {}
                }
            },
            "command": {
                "CommandDefaultGameMode": {},
                "CommandTrigger": {},
                "server": {
                    "CommandBroadcast": {},
                    "CommandTestFor": {},
                    "CommandListBans": {},
                    "CommandSaveAll": {},
                    "CommandPardonPlayer": {},
                    "CommandTestForBlock": {},
                    "CommandDeOp": {},
                    "CommandMessage": {},
                    "CommandSaveOff": {},
                    "CommandPardonIp": {},
                    "CommandOp": {},
                    "CommandScoreboard": {},
                    "CommandEmote": {},
                    "CommandWhitelist": {},
                    "CommandSetBlock": {},
                    "CommandStop": {},
                    "CommandSetDefaultSpawnpoint": {},
                    "CommandSaveOn": {},
                    "CommandSummon": {},
                    "CommandBanPlayer": {},
                    "CommandBanIp": {
                        "field_147211_a": {}
                    },
                    "CommandListPlayers": {},
                    "CommandPublishLocalServer": {},
                    "CommandTeleport": {}
                },
                "CommandDifficulty": {},
                "CommandReplaceItem": {
                    "SHORTCUTS": {}
                },
                "ICommandSender": {},
                "CommandToggleDownfall": {},
                "CommandStats": {},
                "CommandBlockData": {},
                "CommandSetPlayerTimeout": {},
                "CommandBase": {
                    "getPlayer": function() {},
                    "joinNiceString": function() {},
                    "func_181043_b": function() {},
                    "parseBoolean": function() {},
                    "func_175771_a": function() {},
                    "buildString": function() {},
                    "setAdminCommander": function() {},
                    "joinNiceStringFromCollection": function() {},
                    "getChatComponentFromNthArg": function() {},
                    "parseDouble": function() {},
                    "getBlockByText": function() {},
                    "func_175763_c": function() {},
                    "notifyOperators": function() {},
                    "join": function() {},
                    "getEntityName": function() {},
                    "parseCoordinate": function() {},
                    "getCommandSenderAsPlayer": function() {},
                    "getListOfStringsMatchingLastWord": function() {},
                    "getPlayerName": function() {},
                    "getEntity": function() {},
                    "parseBlockPos": function() {},
                    "parseInt": function() {},
                    "doesStringStartWith": function() {},
                    "parseLong": function() {},
                    "getItemByText": function() {},
                    "theAdmin": {}
                },
                "CommandResultStats$Type": {
                    "getTypeNames": function() {},
                    "getTypeByName": function() {},
                    "valueOf": function() {},
                    "values": function() {},
                    "QUERY_RESULT": {},
                    "SUCCESS_COUNT": {},
                    "AFFECTED_BLOCKS": {},
                    "typeName": {},
                    "AFFECTED_ENTITIES": {},
                    "typeID": {},
                    "AFFECTED_ITEMS": {},
                    "$VALUES": {}
                },
                "CommandWorldBorder": {},
                "CommandException": {
                    "errorObjects": {}
                },
                "CommandPlaySound": {},
                "WrongUsageException": {},
                "CommandKill": {},
                "ICommand": {},
                "CommandGive": {},
                "PlayerNotFoundException": {},
                "ServerCommandManager": {},
                "CommandCompare": {},
                "NumberInvalidException": {},
                "CommandSetSpawnpoint": {},
                "CommandSpreadPlayers": {},
                "CommandResultStats": {
                    "removeScoreBoardStat": function() {},
                    "setScoreBoardStat": function() {},
                    "objectives": {},
                    "STRING_RESULT_TYPES": {},
                    "entitiesID": {},
                    "NUM_RESULT_TYPES": {}
                },
                "CommandBase$CoordinateArg": {
                    "field_179631_b": {},
                    "field_179633_a": {},
                    "field_179632_c": {}
                },
                "CommandNotFoundException": {},
                "CommandXP": {},
                "CommandSpreadPlayers$Position": {
                    "field_111101_a": {},
                    "field_111100_b": {}
                },
                "CommandGameMode": {},
                "CommandClone$StaticCloneData": {
                    "blockState": {},
                    "pos": {},
                    "compound": {}
                },
                "CommandClearInventory": {},
                "CommandEffect": {},
                "CommandShowSeed": {},
                "CommandClone": {},
                "CommandHelp": {},
                "CommandServerKick": {},
                "CommandParticle": {},
                "CommandWeather": {},
                "CommandGameRule": {
                    "func_175773_a": function() {}
                },
                "CommandFill": {},
                "SyntaxErrorException": {},
                "IAdminCommand": {},
                "ICommandManager": {},
                "CommandExecuteAt": {},
                "CommandEntityData": {},
                "EntityNotFoundException": {},
                "CommandTime": {},
                "CommandEnchant": {}
            },
            "inventory": {
                "InventoryLargeChest": {
                    "lowerChest": {},
                    "name": {},
                    "upperChest": {}
                },
                "ContainerHopper": {
                    "hopperInventory": {}
                },
                "ContainerBrewingStand": {
                    "brewTime": {},
                    "theSlot": {},
                    "tileBrewingStand": {}
                },
                "Slot": {
                    "slotNumber": {},
                    "yDisplayPosition": {},
                    "xDisplayPosition": {},
                    "inventory": {},
                    "slotIndex": {}
                },
                "ContainerEnchantment": {
                    "rand": {},
                    "enchantmentIds": {},
                    "tableInventory": {},
                    "worldPointer": {},
                    "position": {},
                    "xpSeed": {},
                    "enchantLevels": {}
                },
                "InventoryBasic": {
                    "changeListeners": {},
                    "hasCustomName": {},
                    "slotsCount": {},
                    "inventoryTitle": {},
                    "inventoryContents": {}
                },
                "ContainerBeacon$BeaconSlot": {
                    "this$0": {}
                },
                "InventoryCraftResult": {
                    "stackResult": {}
                },
                "Container": {
                    "calcRedstoneFromInventory": function() {},
                    "calcRedstone": function() {},
                    "canAddItemToSlot": function() {},
                    "func_94534_d": function() {},
                    "getDragEvent": function() {},
                    "extractDragMode": function() {},
                    "computeStackSize": function() {},
                    "isValidDragMode": function() {},
                    "inventorySlots": {},
                    "dragEvent": {},
                    "crafters": {},
                    "inventoryItemStacks": {},
                    "dragSlots": {},
                    "dragMode": {},
                    "playerList": {},
                    "transactionID": {},
                    "windowId": {}
                },
                "ContainerHorseInventory": {
                    "horseInventory": {},
                    "theHorse": {}
                },
                "ContainerBeacon": {
                    "beaconSlot": {},
                    "tileBeacon": {}
                },
                "InventoryHelper": {
                    "spawnItemStack": function() {},
                    "dropInventoryItems": function() {},
                    "RANDOM": {}
                },
                "AnimalChest": {},
                "InventoryMerchant": {
                    "currentRecipe": {},
                    "thePlayer": {},
                    "currentRecipeIndex": {},
                    "theInventory": {},
                    "theMerchant": {}
                },
                "InventoryEnderChest": {
                    "associatedChest": {}
                },
                "SlotFurnaceFuel": {
                    "isBucket": function() {}
                },
                "SlotFurnaceOutput": {
                    "thePlayer": {},
                    "field_75228_b": {}
                },
                "ContainerBrewingStand$Potion": {
                    "canHoldPotion": function() {},
                    "player": {}
                },
                "ContainerBrewingStand$Ingredient": {
                    "this$0": {}
                },
                "ISidedInventory": {},
                "ContainerChest": {
                    "lowerChestInventory": {},
                    "numRows": {}
                },
                "ContainerDispenser": {
                    "dispenserInventory": {}
                },
                "ContainerFurnace": {
                    "tileFurnace": {},
                    "cookTime": {},
                    "totalCookTime": {},
                    "currentItemBurnTime": {},
                    "furnaceBurnTime": {}
                },
                "IInvBasic": {},
                "InventoryCrafting": {
                    "inventoryHeight": {},
                    "inventoryWidth": {},
                    "stackList": {},
                    "eventHandler": {}
                },
                "ContainerMerchant": {
                    "merchantInventory": {},
                    "theWorld": {},
                    "theMerchant": {}
                },
                "SlotMerchantResult": {
                    "theMerchantInventory": {},
                    "thePlayer": {},
                    "field_75231_g": {},
                    "theMerchant": {}
                },
                "SlotCrafting": {
                    "craftMatrix": {},
                    "amountCrafted": {},
                    "thePlayer": {}
                },
                "ContainerWorkbench": {
                    "craftMatrix": {},
                    "pos": {},
                    "craftResult": {},
                    "worldObj": {}
                },
                "ICrafting": {},
                "ContainerPlayer": {
                    "craftMatrix": {},
                    "thePlayer": {},
                    "isLocalWorld": {},
                    "craftResult": {}
                },
                "IInventory": {}
            },
            "item": {
                "crafting": {
                    "CraftingManager": {
                        "getInstance": function() {},
                        "recipes": {},
                        "instance": {}
                    },
                    "FurnaceRecipes": {
                        "instance": function() {},
                        "experienceList": {},
                        "smeltingBase": {},
                        "smeltingList": {}
                    },
                    "RecipesTools": {
                        "recipeItems": {},
                        "recipePatterns": {}
                    },
                    "ShapelessRecipes": {
                        "recipeOutput": {},
                        "recipeItems": {}
                    },
                    "RecipesCrafting": {},
                    "RecipesArmor": {
                        "recipeItems": {},
                        "recipePatterns": {}
                    },
                    "RecipesArmorDyes": {},
                    "RecipesBanners$RecipeDuplicatePattern": {},
                    "RecipeRepairItem": {},
                    "RecipesBanners": {},
                    "RecipesIngots": {
                        "recipeItems": {}
                    },
                    "RecipesMapCloning": {},
                    "RecipesBanners$RecipeAddPattern": {},
                    "RecipesDyes": {},
                    "RecipeBookCloning": {},
                    "ShapedRecipes": {
                        "recipeHeight": {},
                        "recipeOutput": {},
                        "recipeItems": {},
                        "copyIngredientNBT": {},
                        "recipeWidth": {}
                    },
                    "RecipeFireworks": {
                        "field_92102_a": {}
                    },
                    "RecipesWeapons": {
                        "recipeItems": {},
                        "recipePatterns": {}
                    },
                    "IRecipe": {},
                    "RecipesMapExtending": {},
                    "RecipesFood": {}
                },
                "Item$ToolMaterial": {
                    "valueOf": function() {},
                    "values": function() {},
                    "maxUses": {},
                    "EMERALD": {},
                    "GOLD": {},
                    "WOOD": {},
                    "IRON": {},
                    "damageVsEntity": {},
                    "STONE": {},
                    "efficiencyOnProperMaterial": {},
                    "harvestLevel": {},
                    "$VALUES": {},
                    "enchantability": {}
                },
                "ItemArmor$ArmorMaterial": {
                    "valueOf": function() {},
                    "values": function() {},
                    "CHAIN": {},
                    "maxDamageFactor": {},
                    "GOLD": {},
                    "DIAMOND": {},
                    "name": {},
                    "LEATHER": {},
                    "IRON": {},
                    "$VALUES": {},
                    "damageReductionAmountArray": {},
                    "enchantability": {}
                },
                "EnumAction": {
                    "valueOf": function() {},
                    "values": function() {},
                    "BLOCK": {},
                    "EAT": {},
                    "BOW": {},
                    "NONE": {},
                    "DRINK": {},
                    "$VALUES": {}
                },
                "ItemFishFood$FishType": {
                    "byItemStack": function() {},
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "META_LOOKUP": {},
                    "cookable": {},
                    "uncookedSaturationModifier": {},
                    "CLOWNFISH": {},
                    "cookedSaturationModifier": {},
                    "uncookedHealAmount": {},
                    "unlocalizedName": {},
                    "meta": {},
                    "SALMON": {},
                    "cookedHealAmount": {},
                    "COD": {},
                    "$VALUES": {},
                    "PUFFERFISH": {}
                },
                "EnumDyeColor": {
                    "valueOf": function() {},
                    "values": function() {},
                    "byMetadata": function() {},
                    "byDyeDamage": function() {},
                    "GRAY": {},
                    "BLUE": {},
                    "SILVER": {},
                    "PINK": {},
                    "BLACK": {},
                    "BROWN": {},
                    "$VALUES": {},
                    "ORANGE": {},
                    "META_LOOKUP": {},
                    "WHITE": {},
                    "DYE_DMG_LOOKUP": {},
                    "PURPLE": {},
                    "GREEN": {},
                    "dyeDamage": {},
                    "chatColor": {},
                    "RED": {},
                    "LIGHT_BLUE": {},
                    "unlocalizedName": {},
                    "LIME": {},
                    "meta": {},
                    "name": {},
                    "mapColor": {},
                    "MAGENTA": {},
                    "YELLOW": {},
                    "CYAN": {}
                },
                "EnumRarity": {
                    "valueOf": function() {},
                    "values": function() {},
                    "rarityName": {},
                    "RARE": {},
                    "EPIC": {},
                    "UNCOMMON": {},
                    "COMMON": {},
                    "rarityColor": {},
                    "$VALUES": {}
                }
            },
            "pathfinding": {
                "Path": {
                    "count": {},
                    "pathPoints": {}
                },
                "PathPoint": {
                    "makeHash": function() {},
                    "totalPathDistance": {},
                    "yCoord": {},
                    "xCoord": {},
                    "previous": {},
                    "zCoord": {},
                    "visited": {},
                    "index": {},
                    "hash": {},
                    "distanceToNext": {},
                    "distanceToTarget": {}
                },
                "PathFinder": {
                    "path": {},
                    "pathOptions": {},
                    "nodeProcessor": {}
                },
                "PathNavigateSwimmer": {},
                "PathNavigateGround": {
                    "shouldAvoidSun": {},
                    "nodeProcessor": {}
                },
                "PathNavigate": {
                    "theEntity": {},
                    "ticksAtLastPos": {},
                    "lastPosCheck": {},
                    "pathFinder": {},
                    "totalTicks": {},
                    "pathSearchRange": {},
                    "heightRequirement": {},
                    "currentPath": {},
                    "worldObj": {},
                    "speed": {}
                },
                "PathNavigateClimber": {
                    "targetPosition": {}
                },
                "PathEntity": {
                    "currentPathIndex": {},
                    "pathLength": {},
                    "points": {}
                }
            },
            "crash": {
                "CrashReportCategory": {
                    "getCoordinateInfo": function() {},
                    "addBlockInfo": function() {},
                    "children": {},
                    "name": {},
                    "stackTrace": {},
                    "crashReport": {}
                },
                "CrashReportCategory$Entry": {
                    "value": {},
                    "key": {}
                }
            },
            "server": {
                "management": {
                    "PlayerManager$PlayerInstance": {
                        "access$100": function() {},
                        "access$000": function() {},
                        "previousWorldTime": {},
                        "playersWatchingChunk": {},
                        "chunkCoords": {},
                        "flagsYAreasToUpdate": {},
                        "this$0": {},
                        "locationOfBlockChange": {},
                        "numBlocksToUpdate": {}
                    },
                    "ItemInWorldManager": {
                        "thisPlayerMP": {},
                        "gameType": {},
                        "receivedFinishDiggingPacket": {},
                        "isDestroyingBlock": {},
                        "durabilityRemainingOnBlock": {},
                        "curblockDamage": {},
                        "theWorld": {},
                        "field_180240_f": {},
                        "initialBlockDamage": {},
                        "initialDamage": {},
                        "field_180241_i": {}
                    },
                    "LowerStringMap": {
                        "internalMap": {}
                    }
                },
                "integrated": {
                    "IntegratedServerCommandManager": {}
                },
                "network": {
                    "NetHandlerLoginServer$LoginState": {
                        "valueOf": function() {},
                        "values": function() {},
                        "DELAY_ACCEPT": {},
                        "READY_TO_ACCEPT": {},
                        "ACCEPTED": {},
                        "HELLO": {},
                        "KEY": {},
                        "AUTHENTICATING": {},
                        "$VALUES": {}
                    }
                }
            },
            "tileentity": {
                "TileEntityDaylightDetector": {},
                "TileEntityBeacon": {
                    "field_146014_j": {},
                    "primaryEffect": {},
                    "beamSegments": {},
                    "beamRenderCounter": {},
                    "payment": {},
                    "customName": {},
                    "effectsList": {},
                    "levels": {},
                    "isComplete": {},
                    "secondaryEffect": {}
                },
                "TileEntityFlowerPot": {
                    "flowerPotItem": {},
                    "flowerPotData": {}
                },
                "TileEntityMobSpawner": {
                    "spawnerLogic": {}
                },
                "IHopper": {},
                "TileEntityComparator": {
                    "outputSignal": {}
                },
                "TileEntityPiston": {
                    "shouldHeadBeRendered": {},
                    "field_174933_k": {},
                    "progress": {},
                    "lastProgress": {},
                    "pistonState": {},
                    "pistonFacing": {},
                    "extending": {}
                },
                "TileEntityEnchantmentTable": {
                    "rand": {},
                    "bookSpreadPrev": {},
                    "tickCount": {},
                    "pageFlipPrev": {},
                    "bookSpread": {},
                    "bookRotation": {},
                    "bookRotationPrev": {},
                    "customName": {},
                    "field_145932_k": {},
                    "field_145929_l": {},
                    "field_145924_q": {},
                    "pageFlip": {}
                },
                "TileEntityFurnace": {
                    "isItemFuel": function() {},
                    "isBurning": function() {},
                    "getItemBurnTime": function() {},
                    "furnaceCustomName": {},
                    "slotsSides": {},
                    "furnaceItemStacks": {},
                    "cookTime": {},
                    "totalCookTime": {},
                    "currentItemBurnTime": {},
                    "slotsTop": {},
                    "slotsBottom": {},
                    "furnaceBurnTime": {}
                },
                "TileEntityHopper": {
                    "canInsertItemInSlot": function() {},
                    "isInventoryEmpty": function() {},
                    "captureDroppedItems": function() {},
                    "pullItemFromSlot": function() {},
                    "canCombine": function() {},
                    "func_181556_a": function() {},
                    "canExtractItemFromSlot": function() {},
                    "putStackInInventoryAllSlots": function() {},
                    "putDropInInventoryAllSlots": function() {},
                    "getHopperInventory": function() {},
                    "getInventoryAtPosition": function() {},
                    "insertStack": function() {},
                    "transferCooldown": {},
                    "customName": {},
                    "inventory": {}
                },
                "TileEntityCommandBlock": {
                    "commandBlockLogic": {}
                },
                "MobSpawnerBaseLogic$WeightedRandomMinecart": {
                    "access$100": function() {},
                    "access$000": function() {},
                    "nbtData": {},
                    "entityType": {},
                    "this$0": {}
                },
                "TileEntityBanner$EnumBannerPattern": {
                    "getPatternByID": function() {},
                    "valueOf": function() {},
                    "values": function() {},
                    "STRIPE_BOTTOM": {},
                    "SQUARE_TOP_RIGHT": {},
                    "STRIPE_MIDDLE": {},
                    "TRIANGLE_TOP": {},
                    "HALF_HORIZONTAL_MIRROR": {},
                    "STRIPE_TOP": {},
                    "DIAGONAL_RIGHT_MIRROR": {},
                    "STRIPE_CENTER": {},
                    "STRAIGHT_CROSS": {},
                    "patternName": {},
                    "SQUARE_BOTTOM_LEFT": {},
                    "SKULL": {},
                    "RHOMBUS_MIDDLE": {},
                    "CIRCLE_MIDDLE": {},
                    "HALF_HORIZONTAL": {},
                    "GRADIENT": {},
                    "BASE": {},
                    "HALF_VERTICAL_MIRROR": {},
                    "STRIPE_RIGHT": {},
                    "patternCraftingStack": {},
                    "CREEPER": {},
                    "STRIPE_LEFT": {},
                    "BRICKS": {},
                    "TRIANGLES_BOTTOM": {},
                    "SQUARE_TOP_LEFT": {},
                    "FLOWER": {},
                    "STRIPE_SMALL": {},
                    "$VALUES": {},
                    "TRIANGLE_BOTTOM": {},
                    "CURLY_BORDER": {},
                    "TRIANGLES_TOP": {},
                    "patternID": {},
                    "DIAGONAL_RIGHT": {},
                    "STRIPE_DOWNLEFT": {},
                    "DIAGONAL_LEFT_MIRROR": {},
                    "STRIPE_DOWNRIGHT": {},
                    "craftingLayers": {},
                    "GRADIENT_UP": {},
                    "DIAGONAL_LEFT": {},
                    "BORDER": {},
                    "MOJANG": {},
                    "HALF_VERTICAL": {},
                    "CROSS": {},
                    "SQUARE_BOTTOM_RIGHT": {}
                },
                "TileEntityBrewingStand": {
                    "inputSlots": {},
                    "ingredientID": {},
                    "brewTime": {},
                    "filledSlots": {},
                    "customName": {},
                    "outputSlots": {},
                    "brewingItemStacks": {}
                },
                "TileEntityBeacon$BeamSegment": {
                    "colors": {},
                    "height": {}
                },
                "TileEntityChest": {
                    "chestContents": {},
                    "adjacentChestChecked": {},
                    "numPlayersUsing": {},
                    "adjacentChestXPos": {},
                    "adjacentChestZPos": {},
                    "lidAngle": {},
                    "prevLidAngle": {},
                    "customName": {},
                    "ticksSinceSync": {},
                    "cachedChestType": {},
                    "adjacentChestXNeg": {},
                    "adjacentChestZNeg": {}
                },
                "MobSpawnerBaseLogic": {
                    "spawnDelay": {},
                    "mobRotation": {},
                    "minecartToSpawn": {},
                    "maxNearbyEntities": {},
                    "mobID": {},
                    "maxSpawnDelay": {},
                    "spawnCount": {},
                    "activatingRangeFromPlayer": {},
                    "spawnRange": {},
                    "cachedEntity": {},
                    "prevMobRotation": {},
                    "minSpawnDelay": {},
                    "randomEntity": {}
                },
                "TileEntityBanner": {
                    "getBaseColor": function() {},
                    "getPatterns": function() {},
                    "removeBannerData": function() {},
                    "setBaseColorAndPatterns": function() {},
                    "patternResourceLocation": {},
                    "patternList": {},
                    "patterns": {},
                    "field_175119_g": {},
                    "baseColor": {},
                    "colorList": {}
                },
                "TileEntityLockable": {
                    "code": {}
                },
                "TileEntityEnderChest": {
                    "numPlayersUsing": {},
                    "lidAngle": {},
                    "prevLidAngle": {},
                    "ticksSinceSync": {}
                },
                "TileEntityDropper": {},
                "TileEntityDispenser": {
                    "stacks": {},
                    "RNG": {},
                    "customName": {}
                },
                "TileEntityNote": {
                    "note": {},
                    "previousRedstoneState": {}
                },
                "TileEntityEndPortal": {}
            },
            "nbt": {
                "NBTTagByte": {
                    "data": {}
                },
                "NBTTagFloat": {
                    "data": {}
                },
                "JsonToNBT$List": {
                    "field_150492_b": {}
                },
                "NBTTagShort": {
                    "data": {}
                },
                "CompressedStreamTools": {
                    "readCompressed": function() {},
                    "func_152455_a": function() {},
                    "read": function() {},
                    "writeCompressed": function() {},
                    "safeWrite": function() {},
                    "writeTag": function() {},
                    "write": function() {}
                },
                "NBTBase$NBTPrimitive": {},
                "NBTTagCompound": {
                    "readKey": function() {},
                    "access$000": function() {},
                    "readNBT": function() {},
                    "writeEntry": function() {},
                    "readType": function() {},
                    "tagMap": {}
                },
                "NBTTagLong": {
                    "data": {}
                },
                "NBTTagByteArray": {
                    "data": {}
                },
                "NBTTagIntArray": {
                    "intArray": {}
                },
                "NBTTagString": {
                    "data": {}
                },
                "NBTException": {},
                "NBTSizeTracker": {
                    "read": {},
                    "max": {},
                    "INFINITE": {}
                },
                "NBTTagInt": {
                    "data": {}
                },
                "NBTTagEnd": {},
                "NBTBase": {
                    "createNewByType": function() {},
                    "NBT_TYPES": {}
                },
                "NBTTagDouble": {
                    "data": {}
                },
                "JsonToNBT$Any": {
                    "json": {}
                },
                "JsonToNBT$Compound": {
                    "field_150491_b": {}
                }
            },
            "enchantment": {
                "EnchantmentHelper$HurtIterator": {
                    "attacker": {},
                    "user": {}
                },
                "EnchantmentArrowKnockback": {},
                "EnchantmentFishingSpeed": {},
                "EnchantmentHelper$IModifier": {},
                "EnchantmentHelper$ModifierDamage": {
                    "source": {},
                    "damageModifier": {}
                },
                "EnchantmentOxygen": {},
                "EnchantmentUntouching": {},
                "EnchantmentArrowDamage": {},
                "Enchantment": {
                    "getEnchantmentById": function() {},
                    "func_181077_c": function() {},
                    "getEnchantmentByLocation": function() {},
                    "thorns": {},
                    "smite": {},
                    "unbreaking": {},
                    "locationEnchantments": {},
                    "protection": {},
                    "respiration": {},
                    "knockback": {},
                    "type": {},
                    "fireAspect": {},
                    "silkTouch": {},
                    "lure": {},
                    "baneOfArthropods": {},
                    "punch": {},
                    "effectId": {},
                    "luckOfTheSea": {},
                    "enchantmentsList": {},
                    "projectileProtection": {},
                    "sharpness": {},
                    "power": {},
                    "featherFalling": {},
                    "efficiency": {},
                    "fortune": {},
                    "enchantmentsBookList": {},
                    "looting": {},
                    "weight": {},
                    "aquaAffinity": {},
                    "fireProtection": {},
                    "name": {},
                    "blastProtection": {},
                    "depthStrider": {},
                    "infinity": {},
                    "flame": {}
                },
                "EnchantmentWaterWalker": {},
                "EnchantmentLootBonus": {},
                "EnchantmentDamage": {
                    "baseEnchantability": {},
                    "thresholdEnchantability": {},
                    "protectionName": {},
                    "levelEnchantability": {},
                    "damageType": {}
                },
                "EnchantmentFireAspect": {},
                "EnchantmentWaterWorker": {},
                "EnchantmentHelper$DamageIterator": {
                    "user": {},
                    "target": {}
                },
                "EnchantmentData": {
                    "enchantmentobj": {},
                    "enchantmentLevel": {}
                },
                "EnchantmentHelper$ModifierLiving": {
                    "entityLiving": {},
                    "livingModifier": {}
                },
                "EnumEnchantmentType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "ALL": {},
                    "ARMOR_HEAD": {},
                    "BREAKABLE": {},
                    "ARMOR": {},
                    "ARMOR_LEGS": {},
                    "FISHING_ROD": {},
                    "ARMOR_TORSO": {},
                    "BOW": {},
                    "WEAPON": {},
                    "DIGGER": {},
                    "$VALUES": {},
                    "ARMOR_FEET": {}
                },
                "EnchantmentThorns": {
                    "func_92095_b": function() {},
                    "func_92094_a": function() {}
                },
                "EnchantmentProtection": {
                    "getFireTimeForEntity": function() {},
                    "func_92092_a": function() {},
                    "baseEnchantability": {},
                    "thresholdEnchantability": {},
                    "protectionType": {},
                    "protectionName": {},
                    "levelEnchantability": {}
                },
                "EnchantmentArrowInfinite": {},
                "EnchantmentArrowFire": {},
                "EnchantmentHelper": {
                    "addRandomEnchantment": function() {},
                    "getLootingModifier": function() {},
                    "getEnchantmentLevel": function() {},
                    "getModifierForCreature": function() {},
                    "getRespiration": function() {},
                    "getFortuneModifier": function() {},
                    "getLuckOfSeaModifier": function() {},
                    "applyThornEnchantments": function() {},
                    "calcItemStackEnchantability": function() {},
                    "getMaxEnchantmentLevel": function() {},
                    "getEnchantedItem": function() {},
                    "buildEnchantmentList": function() {},
                    "getProtection": function() {},
                    "getKnockbackModifier": function() {},
                    "getLureModifier": function() {},
                    "applyEnchantmentModifierArray": function() {},
                    "applyEnchantmentModifier": function() {},
                    "getEfficiencyModifier": function() {},
                    "getAquaAffinityModifier": function() {},
                    "getEnchantmentModifierDamage": function() {},
                    "betterEnchants": function() {},
                    "getSilkTouchModifier": function() {},
                    "applyArthropodEnchantments": function() {},
                    "getEnchantments": function() {},
                    "setEnchantments": function() {},
                    "getDepthStriderModifier": function() {},
                    "hasProtection": function() {},
                    "getFireAspectModifier": function() {},
                    "mapEnchantmentData": function() {},
                    "enchantmentModifierLiving": {},
                    "ENCHANTMENT_ITERATOR_DAMAGE": {},
                    "enchantmentModifierDamage": {},
                    "enchantmentRand": {},
                    "ENCHANTMENT_ITERATOR_HURT": {}
                },
                "EnchantmentKnockback": {},
                "EnchantmentDurability": {
                    "negateDamage": function() {}
                },
                "EnchantmentDigging": {}
            },
            "realms": {
                "Tezzelator": {
                    "instance": {},
                    "t": {}
                },
                "RealmsSimpleScrolledSelectionList": {
                    "proxy": {}
                },
                "RealmsLevelSummary": {
                    "levelSummary": {}
                },
                "RealmsSharedConstants": {
                    "NETWORK_PROTOCOL_VERSION": {},
                    "ILLEGAL_FILE_CHARACTERS": {},
                    "TICKS_PER_SECOND": {},
                    "VERSION_STRING": {}
                },
                "DisconnectedRealmsScreen": {
                    "textHeight": {},
                    "reason": {},
                    "parent": {},
                    "title": {},
                    "lines": {}
                },
                "RealmsEditBox": {
                    "editBox": {}
                },
                "RealmsSliderButton": {
                    "sliding": {},
                    "minValue": {},
                    "maxValue": {},
                    "value": {},
                    "steps": {}
                },
                "RealmsBufferBuilder": {
                    "b": {}
                },
                "RealmsDefaultVertexFormat": {
                    "POSITION_TEX_NORMAL": {},
                    "ELEMENT_NORMAL": {},
                    "PARTICLE": {},
                    "POSITION_TEX_COLOR_NORMAL": {},
                    "ELEMENT_POSITION": {},
                    "BLOCK": {},
                    "POSITION_TEX": {},
                    "POSITION_TEX_COLOR": {},
                    "POSITION_TEX2_COLOR": {},
                    "POSITION": {},
                    "ELEMENT_PADDING": {},
                    "BLOCK_NORMALS": {},
                    "ENTITY": {},
                    "POSITION_COLOR": {},
                    "ELEMENT_COLOR": {},
                    "POSITION_NORMAL": {},
                    "ELEMENT_UV0": {},
                    "ELEMENT_UV1": {}
                },
                "RealmsVertexFormat": {
                    "v": {}
                },
                "RealmsServerAddress": {
                    "parseString": function() {},
                    "port": {},
                    "host": {}
                },
                "RealmsClickableScrolledSelectionList": {
                    "proxy": {}
                },
                "RealmsMth": {
                    "nextFloat": function() {},
                    "average": function() {},
                    "clampedLerp": function() {},
                    "absFloor": function() {},
                    "cos": function() {},
                    "smallestEncompassingPowerOfTwo": function() {},
                    "isEmpty": function() {},
                    "getDouble": function() {},
                    "wrapDegrees": function() {},
                    "ceil": function() {},
                    "nextInt": function() {},
                    "nextDouble": function() {},
                    "getInt": function() {},
                    "absMax": function() {},
                    "fastFloor": function() {},
                    "abs": function() {},
                    "sqrt": function() {},
                    "intFloorDiv": function() {},
                    "sin": function() {},
                    "lfloor": function() {},
                    "floor": function() {},
                    "log2": function() {},
                    "roundUp": function() {},
                    "clamp": function() {}
                },
                "RealmsScrolledSelectionList": {
                    "proxy": {}
                },
                "RealmsScreen": {
                    "bindFace": function() {},
                    "bind": function() {},
                    "blit": function() {},
                    "getLocalizedString": function() {},
                    "newButton": function() {},
                    "minecraft": {},
                    "SKIN_HAT_WIDTH": {},
                    "SKIN_HEAD_WIDTH": {},
                    "SKIN_HAT_U": {},
                    "SKIN_TEX_HEIGHT": {},
                    "proxy": {},
                    "SKIN_HAT_HEIGHT": {},
                    "SKIN_HEAD_HEIGHT": {},
                    "SKIN_HEAD_V": {},
                    "width": {},
                    "SKIN_HEAD_U": {},
                    "SKIN_HAT_V": {},
                    "SKIN_TEX_WIDTH": {},
                    "height": {}
                },
                "RealmsServerPing": {
                    "lastPingSnapshot": {},
                    "playerList": {},
                    "nrOfPlayers": {}
                },
                "RealmsButton": {
                    "proxy": {},
                    "WIDGETS_LOCATION": {}
                },
                "RealmsAnvilLevelStorageSource": {
                    "levelStorageSource": {}
                },
                "RealmsVertexFormatElement": {
                    "v": {}
                }
            },
            "network": {
                "play": {
                    "client": {
                        "C0BPacketEntityAction$Action": {
                            "valueOf": function() {},
                            "values": function() {},
                            "STOP_SLEEPING": {},
                            "START_SNEAKING": {},
                            "STOP_SNEAKING": {},
                            "START_SPRINTING": {},
                            "STOP_SPRINTING": {},
                            "RIDING_JUMP": {},
                            "OPEN_INVENTORY": {},
                            "$VALUES": {}
                        },
                        "C07PacketPlayerDigging$Action": {
                            "valueOf": function() {},
                            "values": function() {},
                            "STOP_DESTROY_BLOCK": {},
                            "DROP_ALL_ITEMS": {},
                            "DROP_ITEM": {},
                            "RELEASE_USE_ITEM": {},
                            "ABORT_DESTROY_BLOCK": {},
                            "START_DESTROY_BLOCK": {},
                            "$VALUES": {}
                        },
                        "C02PacketUseEntity$Action": {
                            "valueOf": function() {},
                            "values": function() {},
                            "INTERACT_AT": {},
                            "INTERACT": {},
                            "ATTACK": {},
                            "$VALUES": {}
                        },
                        "C19PacketResourcePackStatus$Action": {
                            "valueOf": function() {},
                            "values": function() {},
                            "ACCEPTED": {},
                            "SUCCESSFULLY_LOADED": {},
                            "DECLINED": {},
                            "$VALUES": {},
                            "FAILED_DOWNLOAD": {}
                        },
                        "C16PacketClientStatus$EnumState": {
                            "valueOf": function() {},
                            "values": function() {},
                            "REQUEST_STATS": {},
                            "OPEN_INVENTORY_ACHIEVEMENT": {},
                            "PERFORM_RESPAWN": {},
                            "$VALUES": {}
                        }
                    },
                    "server": {
                        "S38PacketPlayerListItem$Action": {
                            "valueOf": function() {},
                            "values": function() {},
                            "REMOVE_PLAYER": {},
                            "UPDATE_DISPLAY_NAME": {},
                            "ADD_PLAYER": {},
                            "UPDATE_GAME_MODE": {},
                            "UPDATE_LATENCY": {},
                            "$VALUES": {}
                        },
                        "S45PacketTitle$Type": {
                            "valueOf": function() {},
                            "values": function() {},
                            "byName": function() {},
                            "getNames": function() {},
                            "TIMES": {},
                            "TITLE": {},
                            "RESET": {},
                            "SUBTITLE": {},
                            "CLEAR": {},
                            "$VALUES": {}
                        },
                        "S08PacketPlayerPosLook$EnumFlags": {
                            "func_180053_a": function() {},
                            "valueOf": function() {},
                            "values": function() {},
                            "func_180056_a": function() {},
                            "Y_ROT": {},
                            "X_ROT": {},
                            "X": {},
                            "Y": {},
                            "field_180058_f": {},
                            "Z": {},
                            "$VALUES": {}
                        },
                        "S42PacketCombatEvent$Event": {
                            "valueOf": function() {},
                            "values": function() {},
                            "ENTITY_DIED": {},
                            "ENTER_COMBAT": {},
                            "$VALUES": {},
                            "END_COMBAT": {}
                        },
                        "S3CPacketUpdateScore$Action": {
                            "valueOf": function() {},
                            "values": function() {},
                            "REMOVE": {},
                            "CHANGE": {},
                            "$VALUES": {}
                        },
                        "S44PacketWorldBorder$Action": {
                            "valueOf": function() {},
                            "values": function() {},
                            "INITIALIZE": {},
                            "SET_SIZE": {},
                            "SET_WARNING_TIME": {},
                            "SET_CENTER": {},
                            "SET_WARNING_BLOCKS": {},
                            "$VALUES": {},
                            "LERP_SIZE": {}
                        },
                        "S21PacketChunkData$Extracted": {
                            "data": {},
                            "dataSize": {}
                        },
                        "S20PacketEntityProperties$Snapshot": {
                            "this$0": {},
                            "field_151412_b": {},
                            "field_151411_d": {},
                            "field_151413_c": {}
                        },
                        "S22PacketMultiBlockChange$BlockUpdateData": {
                            "blockState": {},
                            "chunkPosCrammed": {},
                            "this$0": {}
                        }
                    },
                    "INetHandlerPlayServer": {},
                    "INetHandlerPlayClient": {}
                },
                "INetHandler": {},
                "PacketThreadUtil": {
                    "clientPreProcessPacket": function() {},
                    "checkThreadAndEnqueue": function() {},
                    "lastDimensionId": {}
                },
                "status": {
                    "INetHandlerStatusClient": {},
                    "INetHandlerStatusServer": {}
                },
                "login": {
                    "INetHandlerLoginClient": {},
                    "INetHandlerLoginServer": {}
                },
                "ServerStatusResponse$MinecraftProtocolVersionIdentifier": {
                    "protocol": {},
                    "name": {}
                },
                "rcon": {
                    "RConConsoleSource": {
                        "instance": {},
                        "buffer": {}
                    }
                },
                "EnumPacketDirection": {
                    "valueOf": function() {},
                    "values": function() {},
                    "CLIENTBOUND": {},
                    "$VALUES": {},
                    "SERVERBOUND": {}
                },
                "ThreadQuickExitException": {
                    "INSTANCE": {}
                },
                "ServerStatusResponse": {
                    "serverMotd": {},
                    "favicon": {},
                    "playerCount": {},
                    "protocolVersion": {}
                },
                "handshake": {
                    "INetHandlerHandshakeServer": {}
                }
            },
            "dispenser": {
                "ILocation": {},
                "IBlockSource": {},
                "ILocatableSource": {},
                "BehaviorProjectileDispense": {},
                "IPosition": {},
                "PositionImpl": {
                    "x": {},
                    "y": {},
                    "z": {}
                },
                "BehaviorDefaultDispenseItem": {
                    "doDispense": function() {}
                },
                "IBehaviorDispenseItem": {
                    "itemDispenseBehaviorProvider": {}
                }
            },
            "stats": {
                "IStatType": {},
                "AchievementList": {
                    "init": function() {},
                    "buildPickaxe": {},
                    "diamonds": {},
                    "bakeCake": {},
                    "buildFurnace": {},
                    "killCow": {},
                    "snipeSkeleton": {},
                    "buildHoe": {},
                    "makeBread": {},
                    "minDisplayRow": {},
                    "maxDisplayColumn": {},
                    "minDisplayColumn": {},
                    "spawnWither": {},
                    "cookFish": {},
                    "bookcase": {},
                    "mineWood": {},
                    "portal": {},
                    "ghast": {},
                    "maxDisplayRow": {},
                    "diamondsToYou": {},
                    "openInventory": {},
                    "buildSword": {},
                    "overkill": {},
                    "potion": {},
                    "flyPig": {},
                    "blazeRod": {},
                    "killWither": {},
                    "breedCow": {},
                    "achievementList": {},
                    "killEnemy": {},
                    "exploreAllBiomes": {},
                    "acquireIron": {},
                    "enchantments": {},
                    "theEnd": {},
                    "theEnd2": {},
                    "buildWorkBench": {},
                    "fullBeacon": {},
                    "onARail": {},
                    "overpowered": {},
                    "buildBetterPickaxe": {}
                },
                "StatBase": {
                    "access$100": function() {},
                    "access$000": function() {},
                    "simpleStatType": {},
                    "statId": {},
                    "isIndependent": {},
                    "field_150956_d": {},
                    "numberFormat": {},
                    "objectiveCriteria": {},
                    "field_111202_k": {},
                    "statName": {},
                    "decimalFormat": {},
                    "distanceStatType": {},
                    "type": {},
                    "timeStatType": {}
                },
                "Achievement": {
                    "displayRow": {},
                    "statStringFormatter": {},
                    "isSpecial": {},
                    "displayColumn": {},
                    "parentAchievement": {},
                    "theItemStack": {},
                    "achievementDescription": {}
                },
                "StatCrafting": {
                    "field_150960_a": {}
                },
                "StatFileWriter": {
                    "statsData": {}
                },
                "StatList": {
                    "initItemDepleteStats": function() {},
                    "init": function() {},
                    "getStatEntityKilledBy": function() {},
                    "initMiningStats": function() {},
                    "initStats": function() {},
                    "initCraftableStats": function() {},
                    "getOneShotStat": function() {},
                    "func_180204_a": function() {},
                    "mergeStatBases": function() {},
                    "getStatKillEntity": function() {},
                    "replaceAllSimilarBlocks": function() {},
                    "distanceByHorseStat": {},
                    "oneShotStats": {},
                    "playerKillsStat": {},
                    "field_181739_W": {},
                    "field_181725_I": {},
                    "distanceFlownStat": {},
                    "objectBreakStats": {},
                    "distanceWalkedStat": {},
                    "field_181733_Q": {},
                    "mobKillsStat": {},
                    "objectMineStats": {},
                    "field_181731_O": {},
                    "timeSinceDeathStat": {},
                    "distanceByBoatStat": {},
                    "field_181737_U": {},
                    "field_181735_S": {},
                    "distanceByPigStat": {},
                    "damageDealtStat": {},
                    "junkFishedStat": {},
                    "distanceDoveStat": {},
                    "field_181728_L": {},
                    "animalsBredStat": {},
                    "field_181726_J": {},
                    "distanceClimbedStat": {},
                    "deathsStat": {},
                    "distanceFallenStat": {},
                    "field_181741_Y": {},
                    "field_181724_H": {},
                    "generalStats": {},
                    "distanceSwumStat": {},
                    "field_181734_R": {},
                    "field_181723_aa": {},
                    "distanceCrouchedStat": {},
                    "dropStat": {},
                    "field_181732_P": {},
                    "field_181738_V": {},
                    "treasureFishedStat": {},
                    "distanceByMinecartStat": {},
                    "timesTalkedToVillagerStat": {},
                    "field_181736_T": {},
                    "mineBlockStatArray": {},
                    "timesTradedWithVillagerStat": {},
                    "objectUseStats": {},
                    "distanceSprintedStat": {},
                    "jumpStat": {},
                    "field_181730_N": {},
                    "damageTakenStat": {},
                    "objectCraftStats": {},
                    "fishCaughtStat": {},
                    "minutesPlayedStat": {},
                    "field_181740_X": {},
                    "field_181729_M": {},
                    "field_181727_K": {},
                    "allStats": {},
                    "leaveGameStat": {},
                    "itemStats": {},
                    "field_181742_Z": {}
                },
                "StatBasic": {},
                "IStatStringFormat": {},
                "ObjectiveStat": {
                    "stat": {}
                }
            },
            "event": {
                "HoverEvent": {
                    "action": {},
                    "value": {}
                },
                "HoverEvent$Action": {
                    "valueOf": function() {},
                    "values": function() {},
                    "getValueByCanonicalName": function() {},
                    "nameMapping": {},
                    "allowedInChat": {},
                    "SHOW_ITEM": {},
                    "SHOW_ENTITY": {},
                    "SHOW_TEXT": {},
                    "SHOW_ACHIEVEMENT": {},
                    "$VALUES": {},
                    "canonicalName": {}
                },
                "ClickEvent$Action": {
                    "valueOf": function() {},
                    "values": function() {},
                    "getValueByCanonicalName": function() {},
                    "nameMapping": {},
                    "allowedInChat": {},
                    "TWITCH_USER_INFO": {},
                    "RUN_COMMAND": {},
                    "CHANGE_PAGE": {},
                    "SUGGEST_COMMAND": {},
                    "OPEN_FILE": {},
                    "$VALUES": {},
                    "OPEN_URL": {},
                    "canonicalName": {}
                },
                "ClickEvent": {
                    "action": {},
                    "value": {}
                }
            },
            "village": {
                "VillageDoorInfo": {
                    "getFaceDirection": function() {},
                    "isDetachedFromVillageFlag": {},
                    "doorOpeningRestrictionCounter": {},
                    "lastActivityTimestamp": {},
                    "insideBlock": {},
                    "insideDirection": {},
                    "doorBlockPos": {}
                },
                "VillageCollection": {
                    "fileNameForProvider": function() {},
                    "villageList": {},
                    "villagerPositionsList": {},
                    "tickCounter": {},
                    "newDoors": {},
                    "worldObj": {}
                },
                "Village$VillageAggressor": {
                    "this$0": {},
                    "agressor": {},
                    "agressionTime": {}
                },
                "VillageSiege": {
                    "field_75536_c": {},
                    "field_75534_e": {},
                    "field_75532_g": {},
                    "field_75535_b": {},
                    "field_75533_d": {},
                    "worldObj": {},
                    "field_75538_h": {},
                    "theVillage": {},
                    "field_75539_i": {}
                },
                "Village": {
                    "playerReputation": {},
                    "villageRadius": {},
                    "center": {},
                    "lastAddDoorTimestamp": {},
                    "villageAgressors": {},
                    "villageDoorInfoList": {},
                    "centerHelper": {},
                    "tickCounter": {},
                    "numVillagers": {},
                    "noBreedTicks": {},
                    "numIronGolems": {},
                    "worldObj": {}
                },
                "MerchantRecipe": {
                    "rewardsExp": {},
                    "toolUses": {},
                    "maxTradeUses": {},
                    "secondItemToBuy": {},
                    "itemToBuy": {},
                    "itemToSell": {}
                }
            },
            "potion": {
                "PotionHealth": {},
                "PotionHelper": {
                    "calcPotionLiquidColor": function() {},
                    "getPotionEffects": function() {},
                    "getAreAmbient": function() {},
                    "countSetFlags": function() {},
                    "getPotionPrefixIndex": function() {},
                    "brewBitOperations": function() {},
                    "getPotionPrefix": function() {},
                    "checkFlag": function() {},
                    "getPotionPrefixIndexFlags": function() {},
                    "getPotionEffect": function() {},
                    "isFlagUnset": function() {},
                    "applyIngredient": function() {},
                    "isFlagSet": function() {},
                    "getLiquidColor": function() {},
                    "parsePotionEffects": function() {},
                    "blazePowderEffect": {},
                    "unusedString": {},
                    "potionPrefixes": {},
                    "magmaCreamEffect": {},
                    "potionRequirements": {},
                    "ghastTearEffect": {},
                    "glowstoneEffect": {},
                    "goldenCarrotEffect": {},
                    "fermentedSpiderEyeEffect": {},
                    "speckledMelonEffect": {},
                    "redstoneEffect": {},
                    "potionAmplifiers": {},
                    "gunpowderEffect": {},
                    "pufferfishEffect": {},
                    "spiderEyeEffect": {},
                    "sugarEffect": {},
                    "rabbitFootEffect": {},
                    "DATAVALUE_COLORS": {}
                },
                "Potion": {
                    "getPotionLocations": function() {},
                    "getPotionFromResourceLocation": function() {},
                    "getDurationString": function() {},
                    "potionTypes": {},
                    "digSlowdown": {},
                    "damageBoost": {},
                    "harm": {},
                    "regeneration": {},
                    "digSpeed": {},
                    "field_180153_z": {},
                    "saturation": {},
                    "isBadEffect": {},
                    "weakness": {},
                    "usable": {},
                    "fireResistance": {},
                    "statusIconIndex": {},
                    "healthBoost": {},
                    "heal": {},
                    "nightVision": {},
                    "attributeModifierMap": {},
                    "id": {},
                    "field_180150_I": {},
                    "jump": {},
                    "effectiveness": {},
                    "field_180151_b": {},
                    "poison": {},
                    "blindness": {},
                    "absorption": {},
                    "resistance": {},
                    "waterBreathing": {},
                    "invisibility": {},
                    "hunger": {},
                    "moveSpeed": {},
                    "liquidColor": {},
                    "field_180145_F": {},
                    "name": {},
                    "field_180148_B": {},
                    "field_180146_G": {},
                    "moveSlowdown": {},
                    "field_180149_C": {},
                    "field_180143_D": {},
                    "confusion": {},
                    "wither": {},
                    "field_180144_E": {},
                    "field_180147_A": {}
                },
                "PotionHealthBoost": {},
                "PotionAbsorption": {},
                "PotionAttackDamage": {}
            },
            "profiler": {
                "PlayerUsageSnooper": {
                    "access$600": function() {},
                    "access$500": function() {},
                    "access$400": function() {},
                    "access$300": function() {},
                    "access$200": function() {},
                    "access$100": function() {},
                    "access$000": function() {},
                    "access$308": function() {},
                    "snooperStats": {},
                    "playerStatsCollector": {},
                    "syncLock": {},
                    "threadTrigger": {},
                    "isRunning": {},
                    "serverUrl": {},
                    "clientStats": {},
                    "minecraftStartTimeMilis": {},
                    "selfCounter": {},
                    "uniqueID": {}
                },
                "Profiler$Result": {
                    "field_76331_c": {},
                    "field_76332_a": {},
                    "field_76330_b": {}
                },
                "IPlayerUsage": {}
            },
            "init": {
                "Items": {
                    "getRegisteredItem": function() {},
                    "leather_boots": {},
                    "water_bucket": {},
                    "feather": {},
                    "chainmail_helmet": {},
                    "pumpkin_seeds": {},
                    "egg": {},
                    "iron_chestplate": {},
                    "spruce_door": {},
                    "fire_charge": {},
                    "beef": {},
                    "baked_potato": {},
                    "prismarine_crystals": {},
                    "diamond_shovel": {},
                    "cake": {},
                    "experience_bottle": {},
                    "golden_horse_armor": {},
                    "iron_sword": {},
                    "slime_ball": {},
                    "rabbit": {},
                    "stick": {},
                    "diamond_boots": {},
                    "golden_leggings": {},
                    "cookie": {},
                    "record_wait": {},
                    "wooden_sword": {},
                    "record_chirp": {},
                    "gunpowder": {},
                    "record_ward": {},
                    "leather": {},
                    "bucket": {},
                    "minecart": {},
                    "writable_book": {},
                    "golden_helmet": {},
                    "flint_and_steel": {},
                    "rabbit_stew": {},
                    "record_cat": {},
                    "snowball": {},
                    "stone_axe": {},
                    "redstone": {},
                    "carrot_on_a_stick": {},
                    "glass_bottle": {},
                    "ender_eye": {},
                    "leather_chestplate": {},
                    "cooked_fish": {},
                    "milk_bucket": {},
                    "stone_sword": {},
                    "fireworks": {},
                    "chest_minecart": {},
                    "iron_ingot": {},
                    "nether_star": {},
                    "iron_boots": {},
                    "diamond_leggings": {},
                    "potato": {},
                    "diamond_helmet": {},
                    "ender_pearl": {},
                    "wheat": {},
                    "diamond_chestplate": {},
                    "netherbrick": {},
                    "poisonous_potato": {},
                    "name_tag": {},
                    "stone_pickaxe": {},
                    "iron_helmet": {},
                    "map": {},
                    "acacia_door": {},
                    "lava_bucket": {},
                    "wooden_hoe": {},
                    "golden_axe": {},
                    "bread": {},
                    "golden_apple": {},
                    "rotten_flesh": {},
                    "chainmail_leggings": {},
                    "tnt_minecart": {},
                    "chainmail_chestplate": {},
                    "iron_leggings": {},
                    "boat": {},
                    "lead": {},
                    "prismarine_shard": {},
                    "stone_hoe": {},
                    "iron_shovel": {},
                    "blaze_powder": {},
                    "dye": {},
                    "speckled_melon": {},
                    "comparator": {},
                    "cooked_rabbit": {},
                    "firework_charge": {},
                    "fish": {},
                    "record_mellohi": {},
                    "command_block_minecart": {},
                    "repeater": {},
                    "golden_sword": {},
                    "cooked_porkchop": {},
                    "bed": {},
                    "birch_door": {},
                    "filled_map": {},
                    "saddle": {},
                    "arrow": {},
                    "sign": {},
                    "clay_ball": {},
                    "spawn_egg": {},
                    "cooked_beef": {},
                    "oak_door": {},
                    "porkchop": {},
                    "iron_door": {},
                    "wooden_axe": {},
                    "iron_axe": {},
                    "blaze_rod": {},
                    "shears": {},
                    "gold_ingot": {},
                    "nether_wart": {},
                    "written_book": {},
                    "armor_stand": {},
                    "chainmail_boots": {},
                    "rabbit_hide": {},
                    "ghast_tear": {},
                    "melon": {},
                    "enchanted_book": {},
                    "wheat_seeds": {},
                    "mutton": {},
                    "stone_shovel": {},
                    "diamond_hoe": {},
                    "iron_horse_armor": {},
                    "clock": {},
                    "furnace_minecart": {},
                    "diamond_sword": {},
                    "rabbit_foot": {},
                    "item_frame": {},
                    "dark_oak_door": {},
                    "golden_hoe": {},
                    "cooked_chicken": {},
                    "diamond_horse_armor": {},
                    "compass": {},
                    "glowstone_dust": {},
                    "leather_leggings": {},
                    "mushroom_stew": {},
                    "coal": {},
                    "flint": {},
                    "leather_helmet": {},
                    "sugar": {},
                    "emerald": {},
                    "iron_hoe": {},
                    "record_mall": {},
                    "chicken": {},
                    "string": {},
                    "cooked_mutton": {},
                    "golden_pickaxe": {},
                    "book": {},
                    "wooden_shovel": {},
                    "brewing_stand": {},
                    "bow": {},
                    "potionitem": {},
                    "bowl": {},
                    "record_blocks": {},
                    "apple": {},
                    "spider_eye": {},
                    "reeds": {},
                    "paper": {},
                    "jungle_door": {},
                    "golden_boots": {},
                    "iron_pickaxe": {},
                    "diamond_axe": {},
                    "brick": {},
                    "skull": {},
                    "golden_chestplate": {},
                    "pumpkin_pie": {},
                    "golden_shovel": {},
                    "fishing_rod": {},
                    "gold_nugget": {},
                    "record_strad": {},
                    "wooden_pickaxe": {},
                    "diamond_pickaxe": {},
                    "flower_pot": {},
                    "record_13": {},
                    "quartz": {},
                    "banner": {},
                    "bone": {},
                    "fermented_spider_eye": {},
                    "golden_carrot": {},
                    "hopper_minecart": {},
                    "diamond": {},
                    "magma_cream": {},
                    "painting": {},
                    "record_11": {},
                    "cauldron": {},
                    "record_far": {},
                    "record_stal": {},
                    "melon_seeds": {},
                    "carrot": {}
                },
                "Blocks": {
                    "getRegisteredBlock": function() {},
                    "spruce_door": {},
                    "birch_stairs": {},
                    "mossy_cobblestone": {},
                    "nether_brick_fence": {},
                    "diamond_ore": {},
                    "spruce_fence_gate": {},
                    "cake": {},
                    "birch_fence_gate": {},
                    "fire": {},
                    "standing_sign": {},
                    "stained_glass_pane": {},
                    "dragon_egg": {},
                    "hardened_clay": {},
                    "leaves2": {},
                    "powered_repeater": {},
                    "packed_ice": {},
                    "waterlily": {},
                    "enchanting_table": {},
                    "nether_brick": {},
                    "cocoa": {},
                    "flowing_lava": {},
                    "lapis_ore": {},
                    "gold_block": {},
                    "trapdoor": {},
                    "tripwire": {},
                    "sponge": {},
                    "daylight_detector": {},
                    "lit_redstone_lamp": {},
                    "birch_fence": {},
                    "daylight_detector_inverted": {},
                    "deadbush": {},
                    "clay": {},
                    "stone_brick_stairs": {},
                    "grass": {},
                    "end_stone": {},
                    "cactus": {},
                    "quartz_block": {},
                    "wheat": {},
                    "carrots": {},
                    "double_stone_slab": {},
                    "acacia_door": {},
                    "quartz_ore": {},
                    "piston": {},
                    "cobblestone_wall": {},
                    "ender_chest": {},
                    "red_mushroom_block": {},
                    "melon_block": {},
                    "bed": {},
                    "mycelium": {},
                    "wool": {},
                    "furnace": {},
                    "redstone_ore": {},
                    "red_flower": {},
                    "lit_redstone_ore": {},
                    "sea_lantern": {},
                    "ice": {},
                    "oak_door": {},
                    "hay_block": {},
                    "stone_slab": {},
                    "farmland": {},
                    "dark_oak_stairs": {},
                    "leaves": {},
                    "iron_trapdoor": {},
                    "nether_wart": {},
                    "stone_button": {},
                    "stone_pressure_plate": {},
                    "iron_bars": {},
                    "wooden_button": {},
                    "glass": {},
                    "obsidian": {},
                    "chest": {},
                    "stone_stairs": {},
                    "wooden_pressure_plate": {},
                    "sticky_piston": {},
                    "end_portal_frame": {},
                    "sand": {},
                    "dark_oak_door": {},
                    "beacon": {},
                    "carpet": {},
                    "potatoes": {},
                    "jungle_fence": {},
                    "jukebox": {},
                    "standing_banner": {},
                    "unlit_redstone_torch": {},
                    "dispenser": {},
                    "lava": {},
                    "reeds": {},
                    "redstone_lamp": {},
                    "spruce_fence": {},
                    "coal_block": {},
                    "stained_hardened_clay": {},
                    "red_sandstone_stairs": {},
                    "heavy_weighted_pressure_plate": {},
                    "double_plant": {},
                    "crafting_table": {},
                    "brown_mushroom_block": {},
                    "flower_pot": {},
                    "melon_stem": {},
                    "diamond_block": {},
                    "stone": {},
                    "cauldron": {},
                    "wooden_slab": {},
                    "red_sandstone": {},
                    "lit_pumpkin": {},
                    "soul_sand": {},
                    "acacia_stairs": {},
                    "dropper": {},
                    "piston_head": {},
                    "glowstone": {},
                    "sandstone_stairs": {},
                    "double_stone_slab2": {},
                    "portal": {},
                    "piston_extension": {},
                    "bookshelf": {},
                    "gravel": {},
                    "nether_brick_stairs": {},
                    "command_block": {},
                    "acacia_fence_gate": {},
                    "stone_slab2": {},
                    "jungle_stairs": {},
                    "tnt": {},
                    "mob_spawner": {},
                    "detector_rail": {},
                    "log": {},
                    "anvil": {},
                    "air": {},
                    "jungle_fence_gate": {},
                    "sandstone": {},
                    "redstone_wire": {},
                    "oak_stairs": {},
                    "bedrock": {},
                    "web": {},
                    "unpowered_repeater": {},
                    "brick_block": {},
                    "log2": {},
                    "pumpkin_stem": {},
                    "slime_block": {},
                    "emerald_block": {},
                    "end_portal": {},
                    "stained_glass": {},
                    "oak_fence": {},
                    "torch": {},
                    "double_wooden_slab": {},
                    "iron_ore": {},
                    "planks": {},
                    "lapis_block": {},
                    "wall_banner": {},
                    "stonebrick": {},
                    "oak_fence_gate": {},
                    "prismarine": {},
                    "birch_door": {},
                    "acacia_fence": {},
                    "tallgrass": {},
                    "iron_block": {},
                    "brown_mushroom": {},
                    "iron_door": {},
                    "unpowered_comparator": {},
                    "barrier": {},
                    "noteblock": {},
                    "sapling": {},
                    "glass_pane": {},
                    "vine": {},
                    "dark_oak_fence": {},
                    "quartz_stairs": {},
                    "golden_rail": {},
                    "redstone_torch": {},
                    "rail": {},
                    "dirt": {},
                    "powered_comparator": {},
                    "lever": {},
                    "water": {},
                    "flowing_water": {},
                    "dark_oak_fence_gate": {},
                    "coal_ore": {},
                    "snow": {},
                    "lit_furnace": {},
                    "emerald_ore": {},
                    "brick_stairs": {},
                    "monster_egg": {},
                    "tripwire_hook": {},
                    "brewing_stand": {},
                    "cobblestone": {},
                    "redstone_block": {},
                    "jungle_door": {},
                    "netherrack": {},
                    "skull": {},
                    "snow_layer": {},
                    "light_weighted_pressure_plate": {},
                    "spruce_stairs": {},
                    "activator_rail": {},
                    "gold_ore": {},
                    "wall_sign": {},
                    "yellow_flower": {},
                    "ladder": {},
                    "red_mushroom": {},
                    "hopper": {},
                    "pumpkin": {},
                    "trapped_chest": {}
                }
            },
            "creativetab": {
                "CreativeTabs": {
                    "tabInventory": {},
                    "tabMisc": {},
                    "tabLabel": {},
                    "enchantmentTypes": {},
                    "tabRedstone": {},
                    "hasScrollbar": {},
                    "tabIndex": {},
                    "theTexture": {},
                    "drawTitle": {},
                    "tabBlock": {},
                    "tabFood": {},
                    "tabTransport": {},
                    "iconItemStack": {},
                    "tabCombat": {},
                    "tabTools": {},
                    "tabDecorations": {},
                    "tabAllSearch": {},
                    "tabBrewing": {},
                    "tabMaterials": {},
                    "creativeTabArray": {}
                }
            }
        },
        "optifine": {
            "util": {
                "CounterInt": {
                    "startValue": {},
                    "value": {}
                },
                "ChunkUtils": {
                    "hasEntities": function() {},
                    "getPrecipitationHeight": function() {},
                    "findFieldHasEntities": function() {},
                    "fieldHasEntities": {},
                    "fieldPrecipitationHeightMap": {},
                    "chunkClass": {}
                },
                "LinkedList": {
                    "last": {},
                    "size": {},
                    "first": {}
                },
                "ArrayUtils": {
                    "arrayToHexString": function() {},
                    "toPrimitive": function() {},
                    "collectionToArray": function() {},
                    "isSameOne": function() {},
                    "addObjectToArray": function() {},
                    "equalsOne": function() {},
                    "removeObjectFromArray": function() {},
                    "arrayToString": function() {},
                    "addIntToArray": function() {},
                    "contains": function() {},
                    "addIntsToArray": function() {},
                    "addObjectsToArray": function() {},
                    "equals": function() {}
                },
                "NumUtils": {
                    "mod": function() {},
                    "limit": function() {}
                },
                "SmoothFloat": {
                    "timeFadeDownSec": {},
                    "timeLastMs": {},
                    "timeFadeUpSec": {},
                    "valueLast": {}
                },
                "IteratorCache$IteratorReadOnly": {
                    "index": {},
                    "hasNext": {},
                    "list": {}
                },
                "MathUtils": {
                    "equalsDelta": function() {},
                    "roundDownToPowerOfTwo": function() {},
                    "roundToFloat": function() {},
                    "asin": function() {},
                    "acos": function() {},
                    "toRad": function() {},
                    "getSum": function() {},
                    "getAverage": function() {},
                    "toDeg": function() {},
                    "PId2": {},
                    "PI2": {},
                    "PI": {},
                    "ASIN_TABLE": {}
                },
                "RenderChunkUtils": {
                    "getRelativeBufferSize": function() {},
                    "getCountBlocks": function() {}
                },
                "FrameEvent": {
                    "isActive": function() {},
                    "mapEventFrames": {}
                },
                "ArrayCache": {
                    "cache": {},
                    "maxCacheSize": {},
                    "elementClass": {}
                },
                "CacheObjectArray": {
                    "testClone": function() {},
                    "testNewObjDyn": function() {},
                    "allocateArray": function() {},
                    "testNew": function() {},
                    "testNewObj": function() {},
                    "main": function() {},
                    "testCloneObj": function() {},
                    "freeArray": function() {},
                    "maxCacheSize": {},
                    "arrays": {}
                },
                "IntArray": {
                    "array": {},
                    "limit": {},
                    "position": {}
                },
                "CompoundKey": {
                    "compareKeys": function() {},
                    "keys": {},
                    "hashcode": {}
                },
                "MathUtilsTest$OPER": {
                    "valueOf": function() {},
                    "values": function() {},
                    "COS": {},
                    "ACOS": {},
                    "SIN": {},
                    "ASIN": {},
                    "$VALUES": {}
                },
                "TileEntityUtils": {
                    "setTileEntityRawName": function() {},
                    "getTileEntityName": function() {},
                    "getServerTileEntityRawName": function() {},
                    "updateTileEntityName": function() {},
                    "getTileEntityRawName": function() {}
                },
                "LinkedList$Node": {
                    "access$400": function() {},
                    "access$300": function() {},
                    "access$200": function() {},
                    "access$100": function() {},
                    "access$000": function() {},
                    "next": {},
                    "parent": {},
                    "item": {},
                    "prev": {}
                },
                "LockCounter": {
                    "lockCount": {}
                },
                "LinkedListTest": {
                    "checkLinkedList": function() {},
                    "lambda$dbgLinkedList$0": function() {},
                    "checkLists": function() {},
                    "dbg": function() {},
                    "main": function() {},
                    "dbgLinkedList": function() {}
                },
                "EntityUtils": {
                    "getEntityIdByName": function() {},
                    "getEntityClassByName": function() {},
                    "getEntityIdByClass": function() {},
                    "mapIdByClass": {},
                    "mapClassByName": {},
                    "mapIdByName": {}
                },
                "CompactArrayList": {
                    "loadFactor": {},
                    "countValid": {},
                    "initialCapacity": {},
                    "list": {}
                },
                "LongSupplier": {},
                "NativeMemory": {
                    "makeLongSupplier": function() {},
                    "getBufferAllocated": function() {},
                    "getBufferMaximum": function() {},
                    "bufferMaximumSupplier": {},
                    "bufferAllocatedSupplier": {}
                },
                "IteratorCache$IteratorReusable": {},
                "FontUtils": {
                    "getHdFontLocation": function() {},
                    "readFloat": function() {},
                    "readFontProperties": function() {},
                    "readBoolean": function() {},
                    "readCustomCharWidths": function() {}
                },
                "ResUtils": {
                    "readProperties": function() {},
                    "collectFilesZIP": function() {},
                    "isLowercase": function() {},
                    "collectFilesFolder": function() {},
                    "collectFiles": function() {},
                    "collectFilesFixed": function() {}
                },
                "StrUtils": {
                    "trimLeading": function() {},
                    "addIfNotContains": function() {},
                    "getSegment": function() {},
                    "indexOfMaskSingle": function() {},
                    "remove": function() {},
                    "equalsMask": function() {},
                    "split": function() {},
                    "trim": function() {},
                    "findPrefix": function() {},
                    "removePrefix": function() {},
                    "fillRight": function() {},
                    "isFilled": function() {},
                    "trimTrailing": function() {},
                    "equalsTrim": function() {},
                    "removeSuffix": function() {},
                    "addPrefixCheck": function() {},
                    "isEmpty": function() {},
                    "equalsMaskSingle": function() {},
                    "replacePrefix": function() {},
                    "findSuffix": function() {},
                    "fillLeft": function() {},
                    "removePrefixSuffix": function() {},
                    "startsWithMaskSingle": function() {},
                    "parseInt": function() {},
                    "addSuffixCheck": function() {},
                    "endsWithMaskSingle": function() {},
                    "replaceSuffix": function() {},
                    "equals": function() {},
                    "endsWith": function() {},
                    "stringInc": function() {},
                    "startsWith": function() {}
                },
                "IntegratedServerUtils": {
                    "getWorldServer": function() {},
                    "getTileEntity": function() {},
                    "getEntity": function() {}
                },
                "MathUtilsTest": {
                    "test": function() {},
                    "dbg": function() {},
                    "main": function() {}
                },
                "CacheLocal": {
                    "offsetX": {},
                    "offsetZ": {},
                    "cache": {},
                    "offsetY": {},
                    "lastDz": {},
                    "maxZ": {},
                    "maxY": {},
                    "maxX": {},
                    "lastZs": {}
                },
                "MemoryMonitor": {
                    "isGcEvent": function() {},
                    "getAllocationRateMb": function() {},
                    "getMemoryUsed": function() {},
                    "getStartMemoryMb": function() {},
                    "update": function() {},
                    "getStartTimeMs": function() {},
                    "startMemory": {},
                    "MB": {},
                    "memBytesSec": {},
                    "startTimeMs": {},
                    "gcEvent": {},
                    "lastTimeMs": {},
                    "lastMemory": {}
                },
                "TimedEvent": {
                    "isActive": function() {},
                    "mapEventTimes": {}
                },
                "IteratorCache": {
                    "access$000": function() {},
                    "finished": function() {},
                    "getReadOnly": function() {},
                    "dequeIterators": {}
                },
                "TextureUtils": {
                    "resourcesReloaded": function() {},
                    "bindTexture": function() {},
                    "getFrameData": function() {},
                    "saveGlTexture": function() {},
                    "getPowerOfTwo": function() {},
                    "fixResourcePath": function() {},
                    "dbgMipmaps": function() {},
                    "update": function() {},
                    "scaleImage": function() {},
                    "registerResourceListener": function() {},
                    "fixTextureDimensions": function() {},
                    "getTexture": function() {},
                    "getGLMaximumTextureSize": function() {},
                    "getBasePath": function() {},
                    "applyAnisotropicLevel": function() {},
                    "isPowerOfTwo": function() {},
                    "scaleToGrid": function() {},
                    "generateCustomMipmaps": function() {},
                    "getImageSize": function() {},
                    "twoToPower": function() {},
                    "fixResourceLocation": function() {},
                    "ceilPowerOfTwo": function() {},
                    "scaleToMin": function() {},
                    "getTextureMapBlocks": function() {},
                    "texBedrock": {},
                    "texIronOre": {},
                    "texLogSpruce": {},
                    "texGoldOre": {},
                    "texStoneslabSide": {},
                    "texLapisOre": {},
                    "iconClock": {},
                    "texCoarseDirt": {},
                    "texStone": {},
                    "texGrassSideSnowed": {},
                    "iconLavaStill": {},
                    "texLeavesSpruceOpaque": {},
                    "texStoneslabTop": {},
                    "texGrassSide": {},
                    "texSoulSand": {},
                    "texLogJungle": {},
                    "texLeavesJungle": {},
                    "texLeavesOak": {},
                    "texLogAcacia": {},
                    "texGlowstone": {},
                    "iconMyceliumTop": {},
                    "iconGlassPaneTop": {},
                    "iconGrassSideOverlay": {},
                    "iconSnow": {},
                    "texObsidian": {},
                    "texMyceliumSide": {},
                    "texClock": {},
                    "texLeavesAcacia": {},
                    "texSnow": {},
                    "texSand": {},
                    "texLogBirchTop": {},
                    "staticBuffer": {},
                    "texEndStone": {},
                    "texDirt": {},
                    "texLogOakTop": {},
                    "texRedstoneOre": {},
                    "iconWaterStill": {},
                    "texGlass": {},
                    "texCoalOre": {},
                    "texWaterFlow": {},
                    "iconLavaFlow": {},
                    "texRedstoneLampOff": {},
                    "texFarmlandDry": {},
                    "texLeavesBigOak": {},
                    "texLeavesSpruce": {},
                    "texLeavesBirch": {},
                    "iconWaterFlow": {},
                    "texLogOak": {},
                    "iconMyceliumSide": {},
                    "texGrassTop": {},
                    "iconPortal": {},
                    "texDiamondOre": {},
                    "iconGrassSideSnowed": {},
                    "SPRITE_PREFIX_BLOCKS": {},
                    "SPRITE_PREFIX_ITEMS": {},
                    "iconGlass": {},
                    "texFarmlandWet": {},
                    "texClay": {},
                    "iconGrassTop": {},
                    "texLeavesSpuce": {},
                    "texSandstoneBottom": {},
                    "texLogSpruceTop": {},
                    "texNetherrack": {},
                    "texCompass": {},
                    "iconCompass": {},
                    "texLogAcaciaTop": {},
                    "iconFireLayer0": {},
                    "iconFireLayer1": {},
                    "texLogBirch": {},
                    "texWaterStill": {},
                    "texLogBigOak": {},
                    "texGrassSideOverlay": {},
                    "texPortal": {},
                    "iconGrassSide": {},
                    "texLavaFlow": {},
                    "texGravel": {},
                    "texCactusSide": {},
                    "texRedstoneLampOn": {},
                    "texLogJungleTop": {},
                    "texFireLayer0": {},
                    "texLavaStill": {},
                    "texFireLayer1": {},
                    "texSandstoneTop": {},
                    "texLogBigOakTop": {},
                    "texMyceliumTop": {},
                    "texGlassPaneTop": {}
                },
                "CacheLocalByte": {
                    "offsetX": {},
                    "offsetZ": {},
                    "cache": {},
                    "offsetY": {},
                    "lastDz": {},
                    "maxZ": {},
                    "maxY": {},
                    "maxX": {},
                    "lastZs": {}
                },
                "DisplayModeComparator": {},
                "KeyUtils": {
                    "fixKeyConflicts": function() {}
                },
                "PropertiesOrdered": {
                    "keysOrdered": {}
                }
            },
            "entity": {
                "model": {
                    "CustomEntityModel": {},
                    "anim": {
                        "RenderResolverTileEntity": {},
                        "ModelUpdater": {
                            "modelVariableUpdaters": {}
                        },
                        "RenderEntityParameterBool": {
                            "valueOf": function() {},
                            "values": function() {},
                            "parse": function() {},
                            "IS_HURT": {},
                            "IS_SNEAKING": {},
                            "IS_RIDING": {},
                            "IS_CHILD": {},
                            "IS_RIDDEN": {},
                            "IS_INVISIBLE": {},
                            "IS_SPRINTING": {},
                            "IS_IN_LAVA": {},
                            "IS_ALIVE": {},
                            "name": {},
                            "VALUES": {},
                            "IS_ON_GROUND": {},
                            "renderManager": {},
                            "IS_GLOWING": {},
                            "IS_BURNING": {},
                            "IS_IN_WATER": {},
                            "IS_WET": {},
                            "$VALUES": {}
                        },
                        "IRenderResolver": {},
                        "ModelResolver": {
                            "customModelRenderers": {},
                            "modelAdapter": {},
                            "renderResolver": {},
                            "model": {},
                            "thisModelRenderer": {},
                            "partModelRenderer": {}
                        },
                        "RenderEntityParameterFloat": {
                            "valueOf": function() {},
                            "values": function() {},
                            "parse": function() {},
                            "MAX_HEALTH": {},
                            "POS_X": {},
                            "POS_Y": {},
                            "POS_Z": {},
                            "HURT_TIME": {},
                            "LIMB_SWING_SPEED": {},
                            "HEAD_YAW": {},
                            "MOVE_FORWARD": {},
                            "SWING_PROGRESS": {},
                            "LIMB_SWING": {},
                            "MOVE_STRAFING": {},
                            "HEAD_PITCH": {},
                            "IDLE_TIME": {},
                            "PARTIAL_TICKS": {},
                            "name": {},
                            "VALUES": {},
                            "SCALE": {},
                            "HEALTH": {},
                            "renderManager": {},
                            "REVENGE_TIME": {},
                            "$VALUES": {},
                            "AGE": {}
                        },
                        "ModelVariableType": {
                            "valueOf": function() {},
                            "values": function() {},
                            "parse": function() {},
                            "POS_X": {},
                            "POS_Y": {},
                            "POS_Z": {},
                            "SCALE_X": {},
                            "SCALE_Z": {},
                            "ANGLE_Z": {},
                            "SCALE_Y": {},
                            "ANGLE_Y": {},
                            "ANGLE_X": {},
                            "OFFSET_Z": {},
                            "name": {},
                            "OFFSET_X": {},
                            "VALUES": {},
                            "OFFSET_Y": {},
                            "$VALUES": {}
                        },
                        "ModelVariableUpdater": {
                            "expression": {},
                            "modelVariable": {},
                            "expressionText": {},
                            "modelVariableName": {}
                        },
                        "RenderResolverEntity": {},
                        "IModelResolver": {},
                        "ModelVariableFloat": {
                            "enumModelVariable": {},
                            "modelRenderer": {},
                            "name": {}
                        }
                    },
                    "ModelAdapterHeadHumanoid": {},
                    "CustomModelRegistry": {
                        "getModelNames": function() {},
                        "addModelAdapter": function() {},
                        "getModelAdapter": function() {},
                        "makeMapModelAdapters": function() {},
                        "mapModelAdapters": {}
                    },
                    "ModelAdapterMinecartTnt": {},
                    "ModelAdapterVillager": {},
                    "CustomEntityRenderer": {
                        "customModelRenderers": {},
                        "basePath": {},
                        "name": {},
                        "textureLocation": {},
                        "shadowSize": {}
                    },
                    "ModelAdapterEnderman": {},
                    "ModelAdapterMinecart": {},
                    "ModelAdapterBoat": {},
                    "ModelAdapterWitch": {},
                    "ModelAdapterGhast": {},
                    "ModelAdapterSkeleton": {},
                    "ModelAdapterWolf": {},
                    "ModelAdapterChest": {},
                    "ModelAdapterSpider": {},
                    "ModelAdapterSilverfish": {},
                    "ModelAdapterCreeper": {},
                    "ModelAdapterSheep": {},
                    "ModelAdapterHorse": {
                        "getMapPartFields": function() {},
                        "mapPartFields": {}
                    },
                    "ModelAdapterDragon": {},
                    "ModelAdapterWitherSkull": {},
                    "ModelAdapterChestLarge": {},
                    "ModelAdapterArmorStand": {},
                    "ModelAdapterZombie": {},
                    "ModelAdapterSheepWool": {},
                    "ModelAdapterBiped": {},
                    "ModelAdapterCaveSpider": {},
                    "ModelAdapterSquid": {},
                    "ModelAdapterMooshroom": {},
                    "IEntityRenderer": {},
                    "ModelAdapterRabbit": {
                        "getMapPartFields": function() {},
                        "mapPartFields": {}
                    },
                    "ModelAdapterPigZombie": {},
                    "ModelAdapterBanner": {},
                    "ModelAdapterPig": {},
                    "ModelAdapterCow": {},
                    "ModelAdapterSlime": {},
                    "ModelAdapterSign": {},
                    "ModelAdapterQuadruped": {},
                    "ModelAdapterIronGolem": {},
                    "ModelAdapterLeadKnot": {},
                    "ModelAdapter": {
                        "entityClass": {},
                        "aliases": {},
                        "name": {},
                        "shadowSize": {}
                    },
                    "ModelAdapterEnderChest": {},
                    "ModelAdapterEnderCrystal": {},
                    "ModelAdapterMagmaCube": {},
                    "ModelAdapterChicken": {},
                    "ModelAdapterOcelot": {
                        "getMapPartFields": function() {},
                        "mapPartFields": {}
                    },
                    "CustomModelRenderer": {
                        "modelRenderer": {},
                        "modelPart": {},
                        "attach": {},
                        "modelUpdater": {}
                    },
                    "ModelAdapterEndermite": {},
                    "ModelAdapterHeadSkeleton": {},
                    "ModelAdapterMinecartMobSpawner": {},
                    "ModelAdapterWither": {},
                    "ModelAdapterGuardian": {},
                    "ModelAdapterBook": {},
                    "ModelAdapterBat": {},
                    "ModelAdapterSnowman": {},
                    "ModelAdapterBlaze": {}
                }
            },
            "gui": {
                "TooltipProviderOptions": {
                    "getTooltipLines": function() {}
                },
                "GuiDetailSettingsOF": {
                    "settings": {},
                    "enumOptions": {},
                    "prevScreen": {},
                    "tooltipManager": {},
                    "title": {}
                },
                "IOptionControl": {},
                "TooltipManager": {
                    "mouseStillTime": {},
                    "tooltipProvider": {},
                    "lastMouseX": {},
                    "lastMouseY": {},
                    "guiScreen": {}
                },
                "GuiScreenOF": {
                    "getSelectedButton": function() {}
                },
                "GuiMessage": {
                    "messageLine2": {},
                    "messageLine1": {},
                    "listLines2": {},
                    "parentScreen": {},
                    "ticksUntilEnable": {},
                    "confirmButtonText": {}
                },
                "GuiChatOF": {
                    "CMD_RELOAD_CHUNKS": {},
                    "CMD_RELOAD_SHADERS": {}
                },
                "GuiOptionSliderOF": {
                    "option": {}
                },
                "GuiButtonOF": {},
                "GuiAnimationSettingsOF": {
                    "settings": {},
                    "enumOptions": {},
                    "prevScreen": {},
                    "title": {}
                },
                "GuiPerformanceSettingsOF": {
                    "settings": {},
                    "enumOptions": {},
                    "prevScreen": {},
                    "tooltipManager": {},
                    "title": {}
                },
                "GuiQualitySettingsOF": {
                    "settings": {},
                    "enumOptions": {},
                    "prevScreen": {},
                    "tooltipManager": {},
                    "title": {}
                },
                "TooltipProviderEnumShaderOptions": {},
                "GuiOtherSettingsOF": {
                    "settings": {},
                    "enumOptions": {},
                    "prevScreen": {},
                    "tooltipManager": {},
                    "title": {}
                },
                "TooltipProviderShaderOptions": {},
                "GuiOptionButtonOF": {
                    "option": {}
                },
                "TooltipProvider": {}
            },
            "shaders": {
                "ProgramStage": {
                    "valueOf": function() {},
                    "values": function() {},
                    "SHADOW": {},
                    "name": {},
                    "GBUFFERS": {},
                    "NONE": {},
                    "DEFERRED": {},
                    "COMPOSITE": {},
                    "$VALUES": {}
                },
                "Iterator3d": {
                    "main": function() {},
                    "blockPos": {},
                    "AXIS_Z": {},
                    "iteratorAxis": {},
                    "axis": {},
                    "kX": {},
                    "kY": {},
                    "AXIS_Y": {},
                    "kZ": {},
                    "AXIS_X": {}
                },
                "ClippingHelperShadow": {
                    "getInstance": function() {},
                    "shadowClipPlanes": {},
                    "instance": {},
                    "matInvMP": {},
                    "shadowClipPlaneCount": {},
                    "vecIntersection": {},
                    "frustumTest": {}
                },
                "ProgramStack": {
                    "stack": {}
                },
                "config": {
                    "ShaderOptionVariable": {
                        "parseValues": function() {},
                        "parseOption": function() {},
                        "PATTERN_VARIABLE": {}
                    },
                    "MacroProcessor": {
                        "process": function() {},
                        "getMacroOptions": function() {},
                        "getMacroHeader": function() {}
                    },
                    "ShaderOptionVariableConst": {
                        "parseOption": function() {},
                        "type": {},
                        "PATTERN_CONST": {}
                    },
                    "ShaderOptionSwitchConst": {
                        "parseOption": function() {},
                        "PATTERN_CONST": {}
                    },
                    "PropertyDefaultFastFancyOff": {
                        "PROPERTY_VALUES": {},
                        "USER_VALUES": {}
                    },
                    "ShaderOptionRest": {},
                    "ShaderPackParser": {
                        "parseRenderScale": function() {},
                        "parseProgramConditions": function() {},
                        "parseOptionExpression": function() {},
                        "parseShaderPackOptions": function() {},
                        "parseProfile": function() {},
                        "parseGuiScreen": function() {},
                        "getLines": function() {},
                        "parseBuffersFlip": function() {},
                        "parseCustomUniform": function() {},
                        "isOptionUsed": function() {},
                        "parseRenderScales": function() {},
                        "parseAlphaStates": function() {},
                        "makeMapBlendFactors": function() {},
                        "parseAlphaState": function() {},
                        "makeMapAlphaFuncs": function() {},
                        "makeExpressionCached": function() {},
                        "makeSetConstNames": function() {},
                        "parseProfiles": function() {},
                        "parseGuiScreens": function() {},
                        "findMacros": function() {},
                        "getShaderOption": function() {},
                        "parseBlendState": function() {},
                        "parseCustomUniforms": function() {},
                        "parseOptionSliders": function() {},
                        "loadFile": function() {},
                        "collectShaderOptions": function() {},
                        "resolveIncludes": function() {},
                        "parseBlendStates": function() {},
                        "mapAlphaFuncs": {},
                        "mapBlendFactors": {},
                        "PATTERN_VERSION": {},
                        "setConstNames": {},
                        "PATTERN_INCLUDE": {}
                    },
                    "MacroExpressionResolver": {
                        "mapMacroValues": {}
                    },
                    "ShaderOptionScreen": {},
                    "ScreenShaderOptions": {
                        "columns": {},
                        "name": {},
                        "shaderOptions": {}
                    },
                    "ShaderParser": {
                        "getDepthIndex": function() {},
                        "getColorIndex": function() {},
                        "isComposite": function() {},
                        "getIndex": function() {},
                        "isValidDrawBuffers": function() {},
                        "isFinal": function() {},
                        "isDeferred": function() {},
                        "getShadowColorIndex": function() {},
                        "getShadowDepthIndex": function() {},
                        "parseLine": function() {},
                        "PATTERN_EXTENSION": {},
                        "PATTERN_COMPOSITE_FSH": {},
                        "PATTERN_FINAL_FSH": {},
                        "PATTERN_DRAW_BUFFERS": {},
                        "PATTERN_CONST_INT": {},
                        "PATTERN_DEFERRED_FSH": {},
                        "PATTERN_ATTRIBUTE": {},
                        "PATTERN_CONST_VEC4": {},
                        "PATTERN_UNIFORM": {},
                        "PATTERN_CONST_FLOAT": {},
                        "PATTERN_CONST_BOOL": {},
                        "PATTERN_PROPERTY": {}
                    },
                    "ShaderOptionResolver": {
                        "mapOptions": {}
                    },
                    "MacroState": {
                        "isMacroLine": function() {},
                        "PATTERN_DIRECTIVE": {},
                        "IFNDEF": {},
                        "ELIF": {},
                        "ENDIF": {},
                        "active": {},
                        "DEFINE": {},
                        "IFDEF": {},
                        "PATTERN_DEFINED_FUNC": {},
                        "dequeResolved": {},
                        "mapMacroValues": {},
                        "ELSE": {},
                        "PATTERN_DEFINED": {},
                        "PATTERN_MACRO": {},
                        "IF": {},
                        "dequeState": {},
                        "UNDEF": {},
                        "MACRO_NAMES": {}
                    },
                    "ShaderOptionProfile": {
                        "getProfileNames": function() {},
                        "detectProfileName": function() {},
                        "VALUE_CUSTOM": {},
                        "NAME_PROFILE": {},
                        "profiles": {},
                        "options": {}
                    },
                    "ShaderOptionSwitch": {
                        "isTrue": function() {},
                        "parseOption": function() {},
                        "PATTERN_IFDEF": {},
                        "PATTERN_DEFINE": {}
                    },
                    "ShaderProfile": {
                        "name": {},
                        "mapOptionValues": {},
                        "disabledPrograms": {}
                    },
                    "ExpressionShaderOptionSwitch": {
                        "shaderOption": {}
                    },
                    "PropertyDefaultTrueFalse": {
                        "PROPERTY_VALUES": {},
                        "USER_VALUES": {}
                    },
                    "ShaderOption": {
                        "getIndex": function() {},
                        "visible": {},
                        "COLOR_BLUE": {},
                        "paths": {},
                        "values": {},
                        "name": {},
                        "description": {},
                        "COLOR_GREEN": {},
                        "COLOR_RED": {},
                        "value": {},
                        "enabled": {},
                        "valueDefault": {}
                    },
                    "RenderScale": {
                        "offsetX": {},
                        "offsetY": {},
                        "scale": {}
                    },
                    "ShaderMacros": {
                        "getOs": function() {},
                        "addMacroLine": function() {},
                        "getRenderer": function() {},
                        "getFixedMacroLines": function() {},
                        "getOptionMacroLines": function() {},
                        "getVendor": function() {},
                        "getPrefixMacro": function() {},
                        "getExtensions": function() {},
                        "MC_GL_RENDERER_MESA": {},
                        "MC_OLD_LIGHTING": {},
                        "MC_GLSL_VERSION": {},
                        "MC_NORMAL_MAP": {},
                        "MC_GL_RENDERER_GEFORCE": {},
                        "MC_GL_RENDERER_INTEL": {},
                        "extensionMacros": {},
                        "MC_FXAA_LEVEL": {},
                        "MC_HAND_DEPTH": {},
                        "MC_GL_RENDERER_GALLIUM": {},
                        "MC_GL_RENDERER_QUADRO": {},
                        "MC_GL_VENDOR_NVIDIA": {},
                        "MC_GL_VENDOR_INTEL": {},
                        "MC_GL_RENDERER_OTHER": {},
                        "MC_GL_VENDOR_ATI": {},
                        "MC_OS_MAC": {},
                        "MC_VERSION": {},
                        "MC_GL_VENDOR_XORG": {},
                        "MC_GL_VERSION": {},
                        "PREFIX_MACRO": {},
                        "MC_OLD_HAND_LIGHT": {},
                        "MC_GL_VENDOR_OTHER": {},
                        "MC_SHADOW_QUALITY": {},
                        "MC_SPECULAR_MAP": {},
                        "MC_GL_RENDERER_RADEON": {},
                        "MC_RENDER_QUALITY": {},
                        "MC_OS_LINUX": {},
                        "MC_OS_OTHER": {},
                        "MC_OS_WINDOWS": {}
                    },
                    "ShaderMacro": {
                        "name": {},
                        "value": {}
                    },
                    "EnumShaderOption": {
                        "valueOf": function() {},
                        "values": function() {},
                        "OLD_HAND_LIGHT": {},
                        "OLD_LIGHTING": {},
                        "propertyKey": {},
                        "NORMAL_MAP": {},
                        "RENDER_RES_MUL": {},
                        "resourceKey": {},
                        "TEX_MAG_FIL_N": {},
                        "HAND_DEPTH_MUL": {},
                        "SHADER_PACK": {},
                        "TEX_MAG_FIL_S": {},
                        "ANTIALIASING": {},
                        "SHADOW_CLIP_FRUSTRUM": {},
                        "TEX_MIN_FIL_B": {},
                        "TEX_MIN_FIL_S": {},
                        "TWEAK_BLOCK_DAMAGE": {},
                        "SHADOW_RES_MUL": {},
                        "CLOUD_SHADOW": {},
                        "TEX_MIN_FIL_N": {},
                        "TEX_MAG_FIL_B": {},
                        "SPECULAR_MAP": {},
                        "$VALUES": {},
                        "valueDefault": {}
                    },
                    "Property": {
                        "propertyName": {},
                        "defaultValue": {},
                        "propertyValues": {},
                        "userValues": {},
                        "userName": {},
                        "value": {}
                    }
                },
                "uniform": {
                    "ShaderParameterBool": {
                        "valueOf": function() {},
                        "values": function() {},
                        "parse": function() {},
                        "IS_HURT": {},
                        "IS_SNEAKING": {},
                        "IS_RIDING": {},
                        "IS_CHILD": {},
                        "IS_RIDDEN": {},
                        "IS_INVISIBLE": {},
                        "IS_SPRINTING": {},
                        "IS_IN_LAVA": {},
                        "IS_ALIVE": {},
                        "name": {},
                        "VALUES": {},
                        "IS_ON_GROUND": {},
                        "renderManager": {},
                        "IS_GLOWING": {},
                        "IS_BURNING": {},
                        "IS_IN_WATER": {},
                        "IS_WET": {},
                        "$VALUES": {}
                    },
                    "ShaderUniforms": {
                        "listUniforms": {}
                    },
                    "ShaderUniformM4": {
                        "transpose": {},
                        "matrix": {}
                    },
                    "UniformType": {
                        "valueOf": function() {},
                        "values": function() {},
                        "parse": function() {},
                        "FLOAT": {},
                        "BOOL": {},
                        "VEC2": {},
                        "VEC3": {},
                        "VEC4": {},
                        "INT": {},
                        "$VALUES": {}
                    },
                    "ShaderExpressionResolver": {
                        "mapExpressions": {}
                    },
                    "ShaderUniformBase": {
                        "name": {},
                        "LOCATION_UNKNOWN": {},
                        "locations": {},
                        "program": {},
                        "LOCATION_UNDEFINED": {}
                    },
                    "ShaderParameterIndexed": {
                        "index1": {},
                        "index2": {},
                        "type": {}
                    },
                    "ShaderUniform3f": {
                        "VALUE_UNKNOWN": {},
                        "programValues": {}
                    },
                    "ShaderUniform4i": {
                        "VALUE_UNKNOWN": {},
                        "programValues": {}
                    },
                    "ShaderUniform4f": {
                        "VALUE_UNKNOWN": {},
                        "programValues": {}
                    },
                    "ShaderUniform1f": {
                        "VALUE_UNKNOWN": {},
                        "programValues": {}
                    },
                    "CustomUniforms": {
                        "expressionsCached": {},
                        "uniforms": {}
                    },
                    "ShaderUniform2f": {
                        "VALUE_UNKNOWN": {},
                        "programValues": {}
                    },
                    "ShaderUniform2i": {
                        "VALUE_UNKNOWN": {},
                        "programValues": {}
                    },
                    "ShaderUniform1i": {
                        "VALUE_UNKNOWN": {},
                        "programValues": {}
                    },
                    "Smoother": {
                        "resetValues": function() {},
                        "getNextId": function() {},
                        "getSmoothValue": function() {},
                        "mapSmoothValues": {},
                        "counterIds": {}
                    },
                    "ShaderParameterFloat": {
                        "valueOf": function() {},
                        "values": function() {},
                        "instanceOf": function() {},
                        "SHADOW_MODEL_VIEW_INVERSE": {},
                        "WORLD_TIME": {},
                        "PREVIOUS_CAMERA_POSITION": {},
                        "GBUFFER_MODEL_VIEW": {},
                        "GBUFFER_MODEL_VIEW_INVERSE": {},
                        "NEAR": {},
                        "EYE_ALTITUDE": {},
                        "SUN_ANGLE": {},
                        "CAMERA_POSITION": {},
                        "SHADOW_MODEL_VIEW": {},
                        "TERRAIN_TEXTURE_SIZE": {},
                        "SHADOW_ANGLE": {},
                        "ASPECT_RATIO": {},
                        "RAINFALL": {},
                        "$VALUES": {},
                        "EYE_BRIGHTNESS": {},
                        "SKY_COLOR": {},
                        "indexNames2": {},
                        "FRAME_TIME_COUNTER": {},
                        "CENTER_DEPT_SMOOTH": {},
                        "indexNames1": {},
                        "HELD_ITEM_ID": {},
                        "SHADOW_PROJECTION": {},
                        "VIEW_WIDTH": {},
                        "FRAME_COUNTER": {},
                        "BLINDNESS": {},
                        "SCREEN_BRIGHTNESS": {},
                        "GBUFFER_PROJECTION": {},
                        "WORLD_DAY": {},
                        "name": {},
                        "ATLAS_SIZE": {},
                        "NIGHT_VISION": {},
                        "GBUFFER_PREVIOUS_PROJECTION": {},
                        "BIOME": {},
                        "TERRRAIN_ICON_SIZE": {},
                        "GBUFFER_PROJECTION_INVERSE": {},
                        "SHADOW_PROJECTION_INVERSE": {},
                        "HELD_BLOCK_LIGHT_VALUE2": {},
                        "UP_POSITION": {},
                        "IS_EYE_IN_WATER": {},
                        "uniform": {},
                        "TEMPERATURE": {},
                        "SUN_POSITION": {},
                        "SHADOW_LIGHT_POSITION": {},
                        "WETNESS": {},
                        "MOON_PHASE": {},
                        "HIDE_GUI": {},
                        "HELD_ITEM_ID2": {},
                        "MOON_POSITION": {},
                        "GBUFFER_PREVIOUS_MODEL_VIEW": {},
                        "FRAME_TIME": {},
                        "HELD_BLOCK_LIGHT_VALUE": {},
                        "RAIN_STRENGTH": {},
                        "FAR": {},
                        "VIEW_HEIGHT": {}
                    },
                    "CustomUniform": {
                        "expression": {},
                        "name": {},
                        "type": {},
                        "shaderUniform": {}
                    }
                },
                "CustomTextureRaw": {
                    "textureId": {},
                    "type": {},
                    "textureUnit": {}
                },
                "ShaderPackZip": {
                    "packFile": {},
                    "packZipFile": {},
                    "baseFolder": {}
                },
                "FlipTextures": {
                    "textures": {},
                    "flips": {},
                    "indexFlipped": {},
                    "changed": {}
                },
                "gui": {
                    "GuiButtonShaderOption": {
                        "shaderOption": {}
                    },
                    "GuiShaderOptions": {
                        "getButtonText": function() {},
                        "settings": {},
                        "prevScreen": {},
                        "tooltipManager": {},
                        "OPTION_EMPTY": {},
                        "screenText": {},
                        "OPTION_REST": {},
                        "screenName": {},
                        "title": {},
                        "OPTION_PROFILE": {},
                        "changed": {}
                    },
                    "GuiShaders": {
                        "toStringOnOff": function() {},
                        "toStringQuality": function() {},
                        "toStringValue": function() {},
                        "getValueIndex": function() {},
                        "toStringAa": function() {},
                        "getOSType": function() {},
                        "toStringHandDepth": function() {},
                        "EnumOS_WINDOWS": {},
                        "EnumOS_SOLARIS": {},
                        "screenTitle": {},
                        "HAND_DEPTH_VALUES": {},
                        "tooltipManager": {},
                        "saved": {},
                        "QUALITY_MULTIPLIERS": {},
                        "HAND_DEPTH_DEFAULT": {},
                        "EnumOS_OSX": {},
                        "updateTimer": {},
                        "EnumOS_UNKNOWN": {},
                        "QUALITY_MULTIPLIER_NAMES": {},
                        "EnumOS_LINUX": {},
                        "shaderList": {},
                        "parentGui": {},
                        "QUALITY_MULTIPLIER_DEFAULT": {},
                        "HAND_DEPTH_NAMES": {}
                    },
                    "GuiButtonDownloadShaders": {},
                    "GuiButtonEnumShaderOption": {
                        "getButtonText": function() {},
                        "enumShaderOption": {}
                    },
                    "GuiSliderShaderOption": {
                        "dragging": {},
                        "sliderValue": {},
                        "shaderOption": {}
                    },
                    "GuiSlotShaders": {
                        "access$100": function() {},
                        "access$000": function() {},
                        "shaderslist": {},
                        "lastClickedCached": {},
                        "shadersGui": {},
                        "selectedIndex": {}
                    }
                },
                "BlockAliases": {
                    "addToList": function() {},
                    "resourcesReloaded": function() {},
                    "loadModBlockAliases": function() {},
                    "getBlockAliasId": function() {},
                    "getBlockLayerPropertes": function() {},
                    "toArrays": function() {},
                    "loadBlockAliases": function() {},
                    "update": function() {},
                    "reset": function() {},
                    "blockLayerPropertes": {},
                    "blockAliases": {},
                    "updateOnResourcesReloaded": {}
                },
                "SMath": {
                    "invertMat4": function() {},
                    "multiplyMat4xMat4": function() {},
                    "invertMat4FBFA": function() {},
                    "multiplyMat4xVec4": function() {}
                },
                "ICustomTexture": {},
                "ShaderPackDefault": {},
                "Programs": {
                    "programNone": {},
                    "programs": {}
                },
                "ShaderPackNone": {},
                "EntityAliases": {
                    "addToList": function() {},
                    "resourcesReloaded": function() {},
                    "loadModEntityAliases": function() {},
                    "toArray": function() {},
                    "update": function() {},
                    "reset": function() {},
                    "loadEntityAliases": function() {},
                    "getEntityAliasId": function() {},
                    "entityAliases": {},
                    "updateOnResourcesReloaded": {}
                },
                "ShaderPackFolder": {
                    "packFile": {}
                },
                "IteratorAxis": {
                    "main": function() {},
                    "yNext": {},
                    "zDelta": {},
                    "xStart": {},
                    "hasNext": {},
                    "yStart": {},
                    "xNext": {},
                    "zNext": {},
                    "xEnd": {},
                    "pos": {},
                    "yDelta": {},
                    "zEnd": {},
                    "yEnd": {},
                    "zStart": {}
                },
                "IShaderPack": {},
                "HFNoiseTexture": {
                    "texID": {},
                    "textureUnit": {}
                },
                "SVertexAttrib": {
                    "offset": {},
                    "count": {},
                    "index": {},
                    "type": {}
                },
                "SVertexFormat": {
                    "makeDefVertexFormatBlock": function() {},
                    "setDefBakedFormat": function() {},
                    "copy": function() {},
                    "duplicate": function() {},
                    "makeDefVertexFormatItem": function() {},
                    "makeDefVertexFormatTextured": function() {},
                    "offsetEntity": {},
                    "defVertexFormatTextured": {},
                    "offsetMidTexCoord": {},
                    "vertexSizeBlock": {},
                    "offsetTangent": {}
                },
                "Program": {
                    "programStage": {},
                    "toggleColorTextures": {},
                    "drawBufSettings": {},
                    "index": {},
                    "blendState": {},
                    "buffersFlip": {},
                    "compositeMipmapSetting": {},
                    "countInstances": {},
                    "ref": {},
                    "drawBuffersBuffer": {},
                    "name": {},
                    "renderScale": {},
                    "programBackup": {},
                    "id": {},
                    "drawBuffers": {},
                    "alphaState": {}
                },
                "ShadersTex": {
                    "initDynamicTexture": function() {},
                    "updateTextureMinMagFilter": function() {},
                    "allocateTextureMap": function() {},
                    "getIntBuffer": function() {},
                    "readImage": function() {},
                    "uploadTexSub1": function() {},
                    "setupTexture": function() {},
                    "uploadTexSubForLoadAtlas": function() {},
                    "updateSubImage": function() {},
                    "genMipmapAlpha": function() {},
                    "loadNSMap1": function() {},
                    "updateDynTexSubImage1": function() {},
                    "prepareAF": function() {},
                    "blendColor": function() {},
                    "log2": function() {},
                    "deleteTextures": function() {},
                    "loadNSMapFile": function() {},
                    "blend4Alpha": function() {},
                    "bindTexture": function() {},
                    "blend4Simple": function() {},
                    "fixTransparentColor": function() {},
                    "getMultiTexID": function() {},
                    "loadNSMap": function() {},
                    "getNSMapLocation": function() {},
                    "fillIntBuffer": function() {},
                    "bindNSTextures": function() {},
                    "loadLayeredTexture": function() {},
                    "genMipmapsSimple": function() {},
                    "roundUpPOT": function() {},
                    "genMipmapSimple": function() {},
                    "updateSubTex1": function() {},
                    "readImageAndMipmaps": function() {},
                    "createDefaultTexture": function() {},
                    "createAIntImage": function() {},
                    "loadSimpleTexture": function() {},
                    "isSemiTransparent": function() {},
                    "bindTextures": function() {},
                    "getFrameTexData": function() {},
                    "getIntArray": function() {},
                    "mergeImage": function() {},
                    "updateDynamicTexture": function() {},
                    "defNormTexColor": {},
                    "initialBufferSize": {},
                    "intBuffer": {},
                    "multiTexMap": {},
                    "byteBuffer": {},
                    "defBaseTexColor": {},
                    "intArray": {},
                    "defSpecTexColor": {}
                },
                "ShadowUtils": {
                    "makeShadowChunkIterator": function() {}
                },
                "ItemAliases": {
                    "addToList": function() {},
                    "resourcesReloaded": function() {},
                    "getItemAliasId": function() {},
                    "loadModItemAliases": function() {},
                    "toArray": function() {},
                    "update": function() {},
                    "reset": function() {},
                    "loadItemAliases": function() {},
                    "itemAliases": {},
                    "NO_ALIAS": {},
                    "updateOnResourcesReloaded": {}
                },
                "DefaultTexture": {},
                "CustomTextureLocation": {
                    "VARIANT_NORMAL": {},
                    "texture": {},
                    "VARIANT_BASE": {},
                    "variant": {},
                    "location": {},
                    "VARIANT_SPECULAR": {},
                    "textureUnit": {}
                },
                "ShaderUtils": {
                    "detectProfile": function() {},
                    "getShaderOption": function() {},
                    "matchProfile": function() {}
                },
                "SVertexBuilder": {
                    "beginAddVertex": function() {},
                    "beginAddVertexData": function() {},
                    "drawArrays": function() {},
                    "endAddVertexData": function() {},
                    "endSetVertexFormat": function() {},
                    "initVertexBuilder": function() {},
                    "calcNormalChunkLayer": function() {},
                    "endAddVertex": function() {},
                    "hasTangent": {},
                    "offsetUV": {},
                    "entityDataIndex": {},
                    "offsetNormal": {},
                    "hasNormal": {},
                    "vertexSize": {},
                    "offsetUVCenter": {},
                    "hasUV": {},
                    "hasUVCenter": {},
                    "entityData": {}
                },
                "CustomTexture": {
                    "path": {},
                    "texture": {},
                    "textureUnit": {}
                },
                "MultiTexID": {
                    "spec": {},
                    "base": {},
                    "norm": {}
                },
                "ShaderProgramData": {
                    "uniform_hideGUI": {},
                    "uniform_depthtex2": {},
                    "uniform_gbufferProjection": {},
                    "uniform_depthtex1": {},
                    "uniform_depthtex0": {},
                    "uniform_aspectRatio": {},
                    "uniform_terrainTextureSize": {},
                    "uniform_gbufferProjectionInverse": {},
                    "uniform_gbufferPreviousProjection": {},
                    "uniform_skyColor": {},
                    "uniform_sunAngle": {},
                    "uniform_worldTime": {},
                    "uniform_upPosition": {},
                    "uniform_noisetex": {},
                    "uniform_gbufferModelViewInverse": {},
                    "uniform_normals": {},
                    "uniform_shadowProjection": {},
                    "uniform_gdepth": {},
                    "uniform_sunPosition": {},
                    "uniform_gdepthtex": {},
                    "uniform_shadowAngle": {},
                    "uniform_centerDepthSmooth": {},
                    "uniform_near": {},
                    "uniform_shadowcolor1": {},
                    "uniform_shadowcolor0": {},
                    "uniform_fogColor": {},
                    "uniform_wetness": {},
                    "uniform_moonPhase": {},
                    "uniform_atlasSize": {},
                    "uniform_eyeBrightnessSmooth": {},
                    "uniform_eyeBrightness": {},
                    "uniform_texture": {},
                    "uniform_cameraPosition": {},
                    "uniform_gaux4": {},
                    "uniform_gaux2": {},
                    "uniform_gaux3": {},
                    "uniform_rainStrength": {},
                    "uniform_gaux1": {},
                    "uniform_viewHeight": {},
                    "uniform_gbufferPreviousModelView": {},
                    "uniform_eyeAltitude": {},
                    "uniform_shadowcolor": {},
                    "uniform_gnormal": {},
                    "uniform_colortex7": {},
                    "uniform_fogMode": {},
                    "uniform_viewWidth": {},
                    "uniform_colortex1": {},
                    "uniform_heldItemId": {},
                    "uniform_moonPosition": {},
                    "uniform_colortex2": {},
                    "uniform_frameTimeCounter": {},
                    "uniform_shadowModelViewInverse": {},
                    "uniform_colortex0": {},
                    "uniform_shadowProjectionInverse": {},
                    "uniform_shadowtex0": {},
                    "uniform_colortex5": {},
                    "uniform_shadowtex1": {},
                    "uniform_colortex6": {},
                    "uniform_colortex3": {},
                    "uniform_previousCameraPosition": {},
                    "uniform_colortex4": {},
                    "uniform_shadowModelView": {},
                    "uniform_gbufferModelView": {},
                    "uniform_specular": {},
                    "uniform_shadow": {},
                    "uniform_far": {},
                    "uniform_isEyeInWater": {},
                    "uniform_watershadow": {},
                    "programIDGL": {},
                    "uniform_heldBlockLightValue": {},
                    "uniform_lightmap": {},
                    "uniform_gcolor": {},
                    "uniform_composite": {},
                    "uniform_terrainIconSize": {},
                    "uniform_tex": {}
                },
                "IteratorRenderChunks": {
                    "posBlock": {},
                    "Iterator3d": {},
                    "viewFrustum": {}
                },
                "ShadersRender": {
                    "setupTerrain": function() {},
                    "beginBlockDamage": function() {},
                    "renderFPOverlay": function() {},
                    "endTranslucent": function() {},
                    "renderEnchantedGlintEnd": function() {},
                    "beginTranslucent": function() {},
                    "beaconBeamBegin": function() {},
                    "setFrustrumPosition": function() {},
                    "renderShadowMap": function() {},
                    "beginTerrainCutout": function() {},
                    "preRenderChunkLayer": function() {},
                    "beginTerrainCutoutMipped": function() {},
                    "renderHand0": function() {},
                    "renderHand1": function() {},
                    "beaconBeamDraw2": function() {},
                    "beaconBeamDraw1": function() {},
                    "renderEnchantedGlintBegin": function() {},
                    "postRenderChunkLayer": function() {},
                    "endTerrain": function() {},
                    "renderItemFP": function() {},
                    "beginTerrainSolid": function() {},
                    "endBlockDamage": function() {},
                    "beaconBeamStartQuad1": function() {},
                    "setupArrayPointersVbo": function() {},
                    "renderEndPortal": function() {},
                    "beaconBeamStartQuad2": function() {},
                    "END_PORTAL_TEXTURE": {}
                },
                "BlockAlias": {
                    "blockAliasId": {},
                    "matchBlocks": {}
                }
            },
            "player": {
                "CapeUtils": {
                    "reloadCape": function() {},
                    "parseCape": function() {},
                    "downloadCape": function() {},
                    "isElytraCape": function() {},
                    "PATTERN_USERNAME": {}
                },
                "PlayerItemRenderer": {
                    "modelRenderer": {},
                    "attachTo": {}
                },
                "PlayerItemModel": {
                    "getAttachModel": function() {},
                    "texture": {},
                    "textureImage": {},
                    "usePlayerTexture": {},
                    "textureLocation": {},
                    "locationMissing": {},
                    "ATTACH_CAPE": {},
                    "textureSize": {},
                    "ATTACH_LEFT_LEG": {},
                    "modelRenderers": {},
                    "ATTACH_RIGHT_ARM": {},
                    "ATTACH_RIGHT_LEG": {},
                    "ATTACH_HEAD": {},
                    "ATTACH_LEFT_ARM": {},
                    "ATTACH_BODY": {}
                },
                "PlayerConfigurations": {
                    "setPlayerConfiguration": function() {},
                    "getPlayerConfiguration": function() {},
                    "renderPlayerItems": function() {},
                    "getMapConfigurations": function() {},
                    "mapConfigurations": {},
                    "reloadPlayerItems": {},
                    "timeReloadPlayerItemsMs": {}
                },
                "PlayerConfiguration": {
                    "playerItemModels": {},
                    "initialized": {}
                },
                "ModelPlayerItem": {},
                "CapeImageBuffer": {
                    "elytraOfCape": {},
                    "resourceLocation": {},
                    "player": {}
                },
                "PlayerConfigurationReceiver": {
                    "player": {}
                },
                "PlayerItemsLayer": {
                    "register": function() {},
                    "renderPlayer": {}
                }
            },
            "http": {
                "HttpPipelineRequest": {
                    "httpListener": {},
                    "closed": {},
                    "httpRequest": {}
                },
                "HttpPipeline": {
                    "getConnection": function() {},
                    "addRequest": function() {},
                    "makeConnectionKey": function() {},
                    "removeConnection": function() {},
                    "get": function() {},
                    "hasActiveRequests": function() {},
                    "makeRequest": function() {},
                    "executeRequest": function() {},
                    "HEADER_ACCEPT": {},
                    "HEADER_LOCATION": {},
                    "HEADER_USER_AGENT": {},
                    "HEADER_VALUE_CHUNKED": {},
                    "mapConnections": {},
                    "HEADER_CONNECTION": {},
                    "HEADER_VALUE_KEEP_ALIVE": {},
                    "HEADER_TRANSFER_ENCODING": {},
                    "HEADER_HOST": {},
                    "HEADER_KEEP_ALIVE": {}
                },
                "FileDownloadThread": {
                    "urlString": {},
                    "listener": {}
                },
                "IFileDownloadListener": {},
                "IFileUploadListener": {},
                "HttpPipelineSender": {
                    "httpPipelineConnection": {},
                    "CRLF": {},
                    "ASCII": {}
                },
                "HttpListener": {},
                "FileUploadThread": {
                    "headers": {},
                    "urlString": {},
                    "listener": {},
                    "content": {}
                },
                "HttpPipelineConnection": {
                    "countRequests": {},
                    "keepaliveTimeoutMs": {},
                    "TIMEOUT_CONNECT_MS": {},
                    "TIMEOUT_READ_MS": {},
                    "httpPipelineSender": {},
                    "listRequestsSend": {},
                    "inputStream": {},
                    "listRequests": {},
                    "responseReceived": {},
                    "proxy": {},
                    "patternFullUrl": {},
                    "timeLastActivityMs": {},
                    "port": {},
                    "keepaliveMaxCount": {},
                    "host": {},
                    "httpPipelineReceiver": {},
                    "LF": {},
                    "socket": {},
                    "outputStream": {},
                    "terminated": {}
                },
                "HttpResponse": {
                    "headers": {},
                    "statusLine": {},
                    "body": {},
                    "status": {}
                },
                "HttpUtils": {
                    "post": function() {},
                    "get": function() {},
                    "getPlayerItemsUrl": function() {},
                    "playerItemsUrl": {},
                    "POST_URL": {},
                    "SERVER_URL": {}
                },
                "HttpPipelineReceiver": {
                    "httpPipelineConnection": {},
                    "HEADER_CONTENT_LENGTH": {},
                    "LF": {},
                    "ASCII": {},
                    "CR": {}
                },
                "HttpRequest": {
                    "headers": {},
                    "HTTP_1_0": {},
                    "method": {},
                    "HTTP_1_1": {},
                    "METHOD_POST": {},
                    "body": {},
                    "METHOD_HEAD": {},
                    "proxy": {},
                    "file": {},
                    "port": {},
                    "redirects": {},
                    "host": {},
                    "http": {},
                    "METHOD_GET": {}
                }
            },
            "reflect": {
                "ReflectorField": {
                    "targetField": {},
                    "checked": {},
                    "fieldLocator": {}
                },
                "ReflectorConstructor": {
                    "findConstructor": function() {},
                    "parameterTypes": {},
                    "targetConstructor": {},
                    "reflectorClass": {},
                    "checked": {}
                },
                "ReflectorMethod": {
                    "getMethod": function() {},
                    "getMethods": function() {},
                    "targetMethodParameterTypes": {},
                    "targetMethod": {},
                    "reflectorClass": {},
                    "targetMethodName": {},
                    "checked": {}
                },
                "IFieldLocator": {},
                "FieldLocatorFixed": {
                    "field": {}
                },
                "FieldLocatorTypes": {
                    "field": {}
                },
                "FieldLocatorType": {
                    "targetFieldIndex": {},
                    "targetFieldType": {},
                    "reflectorClass": {}
                },
                "ReflectorClass": {
                    "targetClassName": {},
                    "targetClass": {},
                    "checked": {}
                },
                "ReflectorRaw": {
                    "getReflectorField": function() {},
                    "getFields": function() {},
                    "getFieldValue": function() {},
                    "setFieldValue": function() {},
                    "getField": function() {},
                    "getFieldsAfter": function() {},
                    "getFieldAfter": function() {}
                },
                "ReflectorFields": {
                    "fieldCount": {},
                    "reflectorClass": {},
                    "reflectorFields": {},
                    "fieldType": {}
                },
                "FieldLocatorName": {
                    "targetFieldName": {},
                    "reflectorClass": {}
                },
                "FieldLocatorActionKeyF3": {},
                "IResolvable": {},
                "ReflectorForge": {
                    "getForgeModIds": function() {},
                    "getMapData": function() {},
                    "FMLClientHandler_trackBrokenTexture": function() {},
                    "putLaunchBlackboard": function() {},
                    "blockHasTileEntity": function() {},
                    "getOptiFineResourceStream": function() {},
                    "canEntitySpawn": function() {},
                    "isItemDamaged": function() {},
                    "armorHasOverlay": function() {},
                    "FMLClientHandler_trackMissingTexture": function() {},
                    "renderFirstPersonHand": function() {},
                    "doSpecialSpawn": function() {},
                    "EVENT_RESULT_ALLOW": {},
                    "EVENT_RESULT_DEFAULT": {},
                    "EVENT_RESULT_DENY": {}
                },
                "ReflectorResolver": {
                    "resolve": function() {},
                    "register": function() {},
                    "RESOLVABLES": {},
                    "resolved": {}
                }
            },
            "ChunkPosComparator": {
                "pitchNorm": {},
                "chunkPosX": {},
                "chunkPosZ": {},
                "yawRad": {}
            },
            "CustomColormap": {
                "toRgb": function() {},
                "fixTextureName": function() {},
                "dbg": function() {},
                "warn": function() {},
                "parseTexture": function() {},
                "yOffset": {},
                "FORMAT_GRID_STRING": {},
                "color": {},
                "FORMAT_FIXED_STRING": {},
                "KEY_SOURCE": {},
                "FORMAT_STRINGS": {},
                "source": {},
                "FORMAT_VANILLA": {},
                "colors": {},
                "FORMAT_GRID": {},
                "KEY_Y_VARIANCE": {},
                "KEY_FORMAT": {},
                "FORMAT_VANILLA_STRING": {},
                "KEY_Y_OFFSET": {},
                "colorsRgb": {},
                "FORMAT_UNKNOWN": {},
                "height": {},
                "FORMAT_FIXED": {},
                "KEY_BLOCKS": {},
                "format": {},
                "matchBlocks": {},
                "basePath": {},
                "name": {},
                "width": {},
                "KEY_COLOR": {},
                "yVariance": {}
            },
            "LightMap": {
                "warn": function() {},
                "dbg": function() {},
                "lightMapRgb": {},
                "torchRgbs": {},
                "sunRgbs": {}
            },
            "config": {
                "Weather": {
                    "valueOf": function() {},
                    "values": function() {},
                    "getWeather": function() {},
                    "RAIN": {},
                    "CLEAR": {},
                    "THUNDER": {},
                    "$VALUES": {}
                },
                "EntityClassLocator": {},
                "INameGetter": {},
                "ConnectedParser": {
                    "parseColor": function() {},
                    "parseProfessionId": function() {},
                    "getValueName": function() {},
                    "parsePropertyValue": function() {},
                    "parseCareerId": function() {},
                    "getPropertyValue": function() {},
                    "parseCareerIds": function() {},
                    "parseValue": function() {},
                    "parseColor4": function() {},
                    "DYE_COLORS_INVALID": {},
                    "NAME_GETTER_ENUM": {},
                    "NAME_GETTER_DYE_COLOR": {},
                    "context": {},
                    "PROFESSIONS_INVALID": {}
                },
                "RangeListInt": {
                    "ranges": {}
                },
                "MatchBlock": {
                    "blockId": {},
                    "metadatas": {}
                },
                "IObjectLocator": {},
                "ParserEnchantmentId": {},
                "GlVersion": {
                    "major": {},
                    "minor": {},
                    "release": {},
                    "suffix": {}
                },
                "Matches": {
                    "blockId": function() {},
                    "metadata": function() {},
                    "biome": function() {},
                    "sprite": function() {},
                    "block": function() {}
                },
                "IParserInt": {},
                "RangeInt": {
                    "min": {},
                    "max": {}
                },
                "NbtTagValue": {
                    "getChildTag": function() {},
                    "getNbtString": function() {},
                    "PREFIX_IPATTERN": {},
                    "PATTERN_HEX_COLOR": {},
                    "valueFormat": {},
                    "PREFIX_IREGEX": {},
                    "type": {},
                    "TYPE_PATTERN": {},
                    "TYPE_IPATTERN": {},
                    "TYPE_IREGEX": {},
                    "FORMAT_HEX_COLOR": {},
                    "negative": {},
                    "TYPE_REGEX": {},
                    "FORMAT_DEFAULT": {},
                    "PREFIX_HEX_COLOR": {},
                    "name": {},
                    "PREFIX_REGEX": {},
                    "value": {},
                    "TYPE_TEXT": {},
                    "PREFIX_PATTERN": {},
                    "parents": {}
                },
                "ItemLocator": {},
                "VillagerProfession": {
                    "profession": {},
                    "careers": {}
                }
            },
            "CustomGuiProperties$EnumContainer": {
                "valueOf": function() {},
                "values": function() {},
                "BREWING_STAND": {},
                "ENCHANTMENT": {},
                "HORSE": {},
                "DISPENSER": {},
                "CREATIVE": {},
                "BEACON": {},
                "HOPPER": {},
                "VILLAGER": {},
                "CHEST": {},
                "FURNACE": {},
                "ANVIL": {},
                "INVENTORY": {},
                "CRAFTING": {},
                "SHULKER_BOX": {},
                "VALUES": {},
                "$VALUES": {}
            },
            "render": {
                "GlBlendState": {
                    "srcFactor": {},
                    "dstFactorAlpha": {},
                    "srcFactorAlpha": {},
                    "dstFactor": {},
                    "enabled": {}
                },
                "GlAlphaState": {
                    "ref": {},
                    "func": {},
                    "enabled": {}
                },
                "RenderEnv": {
                    "blockState": {},
                    "metadata": {},
                    "borderFlags": {},
                    "borderFlags3": {},
                    "regionRenderCacheBuilder": {},
                    "borderFlags2": {},
                    "overlaysRendered": {},
                    "listsQuadsOverlay": {},
                    "blockPos": {},
                    "breakingAnimation": {},
                    "aoFace": {},
                    "arrayQuadsCtm3": {},
                    "arrayQuadsCtm4": {},
                    "TRUE": {},
                    "arrayQuadsCtm1": {},
                    "arrayQuadsCtm2": {},
                    "borderDirections": {},
                    "colorizerBlockPosM": {},
                    "blockId": {},
                    "smartLeaves": {},
                    "listQuadsCtmMultipass": {},
                    "boundsFlags": {},
                    "quadBounds": {},
                    "FALSE": {},
                    "UNKNOWN": {},
                    "listQuadsCustomizer": {}
                },
                "CloudRenderer": {
                    "updatePlayerX": {},
                    "updatePlayerY": {},
                    "renderFancy": {},
                    "cloudColor": {},
                    "glListClouds": {},
                    "updateRenderFancy": {},
                    "updateCloudColor": {},
                    "cloudTickCounter": {},
                    "mc": {},
                    "updatePlayerZ": {},
                    "updated": {},
                    "updateCloudTickCounter": {},
                    "partialTicks": {}
                },
                "VboRange": {
                    "node": {},
                    "size": {},
                    "position": {}
                },
                "Blender": {
                    "clearBlend": function() {},
                    "setupBlend": function() {},
                    "parseBlend": function() {},
                    "BLEND_SUBSTRACT": {},
                    "BLEND_DODGE": {},
                    "BLEND_ADD": {},
                    "BLEND_OVERLAY": {},
                    "BLEND_SCREEN": {},
                    "BLEND_DEFAULT": {},
                    "BLEND_BURN": {},
                    "BLEND_REPLACE": {},
                    "BLEND_MULTIPLY": {},
                    "BLEND_ALPHA": {}
                },
                "AabbFrame": {
                    "frameCount": {},
                    "inFrustumFully": {}
                },
                "VboRegion": {
                    "positionTop": {},
                    "sizeUsed": {},
                    "rangeList": {},
                    "bufferIndexVertex": {},
                    "drawMode": {},
                    "compactRangeLast": {},
                    "vertexBytes": {},
                    "glBufferId": {},
                    "layer": {},
                    "capacity": {},
                    "bufferCountVertex": {}
                },
                "ChunkVisibility": {
                    "makeEnumFacingArrays": function() {},
                    "getFacingsNotOpposite": function() {},
                    "reset": function() {},
                    "getMaxChunkY": function() {},
                    "isFinished": function() {},
                    "iMaxStaticFinal": {},
                    "worldLast": {},
                    "pcxLast": {},
                    "pczLast": {},
                    "MASK_FACINGS": {},
                    "counter": {},
                    "iMaxStatic": {},
                    "enumFacingArrays": {},
                    "enumFacingOppositeArrays": {}
                }
            },
            "expr": {
                "IExpressionBool": {},
                "ExpressionParser": {
                    "makeConstantFloat": function() {},
                    "checkNull": function() {},
                    "getGroup": function() {},
                    "expressionResolver": {}
                },
                "FunctionFloat": {
                    "evalFloat": function() {},
                    "smoothId": {},
                    "arguments": {},
                    "type": {}
                },
                "Parameters": {
                    "parameterTypes": {}
                },
                "FunctionBool": {
                    "arguments": {},
                    "type": {}
                },
                "ConstantFloat": {
                    "value": {}
                },
                "ParametersVariable": {
                    "normalize": function() {},
                    "last": {},
                    "repeat": {},
                    "maxCount": {},
                    "EMPTY": {},
                    "first": {}
                },
                "IExpressionFloat": {},
                "FunctionFloatArray": {
                    "arguments": {},
                    "type": {}
                },
                "TokenParser": {
                    "readToken": function() {},
                    "parse": function() {}
                },
                "IExpressionCached": {},
                "ExpressionFloatArrayCached": {
                    "expression": {},
                    "cached": {},
                    "value": {}
                },
                "FunctionType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "parse": function() {},
                    "evalFloat": function() {},
                    "TAN": {},
                    "SQRT": {},
                    "BETWEEN": {},
                    "precedence": {},
                    "MINUS": {},
                    "GREATER_OR_EQUAL": {},
                    "FLOOR": {},
                    "SMALLER": {},
                    "VEC2": {},
                    "VEC3": {},
                    "ACOS": {},
                    "CEIL": {},
                    "expressionType": {},
                    "IF": {},
                    "$VALUES": {},
                    "MUL": {},
                    "LOG": {},
                    "IN": {},
                    "ATAN2": {},
                    "TRUE": {},
                    "SMOOTH": {},
                    "mapSmooth": {},
                    "NOT": {},
                    "MIN": {},
                    "AND": {},
                    "name": {},
                    "SIN": {},
                    "POW": {},
                    "parameters": {},
                    "ATAN": {},
                    "PLUS": {},
                    "MAX": {},
                    "ROUND": {},
                    "CLAMP": {},
                    "ASIN": {},
                    "TODEG": {},
                    "FRAC": {},
                    "ABS": {},
                    "SMALLER_OR_EQUAL": {},
                    "VALUES": {},
                    "SIGNUM": {},
                    "TORAD": {},
                    "MOD": {},
                    "OR": {},
                    "EQUALS": {},
                    "COS": {},
                    "RANDOM": {},
                    "EQUAL": {},
                    "GREATER": {},
                    "VEC4": {},
                    "TIME": {},
                    "DIV": {},
                    "NEG": {},
                    "NOT_EQUAL": {},
                    "PI": {},
                    "FALSE": {},
                    "EXP": {},
                    "FMOD": {}
                },
                "IParameters": {},
                "IExpressionFloatArray": {},
                "Token": {
                    "text": {},
                    "type": {}
                },
                "ExpressionType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "FLOAT": {},
                    "FLOAT_ARRAY": {},
                    "BOOL": {},
                    "$VALUES": {}
                },
                "IExpression": {},
                "TestExpressions": {
                    "main": function() {}
                },
                "TokenType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "getTypeByFirstChar": function() {},
                    "COMMA": {},
                    "BRACKET_CLOSE": {},
                    "NUMBER": {},
                    "OPERATOR": {},
                    "charsFirst": {},
                    "BRACKET_OPEN": {},
                    "VALUES": {},
                    "IDENTIFIER": {},
                    "$VALUES": {},
                    "charsNext": {}
                },
                "ParseException": {},
                "TokenType$Const": {
                    "DIGITS": {},
                    "ALPHAS": {}
                },
                "IExpressionResolver": {},
                "ExpressionFloatCached": {
                    "expression": {},
                    "cached": {},
                    "value": {}
                }
            },
            "BlockPosM": {
                "getAllInBoxMutable": function() {},
                "needsUpdate": {},
                "level": {},
                "mx": {},
                "my": {},
                "mz": {},
                "facings": {}
            },
            "Lagometer": {
                "updateLagometer": function() {},
                "renderTimeDivider": function() {},
                "isActive": function() {},
                "showLagometer": function() {},
                "renderTime": function() {},
                "timesScheduledExecutables": {},
                "timerChunkUpload": {},
                "timerTerrain": {},
                "timesServer": {},
                "prevFrameTimeNano": {},
                "active": {},
                "timerScheduledExecutables": {},
                "timesChunkUpload": {},
                "profiler": {},
                "timesChunkUpdate": {},
                "timerTick": {},
                "timerServer": {},
                "renderTimeNano": {},
                "timesVisibility": {},
                "timerVisibility": {},
                "mc": {},
                "gameSettings": {},
                "timesTerrain": {},
                "gcs": {},
                "numRecordedFrameTimes": {},
                "timesTick": {},
                "timerChunkUpdate": {},
                "timesFrame": {}
            },
            "DynamicLights": {
                "loadModLightLevels": function() {},
                "updateMapDynamicLights": function() {},
                "getCombinedLight": function() {},
                "clear": function() {},
                "update": function() {},
                "entityAdded": function() {},
                "removeLights": function() {},
                "entityRemoved": function() {},
                "loadModConfiguration": function() {},
                "initialize": function() {},
                "getItemStack": function() {},
                "getLightLevel": function() {},
                "getCount": function() {},
                "MAX_DIST_SQ": {},
                "LIGHT_LEVEL_MAGMA_CUBE": {},
                "LIGHT_LEVEL_PRISMARINE_CRYSTALS": {},
                "mapEntityLightLevels": {},
                "LIGHT_LEVEL_MAX": {},
                "mapDynamicLights": {},
                "mapItemLightLevels": {},
                "MAX_DIST": {},
                "LIGHT_LEVEL_BLAZE": {},
                "LIGHT_LEVEL_FIRE": {},
                "initialized": {},
                "timeUpdateMs": {},
                "LIGHT_LEVEL_GLOWSTONE_DUST": {},
                "LIGHT_LEVEL_MAGMA_CUBE_CORE": {}
            },
            "CrashReporter": {
                "extendCrashReport": function() {},
                "makeReport": function() {},
                "makeSummary": function() {},
                "onCrashReport": function() {}
            },
            "DynamicLightsMap": {
                "dirty": {},
                "list": {},
                "map": {}
            },
            "CustomSkyLayer": {
                "startFadeIn": {},
                "rotate": {},
                "WEATHER_THUNDER": {},
                "smoothPositionBrightness": {},
                "weatherRain": {},
                "biomes": {},
                "blend": {},
                "weatherClear": {},
                "DEFAULT_AXIS": {},
                "source": {},
                "textureId": {},
                "axis": {},
                "speed": {},
                "weatherThunder": {},
                "transition": {},
                "WEATHER_CLEAR": {},
                "lastWorld": {},
                "WEATHER_RAIN": {},
                "endFadeIn": {},
                "heights": {},
                "endFadeOut": {},
                "days": {},
                "startFadeOut": {},
                "daysLoop": {}
            },
            "NaturalProperties": {
                "rotation": {},
                "quadMaps": {},
                "flip": {}
            },
            "NextTickHashSet": {
                "minX": {},
                "maxZ": {},
                "maxX": {},
                "UNDEFINED": {},
                "minZ": {},
                "longHashMap": {}
            },
            "model": {
                "ListQuadsOverlay": {
                    "listBlockStates": {},
                    "listQuadsSingle": {},
                    "listQuads": {}
                },
                "ModelUtils": {
                    "duplicateModel": function() {},
                    "duplicateQuad": function() {},
                    "dbgQuads": function() {},
                    "duplicateQuadList": function() {},
                    "dbgVertexData": function() {},
                    "dbgQuad": function() {},
                    "dbgModel": function() {}
                },
                "ModelSprite": {
                    "renderItemIn2D": function() {},
                    "maxV": {},
                    "maxU": {},
                    "textureOffsetX": {},
                    "textureOffsetY": {},
                    "posX": {},
                    "minU": {},
                    "posY": {},
                    "sizeX": {},
                    "posZ": {},
                    "modelRenderer": {},
                    "minV": {},
                    "sizeY": {},
                    "sizeZ": {},
                    "sizeAdd": {}
                },
                "QuadBounds": {
                    "minY": {},
                    "minX": {},
                    "maxZ": {},
                    "maxY": {},
                    "maxX": {},
                    "minZ": {}
                },
                "BlockModelCustomizer": {
                    "getEmissiveLayer": function() {},
                    "getRenderQuads": function() {},
                    "getRenderModel": function() {},
                    "NO_QUADS": {}
                }
            },
            "override": {
                "PlayerControllerOF": {
                    "lastClickEntity": {},
                    "lastClickBlockPos": {},
                    "acting": {}
                },
                "ChunkCacheOF": {
                    "chunkCache": {},
                    "arraySize": {},
                    "cacheCombinedLights": {},
                    "cacheBlockStates": {},
                    "posX": {},
                    "posY": {},
                    "sizeX": {},
                    "posZ": {},
                    "dynamicLights": {},
                    "blockStates": {},
                    "combinedLights": {},
                    "sizeY": {},
                    "sizeZ": {},
                    "sizeXY": {}
                }
            },
            "RandomEntityRule": {
                "pathProps": {},
                "textures": {},
                "nbtName": {},
                "sumWeights": {},
                "biomes": {},
                "professions": {},
                "index": {},
                "healthRange": {},
                "baseResLoc": {},
                "weights": {},
                "heights": {},
                "moonPhases": {},
                "dayTimes": {},
                "healthPercent": {},
                "baby": {},
                "weatherList": {},
                "sumAllWeights": {},
                "resourceLocations": {},
                "collarColors": {}
            },
            "ClearWater": {
                "updateWaterOpacity": function() {}
            },
            "CustomLoadingScreen": {
                "getProperty": function() {},
                "parseScaleMode": function() {},
                "parseScale": function() {},
                "parseScreen": function() {},
                "scaleMode": {},
                "SCALE_DEFAULT": {},
                "SCALE_MODE_STRETCH": {},
                "center": {},
                "SCALE_MODE_FIXED": {},
                "scale": {},
                "locationTexture": {},
                "SCALE_MODE_FULL": {}
            },
            "SmartLeaves": {
                "getLeavesModel": function() {},
                "getGeneralQuadsSafe": function() {},
                "isSameLeaves": function() {},
                "getModelCull": function() {},
                "updateLeavesModels": function() {},
                "getModelDoubleFace": function() {},
                "generalQuadsCullSpruce": {},
                "modelLeavesDoubleDarkOak": {},
                "modelLeavesCullJungle": {},
                "modelLeavesCullDarkOak": {},
                "modelLeavesCullSpruce": {},
                "generalQuadsCullOak": {},
                "modelLeavesCullAcacia": {},
                "modelLeavesDoubleBirch": {},
                "modelLeavesCullBirch": {},
                "modelLeavesCullOak": {},
                "generalQuadsCullAcacia": {},
                "generalQuadsCullDarkOak": {},
                "generalQuadsCullJungle": {},
                "modelLeavesDoubleSpruce": {},
                "modelLeavesDoubleAcacia": {},
                "modelLeavesDoubleJungle": {},
                "generalQuadsCullBirch": {},
                "modelLeavesDoubleOak": {}
            },
            "TextureAnimation": {
                "frameHeight": {},
                "frames": {},
                "imageData": {},
                "srcData": {},
                "interpolate": {},
                "interpolateSkip": {},
                "interpolateData": {},
                "active": {},
                "currentFrameIndex": {},
                "dstTex": {},
                "dstTexLoc": {},
                "valid": {},
                "srcTex": {},
                "frameWidth": {},
                "dstTextId": {},
                "dstY": {},
                "dstX": {}
            },
            "ConnectedTextures": {
                "getWoodAxis": function() {},
                "isFullCubeModel": function() {},
                "getNeighbourIcon": function() {},
                "isNeighbourMatching": function() {},
                "getQuartzAxis": function() {},
                "addToBlockList": function() {},
                "getConnectedTextureCtm": function() {},
                "makePropertyList": function() {},
                "getConnectedTextureSingle": function() {},
                "updateIconEmpty": function() {},
                "updateIcons": function() {},
                "getConnectedTextureRepeat": function() {},
                "getConnectedTextureOverlayRepeat": function() {},
                "skipConnectedTexture": function() {},
                "isNeighbour": function() {},
                "getSide": function() {},
                "fixVertex": function() {},
                "getSideDirections": function() {},
                "getEdgeDirections": function() {},
                "getQuadFull": function() {},
                "addToList": function() {},
                "makeSpriteQuad": function() {},
                "switchValues": function() {},
                "getSpriteQuadCompactMaps": function() {},
                "detectMultipass": function() {},
                "getConnectedTextureTop": function() {},
                "getQuads": function() {},
                "fixSideByAxis": function() {},
                "getConnectedTextureOverlay": function() {},
                "getConnectedTextureCtmCompact": function() {},
                "isNeighbourOverlay": function() {},
                "propertyListToArray": function() {},
                "getConnectedTextureOverlayRandom": function() {},
                "getConnectedTextureVerticalHorizontal": function() {},
                "getConnectedTextureOverlayFixed": function() {},
                "getConnectedTextureRandom": function() {},
                "getDefaultCtmPaths": function() {},
                "getConnectedTextureHorizontalVertical": function() {},
                "getConnectedTexture": function() {},
                "getConnectedTextureCtmIndex": function() {},
                "getConnectedTextureOverlayCtm": function() {},
                "getConnectedTextureMultiPass": function() {},
                "getConnectedTextureHorizontal": function() {},
                "getConnectedTextureVertical": function() {},
                "getQuad": function() {},
                "getConnectedTextureFixed": function() {},
                "getFacing": function() {},
                "addToTileList": function() {},
                "Z_POS_SOUTH": {},
                "SIDES_X_POS_EAST_X_AXIS": {},
                "EDGES_Z_NEG_NORTH": {},
                "tileProperties": {},
                "Z_AXIS": {},
                "SIDES_X_NEG_WEST": {},
                "Y_POS_UP": {},
                "spriteQuadCompactMaps": {},
                "multipass": {},
                "SPRITE_DEFAULT": {},
                "EDGES_Z_NEG_NORTH_Z_AXIS": {},
                "SIDES_Y_NEG_DOWN": {},
                "EDGES_Y_NEG_DOWN": {},
                "AIR_DEFAULT_STATE": {},
                "EDGES_X_POS_EAST_X_AXIS": {},
                "X_POS_EAST": {},
                "EDGES_Z_POS_SOUTH": {},
                "SIDES_Y_POS_UP": {},
                "spriteQuadFullMaps": {},
                "blockProperties": {},
                "Z_NEG_NORTH": {},
                "spriteQuadMaps": {},
                "SIDES_X_POS_EAST": {},
                "X_AXIS": {},
                "Y_NEG_DOWN": {},
                "SIDES_Z_NEG_NORTH": {},
                "EDGES_X_NEG_WEST": {},
                "SIDES_Z_NEG_NORTH_Z_AXIS": {},
                "EDGES_X_POS_EAST": {},
                "SIDES_Z_POS_SOUTH": {},
                "EDGES_Y_POS_UP": {},
                "UNKNOWN": {},
                "X_NEG_WEST": {},
                "emptySprite": {},
                "Y_AXIS": {}
            },
            "RandomEntityProperties": {
                "basePath": {},
                "name": {},
                "rules": {},
                "resourceLocations": {}
            },
            "GlErrors": {
                "frameStart": function() {},
                "isEnabled": function() {},
                "countErrorsSuppressed": {},
                "countErrors": {},
                "frameStarted": {},
                "oneErrorEnabled": {},
                "CHECK_INTERVAL_MS": {},
                "suppressed": {},
                "CHECK_ERROR_MAX": {},
                "timeCheckStartMs": {}
            },
            "texture": {
                "PixelFormat": {
                    "valueOf": function() {},
                    "values": function() {},
                    "BGRA_INTEGER": {},
                    "RG_INTEGER": {},
                    "RGBA_INTEGER": {},
                    "BGRA": {},
                    "RGB": {},
                    "BGR": {},
                    "RED": {},
                    "RGBA": {},
                    "RG": {},
                    "RGB_INTEGER": {},
                    "RED_INTEGER": {},
                    "id": {},
                    "BGR_INTEGER": {},
                    "$VALUES": {}
                },
                "InternalFormat": {
                    "valueOf": function() {},
                    "values": function() {},
                    "RGB16F": {},
                    "RGB10_A2": {},
                    "RGB32UI": {},
                    "R11F_G11F_B10F": {},
                    "RGB8_SNORM": {},
                    "RG32UI": {},
                    "RG16F": {},
                    "RGBA16_SNORM": {},
                    "R16F": {},
                    "RGB32I": {},
                    "RGB8": {},
                    "RGB32F": {},
                    "RG32I": {},
                    "R32F": {},
                    "RG32F": {},
                    "RG16_SNORM": {},
                    "id": {},
                    "R32I": {},
                    "R32UI": {},
                    "$VALUES": {},
                    "RGBA8": {},
                    "RGBA32UI": {},
                    "RG8": {},
                    "RGB16_SNORM": {},
                    "RGB5_A1": {},
                    "R8": {},
                    "RGB9_E5": {},
                    "RGBA16F": {},
                    "RGBA16": {},
                    "R16_SNORM": {},
                    "RGBA32I": {},
                    "RGBA8_SNORM": {},
                    "RGBA32F": {},
                    "R16": {},
                    "RGB16": {},
                    "R8_SNORM": {},
                    "RG16": {},
                    "RG8_SNORM": {},
                    "R3_G3_B2": {}
                },
                "TextureType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "TEXTURE_RECTANGLE": {},
                    "TEXTURE_2D": {},
                    "TEXTURE_1D": {},
                    "TEXTURE_3D": {},
                    "id": {},
                    "$VALUES": {}
                },
                "PixelType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "HALF_FLOAT": {},
                    "UNSIGNED_SHORT_4_4_4_4": {},
                    "UNSIGNED_INT_8_8_8_8": {},
                    "FLOAT": {},
                    "UNSIGNED_INT_10_10_10_2": {},
                    "UNSIGNED_SHORT_5_6_5_REV": {},
                    "UNSIGNED_INT": {},
                    "UNSIGNED_SHORT_5_6_5": {},
                    "INT": {},
                    "SHORT": {},
                    "UNSIGNED_BYTE": {},
                    "UNSIGNED_BYTE_3_3_2": {},
                    "UNSIGNED_SHORT": {},
                    "UNSIGNED_SHORT_1_5_5_5_REV": {},
                    "BYTE": {},
                    "UNSIGNED_BYTE_2_3_3_REV": {},
                    "id": {},
                    "UNSIGNED_SHORT_5_5_5_1": {},
                    "UNSIGNED_INT_2_10_10_10_REV": {},
                    "UNSIGNED_SHORT_4_4_4_4_REV": {},
                    "UNSIGNED_INT_8_8_8_8_REV": {},
                    "$VALUES": {}
                }
            },
            "Lagometer$TimerNano": {
                "access$000": function() {},
                "timeStartNano": {},
                "timeNano": {}
            },
            "IRandomEntity": {},
            "VersionCheckThread": {},
            "CustomItems": {
                "makePropertyList": function() {},
                "makeAutoImageProperties": function() {},
                "updateIcons": function() {},
                "addToItemList": function() {},
                "update": function() {},
                "getPropertiesComparator": function() {},
                "getCustomItemProperties": function() {},
                "addToList": function() {},
                "addToEnchantmentList": function() {},
                "bindCustomArmorTexture": function() {},
                "getCustomArmorLocation": function() {},
                "getCustomItemModel": function() {},
                "getPotionId": function() {},
                "getPotionIds": function() {},
                "makePotionProperties": function() {},
                "propertyListToArray": function() {},
                "renderCustomEffect": function() {},
                "getEnchantmentIdLevels": function() {},
                "loadModels": function() {},
                "getMapPotionIds": function() {},
                "isUseGlint": function() {},
                "getAllProperties": function() {},
                "getPotionNameDamage": function() {},
                "renderCustomArmorEffect": function() {},
                "matchesProperties": function() {},
                "readCitProperties": function() {},
                "addAll": function() {},
                "updateModels": function() {},
                "makePotionImageProperties": function() {},
                "TYPE_POTION_SPLASH": {},
                "KEY_TEXTURE_DRINKABLE": {},
                "mapPotionIds": {},
                "itemModelGenerator": {},
                "useGlint": {},
                "itemProperties": {},
                "renderOffHand": {},
                "DEFAULT_TEXTURE_SPLASH": {},
                "DEFAULT_TEXTURE_DRINKABLE": {},
                "KEY_TEXTURE_OVERLAY": {},
                "MASK_POTION_EXTENDED": {},
                "EMPTY_INT2_ARRAY": {},
                "TYPE_POTION_NORMAL": {},
                "MASK_POTION_SPLASH": {},
                "MASK_POTION_NAME": {},
                "DEFAULT_TEXTURE_OVERLAY": {},
                "KEY_TEXTURE_SPLASH": {},
                "TYPE_POTION_LINGER": {},
                "enchantmentProperties": {}
            },
            "Mipmaps": {
                "generateMipMapData": function() {},
                "makeMipmapDimensions": function() {},
                "makeMipmapBuffers": function() {},
                "alphaBlend": function() {},
                "allocateMipmapTextures": function() {},
                "mipmapBuffers": {},
                "data": {},
                "iconName": {},
                "mipmapDatas": {},
                "width": {},
                "direct": {},
                "mipmapDimensions": {},
                "height": {}
            },
            "ConnectedTexturesCompact$Dir": {
                "valueOf": function() {},
                "values": function() {},
                "UP_RIGHT": {},
                "DOWN_RIGHT": {},
                "DOWN": {},
                "DOWN_LEFT": {},
                "LEFT": {},
                "UP_LEFT": {},
                "RIGHT": {},
                "VALUES": {},
                "UP": {},
                "$VALUES": {}
            },
            "TextureAnimations": {
                "getCountAnimations": function() {},
                "makeTextureAnimation": function() {},
                "getTextureAnimations": function() {},
                "scaleBufferedImage": function() {},
                "readTextureImage": function() {},
                "getCountAnimationsActive": function() {},
                "update": function() {},
                "reset": function() {},
                "getCustomTextureData": function() {},
                "updateAnimations": function() {},
                "loadImage": function() {},
                "textureAnimations": {},
                "frameCountAnimations": {},
                "countAnimationsActive": {}
            },
            "RandomTileEntity": {
                "tileEntity": {}
            },
            "BetterSnow": {
                "hasSnowNeighbours": function() {},
                "getStateSnowLayer": function() {},
                "getModelSnowLayer": function() {},
                "update": function() {},
                "shouldRender": function() {},
                "checkBlock": function() {},
                "modelSnowLayer": {}
            },
            "CustomPanoramaProperties": {
                "path": {},
                "panoramaLocations": {},
                "overlay2Top": {},
                "overlay2Bottom": {},
                "overlay1Top": {},
                "overlay1Bottom": {},
                "weight": {},
                "blur3": {},
                "blur2": {},
                "blur1": {}
            },
            "CustomColors$IColorizer": {},
            "RandomEntities": {
                "entityLoaded": function() {},
                "getParentTexturePath": function() {},
                "getLocationsVariants": function() {},
                "getTextureLocation": function() {},
                "dbg": function() {},
                "worldChanged": function() {},
                "update": function() {},
                "getPathBase": function() {},
                "getRandomEntityRendered": function() {},
                "parseProperties": function() {},
                "makeProperties": function() {},
                "warn": function() {},
                "updateEntityVillager": function() {},
                "getHorseTexturePath": function() {},
                "getLocationIndexed": function() {},
                "initialize": function() {},
                "getLocationRandom": function() {},
                "getLocationProperties": function() {},
                "entityUnloaded": function() {},
                "PREFIX_OPTIFINE_RANDOM": {},
                "PREFIX_DYNAMIC_TEXTURE_HORSE": {},
                "PREFIX_MCPATCHER_MOB": {},
                "mapProperties": {},
                "SUFFIX_PROPERTIES": {},
                "active": {},
                "HORSE_TEXTURES": {},
                "tileEntityRendererDispatcher": {},
                "DEPENDANT_SUFFIXES": {},
                "randomTileEntity": {},
                "PREFIX_TEXTURES_PAINTING": {},
                "renderGlobal": {},
                "PREFIX_TEXTURES": {},
                "HORSE_TEXTURES_ABBR": {},
                "working": {},
                "SUFFIX_PNG": {},
                "randomEntity": {},
                "PREFIX_TEXTURES_ENTITY": {}
            },
            "SmartAnimations": {
                "spritesRendered": {},
                "resetSpritesRendered": function() {},
                "isTextureRendered": function() {},
                "update": function() {},
                "spriteRendered": function() {},
                "resetTexturesRendered": function() {},
                "isActive": function() {},
                "textureRendered": function() {},
                "isSpriteRendered": function() {},
                "texturesRendered": {},
                "active": {}
            },
            "DynamicLight": {
                "timeCheckMs": {},
                "lastLightLevel": {},
                "offsetY": {},
                "underwater": {},
                "blockPosMutable": {},
                "lastPosY": {},
                "setLitChunkPos": {},
                "lastPosX": {},
                "lastPosZ": {},
                "entity": {}
            },
            "CustomItemsComparator": {},
            "CustomGuiProperties$EnumVariant": {
                "valueOf": function() {},
                "values": function() {},
                "MULE": {},
                "HORSE": {},
                "LLAMA": {},
                "DISPENSER": {},
                "DONKEY": {},
                "DROPPER": {},
                "$VALUES": {}
            },
            "CustomPanorama": {
                "getWeights": function() {},
                "getRandomIndex": function() {},
                "getPanoramaFolders": function() {},
                "update": function() {},
                "getCustomPanoramaProperties": function() {},
                "getPanoramaProperties": function() {},
                "random": {},
                "customPanoramaProperties": {}
            },
            "CustomSky": {
                "readCustomSkies": function() {},
                "update": function() {},
                "reset": function() {},
                "hasSkyLayers": function() {},
                "renderSky": function() {},
                "worldSkyLayers": {}
            },
            "RandomEntity": {
                "entity": {}
            },
            "ConnectedTexturesCompact": {
                "getQuadsCompact4": function() {},
                "getConnectedTextureCtmCompact": function() {},
                "fixVertexCompact": function() {},
                "getQuadsCompact": function() {},
                "makeSpriteQuadCompact": function() {},
                "getQuadCompact": function() {},
                "getQuadsCompactH": function() {},
                "getQuadsCompactV": function() {},
                "COMPACT_H": {},
                "COMPACT_V": {},
                "COMPACT_ALL": {},
                "COMPACT_NONE": {},
                "COMPACT_HV": {}
            },
            "BlockDir": {
                "valueOf": function() {},
                "values": function() {},
                "UP_SOUTH": {},
                "DOWN": {},
                "UP_NORTH": {},
                "NORTH_WEST": {},
                "WEST": {},
                "DOWN_EAST": {},
                "DOWN_WEST": {},
                "UP_WEST": {},
                "DOWN_SOUTH": {},
                "DOWN_NORTH": {},
                "UP_EAST": {},
                "facing1": {},
                "NORTH": {},
                "NORTH_EAST": {},
                "SOUTH_EAST": {},
                "UP": {},
                "SOUTH": {},
                "SOUTH_WEST": {},
                "EAST": {},
                "facing2": {},
                "$VALUES": {}
            },
            "TextureAnimationFrame": {
                "duration": {},
                "index": {},
                "counter": {}
            },
            "BetterGrass": {
                "getFaceQuadsMycelium": function() {},
                "registerSprite": function() {},
                "updateIcons": function() {},
                "getFaceQuadsDirt": function() {},
                "getFaceQuadsGrass": function() {},
                "update": function() {},
                "getBoolean": function() {},
                "getFaceQuads": function() {},
                "loadProperties": function() {},
                "getBlockAt": function() {},
                "betterPodzolSnow": {},
                "TEXTURE_SNOW_DEFAULT": {},
                "TEXTURE_PODZOL_DEFAULT": {},
                "spriteSnow": {},
                "betterGrass": {},
                "spriteMycelium": {},
                "betterGrassSnow": {},
                "spriteGrass": {},
                "modelsLoaded": {},
                "TEXTURE_GRASS_SIDE_DEFAULT": {},
                "modelCubeMycelium": {},
                "betterMyceliumSnow": {},
                "betterPodzol": {},
                "spriteGrassSide": {},
                "grassMultilayer": {},
                "spritePodzol": {},
                "spritesLoaded": {},
                "modelCubeSnow": {},
                "betterMycelium": {},
                "TEXTURE_GRASS_DEFAULT": {},
                "TEXTURE_MYCELIUM_DEFAULT": {},
                "modelCubePodzol": {},
                "modelCubeGrass": {}
            },
            "LightMapPack": {
                "lightMapThunder": {},
                "colorBuffer2": {},
                "colorBuffer1": {},
                "lightMap": {},
                "lightMapRain": {}
            },
            "CustomColorFader": {
                "color": {},
                "timeUpdate": {}
            },
            "ConnectedProperties": {
                "isMethodOverlay": function() {},
                "parseFace": function() {},
                "parseBasePath": function() {},
                "registerIcons": function() {},
                "parseFaces": function() {},
                "parseConnect": function() {},
                "getProperty": function() {},
                "parseName": function() {},
                "getIcon": function() {},
                "parseSymmetry": function() {},
                "parseMethod": function() {},
                "METHOD_REPEAT": {},
                "METHOD_VERTICAL": {},
                "sumWeights": {},
                "TILE_DEFAULT_PNG": {},
                "ctmTileIndexes": {},
                "METHOD_NONE": {},
                "tileIcons": {},
                "FACE_TOP": {},
                "FACE_SOUTH": {},
                "tiles": {},
                "METHOD_VERTICAL_HORIZONTAL": {},
                "METHOD_CTM_COMPACT": {},
                "FACE_BOTTOM": {},
                "FACE_WEST": {},
                "symmetry": {},
                "innerSeams": {},
                "METHOD_OVERLAY": {},
                "METHOD_OVERLAY_RANDOM": {},
                "height": {},
                "matchTileIcons": {},
                "METHOD_OVERLAY_CTM": {},
                "connectBlocks": {},
                "FACE_EAST": {},
                "method": {},
                "metadatas": {},
                "METHOD_HORIZONTAL": {},
                "CONNECT_UNKNOWN": {},
                "SYMMETRY_NONE": {},
                "weights": {},
                "METHOD_OVERLAY_REPEAT": {},
                "SYMMETRY_OPPOSITE": {},
                "METHOD_TOP": {},
                "matchBlocks": {},
                "connectTileIcons": {},
                "name": {},
                "FACE_SIDES": {},
                "sumAllWeights": {},
                "CONNECT_BLOCK": {},
                "nbtName": {},
                "FACE_ALL": {},
                "matchTiles": {},
                "connectTiles": {},
                "layer": {},
                "tintBlockState": {},
                "connect": {},
                "linked": {},
                "METHOD_FIXED": {},
                "METHOD_RANDOM": {},
                "tintIndex": {},
                "METHOD_HORIZONTAL_VERTICAL": {},
                "biomes": {},
                "METHOD_OVERLAY_FIXED": {},
                "SYMMETRY_UNKNOWN": {},
                "CONNECT_MATERIAL": {},
                "TILE_SKIP_PNG": {},
                "renderPass": {},
                "randomLoops": {},
                "basePath": {},
                "CONNECT_TILE": {},
                "heights": {},
                "width": {},
                "FACE_UNKNOWN": {},
                "CONNECT_NONE": {},
                "METHOD_CTM": {},
                "faces": {},
                "FACE_NORTH": {},
                "SYMMETRY_ALL": {}
            },
            "CustomGuis": {
                "addToList": function() {},
                "warn": function() {},
                "setPlayerControllerOF": function() {},
                "getPlayerControllerOF": function() {},
                "isChristmas": {},
                "propertyListToArray": function() {},
                "getTextureLocation": function() {},
                "update": function() {},
                "getTexturePos": function() {},
                "getTextureEntity": function() {},
                "mc": {},
                "guiProperties": {},
                "playerControllerOF": {}
            },
            "CustomGuiProperties": {
                "parseTextureLocation": function() {},
                "getName": function() {},
                "warn": function() {},
                "getWorldNameable": function() {},
                "parseTextureLocations": function() {},
                "parseEnumDyeColors": function() {},
                "getGuiTextureLocation": function() {},
                "getContainerVariants": function() {},
                "parseEnumDyeColor": function() {},
                "container": {},
                "fileName": {},
                "ANVIL_GUI_TEXTURE": {},
                "nbtName": {},
                "professions": {},
                "ender": {},
                "variants": {},
                "BEACON_GUI_TEXTURE": {},
                "colors": {},
                "CRAFTING_TABLE_GUI_TEXTURE": {},
                "textureLocations": {},
                "INVENTORY_GUI_TEXTURE": {},
                "FURNACE_GUI_TEXTURE": {},
                "SHULKER_BOX_GUI_TEXTURE": {},
                "large": {},
                "trapped": {},
                "COLORS_INVALID": {},
                "biomes": {},
                "CHEST_GUI_TEXTURE": {},
                "ENCHANTMENT_TABLE_GUI_TEXTURE": {},
                "christmas": {},
                "VARIANTS_HORSE": {},
                "HORSE_GUI_TEXTURE": {},
                "VILLAGER_GUI_TEXTURE": {},
                "basePath": {},
                "heights": {},
                "BREWING_STAND_GUI_TEXTURE": {},
                "VARIANTS_DISPENSER": {},
                "VARIANTS_INVALID": {},
                "levels": {},
                "HOPPER_GUI_TEXTURE": {},
                "DISPENSER_GUI_TEXTURE": {}
            },
            "CustomItemProperties": {
                "getModelLocation": function() {},
                "parseTextures": function() {},
                "fixTextureName": function() {},
                "makeModelBlock": function() {},
                "checkNull": function() {},
                "makeBakedQuad": function() {},
                "bakeModel": function() {},
                "parseBasePath": function() {},
                "getMatchingProperties": function() {},
                "parseName": function() {},
                "fixModelName": function() {},
                "loadItemModel": function() {},
                "parseModels": function() {},
                "parseTexture": function() {},
                "makeBakedModel": function() {},
                "parseModel": function() {},
                "damage": {},
                "mapTextureLocations": {},
                "damagePercent": {},
                "blend": {},
                "textureWidth": {},
                "damageMask": {},
                "textureLocation": {},
                "type": {},
                "mapBakedModelsFull": {},
                "textureHeight": {},
                "speed": {},
                "layer": {},
                "mapTextures": {},
                "enchantmentIds": {},
                "duration": {},
                "bakedModelTexture": {},
                "stackSize": {},
                "INVENTORY": {},
                "enchantmentLevels": {},
                "TYPE_ENCHANTMENT": {},
                "sprite": {},
                "model": {},
                "hand": {},
                "mapSprites": {},
                "texture": {},
                "bakedModelFull": {},
                "nbtTagValues": {},
                "rotation": {},
                "weight": {},
                "HAND_MAIN": {},
                "HAND_OFF": {},
                "HAND_ANY": {},
                "TYPE_ITEM": {},
                "basePath": {},
                "TYPE_UNKNOWN": {},
                "name": {},
                "mapModels": {},
                "TYPE_ARMOR": {},
                "items": {},
                "mapBakedModelsTexture": {}
            },
            "EmissiveTextures": {
                "dbg": function() {},
                "update": function() {},
                "isActive": function() {},
                "isEmissive": function() {},
                "getEmissiveTexture": function() {},
                "warn": function() {},
                "endRender": function() {},
                "beginRenderEmissive": function() {},
                "loadTexture": function() {},
                "hasEmissive": {},
                "beginRender": function() {},
                "endRenderEmissive": function() {},
                "getSuffixEmissive": function() {},
                "LOCATION_EMPTY": {},
                "suffixEmissivePng": {},
                "suffixEmissive": {},
                "lightMapY": {},
                "active": {},
                "lightMapX": {},
                "render": {},
                "SUFFIX_PNG": {},
                "renderEmissive": {}
            },
            "NaturalTextures": {
                "getNaturalProperties": function() {},
                "update": function() {},
                "getNaturalTexture": function() {},
                "propertiesByIndex": {}
            },
            "CustomBlockLayers": {
                "readLayer": function() {},
                "update": function() {},
                "getRenderLayer": function() {},
                "isActive": function() {},
                "readLayers": function() {},
                "renderLayers": {},
                "active": {}
            }
        },
        "minecraftforge": {
            "client": {
                "model": {
                    "ITransformation": {},
                    "pipeline": {
                        "IVertexProducer": {},
                        "IVertexConsumer": {}
                    },
                    "IModelPart": {},
                    "ISmartItemModel": {}
                }
            },
            "fml": {
                "common": {
                    "registry": {
                        "RegistryDelegate": {}
                    }
                }
            },
            "common": {
                "property": {
                    "IUnlistedProperty": {}
                }
            }
        }
    },
    "com": {
        "sliceclient": {
            "anticheat": {
                "user": {
                    "UserManager": {
                        "lambda$remove$2": function() {},
                        "lambda$hasPlayer$0": function() {},
                        "lambda$getUser$1": function() {},
                        "users": {}
                    },
                    "User": {
                        "vl": {},
                        "checkManager": {},
                        "player": {}
                    }
                },
                "check": {
                    "checks": {
                        "movement": {
                            "speed": {
                                "SpeedA": {
                                    "lastDist": {},
                                    "lastOnGround": {}
                                }
                            },
                            "ground": {
                                "GroundSpoofA": {
                                    "lastOnGround": {},
                                    "lastLastOnGround": {}
                                }
                            },
                            "fly": {
                                "FlyA": {
                                    "lastDistY": {},
                                    "lastOnGround": {},
                                    "lastLastOnGround": {}
                                }
                            }
                        },
                        "misc": {
                            "badpackets": {
                                "BadPacketsA": {}
                            }
                        }
                    },
                    "Check": {
                        "name": {},
                        "description": {},
                        "type": {},
                        "user": {},
                        "info": {}
                    },
                    "util": {
                        "AntiCheatUtil": {
                            "isOnGround": function() {}
                        }
                    },
                    "data": {
                        "CheckInfo": {}
                    }
                },
                "manager": {
                    "AntiCheatEventManager": {
                        "lambda$runEvent$0": function() {},
                        "registeredObjects": {}
                    },
                    "CheckManager": {
                        "lambda$new$0": function() {},
                        "checks": {}
                    }
                },
                "event": {
                    "manager": {
                        "AntiCheatEventSender": {
                            "method": {},
                            "event": {},
                            "target": {}
                        },
                        "AntiCheatEventInfo": {}
                    },
                    "events": {
                        "AntiCheatPlayerAnimationEvent": {},
                        "PlayerAntiCheatUpdateEvent": {
                            "pre": {},
                            "onGround": {},
                            "x": {},
                            "y": {},
                            "z": {},
                            "lastZ": {},
                            "pitch": {},
                            "lastY": {},
                            "lastX": {},
                            "yaw": {}
                        }
                    },
                    "AntiCheatEvent": {
                        "player": {}
                    }
                },
                "SliceAC": {
                    "valueOf": function() {},
                    "values": function() {},
                    "access$000": function() {},
                    "userManager": {},
                    "eventManager": {},
                    "INSTANCE": {},
                    "$VALUES": {}
                },
                "SliceAC$UpdateUserList": {
                    "this$0": {}
                },
                "SliceAC$UpdateRemoveUserList": {
                    "this$0": {}
                }
            },
            "script": {
                "classloader": {
                    "ScriptClassLoader": {
                        "script": {}
                    },
                    "ScriptDescriptionFile": {
                        "variables": {},
                        "json": {}
                    },
                    "ScriptLoader": {
                        "file": {},
                        "description": {},
                        "$assertionsDisabled": {},
                        "script": {}
                    }
                },
                "SliceScript": {}
            }
        }
    },
    "org": {
        "cef": {
            "browser": {
                "scheme": {
                    "IScheme": {},
                    "SchemeResourceHandler": {
                        "build": function() {},
                        "lambda$build$0": function() {},
                        "scheme": {}
                    },
                    "SchemeResponseHeaders": {
                        "response": {},
                        "length": {},
                        "redirURL": {}
                    },
                    "SchemePreResponse": {
                        "valueOf": function() {},
                        "values": function() {},
                        "NOT_HANDLED": {},
                        "HANDLED_CONTINUE": {},
                        "HANDLED_CANCEL": {},
                        "$VALUES": {}
                    },
                    "SchemeResponseData": {
                        "read": {},
                        "data": {},
                        "toRead": {}
                    }
                },
                "mac": {
                    "CefBrowserWindowMac": {}
                },
                "lwjgl": {
                    "CefRendererLwjgl": {
                        "transparent_": {},
                        "texture_id_": {},
                        "popup_rect_": {},
                        "original_popup_rect_": {},
                        "view_height_": {},
                        "view_width_": {}
                    }
                },
                "CefRequestContext": {
                    "getGlobalContext": function() {},
                    "createContext": function() {}
                },
                "CefBrowser_N": {
                    "devTools_": {},
                    "inspectAt_": {},
                    "parent_": {},
                    "url_": {},
                    "isClosing_": {},
                    "isPending_": {},
                    "request_context_": {},
                    "isClosed_": {},
                    "client_": {},
                    "closeAllowed_": {}
                },
                "CefBrowserWr": {
                    "access$700": function() {},
                    "access$502": function() {},
                    "access$600": function() {},
                    "access$500": function() {},
                    "access$400": function() {},
                    "access$300": function() {},
                    "access$200": function() {},
                    "access$100": function() {},
                    "access$000": function() {},
                    "content_rect_": {},
                    "canvas_": {},
                    "justCreated_": {},
                    "component_": {},
                    "window_handle_": {},
                    "win_handler_": {},
                    "scaleFactor_": {},
                    "delayedUpdate_": {}
                },
                "CefFrame": {},
                "CefDropTargetListener": {
                    "createDragData": function() {},
                    "browser_": {},
                    "dragOperations_": {},
                    "$assertionsDisabled": {},
                    "dragData_": {},
                    "dragModifiers_": {},
                    "acceptOperations_": {}
                },
                "CefMessageRouter": {
                    "create": function() {},
                    "routerConfig_": {}
                },
                "CefMessageRouter_N": {
                    "createNative": function() {},
                    "N_Create": function() {},
                    "N_CefHandle": {}
                },
                "CefRequestContext_N": {
                    "getGlobalContextNative": function() {},
                    "createNative": function() {},
                    "N_CreateContext": function() {},
                    "N_GetGlobalContext": function() {},
                    "globalInstance": {},
                    "handler": {},
                    "N_CefHandle": {}
                },
                "CefMessageRouter$CefMessageRouterConfig": {
                    "jsQueryFunction": {},
                    "jsCancelFunction": {}
                },
                "CefBrowserCustom": {
                    "remapMouseCode": function() {},
                    "remapKeycode": function() {},
                    "paintData": {},
                    "dc_": {},
                    "justCreated_": {},
                    "screenPoint_": {},
                    "isTransparent_": {},
                    "renderer_": {},
                    "browser_rect_": {}
                },
                "CefBrowserCustom$PaintData": {
                    "access$502": function() {},
                    "access$600": function() {},
                    "access$402": function() {},
                    "access$302": function() {},
                    "access$500": function() {},
                    "access$202": function() {},
                    "access$400": function() {},
                    "access$102": function() {},
                    "access$300": function() {},
                    "access$200": function() {},
                    "access$100": function() {},
                    "access$602": function() {},
                    "hasFrame": {},
                    "fullReRender": {},
                    "width": {},
                    "dirtyRects": {},
                    "buffer": {},
                    "height": {}
                },
                "CefFrame_N": {},
                "CefBrowserWindow": {},
                "CefBrowserFactory": {
                    "create": function() {}
                },
                "CefBrowser": {},
                "ICefRenderer": {}
            },
            "network": {
                "CefRequest$CefUrlRequestFlags": {
                    "UR_FLAG_NO_RETRY_ON_5XX": {},
                    "UR_FLAG_NONE": {},
                    "UR_FLAG_NO_DOWNLOAD_DATA": {},
                    "UR_FLAG_REPORT_UPLOAD_PROGRESS": {},
                    "UR_FLAG_SKIP_CACHE": {},
                    "UR_FLAG_ALLOW_CACHED_CREDENTIALS": {},
                    "UR_FLAG_REPORT_RAW_HEADERS": {}
                },
                "CefPostDataElement$Type": {
                    "valueOf": function() {},
                    "values": function() {},
                    "PDE_TYPE_BYTES": {},
                    "PDE_TYPE_FILE": {},
                    "$VALUES": {},
                    "PDE_TYPE_EMPTY": {}
                },
                "CefPostData": {
                    "create": function() {}
                },
                "CefRequest_N": {
                    "createNative": function() {},
                    "N_Create": function() {},
                    "N_CefHandle": {}
                },
                "CefPostDataElement_N": {
                    "createNative": function() {},
                    "N_Create": function() {},
                    "N_CefHandle": {}
                },
                "CefRequest": {
                    "create": function() {}
                },
                "CefRequest$ReferrerPolicy": {
                    "valueOf": function() {},
                    "values": function() {},
                    "REFERRER_POLICY_NEVER_CLEAR_REFERRER": {},
                    "REFERRER_POLICY_DEFAULT": {},
                    "REFERRER_POLICY_ORIGIN": {},
                    "REFERRER_POLICY_ORIGIN_CLEAR_ON_TRANSITION_FROM_SECURE_TO_INSECURE": {},
                    "REFERRER_POLICY_CLEAR_REFERRER_ON_TRANSITION_CROSS_ORIGIN": {},
                    "REFERRER_POLICY_REDUCE_REFERRER_GRANULARITY_ON_TRANSITION_CROSS_ORIGIN": {},
                    "REFERRER_POLICY_NO_REFERRER": {},
                    "REFERRER_POLICY_ORIGIN_ONLY_ON_TRANSITION_CROSS_ORIGIN": {},
                    "REFERRER_POLICY_LAST_VALUE": {},
                    "REFERRER_POLICY_CLEAR_REFERRER_ON_TRANSITION_FROM_SECURE_TO_INSECURE": {},
                    "$VALUES": {}
                },
                "CefResponse_N": {
                    "createNative": function() {},
                    "N_Create": function() {},
                    "N_CefHandle": {}
                },
                "CefCookieManager_N": {
                    "getGlobalManagerNative": function() {},
                    "N_GetGlobalManager": function() {},
                    "globalInstance": {},
                    "N_CefHandle": {}
                },
                "CefRequest$ResourceType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "RT_MEDIA": {},
                    "RT_PREFETCH": {},
                    "RT_NAVIGATION_PRELOAD_SUB_FRAME": {},
                    "RT_CSP_REPORT": {},
                    "RT_WORKER": {},
                    "RT_NAVIGATION_PRELOAD_MAIN_FRAME": {},
                    "RT_FONT_RESOURCE": {},
                    "RT_PLUGIN_RESOURCE": {},
                    "RT_OBJECT": {},
                    "RT_SHARED_WORKER": {},
                    "RT_IMAGE": {},
                    "RT_SUB_FRAME": {},
                    "RT_FAVICON": {},
                    "RT_SUB_RESOURCE": {},
                    "RT_SERVICE_WORKER": {},
                    "RT_STYLESHEET": {},
                    "RT_MAIN_FRAME": {},
                    "RT_PING": {},
                    "RT_XHR": {},
                    "$VALUES": {},
                    "RT_SCRIPT": {}
                },
                "CefPostData_N": {
                    "createNative": function() {},
                    "N_Create": function() {},
                    "N_CefHandle": {}
                },
                "CefURLRequest": {
                    "create": function() {}
                },
                "CefURLRequest$Status": {
                    "valueOf": function() {},
                    "values": function() {},
                    "UR_IO_PENDING": {},
                    "UR_CANCELED": {},
                    "UR_UNKNOWN": {},
                    "UR_FAILED": {},
                    "$VALUES": {},
                    "UR_SUCCESS": {}
                },
                "CefPostDataElement": {
                    "create": function() {}
                },
                "CefResponse": {
                    "create": function() {}
                },
                "CefRequest$TransitionFlags": {
                    "valueOf": function() {},
                    "values": function() {},
                    "TT_CHAIN_END_FLAG": {},
                    "TT_FORWARD_BACK_FLAG": {},
                    "flag": {},
                    "TT_CHAIN_START_FLAG": {},
                    "TT_BLOCKED_FLAG": {},
                    "TT_CLIENT_REDIRECT_FLAG": {},
                    "TT_SERVER_REDIRECT_FLAG": {},
                    "$VALUES": {}
                },
                "CefCookieManager": {
                    "getGlobalManager": function() {}
                },
                "CefURLRequest_N": {
                    "createNative": function() {},
                    "N_CefHandle": {},
                    "request_": {},
                    "client_": {}
                },
                "CefCookie": {
                    "hasExpires": {},
                    "path": {},
                    "expires": {},
                    "domain": {},
                    "name": {},
                    "httponly": {},
                    "lastAccess": {},
                    "secure": {},
                    "value": {},
                    "creation": {}
                },
                "CefRequest$TransitionType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "TT_EXPLICIT": {},
                    "TT_LINK": {},
                    "TT_AUTO_SUBFRAME": {},
                    "TT_MANUAL_SUBFRAME": {},
                    "TT_FORM_SUBMIT": {},
                    "TT_RELOAD": {},
                    "value": {},
                    "$VALUES": {}
                }
            },
            "handler": {
                "CefLifeSpanHandler": {},
                "CefDisplayHandlerAdapter": {},
                "CefRenderHandlerAdapter": {},
                "CefMessageRouterHandlerAdapter": {},
                "CefDragHandler$DragOperationMask": {
                    "DRAG_OPERATION_NONE": {},
                    "DRAG_OPERATION_LINK": {},
                    "DRAG_OPERATION_PRIVATE": {},
                    "DRAG_OPERATION_DELETE": {},
                    "DRAG_OPERATION_GENERIC": {},
                    "DRAG_OPERATION_COPY": {},
                    "DRAG_OPERATION_MOVE": {},
                    "DRAG_OPERATION_EVERY": {}
                },
                "CefCookieAccessFilterAdapter": {},
                "CefAppHandlerAdapter": {
                    "args_": {}
                },
                "CefRequestContextHandlerAdapter": {},
                "CefDownloadHandlerAdapter": {},
                "CefLoadHandler$ErrorCode": {
                    "findByCode": function() {},
                    "valueOf": function() {},
                    "values": function() {},
                    "ERR_CERT_AUTHORITY_INVALID": {},
                    "ERR_PKCS12_IMPORT_INVALID_FILE": {},
                    "ERR_SSL_RENEGOTIATION_REQUESTED": {},
                    "ERR_PAC_SCRIPT_FAILED": {},
                    "ERR_PROXY_CONNECTION_FAILED": {},
                    "ERR_INVALID_RESPONSE": {},
                    "ERR_CACHE_OPEN_OR_CREATE_FAILURE": {},
                    "ERR_FAILED": {},
                    "ERR_NETWORK_IO_SUSPENDED": {},
                    "ERR_NOT_IMPLEMENTED": {},
                    "ERR_UNSAFE_REDIRECT": {},
                    "ERR_RESPONSE_HEADERS_MULTIPLE_CONTENT_LENGTH": {},
                    "ERR_SSL_CLIENT_AUTH_CERT_NO_PRIVATE_KEY": {},
                    "ERR_NO_BUFFER_SPACE": {},
                    "ERR_SOCKET_SEND_BUFFER_SIZE_UNCHANGEABLE": {},
                    "ERR_TOO_MANY_REDIRECTS": {},
                    "ERR_CACHE_READ_FAILURE": {},
                    "ERR_INCOMPLETE_CHUNKED_ENCODING": {},
                    "ERR_CONTEXT_SHUT_DOWN": {},
                    "ERR_PROXY_CERTIFICATE_INVALID": {},
                    "ERR_CACHE_MISS": {},
                    "ERR_RESPONSE_HEADERS_MULTIPLE_LOCATION": {},
                    "ERR_BLOCKED_BY_RESPONSE": {},
                    "ERR_CERT_END": {},
                    "ERR_HTTP2_RST_STREAM_NO_ERROR_RECEIVED": {},
                    "ERR_CERT_UNABLE_TO_CHECK_REVOCATION": {},
                    "ERR_CACHE_RACE": {},
                    "ERR_IMPORT_CA_CERT_FAILED": {},
                    "ERR_HTTP_RESPONSE_CODE_FAILURE": {},
                    "ERR_SOCKS_CONNECTION_FAILED": {},
                    "ERR_SOCKS_CONNECTION_HOST_UNREACHABLE": {},
                    "ERR_CT_CONSISTENCY_PROOF_PARSING_FAILED": {},
                    "ERR_DNS_TIMED_OUT": {},
                    "ERR_HTTP2_COMPRESSION_ERROR": {},
                    "ERR_DNS_SERVER_REQUIRES_TCP": {},
                    "ERR_CERT_DATE_INVALID": {},
                    "ERR_SSL_CLIENT_AUTH_CERT_NEEDED": {},
                    "ERR_CONNECTION_CLOSED": {},
                    "ERR_PAC_NOT_IN_DHCP": {},
                    "ERR_INVALID_HANDLE": {},
                    "ERR_RESPONSE_HEADERS_MULTIPLE_CONTENT_DISPOSITION": {},
                    "ERR_SELF_SIGNED_CERT_GENERATION_FAILED": {},
                    "ERR_MALFORMED_IDENTITY": {},
                    "ERR_PROXY_HTTP_1_1_REQUIRED": {},
                    "ERR_SOCKET_SET_RECEIVE_BUFFER_SIZE_ERROR": {},
                    "ERR_CERT_WEAK_SIGNATURE_ALGORITHM": {},
                    "ERR_SSL_CLIENT_AUTH_SIGNATURE_FAILED": {},
                    "ERR_SSL_KEY_USAGE_INCOMPATIBLE": {},
                    "ERR_CERT_REVOKED": {},
                    "ERR_UNSUPPORTED_AUTH_SCHEME": {},
                    "ERR_SSL_CLIENT_AUTH_CERT_BAD_FORMAT": {},
                    "ERR_SSL_NO_RENEGOTIATION": {},
                    "ERR_CACHE_OPEN_FAILURE": {},
                    "ERR_FILE_PATH_TOO_LONG": {},
                    "ERR_CONNECTION_RESET": {},
                    "ERR_CT_STH_INCOMPLETE": {},
                    "ERR_CONTENT_LENGTH_MISMATCH": {},
                    "ERR_PROXY_AUTH_REQUESTED_WITH_NO_CONNECTION": {},
                    "ERR_BLOCKED_ENROLLMENT_CHECK_PENDING": {},
                    "ERR_NO_PRIVATE_KEY_FOR_CERT": {},
                    "ERR_SSL_OBSOLETE_CIPHER": {},
                    "ERR_SSL_DECOMPRESSION_FAILURE_ALERT": {},
                    "ERR_UNRECOGNIZED_FTP_DIRECTORY_LISTING_FORMAT": {},
                    "ERR_FTP_TRANSFER_ABORTED": {},
                    "ERR_PAC_SCRIPT_TERMINATED": {},
                    "ERR_ENCODING_DETECTION_FAILED": {},
                    "ERR_CONTENT_DECODING_FAILED": {},
                    "ERR_PRIVATE_KEY_EXPORT_FAILED": {},
                    "ERR_UNEXPECTED": {},
                    "ERR_RESPONSE_HEADERS_TOO_BIG": {},
                    "ERR_ADDRESS_UNREACHABLE": {},
                    "ERR_CERT_NAME_CONSTRAINT_VIOLATION": {},
                    "ERR_SSL_SERVER_CERT_CHANGED": {},
                    "$VALUES": {},
                    "ERR_PRECONNECT_MAX_SOCKET_LIMIT": {},
                    "ERR_NO_SSL_VERSIONS_ENABLED": {},
                    "ERR_DNS_SEARCH_EMPTY": {},
                    "ERR_ADD_USER_CERT_FAILED": {},
                    "ERR_SSL_BAD_PEER_PUBLIC_KEY": {},
                    "ERR_ENCODING_CONVERSION_FAILED": {},
                    "ERR_CONNECTION_REFUSED": {},
                    "ERR_CACHE_OPERATION_NOT_SUPPORTED": {},
                    "ERR_DNS_SERVER_FAILED": {},
                    "ERR_RESPONSE_HEADERS_TRUNCATED": {},
                    "ERR_SOCKET_IS_CONNECTED": {},
                    "ERR_HTTP2_PROTOCOL_ERROR": {},
                    "ERR_MISCONFIGURED_AUTH_ENVIRONMENT": {},
                    "ERR_TIMED_OUT": {},
                    "ERR_NAME_NOT_RESOLVED": {},
                    "ERR_CERTIFICATE_TRANSPARENCY_REQUIRED": {},
                    "ERR_CERT_NON_UNIQUE_NAME": {},
                    "ERR_CACHE_CHECKSUM_MISMATCH": {},
                    "ERR_BAD_SSL_CLIENT_AUTH_CERT": {},
                    "ERR_PKCS12_IMPORT_FAILED": {},
                    "ERR_SYN_REPLY_NOT_RECEIVED": {},
                    "ERR_NETWORK_CHANGED": {},
                    "ERR_DNS_NAME_HTTPS_ONLY": {},
                    "ERR_BLOCKED_BY_ADMINISTRATOR": {},
                    "ERR_IMPORT_CA_CERT_NOT_CA": {},
                    "ERR_DNS_SORT_ERROR": {},
                    "ERR_PKCS12_IMPORT_BAD_PASSWORD": {},
                    "ERR_HTTP2_SERVER_REFUSED_STREAM": {},
                    "ERR_ICANN_NAME_COLLISION": {},
                    "ERR_QUIC_PROTOCOL_ERROR": {},
                    "ERR_FTP_FILE_BUSY": {},
                    "ERR_NO_SUPPORTED_PROXIES": {},
                    "ERR_QUIC_HANDSHAKE_FAILED": {},
                    "ERR_MANDATORY_PROXY_CONFIGURATION_FAILED": {},
                    "ERR_SSL_SERVER_CERT_BAD_FORMAT": {},
                    "ERR_WINSOCK_UNEXPECTED_WRITTEN_BYTES": {},
                    "ERR_CERT_INVALID": {},
                    "ERR_PROXY_AUTH_REQUESTED": {},
                    "ERR_TRUST_TOKEN_OPERATION_SUCCESS_WITHOUT_SENDING_REQUEST": {},
                    "ERR_ALPN_NEGOTIATION_FAILED": {},
                    "ERR_CACHE_AUTH_FAILURE_AFTER_READ": {},
                    "ERR_CERT_COMMON_NAME_INVALID": {},
                    "ERR_TRUST_TOKEN_OPERATION_FAILED": {},
                    "ERR_CERT_KNOWN_INTERCEPTION_BLOCKED": {},
                    "ERR_CACHE_CREATE_FAILURE": {},
                    "ERR_RESPONSE_BODY_TOO_BIG_TO_DRAIN": {},
                    "ERR_FTP_FAILED": {},
                    "ERR_WS_PROTOCOL_ERROR": {},
                    "ERR_FTP_COMMAND_NOT_SUPPORTED": {},
                    "ERR_QUIC_GOAWAY_REQUEST_CAN_BE_RETRIED": {},
                    "ERR_ADDRESS_INVALID": {},
                    "ERR_ECH_NOT_NEGOTIATED": {},
                    "ERR_INVALID_ARGUMENT": {},
                    "ERR_FILE_EXISTS": {},
                    "ERR_FTP_SYNTAX_ERROR": {},
                    "ERR_TOO_MANY_RETRIES": {},
                    "ERR_CERT_DATABASE_CHANGED": {},
                    "ERR_ACCESS_DENIED": {},
                    "ERR_CT_STH_PARSING_FAILED": {},
                    "ERR_FTP_SERVICE_UNAVAILABLE": {},
                    "ERR_DNS_MALFORMED_RESPONSE": {},
                    "ERR_INVALID_URL": {},
                    "ERR_INCOMPLETE_HTTP2_HEADERS": {},
                    "ERR_CACHE_WRITE_FAILURE": {},
                    "ERR_TLS13_DOWNGRADE_DETECTED": {},
                    "ERR_DNS_SECURE_RESOLVER_HOSTNAME_RESOLUTION_FAILED": {},
                    "ERR_INVALID_WEB_BUNDLE": {},
                    "ERR_SSL_PINNED_KEY_NOT_IN_CERT_CHAIN": {},
                    "ERR_NONE": {},
                    "ERR_UNSAFE_PORT": {},
                    "ERR_PKCS12_IMPORT_UNSUPPORTED": {},
                    "ERR_QUIC_CERT_ROOT_NOT_KNOWN": {},
                    "ERR_SOCKET_NOT_CONNECTED": {},
                    "ERR_HTTP2_FRAME_SIZE_ERROR": {},
                    "ERR_SSL_DECRYPT_ERROR_ALERT": {},
                    "ERR_CLEARTEXT_NOT_PERMITTED": {},
                    "ERR_OUT_OF_MEMORY": {},
                    "ERR_SSL_CLIENT_AUTH_NO_COMMON_ALGORITHMS": {},
                    "ERR_SSL_CLIENT_AUTH_PRIVATE_KEY_ACCESS_DENIED": {},
                    "ERR_INSECURE_RESPONSE": {},
                    "ERR_PKCS12_IMPORT_INVALID_MAC": {},
                    "ERR_SSL_VERSION_OR_CIPHER_MISMATCH": {},
                    "ERR_MSG_TOO_BIG": {},
                    "ERR_METHOD_NOT_SUPPORTED": {},
                    "ERR_CERT_NO_REVOCATION_MECHANISM": {},
                    "ERR_BLOCKED_BY_CLIENT": {},
                    "ERR_CACHE_LOCK_TIMEOUT": {},
                    "ERR_DISALLOWED_URL_SCHEME": {},
                    "ERR_IMPORT_CERT_ALREADY_EXISTS": {},
                    "ERR_NAME_RESOLUTION_FAILED": {},
                    "ERR_UNDOCUMENTED_SECURITY_LIBRARY_STATUS": {},
                    "ERR_INVALID_AUTH_CREDENTIALS": {},
                    "ERR_INVALID_SIGNED_EXCHANGE": {},
                    "ERR_HTTP_1_1_REQUIRED": {},
                    "ERR_DNS_CACHE_MISS": {},
                    "ERR_SOCKET_SET_SEND_BUFFER_SIZE_ERROR": {},
                    "ERR_HOST_RESOLVER_QUEUE_TOO_LARGE": {},
                    "ERR_HTTP2_INADEQUATE_TRANSPORT_SECURITY": {},
                    "ERR_HTTP2_FLOW_CONTROL_ERROR": {},
                    "ERR_CACHE_DOOM_FAILURE": {},
                    "ERR_INVALID_HTTP_RESPONSE": {},
                    "ERR_KEY_GENERATION_FAILED": {},
                    "ERR_ABORTED": {},
                    "ERR_FILE_NOT_FOUND": {},
                    "ERR_CONNECTION_FAILED": {},
                    "ERR_UPLOAD_STREAM_REWIND_NOT_SUPPORTED": {},
                    "ERR_HTTP2_PING_FAILED": {},
                    "ERR_INVALID_REDIRECT": {},
                    "ERR_NETWORK_ACCESS_DENIED": {},
                    "ERR_EARLY_DATA_REJECTED": {},
                    "ERR_SSL_HANDSHAKE_NOT_COMPLETED": {},
                    "ERR_FTP_BAD_COMMAND_SEQUENCE": {},
                    "ERR_PROXY_AUTH_UNSUPPORTED": {},
                    "ERR_INTERNET_DISCONNECTED": {},
                    "ERR_EMPTY_RESPONSE": {},
                    "ERR_CONTENT_DECODING_INIT_FAILED": {},
                    "ERR_INVALID_ECH_CONFIG_LIST": {},
                    "ERR_IO_PENDING": {},
                    "ERR_CERT_SYMANTEC_LEGACY": {},
                    "ERR_CLIENT_AUTH_CERT_TYPE_UNSUPPORTED": {},
                    "ERR_MISSING_AUTH_CREDENTIALS": {},
                    "ERR_SSL_UNRECOGNIZED_NAME_ALERT": {},
                    "ERR_CACHE_CHECKSUM_READ_FAILURE": {},
                    "ERR_IMPORT_SERVER_CERT_FAILED": {},
                    "ERR_CONNECTION_ABORTED": {},
                    "ERR_ADDRESS_IN_USE": {},
                    "ERR_HTTP2_STREAM_CLOSED": {},
                    "ERR_CERT_CONTAINS_ERRORS": {},
                    "ERR_SSL_BAD_RECORD_MAC_ALERT": {},
                    "ERR_REQUEST_RANGE_NOT_SATISFIABLE": {},
                    "ERR_SSL_PROTOCOL_ERROR": {},
                    "ERR_UNABLE_TO_REUSE_CONNECTION_FOR_PROXY_AUTH": {},
                    "ERR_TEMPORARILY_THROTTLED": {},
                    "code": {},
                    "ERR_SOCKET_RECEIVE_BUFFER_SIZE_UNCHANGEABLE": {},
                    "ERR_HTTP2_PUSHED_STREAM_NOT_AVAILABLE": {},
                    "ERR_UNEXPECTED_PROXY_AUTH": {},
                    "ERR_HTTP2_CLIENT_REFUSED_STREAM": {},
                    "CODES": {},
                    "ERR_HTTP2_PUSHED_RESPONSE_DOES_NOT_MATCH": {},
                    "ERR_UPLOAD_FILE_CHANGED": {},
                    "ERR_CONNECTION_TIMED_OUT": {},
                    "ERR_UNKNOWN_URL_SCHEME": {},
                    "ERR_TUNNEL_CONNECTION_FAILED": {},
                    "ERR_CERT_VALIDITY_TOO_LONG": {},
                    "ERR_HTTPS_PROXY_TUNNEL_RESPONSE_REDIRECT": {},
                    "ERR_UNEXPECTED_SECURITY_LIBRARY_STATUS": {},
                    "ERR_CERT_WEAK_KEY": {},
                    "ERR_DNS_REQUEST_CANCELLED": {},
                    "ERR_INVALID_CHUNKED_ENCODING": {},
                    "ERR_CACHE_ENTRY_NOT_SUITABLE": {},
                    "ERR_WS_UPGRADE": {},
                    "ERR_HTTP2_CLAIMED_PUSHED_STREAM_RESET_BY_SERVER": {},
                    "ERR_INSUFFICIENT_RESOURCES": {},
                    "ERR_ECH_FALLBACK_CERTIFICATE_INVALID": {},
                    "ERR_FILE_NO_SPACE": {},
                    "ERR_FILE_TOO_BIG": {},
                    "ERR_READ_IF_READY_NOT_IMPLEMENTED": {},
                    "ERR_WS_THROTTLE_QUEUE_TOO_LARGE": {},
                    "ERR_FILE_VIRUS_INFECTED": {},
                    "ERR_WRONG_VERSION_ON_EARLY_DATA": {}
                },
                "CefLoadHandlerAdapter": {},
                "CefContextMenuHandlerAdapter": {},
                "CefClientHandler": {
                    "msgRouters": {},
                    "N_CefHandle": {}
                },
                "CefResourceRequestHandler": {},
                "CefFocusHandler$FocusSource": {
                    "valueOf": function() {},
                    "values": function() {},
                    "FOCUS_SOURCE_SYSTEM": {},
                    "FOCUS_SOURCE_NAVIGATION": {},
                    "$VALUES": {}
                },
                "CefFocusHandler": {},
                "CefRequestContextHandler": {},
                "CefDragHandler": {},
                "CefRequestHandlerAdapter": {},
                "CefDialogHandler$FileDialogMode": {
                    "valueOf": function() {},
                    "values": function() {},
                    "FILE_DIALOG_OPEN_MULTIPLE": {},
                    "FILE_DIALOG_OPEN": {},
                    "FILE_DIALOG_SAVE": {},
                    "$VALUES": {}
                },
                "CefKeyboardHandlerAdapter": {},
                "CefResourceHandler": {},
                "CefKeyboardHandler$CefKeyEvent": {
                    "character": {},
                    "unmodified_character": {},
                    "focus_on_editable_field": {},
                    "native_key_code": {},
                    "is_system_key": {},
                    "type": {},
                    "modifiers": {},
                    "windows_key_code": {}
                },
                "CefLoadHandler": {},
                "CefJSDialogHandler": {},
                "CefLifeSpanHandlerAdapter": {},
                "CefKeyboardHandler$CefKeyEvent$EventType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "KEYEVENT_KEYUP": {},
                    "KEYEVENT_KEYDOWN": {},
                    "KEYEVENT_RAWKEYDOWN": {},
                    "KEYEVENT_CHAR": {},
                    "$VALUES": {}
                },
                "CefJSDialogHandlerAdapter": {},
                "CefRenderHandler": {},
                "CefScreenInfo": {
                    "available_width": {},
                    "depth": {},
                    "depth_per_component": {},
                    "x": {},
                    "width": {},
                    "available_x": {},
                    "y": {},
                    "available_y": {},
                    "is_monochrome": {},
                    "available_height": {},
                    "device_scale_factor": {},
                    "height": {}
                },
                "CefWindowHandlerAdapter": {},
                "CefRequestHandler": {},
                "CefDownloadHandler": {},
                "CefRequestHandler$TerminationStatus": {
                    "valueOf": function() {},
                    "values": function() {},
                    "TS_PROCESS_WAS_KILLED": {},
                    "TS_ABNORMAL_TERMINATION": {},
                    "TS_PROCESS_OOM": {},
                    "TS_PROCESS_CRASHED": {},
                    "$VALUES": {}
                },
                "CefWindowHandler": {},
                "CefFocusHandlerAdapter": {},
                "CefKeyboardHandler": {},
                "CefResourceRequestHandlerAdapter": {},
                "CefJSDialogHandler$JSDialogType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "JSDIALOGTYPE_PROMPT": {},
                    "JSDIALOGTYPE_CONFIRM": {},
                    "$VALUES": {},
                    "JSDIALOGTYPE_ALERT": {}
                },
                "CefMessageRouterHandler": {},
                "CefPrintHandler": {},
                "CefPrintHandlerAdapter": {},
                "CefAppHandler": {},
                "CefResourceHandlerAdapter": {},
                "CefDialogHandler": {},
                "CefDisplayHandler": {},
                "CefCookieAccessFilter": {},
                "CefContextMenuHandler": {}
            },
            "misc": {
                "CefPdfPrintSettings": {
                    "backgrounds_enabled": {},
                    "selection_only": {},
                    "margin_top": {},
                    "header_footer_url": {},
                    "header_footer_title": {},
                    "page_width": {},
                    "margin_right": {},
                    "scale_factor": {},
                    "margin_left": {},
                    "margin_type": {},
                    "margin_bottom": {},
                    "header_footer_enabled": {},
                    "landscape": {},
                    "page_height": {}
                },
                "CefPdfPrintSettings$MarginType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "MINIMUM": {},
                    "CUSTOM": {},
                    "NONE": {},
                    "DEFAULT": {},
                    "$VALUES": {}
                },
                "CefPrintSettings$ColorModel": {
                    "valueOf": function() {},
                    "values": function() {},
                    "COLOR_MODEL_PROCESSCOLORMODEL_CMYK": {},
                    "COLOR_MODEL_CMYK": {},
                    "COLOR_MODEL_UNKNOWN": {},
                    "COLOR_MODEL_HP_COLOR_BLACK": {},
                    "COLOR_MODEL_PROCESSCOLORMODEL_RGB": {},
                    "COLOR_MODEL_KCMY": {},
                    "COLOR_MODEL_CMY_K": {},
                    "COLOR_MODEL_HP_COLOR_COLOR": {},
                    "COLOR_MODEL_RGB": {},
                    "COLOR_MODEL_PRINTOUTMODE_NORMAL_GRAY": {},
                    "COLOR_MODEL_BLACK": {},
                    "COLOR_MODEL_RGBA": {},
                    "COLOR_MODEL_CMY": {},
                    "COLOR_MODEL_GRAYSCALE": {},
                    "COLOR_MODEL_COLORMODE_MONOCHROME": {},
                    "COLOR_MODEL_COLORMODE_COLOR": {},
                    "COLOR_MODEL_GRAY": {},
                    "COLOR_MODEL_COLOR": {},
                    "COLOR_MODEL_RGB16": {},
                    "COLOR_MODEL_PROCESSCOLORMODEL_GREYSCALE": {},
                    "$VALUES": {},
                    "COLOR_MODEL_PRINTOUTMODE_NORMAL": {}
                },
                "IntRef": {
                    "value_": {}
                },
                "CefPrintSettings_N": {
                    "createNative": function() {},
                    "N_Create": function() {},
                    "N_CefHandle": {}
                },
                "BoolRef": {
                    "value_": {}
                },
                "CefPrintSettings$DuplexMode": {
                    "valueOf": function() {},
                    "values": function() {},
                    "DUPLEX_MODE_UNKNOWN": {},
                    "DUPLEX_MODE_SHORT_EDGE": {},
                    "DUPLEX_MODE_LONG_EDGE": {},
                    "DUPLEX_MODE_SIMPLEX": {},
                    "$VALUES": {}
                },
                "EventFlags": {
                    "EVENTFLAG_ALT_DOWN": {},
                    "EVENTFLAG_NUM_LOCK_ON": {},
                    "EVENTFLAG_CAPS_LOCK_ON": {},
                    "EVENTFLAG_LEFT_MOUSE_BUTTON": {},
                    "EVENTFLAG_IS_KEY_PAD": {},
                    "EVENTFLAG_SHIFT_DOWN": {},
                    "EVENTFLAG_COMMAND_DOWN": {},
                    "EVENTFLAG_IS_LEFT": {},
                    "EVENTFLAG_NONE": {},
                    "EVENTFLAG_MIDDLE_MOUSE_BUTTON": {},
                    "EVENTFLAG_RIGHT_MOUSE_BUTTON": {},
                    "EVENTFLAG_CONTROL_DOWN": {},
                    "EVENTFLAG_IS_RIGHT": {}
                },
                "CefPageRange": {
                    "from": {},
                    "to": {}
                },
                "CefPrintSettings": {
                    "create": function() {}
                },
                "StringRef": {
                    "value_": {}
                }
            },
            "SystemBootstrap$Loader": {},
            "callback": {
                "CefAuthCallback": {},
                "CefAuthCallback_N": {},
                "CefCompletionCallback": {},
                "CefContextMenuParams$TypeFlags": {
                    "CM_TYPEFLAG_SELECTION": {},
                    "CM_TYPEFLAG_MEDIA": {},
                    "CM_TYPEFLAG_NONE": {},
                    "CM_TYPEFLAG_LINK": {},
                    "CM_TYPEFLAG_PAGE": {},
                    "CM_TYPEFLAG_FRAME": {},
                    "CM_TYPEFLAG_EDITABLE": {}
                },
                "CefPrintDialogCallback": {},
                "CefCommandLine_N": {},
                "CefDownloadItem_N": {},
                "CefPrintJobCallback": {},
                "CefMenuModel$MenuId": {
                    "MENU_ID_CUT": {},
                    "MENU_ID_PRINT": {},
                    "MENU_ID_USER_LAST": {},
                    "MENU_ID_RELOAD": {},
                    "MENU_ID_STOPLOAD": {},
                    "MENU_ID_UNDO": {},
                    "MENU_ID_VIEW_SOURCE": {},
                    "MENU_ID_USER_FIRST": {},
                    "MENU_ID_FORWARD": {},
                    "MENU_ID_BACK": {},
                    "MENU_ID_REDO": {},
                    "MENU_ID_PASTE": {},
                    "MENU_ID_SPELLCHECK_SUGGESTION_1": {},
                    "MENU_ID_SPELLCHECK_SUGGESTION_0": {},
                    "MENU_ID_SPELLCHECK_SUGGESTION_3": {},
                    "MENU_ID_SPELLCHECK_SUGGESTION_2": {},
                    "MENU_ID_SPELLCHECK_SUGGESTION_4": {},
                    "MENU_ID_SPELLCHECK_SUGGESTION_LAST": {},
                    "MENU_ID_RELOAD_NOCACHE": {},
                    "MENU_ID_SELECT_ALL": {},
                    "MENU_ID_FIND": {},
                    "MENU_ID_NO_SPELLING_SUGGESTIONS": {},
                    "MENU_ID_DELETE": {},
                    "MENU_ID_COPY": {}
                },
                "CefStringVisitor": {},
                "CefMenuModel_N": {},
                "CefFileDialogCallback": {},
                "CefContextMenuParams$MediaType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "CM_MEDIATYPE_VIDEO": {},
                    "CM_MEDIATYPE_IMAGE": {},
                    "CM_MEDIATYPE_AUDIO": {},
                    "CM_MEDIATYPE_PLUGIN": {},
                    "$VALUES": {},
                    "CM_MEDIATYPE_NONE": {},
                    "CM_MEDIATYPE_FILE": {}
                },
                "CefSchemeRegistrar": {},
                "CefMenuModel": {},
                "CefDragData$DragOperations": {
                    "DRAG_OPERATION_NONE": {},
                    "DRAG_OPERATION_LINK": {},
                    "DRAG_OPERATION_PRIVATE": {},
                    "DRAG_OPERATION_DELETE": {},
                    "DRAG_OPERATION_GENERIC": {},
                    "DRAG_OPERATION_COPY": {},
                    "DRAG_OPERATION_MOVE": {},
                    "DRAG_OPERATION_EVERY": {}
                },
                "CefNative": {},
                "CefRunFileDialogCallback": {},
                "CefSchemeHandlerFactory": {},
                "CefCommandLine": {},
                "CefDragData_N": {
                    "createNative": function() {},
                    "N_Create": function() {},
                    "N_CefHandle": {}
                },
                "CefJSDialogCallback_N": {},
                "CefFileDialogCallback_N": {},
                "CefPrintDialogCallback_N": {},
                "CefURLRequestClient": {},
                "CefContextMenuParams$EditStateFlags": {
                    "CM_EDITFLAG_CAN_REDO": {},
                    "CM_EDITFLAG_CAN_COPY": {},
                    "CM_EDITFLAG_CAN_UNDO": {},
                    "CM_EDITFLAG_CAN_DELETE": {},
                    "CM_EDITFLAG_CAN_SELECT_ALL": {},
                    "CM_EDITFLAG_NONE": {},
                    "CM_EDITFLAG_CAN_PASTE": {},
                    "CM_EDITFLAG_CAN_TRANSLATE": {},
                    "CM_EDITFLAG_CAN_CUT": {}
                },
                "CefContextMenuParams_N": {},
                "CefDownloadItemCallback_N": {},
                "CefContextMenuParams": {},
                "CefDragData": {
                    "create": function() {}
                },
                "CefContextMenuParams$MediaStateFlags": {
                    "CM_MEDIAFLAG_HAS_AUDIO": {},
                    "CM_MEDIAFLAG_PAUSED": {},
                    "CM_MEDIAFLAG_CAN_PRINT": {},
                    "CM_MEDIAFLAG_ERROR": {},
                    "CM_MEDIAFLAG_MUTED": {},
                    "CM_MEDIAFLAG_CAN_ROTATE": {},
                    "CM_MEDIAFLAG_LOOP": {},
                    "CM_MEDIAFLAG_CONTROL_ROOT_ELEMENT": {},
                    "CM_MEDIAFLAG_NONE": {},
                    "CM_MEDIAFLAG_HAS_VIDEO": {},
                    "CM_MEDIAFLAG_CAN_SAVE": {}
                },
                "CefSchemeRegistrar_N": {},
                "CefQueryCallback_N": {},
                "CefBeforeDownloadCallback": {},
                "CefPdfPrintCallback": {},
                "CefCallback": {},
                "CefJSDialogCallback": {},
                "CefCookieVisitor": {},
                "CefDownloadItemCallback": {},
                "CefCallback_N": {},
                "CefMenuModel$MenuItemType": {
                    "valueOf": function() {},
                    "values": function() {},
                    "MENUITEMTYPE_RADIO": {},
                    "MENUITEMTYPE_COMMAND": {},
                    "MENUITEMTYPE_SEPARATOR": {},
                    "MENUITEMTYPE_NONE": {},
                    "MENUITEMTYPE_CHECK": {},
                    "$VALUES": {},
                    "MENUITEMTYPE_SUBMENU": {}
                },
                "CefNativeAdapter": {
                    "N_CefHandle": {}
                },
                "CefDownloadItem": {},
                "CefQueryCallback": {},
                "CefBeforeDownloadCallback_N": {},
                "CefPrintJobCallback_N": {}
            },
            "CefApp$CefVersion": {
                "JCEF_COMMIT_NUMBER": {},
                "CHROME_VERSION_PATCH": {},
                "CHROME_VERSION_BUILD": {},
                "CEF_VERSION_PATCH": {},
                "CEF_COMMIT_NUMBER": {},
                "this$0": {},
                "CEF_VERSION_MINOR": {},
                "CHROME_VERSION_MAJOR": {},
                "CEF_VERSION_MAJOR": {},
                "CHROME_VERSION_MINOR": {}
            },
            "scheme": {
                "SchemeResourceHandler": {
                    "build": function() {},
                    "lambda$build$0": function() {},
                    "scheme": {}
                },
                "SchemePreResponse": {
                    "valueOf": function() {},
                    "values": function() {},
                    "NOT_HANDLED": {},
                    "HANDLED_CONTINUE": {},
                    "HANDLED_CANCEL": {},
                    "$VALUES": {}
                },
                "IScheme": {},
                "SchemeResponseData": {
                    "read": {},
                    "data": {},
                    "toRead": {}
                },
                "SchemeResponseHeaders": {
                    "response": {},
                    "length": {},
                    "redirURL": {}
                }
            },
            "CefApp": {
                "getCefFrameworkPath": function() {},
                "startup": function() {},
                "addAppHandler": function() {},
                "access$600": function() {},
                "N_Startup": function() {},
                "access$500": function() {},
                "access$400": function() {},
                "access$300": function() {},
                "access$200": function() {},
                "access$100": function() {},
                "access$000": function() {},
                "access$802": function() {},
                "getJcefLibPath": function() {},
                "access$900": function() {},
                "access$702": function() {},
                "access$800": function() {},
                "getState": function() {},
                "setState": function() {},
                "getInstance": function() {},
                "clients_": {},
                "state_": {},
                "appHandler_": {},
                "settings_": {},
                "self": {},
                "workTimer_": {}
            },
            "ccbluex": {
                "GuiView": {
                    "cefBrowser": {},
                    "pressedKeyMap": {},
                    "mouseClickY": {},
                    "mouseClickX": {},
                    "page": {},
                    "cefRenderer": {},
                    "transparent": {}
                },
                "WindowView": {
                    "inArea": function() {},
                    "glColor": function() {},
                    "drawRect": function() {},
                    "lastFocusUpdate": {},
                    "browserScale": {},
                    "focus": {},
                    "scale": {},
                    "minWidth": {},
                    "dragOffsetY": {},
                    "cefRenderer": {},
                    "handleInput": {},
                    "transparent": {},
                    "dragOffsetX": {},
                    "textField": {},
                    "minHeight": {},
                    "cefBrowser": {},
                    "mc": {},
                    "showTitle": {},
                    "x": {},
                    "width": {},
                    "y": {},
                    "drag": {},
                    "height": {}
                },
                "DynamicGuiView": {},
                "AllTimeGuiView": {},
                "Page": {
                    "url": {}
                },
                "ResourceScheme": {
                    "mimeTypeFromExtension": function() {},
                    "loadMimeTypeMapping": function() {},
                    "mimeTypeMap": {},
                    "is": {},
                    "contentType": {}
                }
            },
            "ICefRenderer": {},
            "OS": {
                "isLinux": function() {},
                "isMacintosh": function() {},
                "isWindows": function() {},
                "getOSType": function() {},
                "osType": {}
            },
            "SystemBootstrap": {
                "loadLibrary": function() {},
                "setLoader": function() {},
                "loader_": {}
            },
            "CefSettings": {
                "browser_subprocess_path": {},
                "javascript_flags": {},
                "pack_loading_disabled": {},
                "cookieable_schemes_exclude_defaults": {},
                "command_line_args_disabled": {},
                "remote_debugging_port": {},
                "locale": {},
                "windowless_rendering_enabled": {},
                "uncaught_exception_stack_size": {},
                "log_severity": {},
                "user_agent_product": {},
                "background_color": {},
                "log_file": {},
                "resources_dir_path": {},
                "persist_session_cookies": {},
                "cookieable_schemes_list": {},
                "cache_path": {},
                "locales_dir_path": {},
                "user_agent": {}
            },
            "OS$OSType": {
                "valueOf": function() {},
                "values": function() {},
                "OSMacintosh": {},
                "OSWindows": {},
                "OSUndefined": {},
                "OSUnknown": {},
                "OSLinux": {},
                "$VALUES": {}
            },
            "CefSettings$ColorType": {
                "this$0": {},
                "color_value": {}
            },
            "CefApp$CefAppState": {
                "valueOf": function() {},
                "values": function() {},
                "NEW": {},
                "SHUTTING_DOWN": {},
                "INITIALIZED": {},
                "TERMINATED": {},
                "INITIALIZING": {},
                "NONE": {},
                "$VALUES": {}
            },
            "lwjgl": {
                "CefRendererLwjgl": {
                    "transparent_": {},
                    "texture_id_": {},
                    "popup_rect_": {},
                    "original_popup_rect_": {},
                    "view_height_": {},
                    "view_width_": {}
                }
            },
            "CefClient": {
                "access$002": function() {},
                "access$000": function() {},
                "access$100": function() {},
                "keyboardHandler_": {},
                "isDisposed_": {},
                "printHandler_": {},
                "jsDialogHandler_": {},
                "focusedBrowser_": {},
                "propertyChangeListener": {},
                "lifeSpanHandler_": {},
                "browser_": {},
                "displayHandler_": {},
                "requestHandler_": {},
                "focusHandler_": {},
                "contextMenuHandler_": {},
                "downloadHandler_": {},
                "dialogHandler_": {},
                "dragHandler_": {},
                "loadHandler_": {}
            },
            "CefBrowserCustom": {
                "remapMouseCode": function() {},
                "remapKeycode": function() {},
                "paintData": {},
                "dc_": {},
                "justCreated_": {},
                "screenPoint_": {},
                "isTransparent_": {},
                "renderer_": {},
                "browser_rect_": {}
            },
            "CefBrowserCustom$PaintData": {
                "access$502": function() {},
                "access$600": function() {},
                "access$402": function() {},
                "access$302": function() {},
                "access$500": function() {},
                "access$202": function() {},
                "access$400": function() {},
                "access$102": function() {},
                "access$300": function() {},
                "access$200": function() {},
                "access$100": function() {},
                "access$602": function() {},
                "hasFrame": {},
                "fullReRender": {},
                "width": {},
                "dirtyRects": {},
                "buffer": {},
                "height": {}
            },
            "CefSettings$LogSeverity": {
                "valueOf": function() {},
                "values": function() {},
                "LOGSEVERITY_VERBOSE": {},
                "LOGSEVERITY_FATAL": {},
                "LOGSEVERITY_INFO": {},
                "LOGSEVERITY_WARNING": {},
                "LOGSEVERITY_ERROR": {},
                "LOGSEVERITY_DISABLE": {},
                "LOGSEVERITY_DEFAULT": {},
                "$VALUES": {}
            }
        }
    },
    "slice": {
        "event": {
            "events": {
                "EventRenderEntityModel": {
                    "renderer": {},
                    "maxRenderDistance": {},
                    "p_77036_2_": {},
                    "scaleFactor": {},
                    "p_77036_3_": {},
                    "p_77036_4_": {},
                    "model": {},
                    "p_77036_5_": {},
                    "p_77036_6_": {},
                    "entity": {},
                    "partialTicks": {}
                },
                "EventSlowDown": {},
                "EventUpdateLWJGL": {},
                "EventPacket": {
                    "outgoing": {},
                    "packet": {}
                },
                "Event3D": {
                    "partialTicks": {}
                },
                "Event2D": {
                    "scaledResolution": {},
                    "width": {},
                    "partialTicks": {},
                    "height": {}
                },
                "EventChatMessage": {
                    "chatComponent": {},
                    "formattedMessage": {},
                    "unformattedMessage": {}
                },
                "EventClientTick": {},
                "EventAttack": {
                    "entity": {}
                },
                "EventJump": {},
                "EventChat": {
                    "message": {}
                },
                "EventPlayerReach": {
                    "reach": {}
                },
                "EventKey": {
                    "key": {}
                },
                "EventEntityRender": {
                    "pre": {},
                    "entity": {},
                    "partialTicks": {}
                },
                "EventClientBrand": {
                    "brand": {}
                },
                "EventGuiRender": {
                    "width": {},
                    "sr": {},
                    "height": {},
                    "partialTicks": {}
                },
                "EventUpdate": {
                    "pre": {},
                    "onGround": {},
                    "x": {},
                    "y": {},
                    "z": {},
                    "pitch": {},
                    "yaw": {}
                },
                "EventHandleChat": {
                    "chatVisibility": {},
                    "s02PacketChat": {}
                },
                "EventSafeWalk": {
                    "safeWalk": {}
                },
                "EventSwitchAccount": {
                    "session": {},
                    "uuid": {},
                    "lastSession": {},
                    "username": {}
                },
                "EventMouse": {
                    "button": {}
                }
            },
            "Event": {
                "cancelled": {}
            },
            "ExcludeFromScript": {},
            "manager": {
                "EventManager": {
                    "lambda$getEventSender$0": function() {},
                    "registeredSenders": {},
                    "registeredObjects": {}
                },
                "sender": {
                    "EventSender": {
                        "method": {},
                        "event": {},
                        "object": {}
                    },
                    "EventPacketSender": {
                        "eventPacket": {},
                        "method": {},
                        "event": {},
                        "object": {}
                    }
                }
            },
            "data": {
                "PacketEvent": {},
                "EventInfo": {}
            }
        },
        "manager": {
            "SettingsManager": {
                "lambda$new$0": function() {}
            },
            "NotificationManager": {},
            "ModuleManager": {
                "lambda$getModule$1": function() {},
                "lambda$getModule$2": function() {},
                "lambda$getModules$0": function() {},
                "modules": {}
            },
            "CommandManager": {
                "lambda$getCommand$0": function() {},
                "commands": {}
            }
        },
        "util": {
            "Timer": {
                "lastMS": {}
            },
            "GradientUtil": {
                "gradient": function() {},
                "interpolate": function() {}
            },
            "RenderUtil": {
                "drawImage": function() {},
                "setupFBO": function() {},
                "drawHead": function() {},
                "drawRoundedRect": function() {},
                "drawRect": function() {},
                "glColor": function() {},
                "tessellator": {},
                "worldRenderer": {}
            },
            "PacketUtil": {
                "sendPacket": function() {},
                "isMovementPacket": function() {},
                "sendPacketNoEvent": function() {}
            },
            "LoggerUtil": {
                "addIRCMessage": function() {},
                "addMessageNoPrefix": function() {},
                "addMessage": function() {},
                "addTerminalMessage": function() {}
            },
            "KeyUtil": {
                "left": function() {},
                "forward": function() {},
                "moveKeys": function() {},
                "back": function() {},
                "right": function() {},
                "sneak": function() {},
                "jump": function() {}
            },
            "ResourceUtil": {
                "getResource": function() {},
                "extractResource": function() {}
            },
            "FileUtil": {
                "downloadFile": function() {},
                "getZipInputStream": function() {},
                "extractZip": function() {}
            },
            "MoveUtil": {
                "stop": function() {},
                "resetMotion": function() {},
                "getBPS": function() {},
                "getSpeed": function() {},
                "isMoving": function() {},
                "strafe": function() {},
                "isCollided": function() {},
                "jump": function() {}
            },
            "MathUtil": {
                "round": function() {},
                "isPositive": function() {}
            },
            "HardwareUtil": {
                "getHardwareID": function() {}
            },
            "ColorUtil": {
                "getRainbow": function() {},
                "getRGB": function() {}
            },
            "RotationUtil": {
                "getDirection": function() {},
                "isInFov": function() {}
            }
        },
        "gui": {
            "hud": {
                "slice": {
                    "HUD": {
                        "ticks": {}
                    }
                },
                "legacy": {
                    "arraylist": {
                        "SmoothArrayListHUD": {
                            "lambda$new$0": function() {},
                            "getEnabledModules": function() {},
                            "lambda$getEnabledModules$4": function() {},
                            "lambda$getEnabledModules$3": function() {},
                            "moduleTicks": {},
                            "moduleTimers": {},
                            "mc": {},
                            "modules": {}
                        },
                        "ArrayListHUD": {
                            "getEnabledModules": function() {},
                            "lambda$getEnabledModules$0": function() {},
                            "lambda$getEnabledModules$1": function() {},
                            "mc": {}
                        }
                    },
                    "TargetHUD": {
                        "mc": {}
                    },
                    "SessionHUD": {
                        "timer": {},
                        "mc": {}
                    },
                    "PlayerOnScreen": {},
                    "HUD": {
                        "setTargetHUD": function() {},
                        "getTargetHUD": function() {},
                        "onTick": function() {},
                        "setPlayerOnScreen": function() {},
                        "getPlayerOnScreen": function() {},
                        "draw": function() {},
                        "mode": {},
                        "smoothArrayListHUD": {},
                        "playerOnScreen": {},
                        "targetHUD": {},
                        "hudClass": {},
                        "sessionHUD": {}
                    }
                }
            },
            "main": {
                "MainButton": {
                    "x": {},
                    "y": {},
                    "action": {},
                    "timeSpan": {}
                },
                "MainMenu": {
                    "lambda$mouseClicked$4": function() {}
                },
                "HTMLMainMenu": {}
            },
            "alt": {
                "HTMLAlt": {},
                "GuiAlt": {
                    "parent": {}
                },
                "field": {
                    "GuiPasswordField": {}
                },
                "manager": {
                    "AltManager": {}
                }
            }
        },
        "command": {
            "commands": {
                "CommandReload": {},
                "CommandBind": {},
                "CommandConnect": {
                    "lambda$handle$0": function() {}
                },
                "CommandVClip": {
                    "mc": {}
                },
                "CommandHelp": {},
                "CommandSetting": {},
                "CommandConfig": {
                    "lambda$handle$0": function() {}
                },
                "CommandJS": {
                    "engine": {}
                },
                "CommandPlugins": {
                    "searching": {},
                    "sendMessage": {}
                },
                "CommandToggle": {}
            },
            "Command": {
                "timer": {},
                "world": {},
                "aliases": {},
                "mc": {},
                "name": {},
                "description": {},
                "player": {},
                "info": {}
            },
            "data": {
                "CommandInfo": {}
            }
        },
        "font": {
            "FontManager": {
                "fonts": {}
            },
            "TTFFontRenderer$CharacterData": {
                "character": {},
                "this$0": {},
                "width": {},
                "textureId": {},
                "height": {}
            }
        },
        "script": {
            "lang": {
                "logger": {
                    "Console": {
                        "warn": function() {},
                        "log": function() {},
                        "error": function() {}
                    },
                    "Chat": {
                        "print": function() {},
                        "addMessage": function() {}
                    }
                }
            },
            "manager": {
                "ScriptManager": {
                    "lambda$callEvent$0": function() {},
                    "scriptDataDir": {},
                    "jarScripts": {},
                    "fontManager": {},
                    "scripts": {},
                    "moduleManager": {}
                }
            }
        },
        "legacy": {
            "clickgui": {
                "setting": {
                    "SettingComponent": {
                        "parent": {},
                        "x": {},
                        "width": {},
                        "y": {},
                        "text": {},
                        "setting": {},
                        "height": {}
                    },
                    "settings": {
                        "BooleanButton": {
                            "booleanValue": {}
                        },
                        "SliderButton": {
                            "dragX": {},
                            "dragging": {},
                            "dragY": {},
                            "value": {}
                        },
                        "ModeButton": {
                            "modeValue": {}
                        }
                    }
                },
                "pane": {
                    "SettingPane": {
                        "lambda$drawPane$1": function() {},
                        "lambda$mouseReleased$0": function() {},
                        "lambda$mouseClicked$2": function() {},
                        "settings": {},
                        "module": {},
                        "x": {},
                        "width": {},
                        "y": {},
                        "height": {}
                    },
                    "DropdownPane": {
                        "lambda$drawPane$0": function() {},
                        "lambda$mouseReleased$1": function() {},
                        "lambda$mouseClicked$2": function() {},
                        "moduleButtons": {},
                        "dragX": {},
                        "dragging": {},
                        "dragY": {},
                        "x": {},
                        "width": {},
                        "y": {},
                        "openHeight": {},
                        "openModule": {},
                        "category": {},
                        "open": {},
                        "height": {}
                    }
                },
                "module": {
                    "ModuleButton": {
                        "module": {},
                        "x": {},
                        "width": {},
                        "y": {},
                        "pane": {},
                        "open": {},
                        "height": {}
                    }
                },
                "ClickGui": {
                    "lambda$mouseReleased$0": function() {},
                    "lambda$getPane$3": function() {},
                    "lambda$drawScreen$1": function() {},
                    "lambda$mouseClicked$2": function() {},
                    "openModules": {},
                    "dragging": {},
                    "widths": {},
                    "paneList": {}
                }
            }
        },
        "file": {
            "ConfigSaver": {
                "modules": {},
                "moduleManager": {}
            },
            "Saver": {
                "modules": {},
                "moduleManager": {}
            }
        },
        "setting": {
            "settings": {
                "NumberValue": {
                    "min": {},
                    "max": {},
                    "type": {},
                    "value": {}
                },
                "NumberValue$Type": {
                    "valueOf": function() {},
                    "values": function() {},
                    "FLOAT": {},
                    "DOUBLE": {},
                    "$VALUES": {},
                    "INTEGER": {},
                    "LONG": {}
                },
                "BooleanValue": {
                    "value": {}
                },
                "ModeValue": {
                    "values": {},
                    "index": {},
                    "value": {}
                }
            },
            "Setting": {
                "hidden": {},
                "module": {},
                "name": {}
            }
        },
        "clickgui": {
            "HTMLGui": {}
        },
        "notification": {
            "Type": {
                "valueOf": function() {},
                "values": function() {},
                "name": {},
                "ERROR": {},
                "INFO": {},
                "WARNING": {},
                "$VALUES": {}
            },
            "Notification": {
                "timer": {},
                "seconds": {},
                "title": {},
                "message": {},
                "ran": {}
            },
            "NotificationManager": {
                "access$100": function() {},
                "access$000": function() {},
                "queue": function() {},
                "currentNotification": {},
                "notifications": {}
            }
        },
        "module": {
            "data": {
                "ModuleInfo": {},
                "Category": {
                    "valueOf": function() {},
                    "values": function() {},
                    "PLAYER": {},
                    "COMBAT": {},
                    "MOVEMENT": {},
                    "RENDER": {},
                    "MISC": {},
                    "name": {},
                    "WORLD": {},
                    "$VALUES": {}
                }
            },
            "modules": {
                "misc": {
                    "insults": {
                        "InsultsClazz": {
                            "sigma": {}
                        }
                    }
                }
            }
        },
        "cef": {
            "RequestHandler": {
                "showTargetHUD": function() {},
                "addToArrayList": function() {},
                "showSessionHUD": function() {},
                "renameFromArrayList": function() {},
                "addNotification": function() {},
                "updateTargetHUD": function() {},
                "setBPS": function() {},
                "updateSessionHUD": function() {},
                "removeFromArrayList": function() {},
                "hideSessionHUD": function() {},
                "setBPSVisible": function() {},
                "hideTargetHUD": function() {},
                "browser": {},
                "INSTANCE": {},
                "targetHUDShown": {},
                "sessionHUDShown": {}
            },
            "ViewNoGui": {
                "init": {},
                "cefBrowser": {},
                "pressedKeyMap": {},
                "page": {},
                "cefRenderer": {}
            }
        },
        "api": {
            "API": {
                "readResponse": function() {},
                "sendAuthRequest": function() {},
                "API_URL": {}
            }
        }
    },
    "Start": {
        "main": function() {},
        "concat": function() {}
    },
    "viamcp": {
        "gui": {
            "GuiProtocolSelector": {
                "parent": {},
                "list": {}
            },
            "AsyncVersionSlider": {
                "dragging": {},
                "sliderValue": {},
                "dragValue": {},
                "values": {}
            },
            "GuiCredits": {
                "parent": {}
            },
            "GuiProtocolSelector$SlotList": {
                "this$0": {}
            }
        },
        "utils": {
            "AttackOrder": {
                "send1_8Attack": function() {},
                "sendConditionalSwing": function() {},
                "sendFixedAttack": function() {},
                "send1_9Attack": function() {},
                "mc": {},
                "VER_1_8_ID": {}
            },
            "FixedSoundEngine": {
                "destroyBlock": function() {},
                "onItemUse": function() {},
                "mc": {}
            }
        },
        "protocols": {
            "ProtocolInfoCollection": {
                "NO_DESC": {},
                "R1_9_1": {},
                "R1_7_6": {},
                "R1_9_3": {},
                "R1_9_2": {},
                "R1_19": {},
                "R1_19_1": {},
                "R1_18_2": {},
                "R1_16_4": {},
                "R1_17_1": {},
                "R1_16_2": {},
                "R1_14_4": {},
                "R1_16_3": {},
                "R1_15_1": {},
                "R1_14_2": {},
                "R1_14": {},
                "R1_16_1": {},
                "R1_15_2": {},
                "R1_14_3": {},
                "R1_13": {},
                "R1_13_1": {},
                "R1_12_2": {},
                "R1_12": {},
                "R1_14_1": {},
                "R1_13_2": {},
                "R1_11": {},
                "R1_18": {},
                "R1_11_1": {},
                "R1_17": {},
                "R1_12_1": {},
                "R1_16": {},
                "R1_15": {},
                "R1_10": {},
                "R1_7": {},
                "R1_8": {},
                "R1_9": {}
            },
            "ProtocolInfo": {
                "releaseDate": {},
                "name": {},
                "description": {}
            }
        }
    }
};
export const Java = {
    type: (className: ("net.minecraft.client.gui.ScreenChatOptions" | 
                        "net.minecraft.client.model.ModelGhast" | 
                        "net.minecraft.util.ReportedException" | 
                        "net.optifine.util.CounterInt" | 
                        "com.sliceclient.anticheat.user.UserManager" | 
                        "org.cef.browser.scheme.IScheme" | 
                        "net.optifine.entity.model.CustomEntityModel" | 
                        "net.minecraft.client.model.ModelLeashKnot" | 
                        "net.minecraft.client.renderer.chunk.SetVisibility" | 
                        "net.minecraft.client.gui.GuiDownloadTerrain" | 
                        "net.optifine.gui.TooltipProviderOptions" | 
                        "slice.event.events.EventRenderEntityModel" | 
                        "net.minecraft.util.EntityDamageSourceIndirect" | 
                        "net.minecraft.world.storage.ISaveFormat" | 
                        "org.cef.handler.CefLifeSpanHandler" | 
                        "net.minecraft.world.gen.NoiseGeneratorOctaves" | 
                        "net.minecraft.block.BlockSnow" | 
                        "net.optifine.shaders.ProgramStage" | 
                        "net.minecraft.block.BlockWall" | 
                        "net.minecraft.scoreboard.GoalColor" | 
                        "net.optifine.player.CapeUtils" | 
                        "net.minecraftforge.client.model.ITransformation" | 
                        "net.optifine.util.ChunkUtils" | 
                        "slice.event.events.EventSlowDown" | 
                        "net.minecraft.block.BlockButtonWood" | 
                        "net.optifine.http.HttpPipelineRequest" | 
                        "net.optifine.gui.GuiDetailSettingsOF" | 
                        "net.minecraft.world.gen.ChunkProviderEnd" | 
                        "slice.manager.SettingsManager" | 
                        "net.optifine.shaders.Iterator3d" | 
                        "net.minecraft.client.player.inventory.ContainerLocalMenu" | 
                        "net.minecraft.world.gen.structure.StructureComponent" | 
                        "net.minecraft.util.LongHashMap" | 
                        "net.minecraft.command.CommandDefaultGameMode" | 
                        "net.optifine.entity.model.anim.RenderResolverTileEntity" | 
                        "net.optifine.reflect.ReflectorField" | 
                        "net.minecraft.inventory.InventoryLargeChest" | 
                        "net.minecraft.client.model.ModelBoat" | 
                        "slice.util.Timer" | 
                        "net.minecraft.command.CommandTrigger" | 
                        "net.minecraft.entity.item.EntityMinecartEmpty" | 
                        "net.minecraft.client.multiplayer.ServerData" | 
                        "net.minecraft.command.server.CommandBroadcast" | 
                        "net.minecraft.world.gen.layer.GenLayerRiver" | 
                        "net.minecraft.client.model.ModelSheep2" | 
                        "net.minecraft.client.model.ModelSheep1" | 
                        "net.minecraft.util.Tuple" | 
                        "net.minecraft.world.gen.feature.WorldGenIcePath" | 
                        "net.optifine.ChunkPosComparator" | 
                        "net.minecraft.item.crafting.CraftingManager" | 
                        "slice.gui.hud.slice.HUD" | 
                        "org.cef.handler.CefDisplayHandlerAdapter" | 
                        "net.minecraft.client.resources.data.AnimationFrame" | 
                        "net.optifine.CustomColormap" | 
                        "org.cef.misc.CefPdfPrintSettings" | 
                        "net.minecraft.client.gui.spectator.ISpectatorMenuView" | 
                        "Start" | 
                        "net.minecraft.client.renderer.entity.RenderMagmaCube" | 
                        "net.minecraft.world.biome.BiomeCache$Block" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument" | 
                        "viamcp.gui.GuiProtocolSelector" | 
                        "net.minecraft.util.RegistryNamespaced" | 
                        "net.minecraft.entity.ai.EntitySenses" | 
                        "net.optifine.http.HttpPipeline" | 
                        "net.minecraft.world.pathfinder.NodeProcessor" | 
                        "net.optifine.shaders.ClippingHelperShadow" | 
                        "net.optifine.LightMap" | 
                        "viamcp.gui.AsyncVersionSlider" | 
                        "slice.event.events.EventUpdateLWJGL" | 
                        "net.optifine.util.LinkedList" | 
                        "org.cef.handler.CefRenderHandlerAdapter" | 
                        "org.cef.handler.CefMessageRouterHandlerAdapter" | 
                        "net.minecraft.command.CommandDifficulty" | 
                        "net.optifine.shaders.ProgramStack" | 
                        "net.minecraft.block.BlockBush" | 
                        "net.minecraft.command.CommandReplaceItem" | 
                        "net.minecraft.entity.ai.EntityAIFollowGolem" | 
                        "net.minecraft.client.resources.data.LanguageMetadataSection" | 
                        "net.optifine.entity.model.ModelAdapterHeadHumanoid" | 
                        "org.cef.callback.CefAuthCallback" | 
                        "slice.event.events.EventPacket" | 
                        "slice.command.commands.CommandReload" | 
                        "net.minecraft.client.renderer.texture.DynamicTexture" | 
                        "net.minecraft.pathfinding.Path" | 
                        "net.minecraft.block.BlockPressurePlateWeighted" | 
                        "net.minecraft.inventory.ContainerHopper" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets" | 
                        "org.cef.callback.CefAuthCallback_N" | 
                        "net.minecraft.block.BlockClay" | 
                        "net.minecraft.util.RegistryDefaulted" | 
                        "net.optifine.entity.model.CustomModelRegistry" | 
                        "net.minecraft.world.gen.feature.WorldGenHugeTrees" | 
                        "net.minecraft.client.resources.model.BuiltInModel" | 
                        "net.minecraft.crash.CrashReportCategory" | 
                        "net.minecraft.world.gen.layer.GenLayer" | 
                        "net.optifine.config.Weather" | 
                        "net.minecraft.inventory.ContainerBrewingStand" | 
                        "net.minecraft.server.management.PlayerManager$PlayerInstance" | 
                        "net.minecraft.entity.ai.attributes.IAttribute" | 
                        "net.optifine.reflect.ReflectorConstructor" | 
                        "slice.util.GradientUtil" | 
                        "net.minecraft.world.biome.WorldChunkManagerHell" | 
                        "net.minecraft.world.gen.ChunkProviderFlat" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsGeneral" | 
                        "net.minecraft.world.gen.layer.GenLayerBiome" | 
                        "net.minecraft.tileentity.TileEntityDaylightDetector" | 
                        "org.cef.browser.mac.CefBrowserWindowMac" | 
                        "net.minecraft.world.storage.ThreadedFileIOBase" | 
                        "net.minecraft.inventory.Slot" | 
                        "slice.util.RenderUtil" | 
                        "net.optifine.render.GlBlendState" | 
                        "org.cef.network.CefPostData" | 
                        "slice.util.PacketUtil" | 
                        "net.minecraft.client.gui.GuiOverlayDebug" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy" | 
                        "net.minecraft.client.particle.EntityExplodeFX" | 
                        "net.minecraft.client.resources.IReloadableResourceManager" | 
                        "net.minecraft.nbt.NBTTagByte" | 
                        "net.optifine.util.ArrayUtils" | 
                        "net.optifine.entity.model.ModelAdapterMinecartTnt" | 
                        "net.minecraft.client.renderer.entity.RenderSlime" | 
                        "org.cef.callback.CefCompletionCallback" | 
                        "slice.command.Command" | 
                        "net.minecraft.client.renderer.GlStateManager" | 
                        "org.cef.handler.CefCookieAccessFilterAdapter" | 
                        "slice.event.events.Event3D" | 
                        "com.sliceclient.anticheat.check.checks.movement.speed.SpeedA" | 
                        "net.optifine.entity.model.ModelAdapterVillager" | 
                        "net.minecraft.client.model.ModelPlayer" | 
                        "net.minecraft.block.BlockCactus" | 
                        "org.cef.callback.CefPrintDialogCallback" | 
                        "net.minecraft.command.ICommandSender" | 
                        "net.minecraft.client.gui.GuiLanguage$List" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsMobsList" | 
                        "org.cef.handler.CefAppHandlerAdapter" | 
                        "net.minecraft.command.CommandToggleDownfall" | 
                        "net.minecraft.client.audio.SoundList" | 
                        "net.optifine.shaders.config.ShaderOptionVariable" | 
                        "net.minecraft.client.model.ModelPig" | 
                        "net.minecraft.client.model.ModelCow" | 
                        "net.minecraft.client.renderer.culling.Frustum" | 
                        "slice.event.events.Event2D" | 
                        "net.minecraft.enchantment.EnchantmentArrowKnockback" | 
                        "net.optifine.shaders.config.MacroProcessor" | 
                        "net.minecraft.nbt.NBTTagFloat" | 
                        "net.minecraft.command.server.CommandTestFor" | 
                        "net.minecraft.util.MovingObjectPosition" | 
                        "net.minecraft.realms.Tezzelator" | 
                        "org.cef.network.CefRequest_N" | 
                        "net.minecraft.client.resources.IResourcePack" | 
                        "net.minecraft.inventory.ContainerEnchantment" | 
                        "org.cef.callback.CefCommandLine_N" | 
                        "net.optifine.entity.model.CustomEntityRenderer" | 
                        "net.minecraft.client.model.ModelChest" | 
                        "net.minecraft.tileentity.TileEntityBeacon" | 
                        "net.minecraft.block.BlockGrass" | 
                        "org.cef.browser.lwjgl.CefRendererLwjgl" | 
                        "net.optifine.expr.IExpressionBool" | 
                        "net.minecraft.enchantment.EnchantmentFishingSpeed" | 
                        "net.optifine.BlockPosM" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList" | 
                        "net.minecraft.client.particle.EntitySnowShovelFX" | 
                        "slice.font.FontManager" | 
                        "net.optifine.http.FileDownloadThread" | 
                        "net.optifine.util.NumUtils" | 
                        "slice.util.LoggerUtil" | 
                        "net.minecraft.client.audio.GuardianSound" | 
                        "net.minecraft.client.model.ModelHumanoidHead" | 
                        "net.optifine.entity.model.ModelAdapterEnderman" | 
                        "net.minecraft.block.BlockStoneBrick" | 
                        "net.minecraft.entity.item.EntityMinecartTNT" | 
                        "net.minecraft.client.gui.MapItemRenderer" | 
                        "net.optifine.util.SmoothFloat" | 
                        "net.minecraft.block.BlockBasePressurePlate" | 
                        "net.minecraft.client.particle.EntityReddustFX" | 
                        "net.minecraft.world.gen.feature.WorldGenDoublePlant" | 
                        "net.optifine.shaders.uniform.ShaderParameterBool" | 
                        "net.optifine.entity.model.ModelAdapterMinecart" | 
                        "net.minecraft.entity.ai.EntityLookHelper" | 
                        "org.cef.callback.CefDownloadItem_N" | 
                        "com.sliceclient.script.classloader.ScriptClassLoader" | 
                        "net.minecraft.entity.ai.EntityAIBeg" | 
                        "net.minecraft.block.IGrowable" | 
                        "slice.gui.hud.legacy.arraylist.SmoothArrayListHUD" | 
                        "net.optifine.expr.ExpressionParser" | 
                        "net.minecraft.client.gui.inventory.GuiFurnace" | 
                        "net.minecraft.block.BlockStandingSign" | 
                        "net.minecraft.client.audio.SoundPoolEntry" | 
                        "net.minecraft.world.LockCode" | 
                        "net.optifine.Lagometer" | 
                        "net.minecraft.client.renderer.block.model.ItemCameraTransforms" | 
                        "net.minecraft.block.BlockCarpet" | 
                        "net.minecraft.client.gui.ChatLine" | 
                        "net.optifine.shaders.uniform.ShaderUniforms" | 
                        "net.minecraft.dispenser.ILocation" | 
                        "net.minecraft.client.gui.GuiPageButtonList" | 
                        "net.minecraft.network.INetHandler" | 
                        "net.minecraft.util.TupleIntJsonSerializable" | 
                        "net.minecraft.client.renderer.entity.RenderHorse" | 
                        "net.minecraft.entity.NpcMerchant" | 
                        "net.minecraft.command.server.CommandListBans" | 
                        "net.minecraft.inventory.InventoryBasic" | 
                        "net.minecraft.client.util.JsonException" | 
                        "net.minecraft.command.server.CommandSaveAll" | 
                        "net.optifine.http.IFileDownloadListener" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers$ServerList" | 
                        "net.minecraft.client.renderer.entity.RenderLightningBolt" | 
                        "net.minecraft.entity.ai.EntityAIMoveThroughVillage" | 
                        "net.optifine.player.PlayerItemRenderer" | 
                        "slice.script.lang.logger.Console" | 
                        "net.minecraft.block.BlockSapling" | 
                        "net.optifine.entity.model.ModelAdapterBoat" | 
                        "net.minecraft.client.renderer.StitcherException" | 
                        "org.cef.CefApp$CefVersion" | 
                        "net.minecraft.client.gui.spectator.categories.SpectatorDetails" | 
                        "net.minecraft.client.renderer.entity.RenderWither" | 
                        "slice.legacy.clickgui.setting.SettingComponent" | 
                        "net.minecraft.block.BlockFalling" | 
                        "net.minecraft.util.Timer" | 
                        "net.optifine.entity.model.ModelAdapterWitch" | 
                        "net.minecraft.command.CommandStats" | 
                        "org.cef.handler.CefRequestContextHandlerAdapter" | 
                        "net.minecraft.client.renderer.entity.RenderLiving" | 
                        "net.optifine.gui.IOptionControl" | 
                        "net.optifine.render.GlAlphaState" | 
                        "net.minecraft.world.gen.feature.WorldGeneratorBonusChest" | 
                        "net.minecraft.world.gen.feature.WorldGenFlowers" | 
                        "net.optifine.DynamicLights" | 
                        "net.minecraft.client.renderer.Tessellator" | 
                        "net.minecraft.block.BlockTNT" | 
                        "net.minecraft.client.renderer.entity.layers.LayerEnderDragonEyes" | 
                        "net.minecraft.entity.ai.EntityAIVillagerInteract" | 
                        "org.cef.callback.CefPrintJobCallback" | 
                        "slice.util.KeyUtil" | 
                        "net.minecraft.block.BlockRotatedPillar" | 
                        "net.minecraft.world.biome.BiomeGenMutated" | 
                        "org.cef.scheme.SchemeResourceHandler" | 
                        "org.cef.network.CefPostDataElement_N" | 
                        "net.minecraft.item.crafting.FurnaceRecipes" | 
                        "net.optifine.CrashReporter" | 
                        "net.minecraftforge.client.model.pipeline.IVertexProducer" | 
                        "net.minecraft.world.gen.layer.GenLayerRemoveTooMuchOcean" | 
                        "net.minecraft.command.CommandBlockData" | 
                        "net.minecraft.util.ThreadSafeBoundList" | 
                        "net.minecraft.client.particle.EntityCrit2FX" | 
                        "net.minecraft.pathfinding.PathPoint" | 
                        "slice.event.events.EventChatMessage" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld" | 
                        "net.minecraft.command.CommandSetPlayerTimeout" | 
                        "net.optifine.DynamicLightsMap" | 
                        "net.minecraft.client.renderer.VboRenderList" | 
                        "net.minecraft.item.crafting.RecipesTools" | 
                        "net.minecraft.world.biome.BiomeGenOcean" | 
                        "org.cef.CefApp" | 
                        "net.minecraft.entity.ai.EntityAIHarvestFarmland" | 
                        "net.minecraft.entity.ai.EntityAIHurtByTarget" | 
                        "net.optifine.shaders.CustomTextureRaw" | 
                        "net.minecraft.world.gen.feature.WorldGenVines" | 
                        "net.optifine.shaders.ShaderPackZip" | 
                        "net.minecraft.block.BlockFence" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerHeldItemWitch" | 
                        "net.minecraft.block.BlockPane" | 
                        "net.minecraft.dispenser.IBlockSource" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsItem" | 
                        "net.minecraft.entity.boss.IBossDisplayData" | 
                        "net.minecraft.client.model.ModelSilverfish" | 
                        "viamcp.utils.AttackOrder" | 
                        "net.minecraft.world.gen.structure.MapGenStronghold" | 
                        "net.minecraft.world.NextTickListEntry" | 
                        "net.optifine.entity.model.ModelAdapterGhast" | 
                        "net.minecraft.world.gen.feature.WorldGenSpikes" | 
                        "slice.util.ResourceUtil" | 
                        "net.optifine.player.PlayerItemModel" | 
                        "net.minecraft.client.audio.MovingSoundMinecartRiding" | 
                        "net.minecraft.world.gen.feature.WorldGenHellLava" | 
                        "net.minecraft.world.gen.layer.GenLayerZoom" | 
                        "net.minecraft.block.BlockMobSpawner" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel" | 
                        "net.minecraft.client.renderer.entity.RenderEntity" | 
                        "net.minecraft.nbt.NBTTagShort" | 
                        "net.optifine.CustomSkyLayer" | 
                        "com.sliceclient.anticheat.manager.AntiCheatEventManager" | 
                        "net.minecraft.client.renderer.block.model.BreakingFour" | 
                        "com.sliceclient.anticheat.check.checks.misc.badpackets.BadPacketsA" | 
                        "net.minecraft.entity.ai.EntityAIOcelotSit" | 
                        "net.minecraft.dispenser.ILocatableSource" | 
                        "net.minecraft.block.BlockNetherBrick" | 
                        "net.minecraft.entity.EnumCreatureAttribute" | 
                        "net.minecraft.client.gui.inventory.GuiDispenser" | 
                        "net.minecraft.entity.projectile.EntitySmallFireball" | 
                        "net.minecraft.block.BlockEndPortal" | 
                        "org.cef.ccbluex.GuiView" | 
                        "net.minecraft.util.IStringSerializable" | 
                        "net.minecraft.world.storage.ISaveHandler" | 
                        "net.optifine.reflect.ReflectorMethod" | 
                        "net.minecraft.client.renderer.entity.RenderBiped" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityChestRenderer" | 
                        "org.cef.handler.CefDownloadHandlerAdapter" | 
                        "net.minecraft.client.model.ModelWither" | 
                        "net.minecraft.entity.ai.attributes.BaseAttribute" | 
                        "net.minecraft.block.properties.IProperty" | 
                        "net.minecraft.block.properties.PropertyHelper" | 
                        "net.minecraft.world.gen.layer.GenLayerVoronoiZoom" | 
                        "net.optifine.NaturalProperties" | 
                        "slice.gui.main.MainButton" | 
                        "net.minecraft.command.server.CommandPardonPlayer" | 
                        "net.minecraft.realms.RealmsLevelSummary" | 
                        "net.optifine.expr.FunctionFloat" | 
                        "net.minecraft.command.server.CommandTestForBlock" | 
                        "net.minecraft.util.ChatComponentProcessor" | 
                        "net.minecraft.nbt.CompressedStreamTools" | 
                        "net.minecraft.enchantment.EnchantmentOxygen" | 
                        "slice.file.ConfigSaver" | 
                        "org.cef.handler.CefLoadHandlerAdapter" | 
                        "net.minecraft.stats.IStatType" | 
                        "net.optifine.entity.model.ModelAdapterSkeleton" | 
                        "net.minecraft.world.biome.BiomeGenStoneBeach" | 
                        "net.optifine.shaders.config.ShaderOptionVariableConst" | 
                        "net.minecraft.client.renderer.entity.RenderIronGolem" | 
                        "net.minecraft.world.gen.feature.WorldGenMegaJungle" | 
                        "net.minecraft.world.biome.BiomeGenSnow" | 
                        "net.optifine.entity.model.ModelAdapterWolf" | 
                        "net.minecraft.enchantment.EnchantmentUntouching" | 
                        "net.optifine.NextTickHashSet" | 
                        "net.optifine.model.ListQuadsOverlay" | 
                        "org.cef.browser.CefRequestContext" | 
                        "net.minecraft.entity.item.EntityMinecartChest" | 
                        "org.cef.browser.CefBrowser_N" | 
                        "net.optifine.entity.model.anim.ModelUpdater" | 
                        "net.minecraft.command.CommandBase" | 
                        "net.minecraft.client.gui.inventory.GuiChest" | 
                        "net.minecraft.client.model.ModelBase" | 
                        "net.minecraft.world.chunk.NibbleArray" | 
                        "net.optifine.override.PlayerControllerOF" | 
                        "net.minecraft.block.material.Material" | 
                        "net.optifine.util.MathUtils" | 
                        "net.optifine.util.RenderChunkUtils" | 
                        "slice.setting.settings.NumberValue" | 
                        "net.minecraft.client.gui.spectator.BaseSpectatorGroup" | 
                        "net.optifine.entity.model.ModelAdapterChest" | 
                        "net.minecraft.client.renderer.chunk.VisGraph" | 
                        "net.minecraft.inventory.ContainerBeacon$BeaconSlot" | 
                        "net.optifine.util.FrameEvent" | 
                        "org.cef.ICefRenderer" | 
                        "org.cef.browser.CefBrowserWr" | 
                        "net.minecraft.world.gen.layer.GenLayerRiverInit" | 
                        "net.minecraft.stats.AchievementList" | 
                        "net.minecraft.client.particle.EntityFlameFX" | 
                        "net.minecraft.world.biome.BiomeDecorator" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer" | 
                        "net.optifine.shaders.FlipTextures" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator" | 
                        "net.minecraft.stats.StatBase" | 
                        "slice.command.commands.CommandBind" | 
                        "net.optifine.util.ArrayCache" | 
                        "org.cef.handler.CefContextMenuHandlerAdapter" | 
                        "org.cef.network.CefRequest" | 
                        "net.minecraft.client.renderer.texture.ITickable" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor" | 
                        "net.optifine.shaders.gui.GuiButtonShaderOption" | 
                        "net.minecraft.entity.ai.EntityAIMoveToBlock" | 
                        "net.optifine.entity.model.ModelAdapterSpider" | 
                        "net.optifine.RandomEntityRule" | 
                        "net.minecraft.entity.IEntityMultiPart" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityPistonRenderer" | 
                        "net.minecraft.scoreboard.ScoreDummyCriteria" | 
                        "net.minecraft.world.gen.feature.WorldGenBigMushroom" | 
                        "net.minecraft.inventory.InventoryCraftResult" | 
                        "org.cef.callback.CefStringVisitor" | 
                        "net.minecraft.tileentity.TileEntityFlowerPot" | 
                        "net.optifine.shaders.gui.GuiShaderOptions" | 
                        "net.minecraft.client.renderer.entity.layers.LayerEnderDragonDeath" | 
                        "net.optifine.shaders.BlockAliases" | 
                        "slice.clickgui.HTMLGui" | 
                        "net.minecraft.entity.passive.IAnimals" | 
                        "net.optifine.shaders.SMath" | 
                        "net.minecraft.world.gen.feature.WorldGenMegaPineTree" | 
                        "net.minecraft.tileentity.TileEntityMobSpawner" | 
                        "net.minecraft.entity.passive.EntityRabbit$RabbitJumpHelper" | 
                        "net.minecraft.world.gen.feature.WorldGenFire" | 
                        "net.minecraft.client.resources.data.IMetadataSection" | 
                        "com.sliceclient.script.classloader.ScriptDescriptionFile" | 
                        "net.optifine.gui.TooltipManager" | 
                        "net.minecraft.world.gen.structure.MapGenStructureData" | 
                        "net.minecraft.world.biome.BiomeGenRiver" | 
                        "net.minecraft.client.gui.GuiDisconnected" | 
                        "net.optifine.ClearWater" | 
                        "net.minecraft.block.BlockCompressedPowered" | 
                        "net.minecraft.entity.monster.EntityZombie$GroupData" | 
                        "net.minecraft.stats.Achievement" | 
                        "net.minecraft.client.particle.EntitySuspendFX" | 
                        "net.minecraft.entity.ai.EntityAIRunAroundLikeCrazy" | 
                        "net.optifine.entity.model.ModelAdapterSilverfish" | 
                        "net.minecraft.block.BlockSnowBlock" | 
                        "net.minecraft.util.Vec3i" | 
                        "slice.command.commands.CommandConnect" | 
                        "net.minecraft.block.BlockMycelium" | 
                        "net.minecraft.tileentity.IHopper" | 
                        "net.minecraft.realms.RealmsSharedConstants" | 
                        "net.optifine.shaders.ICustomTexture" | 
                        "net.minecraft.tileentity.TileEntityComparator" | 
                        "net.minecraft.client.renderer.entity.RenderPotion" | 
                        "net.minecraft.world.gen.feature.WorldGenLiquids" | 
                        "net.optifine.expr.Parameters" | 
                        "net.minecraft.enchantment.EnchantmentArrowDamage" | 
                        "net.minecraft.nbt.NBTTagCompound" | 
                        "org.cef.handler.CefClientHandler" | 
                        "net.minecraft.block.BlockBeacon" | 
                        "net.minecraft.entity.item.EntityMinecart" | 
                        "net.minecraft.client.shader.Framebuffer" | 
                        "net.minecraft.client.renderer.entity.RenderSquid" | 
                        "slice.util.FileUtil" | 
                        "net.minecraft.enchantment.Enchantment" | 
                        "net.minecraft.world.gen.ChunkProviderSettings" | 
                        "slice.legacy.clickgui.pane.SettingPane" | 
                        "org.cef.ccbluex.WindowView" | 
                        "net.minecraft.world.WorldSavedData" | 
                        "net.minecraft.enchantment.EnchantmentWaterWalker" | 
                        "net.minecraft.entity.ai.EntityAIControlledByPlayer" | 
                        "net.optifine.CustomLoadingScreen" | 
                        "net.minecraft.world.biome.BiomeEndDecorator" | 
                        "org.cef.browser.CefFrame" | 
                        "net.optifine.expr.FunctionBool" | 
                        "net.minecraft.block.BlockWeb" | 
                        "net.minecraft.item.crafting.ShapelessRecipes" | 
                        "net.minecraft.enchantment.EnchantmentLootBonus" | 
                        "org.cef.OS" | 
                        "org.cef.handler.CefResourceRequestHandler" | 
                        "net.minecraft.util.FoodStats" | 
                        "net.minecraft.tileentity.TileEntityPiston" | 
                        "net.minecraft.util.Vec4b" | 
                        "net.optifine.entity.model.anim.RenderEntityParameterBool" | 
                        "slice.event.events.EventClientTick" | 
                        "net.optifine.gui.GuiScreenOF" | 
                        "net.minecraft.command.CommandWorldBorder" | 
                        "net.minecraft.world.biome.BiomeColorHelper" | 
                        "net.minecraft.scoreboard.ScoreObjective" | 
                        "org.cef.scheme.SchemePreResponse" | 
                        "net.optifine.SmartLeaves" | 
                        "net.minecraft.command.server.CommandDeOp" | 
                        "slice.util.MoveUtil" | 
                        "net.optifine.TextureAnimation" | 
                        "net.minecraft.client.renderer.ImageBufferDownload" | 
                        "net.optifine.render.RenderEnv" | 
                        "net.minecraft.command.CommandException" | 
                        "net.minecraft.world.gen.FlatGeneratorInfo" | 
                        "net.optifine.entity.model.ModelAdapterCreeper" | 
                        "net.minecraft.client.renderer.block.model.ModelBlockDefinition$MissingVariantException" | 
                        "net.minecraft.event.HoverEvent" | 
                        "net.minecraft.client.renderer.entity.RenderEnderman" | 
                        "slice.command.commands.CommandVClip" | 
                        "net.optifine.expr.ConstantFloat" | 
                        "net.minecraft.block.BlockDirt" | 
                        "net.optifine.shaders.uniform.ShaderUniformM4" | 
                        "net.minecraft.client.gui.GuiOptionButton" | 
                        "net.minecraft.realms.DisconnectedRealmsScreen" | 
                        "net.minecraft.client.gui.GuiConfirmOpenLink" | 
                        "net.minecraft.world.storage.SaveDataMemoryStorage" | 
                        "slice.notification.Type" | 
                        "net.minecraft.block.BlockMushroom" | 
                        "net.minecraft.world.gen.layer.GenLayerRareBiome" | 
                        "net.minecraft.client.particle.EntityDiggingFX" | 
                        "net.minecraft.world.gen.feature.WorldGenWaterlily" | 
                        "net.minecraft.entity.ai.EntityAILookAtTradePlayer" | 
                        "net.minecraft.client.renderer.RenderList" | 
                        "net.minecraft.entity.ai.EntityJumpHelper" | 
                        "net.minecraft.command.server.CommandMessage" | 
                        "net.minecraft.client.renderer.entity.RenderZombie" | 
                        "net.optifine.expr.ParametersVariable" | 
                        "net.minecraft.block.BlockPressurePlate" | 
                        "net.minecraft.inventory.Container" | 
                        "net.minecraft.client.gui.GuiListExtended" | 
                        "net.minecraft.world.gen.structure.MapGenStructure" | 
                        "org.cef.SystemBootstrap" | 
                        "slice.gui.alt.HTMLAlt" | 
                        "net.minecraft.network.PacketThreadUtil" | 
                        "net.minecraft.client.gui.Gui" | 
                        "net.minecraft.client.resources.model.ModelManager" | 
                        "org.cef.handler.CefFocusHandler" | 
                        "com.sliceclient.anticheat.check.checks.movement.ground.GroundSpoofA" | 
                        "net.minecraft.entity.effect.EntityWeatherEffect" | 
                        "net.minecraft.village.VillageDoorInfo" | 
                        "net.optifine.shaders.config.ShaderOptionSwitchConst" | 
                        "net.minecraft.command.server.CommandSaveOff" | 
                        "net.minecraft.inventory.ContainerHorseInventory" | 
                        "net.minecraft.pathfinding.PathFinder" | 
                        "net.minecraft.block.BlockSign" | 
                        "net.minecraft.client.renderer.block.statemap.IStateMapper" | 
                        "net.minecraft.block.BlockDispenser" | 
                        "org.cef.network.CefResponse_N" | 
                        "net.optifine.reflect.IFieldLocator" | 
                        "net.minecraft.util.IProgressUpdate" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSheepWool" | 
                        "net.optifine.entity.model.ModelAdapterSheep" | 
                        "slice.util.MathUtil" | 
                        "net.optifine.entity.model.ModelAdapterHorse" | 
                        "org.cef.browser.scheme.SchemeResourceHandler" | 
                        "net.optifine.ConnectedTextures" | 
                        "net.minecraft.client.gui.spectator.ISpectatorMenuRecipient" | 
                        "net.minecraft.entity.boss.EntityDragonPart" | 
                        "net.minecraft.client.renderer.RenderHelper" | 
                        "net.minecraft.world.storage.SaveHandlerMP" | 
                        "net.minecraft.entity.EntityBodyHelper" | 
                        "net.minecraft.client.renderer.BlockRendererDispatcher" | 
                        "net.minecraft.client.audio.ISoundEventAccessor" | 
                        "net.minecraft.command.server.CommandPardonIp" | 
                        "net.optifine.config.EntityClassLocator" | 
                        "net.minecraft.client.particle.EntityHeartFX" | 
                        "net.minecraft.realms.RealmsEditBox" | 
                        "net.optifine.entity.model.ModelAdapterDragon" | 
                        "net.optifine.shaders.uniform.UniformType" | 
                        "org.cef.misc.IntRef" | 
                        "net.optifine.RandomEntityProperties" | 
                        "net.minecraft.entity.ai.EntityAIOpenDoor" | 
                        "net.minecraft.client.renderer.ViewFrustum" | 
                        "net.minecraft.scoreboard.Scoreboard" | 
                        "net.minecraft.scoreboard.ServerScoreboard" | 
                        "net.minecraft.item.crafting.RecipesCrafting" | 
                        "net.minecraft.client.renderer.entity.RenderBat" | 
                        "net.minecraft.client.renderer.BlockModelShapes" | 
                        "net.minecraft.client.particle.Barrier" | 
                        "net.minecraft.tileentity.TileEntityEnchantmentTable" | 
                        "org.cef.network.CefCookieManager_N" | 
                        "net.minecraft.client.renderer.entity.RenderMinecart" | 
                        "net.minecraft.world.biome.BiomeCache" | 
                        "net.minecraft.entity.ai.EntityAITempt" | 
                        "net.optifine.shaders.ShaderPackDefault" | 
                        "org.cef.CefSettings" | 
                        "net.optifine.expr.IExpressionFloat" | 
                        "net.optifine.http.IFileUploadListener" | 
                        "net.optifine.shaders.Programs" | 
                        "net.minecraft.block.BlockDynamicLiquid" | 
                        "net.optifine.util.CacheObjectArray" | 
                        "net.optifine.reflect.FieldLocatorFixed" | 
                        "org.cef.handler.CefRequestContextHandler" | 
                        "net.minecraft.enchantment.EnchantmentDamage" | 
                        "net.minecraft.client.gui.GuiKeyBindingList" | 
                        "net.minecraft.enchantment.EnchantmentFireAspect" | 
                        "net.optifine.expr.FunctionFloatArray" | 
                        "org.cef.callback.CefMenuModel_N" | 
                        "net.minecraft.realms.RealmsSliderButton" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityEnchantmentTableRenderer" | 
                        "net.optifine.expr.TokenParser" | 
                        "net.minecraft.client.model.ModelBlaze" | 
                        "slice.event.events.EventAttack" | 
                        "net.minecraft.client.renderer.ActiveRenderInfo" | 
                        "net.minecraft.block.BlockStainedGlassPane" | 
                        "net.optifine.http.HttpPipelineSender" | 
                        "org.cef.scheme.IScheme" | 
                        "net.minecraft.realms.RealmsBufferBuilder" | 
                        "net.optifine.http.HttpListener" | 
                        "net.optifine.shaders.config.PropertyDefaultFastFancyOff" | 
                        "net.optifine.shaders.config.ShaderOptionRest" | 
                        "net.minecraft.client.model.ModelMinecart" | 
                        "org.cef.handler.CefDragHandler" | 
                        "net.minecraft.entity.ai.EntityAIFleeSun" | 
                        "net.minecraft.world.chunk.storage.NibbleArrayReader" | 
                        "net.minecraft.util.Vec3" | 
                        "net.minecraft.inventory.ContainerBeacon" | 
                        "org.cef.browser.CefDropTargetListener" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance" | 
                        "net.optifine.model.ModelUtils" | 
                        "org.cef.ccbluex.DynamicGuiView" | 
                        "net.minecraft.inventory.InventoryHelper" | 
                        "net.minecraft.world.chunk.storage.RegionFile" | 
                        "net.optifine.shaders.ShaderPackNone" | 
                        "net.minecraft.world.biome.BiomeGenMesa" | 
                        "net.minecraft.world.gen.feature.WorldGenSand" | 
                        "net.optifine.shaders.uniform.ShaderExpressionResolver" | 
                        "net.minecraft.potion.PotionHealth" | 
                        "net.minecraft.entity.EntitySpawnPlacementRegistry" | 
                        "org.cef.handler.CefRequestHandlerAdapter" | 
                        "net.minecraft.world.gen.feature.WorldGenDeadBush" | 
                        "net.minecraft.block.BlockDoubleStoneSlab" | 
                        "net.minecraft.client.gui.GuiErrorScreen" | 
                        "net.optifine.render.CloudRenderer" | 
                        "net.minecraft.util.MouseFilter" | 
                        "net.minecraft.world.WorldType" | 
                        "net.optifine.shaders.EntityAliases" | 
                        "net.minecraft.scoreboard.Score" | 
                        "net.optifine.entity.model.ModelAdapterWitherSkull" | 
                        "net.optifine.GlErrors" | 
                        "net.minecraft.block.BlockLeavesBase" | 
                        "net.minecraftforge.fml.common.registry.RegistryDelegate" | 
                        "org.cef.callback.CefFileDialogCallback" | 
                        "slice.setting.settings.BooleanValue" | 
                        "net.minecraft.command.CommandPlaySound" | 
                        "net.optifine.config.INameGetter" | 
                        "net.minecraft.client.renderer.entity.RenderSkeleton" | 
                        "net.minecraft.entity.item.EntityExpBottle" | 
                        "net.optifine.entity.model.ModelAdapterChestLarge" | 
                        "net.optifine.util.IntArray" | 
                        "net.minecraft.entity.projectile.EntityThrowable" | 
                        "net.minecraft.client.gui.GuiRepair" | 
                        "org.cef.callback.CefSchemeRegistrar" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase" | 
                        "slice.module.data.ModuleInfo" | 
                        "net.minecraft.client.gui.ServerListEntryLanDetected" | 
                        "slice.event.events.EventJump" | 
                        "net.minecraft.block.BlockWorkbench" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements" | 
                        "net.minecraft.realms.RealmsDefaultVertexFormat" | 
                        "net.optifine.shaders.ShaderPackFolder" | 
                        "net.minecraft.tileentity.TileEntityFurnace" | 
                        "net.optifine.config.ConnectedParser" | 
                        "net.minecraft.item.crafting.RecipesArmor" | 
                        "org.cef.handler.CefKeyboardHandlerAdapter" | 
                        "slice.event.events.EventChat" | 
                        "slice.event.events.EventPlayerReach" | 
                        "net.minecraft.client.gui.inventory.GuiBrewingStand" | 
                        "net.optifine.player.PlayerConfigurations" | 
                        "net.minecraft.entity.IMerchant" | 
                        "net.minecraft.client.renderer.tileentity.RenderItemFrame" | 
                        "net.minecraft.client.resources.DefaultResourcePack" | 
                        "org.cef.handler.CefResourceHandler" | 
                        "org.cef.callback.CefMenuModel" | 
                        "net.minecraft.entity.player.EnumPlayerModelParts" | 
                        "net.minecraft.network.play.INetHandlerPlayServer" | 
                        "net.optifine.config.RangeListInt" | 
                        "net.minecraft.command.WrongUsageException" | 
                        "net.minecraft.entity.effect.EntityLightningBolt" | 
                        "net.minecraft.client.model.ModelRabbit" | 
                        "slice.util.HardwareUtil" | 
                        "net.minecraft.profiler.PlayerUsageSnooper" | 
                        "net.minecraft.client.model.ModelSign" | 
                        "net.minecraft.client.audio.PositionedSoundRecord" | 
                        "net.minecraft.world.gen.NoiseGeneratorPerlin" | 
                        "net.optifine.texture.PixelFormat" | 
                        "net.minecraft.client.audio.MusicTicker" | 
                        "net.minecraft.client.renderer.entity.RenderTntMinecart" | 
                        "net.minecraft.util.Rotations" | 
                        "net.optifine.expr.IExpressionCached" | 
                        "net.minecraft.client.resources.DefaultPlayerSkin" | 
                        "net.minecraft.realms.RealmsVertexFormat" | 
                        "net.minecraft.client.gui.GuiSlider" | 
                        "net.minecraft.entity.ai.EntityAIDoorInteract" | 
                        "net.minecraftforge.common.property.IUnlistedProperty" | 
                        "net.optifine.entity.model.ModelAdapterArmorStand" | 
                        "org.cef.ccbluex.AllTimeGuiView" | 
                        "net.minecraft.world.biome.BiomeGenBeach" | 
                        "net.optifine.gui.GuiMessage" | 
                        "net.minecraft.block.BlockCauldron" | 
                        "net.minecraft.realms.RealmsServerAddress" | 
                        "net.minecraft.client.resources.data.PackMetadataSection" | 
                        "net.minecraft.client.renderer.entity.layers.LayerEndermanEyes" | 
                        "net.minecraft.block.BlockAir" | 
                        "net.minecraft.world.gen.layer.GenLayerFuzzyZoom" | 
                        "net.optifine.texture.InternalFormat" | 
                        "net.minecraft.entity.player.InventoryPlayer" | 
                        "net.optifine.http.FileUploadThread" | 
                        "viamcp.gui.GuiCredits" | 
                        "net.minecraft.client.renderer.entity.layers.LayerWitherAura" | 
                        "net.minecraft.client.gui.spectator.ISpectatorMenuObject" | 
                        "net.minecraft.dispenser.BehaviorProjectileDispense" | 
                        "net.minecraft.block.BlockSoulSand" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityEnderChestRenderer" | 
                        "net.minecraft.block.BlockPackedIce" | 
                        "net.minecraft.world.biome.WorldChunkManager" | 
                        "net.minecraft.client.AnvilConverterException" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces" | 
                        "net.minecraft.client.gui.IProgressMeter" | 
                        "net.minecraft.util.MovementInput" | 
                        "net.optifine.shaders.IteratorAxis" | 
                        "net.minecraft.client.renderer.entity.layers.LayerRenderer" | 
                        "net.minecraft.client.resources.I18n" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase" | 
                        "net.optifine.shaders.config.ShaderPackParser" | 
                        "net.minecraft.client.renderer.texture.ITextureObject" | 
                        "net.minecraft.world.WorldProviderHell" | 
                        "net.minecraft.world.gen.NoiseGenerator" | 
                        "net.minecraft.client.renderer.WorldRenderer" | 
                        "net.optifine.shaders.config.MacroExpressionResolver" | 
                        "net.minecraft.client.audio.ISound" | 
                        "net.optifine.shaders.IShaderPack" | 
                        "net.minecraft.client.model.TexturedQuad" | 
                        "net.minecraft.world.chunk.storage.RegionFileCache" | 
                        "net.minecraft.client.model.ModelEnderman" | 
                        "net.minecraft.block.BlockIce" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces" | 
                        "net.minecraft.enchantment.EnchantmentWaterWorker" | 
                        "net.minecraft.client.renderer.RegionRenderCache" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy" | 
                        "slice.event.Event" | 
                        "net.minecraft.client.gui.GuiScreenServerList" | 
                        "slice.command.commands.CommandHelp" | 
                        "net.optifine.entity.model.ModelAdapterZombie" | 
                        "net.optifine.shaders.config.ShaderOptionScreen" | 
                        "net.minecraft.client.resources.Language" | 
                        "net.optifine.shaders.config.ScreenShaderOptions" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList" | 
                        "net.minecraft.command.server.CommandOp" | 
                        "slice.setting.Setting" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftStart" | 
                        "net.minecraft.util.ITickable" | 
                        "slice.command.commands.CommandSetting" | 
                        "org.cef.callback.CefNative" | 
                        "net.minecraft.tileentity.TileEntityHopper" | 
                        "net.minecraft.client.model.ModelIronGolem" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite" | 
                        "net.minecraft.world.gen.FlatLayerInfo" | 
                        "slice.legacy.clickgui.setting.settings.BooleanButton" | 
                        "net.minecraft.command.CommandKill" | 
                        "net.minecraft.item.crafting.RecipesArmorDyes" | 
                        "net.minecraft.village.VillageCollection" | 
                        "net.minecraft.world.gen.layer.GenLayerRiverMix" | 
                        "net.minecraft.inventory.AnimalChest" | 
                        "slice.event.ExcludeFromScript" | 
                        "net.minecraft.inventory.InventoryMerchant" | 
                        "net.optifine.shaders.config.ShaderParser" | 
                        "net.minecraft.nbt.NBTTagLong" | 
                        "net.optifine.entity.model.ModelAdapterSheepWool" | 
                        "net.minecraft.entity.IRangedAttackMob" | 
                        "com.sliceclient.anticheat.event.manager.AntiCheatEventSender" | 
                        "net.minecraft.world.WorldProviderEnd" | 
                        "net.optifine.gui.GuiChatOF" | 
                        "net.minecraft.world.IInteractionObject" | 
                        "net.optifine.util.CompoundKey" | 
                        "net.minecraft.client.model.ModelSquid" | 
                        "net.optifine.expr.ExpressionFloatArrayCached" | 
                        "net.minecraft.util.WeightedRandomFishable" | 
                        "net.optifine.shaders.config.ShaderOptionResolver" | 
                        "net.minecraft.command.server.CommandScoreboard" | 
                        "org.cef.callback.CefRunFileDialogCallback" | 
                        "org.cef.browser.scheme.SchemeResponseHeaders" | 
                        "net.minecraft.inventory.InventoryEnderChest" | 
                        "net.minecraft.inventory.SlotFurnaceFuel" | 
                        "net.minecraft.client.renderer.entity.layers.LayerVillagerArmor" | 
                        "net.minecraft.util.MathHelper" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityMobSpawnerRenderer" | 
                        "net.minecraft.client.particle.EntityPickupFX" | 
                        "net.minecraft.block.BlockRedstoneOre" | 
                        "net.minecraft.command.ICommand" | 
                        "net.optifine.render.VboRange" | 
                        "net.minecraft.block.BlockNote" | 
                        "net.optifine.IRandomEntity" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSaddle" | 
                        "net.minecraft.client.renderer.texture.AbstractTexture" | 
                        "net.minecraft.block.BlockHalfStoneSlab" | 
                        "net.minecraft.block.BlockEnchantmentTable" | 
                        "net.minecraft.client.renderer.entity.RenderGuardian" | 
                        "net.minecraft.command.CommandGive" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces" | 
                        "net.minecraft.inventory.SlotFurnaceOutput" | 
                        "net.minecraft.block.state.BlockPistonStructureHelper" | 
                        "net.minecraft.entity.ai.EntityAILookIdle" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySignRenderer" | 
                        "net.minecraft.network.status.INetHandlerStatusClient" | 
                        "org.cef.callback.CefSchemeHandlerFactory" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers" | 
                        "net.minecraft.command.PlayerNotFoundException" | 
                        "net.minecraft.block.BlockStoneSlabNew" | 
                        "net.optifine.config.MatchBlock" | 
                        "net.minecraft.world.gen.GeneratorBushFeature" | 
                        "org.cef.network.CefPostData_N" | 
                        "net.minecraft.command.ServerCommandManager" | 
                        "net.minecraft.dispenser.IPosition" | 
                        "net.minecraft.entity.item.EntityEnderEye" | 
                        "net.minecraft.client.model.ModelBook" | 
                        "net.minecraft.block.material.MaterialLiquid" | 
                        "net.minecraft.entity.projectile.EntitySnowball" | 
                        "net.minecraft.world.biome.BiomeGenJungle" | 
                        "net.optifine.VersionCheckThread" | 
                        "net.minecraft.world.Explosion" | 
                        "org.cef.callback.CefCommandLine" | 
                        "net.minecraft.world.gen.feature.WorldGenClay" | 
                        "net.minecraft.block.BlockRedSandstone" | 
                        "slice.file.Saver" | 
                        "com.sliceclient.anticheat.SliceAC" | 
                        "net.minecraft.entity.ai.EntityMinecartMobSpawner" | 
                        "net.optifine.config.IObjectLocator" | 
                        "net.minecraft.client.renderer.ChunkRenderContainer" | 
                        "net.minecraft.enchantment.EnchantmentData" | 
                        "org.cef.callback.CefDragData_N" | 
                        "net.minecraft.command.CommandCompare" | 
                        "net.minecraft.block.BlockSand" | 
                        "net.minecraft.client.gui.GuiButton" | 
                        "net.minecraft.entity.ai.EntityAILeapAtTarget" | 
                        "net.minecraft.client.renderer.block.model.BlockPartFace" | 
                        "net.minecraft.entity.ai.EntityAITasks$EntityAITaskEntry" | 
                        "net.minecraft.entity.EnumCreatureType" | 
                        "net.minecraft.command.NumberInvalidException" | 
                        "net.optifine.reflect.FieldLocatorTypes" | 
                        "net.minecraft.client.audio.SoundEventAccessorComposite" | 
                        "net.minecraft.world.EnumSkyBlock" | 
                        "org.cef.browser.CefMessageRouter" | 
                        "net.optifine.render.Blender" | 
                        "slice.event.events.EventKey" | 
                        "com.sliceclient.anticheat.event.events.AntiCheatPlayerAnimationEvent" | 
                        "net.optifine.shaders.uniform.ShaderParameterIndexed" | 
                        "net.optifine.shaders.HFNoiseTexture" | 
                        "slice.event.manager.EventManager" | 
                        "org.cef.browser.CefMessageRouter_N" | 
                        "net.minecraft.world.MinecraftException" | 
                        "net.minecraft.entity.projectile.EntityEgg" | 
                        "net.minecraft.world.biome.BiomeGenMushroomIsland" | 
                        "net.optifine.shaders.gui.GuiShaders" | 
                        "net.minecraft.client.particle.EntityBlockDustFX" | 
                        "net.minecraft.client.particle.EntityHugeExplodeFX" | 
                        "net.minecraft.command.CommandSetSpawnpoint" | 
                        "net.minecraft.client.stream.MetadataCombat" | 
                        "net.optifine.gui.GuiOptionSliderOF" | 
                        "net.optifine.shaders.config.MacroState" | 
                        "net.minecraft.client.renderer.ItemModelMesher" | 
                        "net.optifine.entity.model.ModelAdapterBiped" | 
                        "net.minecraft.command.CommandSpreadPlayers" | 
                        "net.minecraft.client.model.ModelChicken" | 
                        "net.minecraft.entity.ai.EntityAILookAtVillager" | 
                        "net.optifine.config.ParserEnchantmentId" | 
                        "net.minecraft.command.CommandResultStats" | 
                        "net.minecraft.util.EntityDamageSource" | 
                        "net.minecraft.block.BlockDeadBush" | 
                        "net.minecraft.client.particle.EntityBubbleFX" | 
                        "net.minecraft.world.gen.feature.WorldGenSavannaTree" | 
                        "org.cef.misc.CefPrintSettings_N" | 
                        "net.minecraft.entity.ai.RandomPositionGenerator" | 
                        "net.minecraft.world.gen.feature.WorldGenAbstractTree" | 
                        "net.minecraft.client.renderer.entity.RenderSheep" | 
                        "net.minecraft.enchantment.EnumEnchantmentType" | 
                        "net.optifine.entity.model.ModelAdapterCaveSpider" | 
                        "net.optifine.player.PlayerConfiguration" | 
                        "net.minecraft.client.renderer.texture.ITickableTextureObject" | 
                        "net.minecraft.block.BlockSourceImpl" | 
                        "net.minecraft.client.renderer.entity.RenderTNTPrimed" | 
                        "net.minecraft.client.renderer.chunk.ListedRenderChunk" | 
                        "net.minecraft.client.renderer.entity.RenderPigZombie" | 
                        "net.minecraft.stats.StatCrafting" | 
                        "net.minecraft.entity.item.EntityFireworkRocket" | 
                        "net.minecraft.client.particle.EntityFootStepFX" | 
                        "org.cef.network.CefURLRequest" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam" | 
                        "net.minecraft.realms.RealmsMth" | 
                        "slice.cef.RequestHandler" | 
                        "org.cef.handler.CefLoadHandler" | 
                        "net.minecraft.client.particle.EffectRenderer" | 
                        "net.optifine.render.AabbFrame" | 
                        "net.optifine.shaders.config.ShaderOptionProfile" | 
                        "net.minecraft.world.gen.MapGenCaves" | 
                        "net.minecraft.world.gen.structure.MapGenVillage" | 
                        "net.minecraft.client.renderer.entity.layers.LayerDeadmau5Head" | 
                        "net.minecraft.tileentity.TileEntityCommandBlock" | 
                        "net.optifine.expr.FunctionType" | 
                        "net.minecraft.item.EnumAction" | 
                        "net.minecraft.client.gui.GuiLanguage" | 
                        "net.minecraft.village.Village$VillageAggressor" | 
                        "net.optifine.gui.GuiButtonOF" | 
                        "net.minecraft.block.BlockStainedGlass" | 
                        "net.minecraft.world.chunk.storage.AnvilSaveHandler" | 
                        "org.cef.handler.CefJSDialogHandler" | 
                        "net.minecraft.entity.ai.EntityAIWatchClosest" | 
                        "org.cef.callback.CefJSDialogCallback_N" | 
                        "net.minecraft.client.multiplayer.ServerAddress" | 
                        "net.minecraft.entity.item.EntityEnderCrystal" | 
                        "net.minecraft.block.BlockDoubleStoneSlabNew" | 
                        "net.minecraft.world.gen.layer.GenLayerShore" | 
                        "net.minecraft.world.gen.layer.GenLayerAddIsland" | 
                        "net.minecraft.entity.ai.EntityAIVillagerMate" | 
                        "net.optifine.gui.GuiAnimationSettingsOF" | 
                        "com.sliceclient.anticheat.manager.CheckManager" | 
                        "net.minecraft.client.gui.GuiKeyBindingList$KeyEntry" | 
                        "net.minecraft.block.BlockBarrier" | 
                        "net.minecraft.client.renderer.texture.TextureCompass" | 
                        "net.minecraft.client.gui.GuiYesNoCallback" | 
                        "net.optifine.player.ModelPlayerItem" | 
                        "net.optifine.util.TileEntityUtils" | 
                        "net.optifine.config.GlVersion" | 
                        "net.optifine.expr.IParameters" | 
                        "net.minecraft.client.renderer.entity.RenderManager" | 
                        "net.minecraft.command.CommandNotFoundException" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces" | 
                        "net.minecraft.entity.ai.EntityAIPanic" | 
                        "net.minecraft.client.renderer.entity.RenderFireball" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree" | 
                        "net.minecraft.world.gen.feature.WorldGenForest" | 
                        "net.optifine.reflect.FieldLocatorType" | 
                        "org.cef.callback.CefFileDialogCallback_N" | 
                        "net.minecraft.client.gui.inventory.GuiEditSign" | 
                        "net.minecraft.network.login.INetHandlerLoginClient" | 
                        "net.minecraft.entity.ai.EntityAIWatchClosest2" | 
                        "org.cef.callback.CefPrintDialogCallback_N" | 
                        "net.optifine.gui.GuiPerformanceSettingsOF" | 
                        "org.cef.handler.CefLifeSpanHandlerAdapter" | 
                        "net.minecraft.client.resources.ResourcePackListEntry" | 
                        "net.minecraft.block.BlockTallGrass" | 
                        "net.minecraft.world.gen.MapGenRavine" | 
                        "net.optifine.expr.IExpressionFloatArray" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel" | 
                        "net.minecraft.block.BlockLiquid" | 
                        "net.minecraft.world.WorldManager" | 
                        "net.minecraft.client.renderer.entity.RenderCaveSpider" | 
                        "net.optifine.http.HttpPipelineConnection" | 
                        "net.minecraft.client.particle.EntityEnchantmentTableParticleFX" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance" | 
                        "net.minecraft.client.renderer.ChestRenderer" | 
                        "net.minecraft.client.gui.inventory.GuiInventory" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic$WeightedRandomMinecart" | 
                        "net.minecraft.client.renderer.entity.RenderSilverfish" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton" | 
                        "net.minecraft.client.model.TextureOffset" | 
                        "net.optifine.shaders.SVertexAttrib" | 
                        "net.minecraft.world.gen.structure.MapGenScatteredFeature" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsBlock" | 
                        "net.minecraft.nbt.NBTTagByteArray" | 
                        "net.minecraft.potion.PotionHelper" | 
                        "net.minecraft.world.gen.layer.GenLayerEdge" | 
                        "net.optifine.entity.model.ModelAdapterSquid" | 
                        "net.minecraft.client.renderer.entity.layers.LayerHeldBlock" | 
                        "net.optifine.CustomItems" | 
                        "net.minecraft.client.model.ModelSpider" | 
                        "net.minecraft.block.BlockButtonStone" | 
                        "net.minecraft.client.LoadingScreenRenderer" | 
                        "net.minecraft.world.gen.feature.WorldGenShrub" | 
                        "net.minecraft.command.CommandXP" | 
                        "net.minecraft.client.gui.GuiHopper" | 
                        "net.minecraft.entity.projectile.EntityFireball" | 
                        "net.minecraft.world.WorldProvider" | 
                        "net.minecraft.client.gui.GuiResourcePackAvailable" | 
                        "net.minecraft.world.storage.SaveFormatComparator" | 
                        "net.minecraft.client.settings.KeyBinding" | 
                        "net.optifine.config.Matches" | 
                        "net.minecraft.client.particle.EntityPortalFX" | 
                        "slice.event.manager.sender.EventSender" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam" | 
                        "net.minecraft.util.ChatComponentTranslationFormatException" | 
                        "net.minecraft.util.CombatTracker" | 
                        "net.optifine.player.CapeImageBuffer" | 
                        "net.minecraft.item.crafting.RecipeRepairItem" | 
                        "net.minecraft.client.gui.GuiResourcePackList" | 
                        "slice.api.API" | 
                        "net.minecraft.block.BlockRedstoneWire" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList" | 
                        "net.minecraft.client.model.ModelGuardian" | 
                        "net.optifine.model.ModelSprite" | 
                        "net.minecraft.world.WorldProviderSurface" | 
                        "net.minecraft.client.model.ModelDragon" | 
                        "net.minecraft.client.audio.MovingSoundMinecart" | 
                        "slice.notification.Notification" | 
                        "viamcp.utils.FixedSoundEngine" | 
                        "net.minecraft.block.BlockReed" | 
                        "net.minecraft.client.particle.EntityParticleEmitter" | 
                        "net.minecraft.enchantment.EnchantmentThorns" | 
                        "net.optifine.expr.Token" | 
                        "net.minecraft.block.BlockEventData" | 
                        "net.minecraft.client.gui.achievement.GuiAchievement" | 
                        "org.cef.callback.CefURLRequestClient" | 
                        "net.minecraft.dispenser.PositionImpl" | 
                        "slice.notification.NotificationManager" | 
                        "net.minecraft.client.renderer.entity.RenderItem" | 
                        "net.minecraft.command.CommandGameMode" | 
                        "net.optifine.Mipmaps" | 
                        "net.minecraft.world.biome.BiomeGenForest" | 
                        "net.minecraft.client.renderer.block.model.BlockFaceUV" | 
                        "net.minecraft.world.storage.MapData$MapInfo" | 
                        "net.minecraft.client.renderer.ItemMeshDefinition" | 
                        "org.cef.browser.CefRequestContext_N" | 
                        "net.minecraft.world.gen.feature.WorldGenTrees" | 
                        "com.sliceclient.script.SliceScript" | 
                        "net.minecraft.client.ClientBrandRetriever" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityBannerRenderer" | 
                        "net.optifine.entity.model.anim.IRenderResolver" | 
                        "net.minecraft.entity.projectile.EntityPotion" | 
                        "net.minecraft.util.MovementInputFromOptions" | 
                        "net.optifine.shaders.config.ShaderOptionSwitch" | 
                        "net.minecraft.client.gui.GuiStreamIndicator" | 
                        "net.minecraft.realms.RealmsScreen" | 
                        "net.minecraft.block.BlockPistonExtension" | 
                        "net.minecraft.block.BlockSandStone" | 
                        "net.minecraft.world.gen.feature.WorldGenMelon" | 
                        "net.minecraft.entity.item.EntityXPOrb" | 
                        "net.optifine.entity.model.ModelAdapterMooshroom" | 
                        "net.minecraft.block.BlockLilyPad" | 
                        "net.minecraft.inventory.ContainerBrewingStand$Ingredient" | 
                        "net.minecraft.block.BlockBreakable" | 
                        "net.minecraft.world.biome.BiomeGenEnd" | 
                        "slice.legacy.clickgui.pane.DropdownPane" | 
                        "net.minecraft.world.gen.NoiseGeneratorImproved" | 
                        "net.optifine.gui.GuiQualitySettingsOF" | 
                        "net.minecraft.village.VillageSiege" | 
                        "net.minecraft.client.gui.inventory.GuiCrafting" | 
                        "net.optifine.http.HttpResponse" | 
                        "net.minecraft.block.BlockCake" | 
                        "net.minecraft.block.BlockCarrot" | 
                        "net.minecraft.world.gen.layer.GenLayerSmooth" | 
                        "net.minecraft.client.model.ModelSlime" | 
                        "net.minecraft.pathfinding.PathNavigateSwimmer" | 
                        "viamcp.protocols.ProtocolInfoCollection" | 
                        "net.minecraft.inventory.ISidedInventory" | 
                        "net.minecraft.world.gen.layer.GenLayerAddMushroomIsland" | 
                        "net.minecraft.entity.ai.EntityAIOcelotAttack" | 
                        "net.minecraft.entity.ai.attributes.RangedAttribute" | 
                        "net.optifine.reflect.ReflectorClass" | 
                        "net.minecraft.client.renderer.OpenGlHelper" | 
                        "net.minecraft.world.gen.feature.WorldGenSwamp" | 
                        "slice.cef.ViewNoGui" | 
                        "net.minecraft.world.gen.layer.IntCache" | 
                        "com.sliceclient.anticheat.event.AntiCheatEvent" | 
                        "net.minecraft.client.renderer.chunk.ListChunkFactory" | 
                        "net.minecraft.util.ChatAllowedCharacters" | 
                        "net.optifine.shaders.uniform.ShaderUniform3f" | 
                        "net.minecraft.world.gen.MapGenCavesHell" | 
                        "net.minecraft.client.gui.GuiResourcePackSelected" | 
                        "org.cef.handler.CefJSDialogHandlerAdapter" | 
                        "net.optifine.render.VboRegion" | 
                        "net.minecraft.entity.ai.EntityAIArrowAttack" | 
                        "net.minecraft.client.renderer.entity.RenderFallingBlock" | 
                        "net.minecraft.entity.item.EntityTNTPrimed" | 
                        "net.minecraft.client.resources.GrassColorReloadListener" | 
                        "net.minecraft.client.resources.IResourceManagerReloadListener" | 
                        "net.minecraft.block.BlockGlowstone" | 
                        "net.minecraft.client.gui.ScaledResolution" | 
                        "net.minecraft.stats.StatFileWriter" | 
                        "net.minecraft.block.BlockDoublePlant" | 
                        "net.minecraft.client.model.ModelOcelot" | 
                        "net.minecraft.world.gen.structure.StructureStart" | 
                        "net.optifine.shaders.uniform.ShaderUniform4i" | 
                        "net.minecraft.pathfinding.PathNavigateGround" | 
                        "net.minecraft.world.gen.feature.WorldGenCactus" | 
                        "net.optifine.shaders.SVertexFormat" | 
                        "net.optifine.shaders.uniform.ShaderUniform4f" | 
                        "org.cef.callback.CefContextMenuParams_N" | 
                        "net.minecraft.client.gui.GuiMemoryErrorScreen" | 
                        "net.minecraft.command.server.CommandEmote" | 
                        "slice.util.ColorUtil" | 
                        "net.optifine.shaders.Program" | 
                        "net.minecraft.block.BlockPrismarine" | 
                        "net.optifine.shaders.config.ShaderProfile" | 
                        "net.minecraft.potion.Potion" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox" | 
                        "slice.legacy.clickgui.setting.settings.ModeButton" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage" | 
                        "net.minecraft.client.renderer.entity.RenderSpider" | 
                        "net.minecraft.entity.ai.EntityAIAttackOnCollide" | 
                        "net.minecraft.command.CommandClearInventory" | 
                        "net.minecraft.entity.item.EntityPainting" | 
                        "net.optifine.shaders.uniform.ShaderUniform1f" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam$TeamSelectionObject" | 
                        "net.minecraft.entity.ai.EntityAIOwnerHurtByTarget" | 
                        "net.minecraft.world.ILockableContainer" | 
                        "net.minecraft.client.model.ModelEnderCrystal" | 
                        "net.minecraft.block.material.MaterialPortal" | 
                        "net.minecraft.block.BlockRailBase" | 
                        "net.optifine.model.QuadBounds" | 
                        "org.cef.network.CefPostDataElement" | 
                        "net.minecraft.enchantment.EnchantmentProtection" | 
                        "net.minecraft.client.renderer.entity.RenderPainting" | 
                        "net.minecraft.client.renderer.block.statemap.DefaultStateMapper" | 
                        "net.minecraft.client.renderer.entity.RenderArrow" | 
                        "net.minecraft.stats.StatList" | 
                        "net.optifine.entity.model.IEntityRenderer" | 
                        "net.minecraft.init.Items" | 
                        "net.optifine.http.HttpUtils" | 
                        "net.minecraft.nbt.NBTTagIntArray" | 
                        "net.optifine.shaders.uniform.CustomUniforms" | 
                        "net.optifine.shaders.ShadersTex" | 
                        "net.minecraft.client.gui.inventory.GuiScreenHorseInventory" | 
                        "net.optifine.shaders.uniform.ShaderUniform2f" | 
                        "net.optifine.shaders.uniform.ShaderUniform2i" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent" | 
                        "org.cef.handler.CefRenderHandler" | 
                        "net.minecraft.command.CommandEffect" | 
                        "net.minecraft.util.IChatComponent" | 
                        "org.cef.handler.CefScreenInfo" | 
                        "net.optifine.shaders.uniform.ShaderUniform1i" | 
                        "net.optifine.shaders.ShadowUtils" | 
                        "org.cef.network.CefResponse" | 
                        "net.minecraft.item.crafting.RecipesBanners" | 
                        "net.minecraft.network.status.INetHandlerStatusServer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerWolfCollar" | 
                        "net.minecraft.command.server.CommandWhitelist" | 
                        "net.optifine.entity.model.ModelAdapterRabbit" | 
                        "net.minecraft.client.renderer.WorldRenderer$State" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSlimeGel" | 
                        "net.minecraft.inventory.ContainerChest" | 
                        "net.minecraft.world.gen.feature.WorldGenGlowStone1" | 
                        "net.optifine.util.LockCounter" | 
                        "net.minecraft.client.resources.data.TextureMetadataSection" | 
                        "net.minecraft.world.gen.feature.WorldGenGlowStone2" | 
                        "org.cef.handler.CefWindowHandlerAdapter" | 
                        "net.minecraft.command.server.CommandSetBlock" | 
                        "net.minecraft.world.DifficultyInstance" | 
                        "net.minecraft.server.management.ItemInWorldManager" | 
                        "net.optifine.shaders.config.ExpressionShaderOptionSwitch" | 
                        "net.optifine.shaders.ItemAliases" | 
                        "org.cef.handler.CefRequestHandler" | 
                        "net.minecraft.enchantment.EnchantmentArrowInfinite" | 
                        "net.minecraft.client.audio.SoundEventAccessor" | 
                        "net.minecraft.client.gui.GuiFlatPresets$ListSlot" | 
                        "net.minecraft.block.BlockLeaves" | 
                        "net.minecraft.block.BlockNetherWart" | 
                        "net.minecraft.command.server.CommandStop" | 
                        "net.optifine.entity.model.ModelAdapterPigZombie" | 
                        "net.minecraft.command.CommandShowSeed" | 
                        "net.minecraft.world.ChunkCoordIntPair" | 
                        "net.minecraft.util.EnchantmentNameParts" | 
                        "net.minecraft.block.material.MaterialLogic" | 
                        "net.minecraft.command.CommandClone" | 
                        "net.minecraft.client.gui.stream.GuiStreamOptions" | 
                        "net.minecraft.world.biome.BiomeGenSavanna" | 
                        "net.minecraft.client.gui.GuiOptionSlider" | 
                        "net.minecraft.nbt.NBTTagString" | 
                        "net.minecraft.util.LazyLoadBase" | 
                        "org.cef.misc.BoolRef" | 
                        "net.minecraft.entity.item.EntityEnderPearl" | 
                        "net.minecraft.potion.PotionHealthBoost" | 
                        "net.minecraft.client.gui.GuiOptions" | 
                        "net.minecraft.util.ClassInheritanceMultiMap" | 
                        "net.optifine.TextureAnimations" | 
                        "net.minecraft.entity.IEntityLivingData" | 
                        "net.minecraft.world.chunk.storage.RegionFile$ChunkBuffer" | 
                        "net.minecraft.client.audio.MovingSound" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator" | 
                        "net.minecraft.world.storage.IThreadedFileIO" | 
                        "net.optifine.expr.ExpressionType" | 
                        "net.minecraft.world.IBlockAccess" | 
                        "net.optifine.util.LinkedListTest" | 
                        "net.minecraft.client.resources.model.IBakedModel" | 
                        "slice.event.events.EventEntityRender" | 
                        "net.minecraft.nbt.NBTException" | 
                        "net.optifine.entity.model.ModelAdapterBanner" | 
                        "com.sliceclient.anticheat.SliceAC$UpdateUserList" | 
                        "net.minecraft.client.gui.MapItemRenderer$Instance" | 
                        "net.minecraft.item.crafting.RecipesIngots" | 
                        "net.minecraft.client.gui.GuiControls" | 
                        "org.cef.callback.CefDownloadItemCallback_N" | 
                        "slice.module.modules.misc.insults.InsultsClazz" | 
                        "net.minecraft.nbt.NBTSizeTracker" | 
                        "net.minecraft.client.renderer.texture.Stitcher" | 
                        "org.cef.callback.CefContextMenuParams" | 
                        "net.minecraft.client.gui.inventory.CreativeCrafting" | 
                        "net.minecraft.client.renderer.tileentity.RenderEnderCrystal" | 
                        "net.minecraft.pathfinding.PathNavigate" | 
                        "net.minecraft.command.server.CommandSetDefaultSpawnpoint" | 
                        "net.minecraft.block.BlockVine" | 
                        "net.optifine.entity.model.ModelAdapterPig" | 
                        "org.cef.CefSettings$ColorType" | 
                        "net.optifine.entity.model.ModelAdapterCow" | 
                        "net.minecraft.world.ColorizerFoliage" | 
                        "net.minecraft.block.BlockRail" | 
                        "net.minecraft.world.chunk.IChunkProvider" | 
                        "net.minecraft.item.crafting.RecipesMapCloning" | 
                        "net.optifine.http.HttpPipelineReceiver" | 
                        "net.minecraft.client.model.ModelQuadruped" | 
                        "org.cef.callback.CefDragData" | 
                        "net.optifine.entity.model.ModelAdapterSlime" | 
                        "slice.command.data.CommandInfo" | 
                        "net.optifine.RandomTileEntity" | 
                        "net.optifine.BetterSnow" | 
                        "net.minecraft.client.renderer.entity.RenderCreeper" | 
                        "net.minecraft.realms.RealmsServerPing" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad" | 
                        "net.minecraft.entity.projectile.EntityLargeFireball" | 
                        "net.minecraft.client.resources.data.FontMetadataSection" | 
                        "net.optifine.shaders.config.PropertyDefaultTrueFalse" | 
                        "slice.gui.hud.legacy.TargetHUD" | 
                        "net.minecraft.inventory.ContainerDispenser" | 
                        "net.minecraft.client.gui.GuiEnchantment" | 
                        "net.minecraft.client.gui.inventory.GuiBeacon$CancelButton" | 
                        "viamcp.gui.GuiProtocolSelector$SlotList" | 
                        "net.minecraft.block.BlockWoodSlab" | 
                        "org.cef.handler.CefDownloadHandler" | 
                        "net.minecraft.block.BlockCrops" | 
                        "net.optifine.CustomPanoramaProperties" | 
                        "net.minecraft.command.CommandHelp" | 
                        "net.minecraftforge.client.model.IModelPart" | 
                        "net.optifine.entity.model.ModelAdapterSign" | 
                        "net.minecraft.client.renderer.entity.RenderPig" | 
                        "net.minecraft.client.renderer.entity.RenderWitch" | 
                        "net.minecraft.client.renderer.entity.RenderCow" | 
                        "net.minecraft.block.BlockHay" | 
                        "net.minecraft.world.biome.BiomeGenSwamp" | 
                        "net.minecraft.util.CombatEntry" | 
                        "net.optifine.RandomEntities" | 
                        "net.minecraft.block.BlockPlanks" | 
                        "net.minecraft.inventory.ContainerFurnace" | 
                        "net.minecraft.client.renderer.entity.RenderBlaze" | 
                        "net.optifine.gui.TooltipProviderEnumShaderOptions" | 
                        "net.minecraft.nbt.NBTTagInt" | 
                        "net.optifine.entity.model.ModelAdapterQuadruped" | 
                        "net.minecraft.inventory.IInvBasic" | 
                        "net.optifine.SmartAnimations" | 
                        "net.optifine.util.EntityUtils" | 
                        "net.minecraft.util.WeightedRandomChestContent" | 
                        "net.minecraft.command.server.CommandSaveOn" | 
                        "org.cef.callback.CefSchemeRegistrar_N" | 
                        "net.minecraft.realms.RealmsButton" | 
                        "net.minecraft.client.model.ModelHorse" | 
                        "net.minecraft.util.IRegistry" | 
                        "org.cef.callback.CefQueryCallback_N" | 
                        "org.cef.browser.scheme.SchemePreResponse" | 
                        "net.minecraft.client.gui.GuiOptionsRowList" | 
                        "net.minecraft.inventory.InventoryCrafting" | 
                        "net.minecraft.world.gen.feature.WorldGenIceSpike" | 
                        "net.minecraft.client.renderer.block.statemap.BlockStateMapper" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk" | 
                        "net.minecraft.client.renderer.DestroyBlockProgress" | 
                        "org.cef.misc.EventFlags" | 
                        "net.minecraft.util.Vector3d" | 
                        "slice.event.events.EventClientBrand" | 
                        "net.minecraft.block.BlockStone" | 
                        "net.minecraft.entity.ai.EntityAIRestrictSun" | 
                        "net.optifine.util.CompactArrayList" | 
                        "org.cef.handler.CefWindowHandler" | 
                        "net.minecraft.command.server.CommandSummon" | 
                        "net.optifine.entity.model.ModelAdapterIronGolem" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot" | 
                        "net.minecraft.client.renderer.culling.ICamera" | 
                        "net.minecraft.world.IWorldNameable" | 
                        "net.minecraft.block.BlockDoubleWoodSlab" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace" | 
                        "net.optifine.shaders.DefaultTexture" | 
                        "net.optifine.reflect.ReflectorRaw" | 
                        "net.minecraft.util.AxisAlignedBB" | 
                        "net.minecraft.server.integrated.IntegratedServerCommandManager" | 
                        "net.optifine.entity.model.ModelAdapterLeadKnot" | 
                        "org.cef.callback.CefBeforeDownloadCallback" | 
                        "net.optifine.util.LongSupplier" | 
                        "net.minecraft.client.model.ModelBiped" | 
                        "net.minecraft.entity.ai.EntityAISwimming" | 
                        "net.minecraft.entity.EntityMinecartCommandBlock" | 
                        "net.optifine.shaders.config.ShaderOption" | 
                        "net.minecraft.command.CommandServerKick" | 
                        "net.minecraft.enchantment.EnchantmentArrowFire" | 
                        "net.optifine.entity.model.anim.ModelResolver" | 
                        "net.minecraft.block.BlockDaylightDetector" | 
                        "net.minecraft.block.BlockHardenedClay" | 
                        "net.minecraft.client.particle.EntityLavaFX" | 
                        "net.minecraft.block.BlockGlass" | 
                        "net.optifine.entity.model.ModelAdapter" | 
                        "net.minecraft.client.gui.GuiRenameWorld" | 
                        "org.cef.handler.CefFocusHandlerAdapter" | 
                        "slice.gui.alt.GuiAlt" | 
                        "net.minecraft.util.ChatStyle" | 
                        "net.minecraft.server.management.LowerStringMap" | 
                        "net.minecraft.util.DamageSource" | 
                        "net.minecraft.world.ColorizerGrass" | 
                        "net.minecraft.world.gen.structure.MapGenNetherBridge" | 
                        "net.optifine.util.NativeMemory" | 
                        "net.minecraft.block.BlockStaticLiquid" | 
                        "net.minecraft.client.model.ModelArmorStand" | 
                        "net.minecraft.client.renderer.chunk.VboChunkFactory" | 
                        "net.optifine.config.IParserInt" | 
                        "net.optifine.shaders.config.RenderScale" | 
                        "net.minecraft.world.border.IBorderListener" | 
                        "net.minecraft.world.chunk.storage.ChunkLoader" | 
                        "net.minecraft.client.audio.SoundRegistry" | 
                        "org.cef.lwjgl.CefRendererLwjgl" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand" | 
                        "net.minecraft.world.gen.NoiseGeneratorSimplex" | 
                        "net.optifine.reflect.ReflectorFields" | 
                        "net.minecraft.potion.PotionAbsorption" | 
                        "net.minecraft.entity.ai.EntityAIOwnerHurtTarget" | 
                        "net.optifine.gui.GuiOtherSettingsOF" | 
                        "net.minecraft.client.renderer.entity.RenderSnowMan" | 
                        "net.minecraft.client.gui.GuiSelectWorld$List" | 
                        "net.minecraft.scoreboard.Team" | 
                        "net.minecraft.client.renderer.entity.Render" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk" | 
                        "net.minecraft.client.renderer.BlockFluidRenderer" | 
                        "net.minecraft.client.renderer.entity.RenderXPOrb" | 
                        "net.minecraft.block.BlockHalfWoodSlab" | 
                        "net.minecraft.client.resources.ResourcePackFileNotFoundException" | 
                        "net.optifine.player.PlayerConfigurationReceiver" | 
                        "net.minecraft.client.renderer.texture.IIconCreator" | 
                        "net.minecraft.command.CommandParticle" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy" | 
                        "net.optifine.entity.model.anim.RenderEntityParameterFloat" | 
                        "net.minecraft.entity.ai.EntityAIRestrictOpenDoor" | 
                        "net.minecraft.inventory.ContainerMerchant" | 
                        "net.minecraft.entity.projectile.EntityFishHook" | 
                        "net.minecraft.network.rcon.RConConsoleSource" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer" | 
                        "net.optifine.DynamicLight" | 
                        "net.optifine.player.PlayerItemsLayer" | 
                        "net.minecraft.client.gui.GuiYesNo" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets$ListPreset" | 
                        "net.minecraft.scoreboard.IScoreObjectiveCriteria" | 
                        "net.optifine.config.RangeInt" | 
                        "net.minecraft.tileentity.TileEntityChest" | 
                        "net.optifine.config.NbtTagValue" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate" | 
                        "com.sliceclient.anticheat.check.Check" | 
                        "net.minecraft.client.model.ModelSnowMan" | 
                        "net.minecraft.world.gen.feature.WorldGenerator" | 
                        "net.optifine.CustomItemsComparator" | 
                        "net.optifine.shaders.config.ShaderMacros" | 
                        "slice.command.commands.CommandConfig" | 
                        "net.optifine.entity.model.ModelAdapterEnderChest" | 
                        "net.minecraft.item.crafting.RecipesDyes" | 
                        "slice.setting.settings.ModeValue" | 
                        "net.minecraft.block.BlockSponge" | 
                        "net.minecraft.stats.StatBasic" | 
                        "net.optifine.shaders.config.ShaderMacro" | 
                        "slice.gui.hud.legacy.SessionHUD" | 
                        "net.minecraft.client.resources.FoliageColorReloadListener" | 
                        "net.minecraft.nbt.NBTTagEnd" | 
                        "net.minecraft.world.gen.feature.WorldGenTaiga2" | 
                        "net.minecraft.world.gen.feature.WorldGenTaiga1" | 
                        "net.optifine.entity.model.ModelAdapterEnderCrystal" | 
                        "net.minecraft.util.FrameTimer" | 
                        "net.minecraft.entity.item.EntityItemFrame" | 
                        "net.minecraft.network.play.server.S20PacketEntityProperties$Snapshot" | 
                        "net.minecraft.block.BlockBrewingStand" | 
                        "net.minecraft.client.player.inventory.LocalBlockIntercommunication" | 
                        "net.minecraft.item.crafting.RecipeBookCloning" | 
                        "net.minecraft.network.login.INetHandlerLoginServer" | 
                        "slice.event.events.EventGuiRender" | 
                        "net.minecraft.client.renderer.EnumFaceDirection" | 
                        "net.optifine.shaders.CustomTextureLocation" | 
                        "net.minecraft.client.renderer.entity.layers.LayerCreeperCharge" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy" | 
                        "net.optifine.http.HttpRequest" | 
                        "net.optifine.entity.model.ModelAdapterMagmaCube" | 
                        "org.cef.CefClient" | 
                        "net.minecraft.client.renderer.entity.layers.LayerBipedArmor" | 
                        "net.optifine.util.FontUtils" | 
                        "net.minecraft.client.model.PositionTextureVertex" | 
                        "net.minecraft.block.BlockHugeMushroom" | 
                        "net.minecraft.entity.ai.EntityAIFollowOwner" | 
                        "net.minecraft.world.gen.feature.WorldGenPumpkin" | 
                        "net.minecraft.client.particle.EntityCloudFX" | 
                        "net.optifine.CustomPanorama" | 
                        "net.minecraft.enchantment.EnchantmentHelper" | 
                        "net.minecraft.client.stream.MetadataAchievement" | 
                        "net.minecraft.item.EnumDyeColor" | 
                        "net.minecraft.client.renderer.entity.RenderDragon" | 
                        "net.optifine.shaders.ShaderUtils" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityItemStackRenderer" | 
                        "net.optifine.config.ItemLocator" | 
                        "net.minecraft.client.audio.SoundCategory" | 
                        "org.cef.handler.CefKeyboardHandler" | 
                        "net.minecraft.command.CommandWeather" | 
                        "org.cef.CefBrowserCustom" | 
                        "net.optifine.util.ResUtils" | 
                        "org.cef.callback.CefPdfPrintCallback" | 
                        "org.cef.callback.CefCallback" | 
                        "net.minecraft.entity.ai.EntityAIPlay" | 
                        "net.minecraft.client.particle.EntityBreakingFX" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic" | 
                        "net.minecraft.command.server.CommandBanPlayer" | 
                        "net.minecraft.client.gui.GuiLabel" | 
                        "net.minecraft.client.renderer.entity.layers.LayerCape" | 
                        "org.cef.callback.CefJSDialogCallback" | 
                        "net.minecraft.world.storage.DerivedWorldInfo" | 
                        "net.minecraft.nbt.NBTBase" | 
                        "net.minecraft.client.gui.GuiIngameMenu" | 
                        "slice.gui.alt.field.GuiPasswordField" | 
                        "net.minecraft.client.model.ModelCreeper" | 
                        "net.optifine.CustomSky" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry" | 
                        "net.optifine.entity.model.ModelAdapterChicken" | 
                        "org.cef.callback.CefCookieVisitor" | 
                        "net.minecraft.command.CommandGameRule" | 
                        "org.cef.network.CefCookieManager" | 
                        "net.minecraft.block.BlockLog" | 
                        "slice.event.data.PacketEvent" | 
                        "org.cef.handler.CefResourceRequestHandlerAdapter" | 
                        "net.minecraft.client.renderer.RegionRenderCacheBuilder" | 
                        "net.minecraft.block.BlockMelon" | 
                        "net.optifine.entity.model.ModelAdapterOcelot" | 
                        "net.minecraft.command.CommandFill" | 
                        "net.optifine.RandomEntity" | 
                        "net.optifine.util.StrUtils" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource" | 
                        "net.optifine.entity.model.CustomModelRenderer" | 
                        "net.minecraft.client.gui.GuiButtonLanguage" | 
                        "net.minecraft.item.crafting.ShapedRecipes" | 
                        "net.optifine.shaders.uniform.Smoother" | 
                        "org.cef.browser.CefBrowserCustom" | 
                        "net.minecraft.world.biome.BiomeGenHills" | 
                        "net.minecraft.nbt.NBTTagDouble" | 
                        "org.cef.misc.CefPageRange" | 
                        "net.minecraft.client.gui.GuiCreateWorld" | 
                        "net.minecraft.client.particle.EntityCritFX" | 
                        "net.minecraft.block.BlockStoneSlab" | 
                        "net.minecraft.entity.ai.EntityAIMoveTowardsTarget" | 
                        "net.optifine.entity.model.anim.ModelVariableType" | 
                        "net.optifine.shaders.gui.GuiButtonDownloadShaders" | 
                        "net.minecraft.block.BlockHalfStoneSlabNew" | 
                        "net.optifine.shaders.SVertexBuilder" | 
                        "net.optifine.texture.TextureType" | 
                        "org.cef.handler.CefMessageRouterHandler" | 
                        "net.minecraft.block.BlockPotato" | 
                        "net.minecraft.client.particle.EntityFX" | 
                        "net.minecraft.network.play.INetHandlerPlayClient" | 
                        "net.optifine.ConnectedTexturesCompact" | 
                        "net.optifine.shaders.gui.GuiButtonEnumShaderOption" | 
                        "net.minecraft.network.EnumPacketDirection" | 
                        "net.minecraft.entity.player.PlayerCapabilities" | 
                        "net.minecraft.client.particle.IParticleFactory" | 
                        "net.minecraft.tileentity.TileEntityBanner" | 
                        "net.minecraft.client.gui.ServerListEntryLanScan" | 
                        "net.minecraft.client.renderer.entity.RenderVillager" | 
                        "net.minecraft.entity.projectile.EntityArrow" | 
                        "net.optifine.shaders.CustomTexture" | 
                        "net.minecraft.client.model.ModelLargeChest" | 
                        "net.minecraft.pathfinding.PathNavigateClimber" | 
                        "slice.event.manager.sender.EventPacketSender" | 
                        "net.minecraft.creativetab.CreativeTabs" | 
                        "org.cef.browser.CefFrame_N" | 
                        "net.minecraft.client.resources.IResource" | 
                        "net.minecraft.potion.PotionAttackDamage" | 
                        "net.minecraft.village.Village" | 
                        "net.minecraft.world.gen.feature.WorldGenBlockBlob" | 
                        "net.minecraft.client.gui.GuiSnooper$List" | 
                        "net.optifine.entity.model.ModelAdapterEndermite" | 
                        "net.minecraft.client.particle.EntitySpellParticleFX" | 
                        "net.minecraft.client.renderer.entity.RenderEntityItem" | 
                        "org.cef.network.CefURLRequest_N" | 
                        "net.minecraft.client.renderer.culling.ClippingHelper" | 
                        "net.minecraft.entity.ai.EntityAITradePlayer" | 
                        "net.minecraft.client.renderer.entity.RenderRabbit" | 
                        "net.minecraft.client.renderer.entity.RenderLeashKnot" | 
                        "net.minecraft.world.pathfinder.SwimNodeProcessor" | 
                        "net.minecraft.world.border.WorldBorder" | 
                        "net.optifine.shaders.config.EnumShaderOption" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSpiderEyes" | 
                        "net.minecraft.client.renderer.entity.RenderGiantZombie" | 
                        "net.optifine.reflect.FieldLocatorName" | 
                        "net.minecraft.client.renderer.chunk.IRenderChunkFactory" | 
                        "slice.gui.hud.legacy.arraylist.ArrayListHUD" | 
                        "net.minecraft.entity.EntityHanging" | 
                        "net.minecraft.world.biome.BiomeGenHell" | 
                        "net.optifine.BlockDir" | 
                        "net.minecraft.util.EnumChatFormatting" | 
                        "net.optifine.gui.TooltipProviderShaderOptions" | 
                        "slice.event.events.EventUpdate" | 
                        "net.minecraft.util.MapPopulator" | 
                        "net.minecraft.realms.RealmsVertexFormatElement" | 
                        "org.cef.network.CefCookie" | 
                        "org.cef.ccbluex.Page" | 
                        "net.minecraft.client.renderer.IImageBuffer" | 
                        "net.minecraft.command.SyntaxErrorException" | 
                        "net.minecraft.world.biome.BiomeGenDesert" | 
                        "net.optifine.entity.model.anim.ModelVariableUpdater" | 
                        "net.minecraft.client.particle.EntityAuraFX" | 
                        "net.minecraft.world.gen.feature.WorldGenReed" | 
                        "net.minecraft.init.Blocks" | 
                        "net.minecraft.block.BlockQuartz" | 
                        "net.minecraft.block.BlockSlime" | 
                        "net.optifine.texture.PixelType" | 
                        "net.optifine.shaders.MultiTexID" | 
                        "net.minecraft.entity.ai.EntityAIDefendVillage" | 
                        "net.minecraft.client.renderer.ItemRenderer" | 
                        "net.minecraft.tileentity.TileEntityLockable" | 
                        "net.minecraft.block.material.MaterialTransparent" | 
                        "net.minecraft.block.BlockFire" | 
                        "net.minecraft.client.resources.model.ModelResourceLocation" | 
                        "net.optifine.reflect.FieldLocatorActionKeyF3" | 
                        "net.minecraft.client.particle.MobAppearance" | 
                        "net.optifine.util.IntegratedServerUtils" | 
                        "net.minecraftforge.client.model.ISmartItemModel" | 
                        "net.minecraft.client.model.ModelBat" | 
                        "com.sliceclient.anticheat.check.checks.movement.fly.FlyA" | 
                        "net.minecraft.inventory.SlotMerchantResult" | 
                        "org.cef.callback.CefDownloadItemCallback" | 
                        "net.minecraft.client.renderer.entity.RenderEndermite" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative" | 
                        "net.minecraft.client.model.ModelBox" | 
                        "slice.legacy.clickgui.module.ModuleButton" | 
                        "net.minecraft.block.BlockRailBase$Rail" | 
                        "net.minecraft.command.IAdminCommand" | 
                        "org.cef.handler.CefPrintHandler" | 
                        "net.minecraft.entity.item.EntityFallingBlock" | 
                        "net.minecraft.block.BlockBookshelf" | 
                        "net.minecraft.client.renderer.texture.TextureClock" | 
                        "net.minecraft.block.Block" | 
                        "net.minecraft.client.gui.inventory.GuiContainer" | 
                        "net.minecraft.world.chunk.storage.IChunkLoader" | 
                        "org.cef.browser.scheme.SchemeResponseData" | 
                        "net.minecraft.client.model.ModelMagmaCube" | 
                        "net.minecraft.entity.ai.EntityAIBreakDoor" | 
                        "net.minecraft.client.model.ModelArmorStandArmor" | 
                        "slice.event.events.EventHandleChat" | 
                        "org.cef.browser.CefBrowserWindow" | 
                        "org.cef.callback.CefCallback_N" | 
                        "slice.command.commands.CommandJS" | 
                        "net.minecraft.inventory.SlotCrafting" | 
                        "net.minecraft.client.gui.achievement.GuiStats" | 
                        "slice.event.events.EventSafeWalk" | 
                        "slice.manager.NotificationManager" | 
                        "net.minecraft.client.renderer.entity.layers.LayerIronGolemFlower" | 
                        "net.minecraft.client.particle.EntityDropParticleFX" | 
                        "net.minecraft.util.EnumParticleTypes" | 
                        "net.minecraft.item.crafting.RecipeFireworks" | 
                        "net.optifine.util.MathUtilsTest" | 
                        "net.minecraft.client.model.ModelZombie" | 
                        "net.minecraft.world.chunk.ChunkPrimer" | 
                        "net.optifine.TextureAnimationFrame" | 
                        "net.minecraft.client.multiplayer.WorldClient" | 
                        "net.optifine.entity.model.anim.RenderResolverEntity" | 
                        "net.minecraft.command.ICommandManager" | 
                        "net.minecraft.client.gui.GuiSlot" | 
                        "net.minecraft.world.gen.layer.GenLayerIsland" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArrow" | 
                        "net.optifine.expr.IExpression" | 
                        "org.cef.handler.CefPrintHandlerAdapter" | 
                        "net.minecraft.block.BlockPistonMoving" | 
                        "net.minecraft.client.renderer.vertex.DefaultVertexFormats" | 
                        "slice.event.events.EventSwitchAccount" | 
                        "net.optifine.BetterGrass" | 
                        "net.minecraft.client.model.ModelSkeleton" | 
                        "net.optifine.util.CacheLocal" | 
                        "net.minecraft.enchantment.EnchantmentKnockback" | 
                        "net.optifine.expr.TestExpressions" | 
                        "net.minecraft.enchantment.EnchantmentDurability" | 
                        "net.minecraft.block.BlockDropper" | 
                        "net.minecraft.block.material.MapColor" | 
                        "net.minecraft.client.gui.GuiScreenWorking" | 
                        "net.minecraft.client.gui.GuiVideoSettings" | 
                        "net.minecraft.tileentity.TileEntityEnderChest" | 
                        "net.minecraft.item.crafting.RecipesWeapons" | 
                        "net.minecraft.client.renderer.entity.layers.LayerHeldItem" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher" | 
                        "net.optifine.LightMapPack" | 
                        "net.minecraft.client.gui.GuiUtilRenderComponents" | 
                        "net.minecraft.world.storage.IPlayerFileData" | 
                        "net.minecraft.client.model.ModelWolf" | 
                        "viamcp.protocols.ProtocolInfo" | 
                        "net.minecraft.world.gen.ChunkProviderDebug" | 
                        "net.minecraft.client.gui.GuiFlatPresets" | 
                        "net.minecraft.entity.INpc" | 
                        "net.minecraft.entity.projectile.EntityWitherSkull" | 
                        "net.optifine.entity.model.ModelAdapterHeadSkeleton" | 
                        "net.minecraft.dispenser.BehaviorDefaultDispenseItem" | 
                        "net.minecraft.inventory.ContainerWorkbench" | 
                        "net.minecraft.world.IWorldAccess" | 
                        "org.cef.browser.CefBrowserFactory" | 
                        "net.minecraft.command.CommandExecuteAt" | 
                        "net.minecraft.command.server.CommandBanIp" | 
                        "slice.script.manager.ScriptManager" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityBeaconRenderer" | 
                        "net.optifine.override.ChunkCacheOF" | 
                        "net.minecraft.command.CommandEntityData" | 
                        "net.minecraft.entity.IProjectile" | 
                        "net.minecraftforge.client.model.pipeline.IVertexConsumer" | 
                        "net.optifine.shaders.config.Property" | 
                        "net.minecraft.entity.ai.EntityAITarget" | 
                        "net.minecraft.command.server.CommandListPlayers" | 
                        "net.minecraft.util.MouseHelper" | 
                        "net.minecraft.client.renderer.WorldVertexBufferUploader" | 
                        "slice.command.commands.CommandPlugins" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy" | 
                        "net.minecraft.client.gui.GuiLockIconButton" | 
                        "org.cef.browser.CefBrowser" | 
                        "com.sliceclient.script.classloader.ScriptLoader" | 
                        "slice.gui.alt.manager.AltManager" | 
                        "net.minecraft.client.main.GameConfiguration" | 
                        "org.cef.handler.CefAppHandler" | 
                        "net.minecraft.client.audio.PositionedSound" | 
                        "net.minecraft.client.renderer.entity.RenderWolf" | 
                        "net.minecraft.client.model.ModelSkeletonHead" | 
                        "net.optifine.shaders.uniform.ShaderParameterFloat" | 
                        "net.optifine.CustomColorFader" | 
                        "net.minecraft.client.renderer.entity.RenderFish" | 
                        "net.minecraft.entity.Entity" | 
                        "slice.gui.hud.legacy.PlayerOnScreen" | 
                        "net.minecraft.village.MerchantRecipe" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP" | 
                        "net.minecraft.client.gui.GuiSleepMP" | 
                        "net.minecraft.scoreboard.ScoreHealthCriteria" | 
                        "net.minecraft.client.renderer.VertexBufferUploader" | 
                        "net.optifine.entity.model.ModelAdapterMinecartMobSpawner" | 
                        "net.minecraft.client.model.ModelBanner" | 
                        "net.minecraft.client.renderer.block.statemap.StateMapperBase" | 
                        "net.optifine.util.MemoryMonitor" | 
                        "slice.gui.main.MainMenu" | 
                        "net.optifine.entity.model.anim.IModelResolver" | 
                        "net.minecraft.block.BlockNetherrack" | 
                        "net.minecraft.client.shader.ShaderLoader" | 
                        "net.minecraft.entity.item.EntityMinecartContainer" | 
                        "net.minecraft.world.storage.MapStorage" | 
                        "net.minecraft.block.BlockPistonBase" | 
                        "net.minecraft.client.renderer.entity.RenderOcelot" | 
                        "slice.script.lang.logger.Chat" | 
                        "net.minecraft.client.model.ModelRenderer" | 
                        "org.cef.browser.ICefRenderer" | 
                        "net.minecraft.client.gui.GuiSnooper" | 
                        "net.minecraft.client.stream.MetadataPlayerDeath" | 
                        "net.minecraft.util.IntHashMap" | 
                        "net.minecraft.world.WorldSettings" | 
                        "net.minecraft.block.BlockGravel" | 
                        "net.minecraft.util.EnumWorldBlockLayer" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld$Details" | 
                        "net.minecraft.client.renderer.culling.ClippingHelperImpl" | 
                        "net.optifine.reflect.IResolvable" | 
                        "net.minecraft.client.resources.ResourcePackListEntryFound" | 
                        "net.minecraft.block.BlockCommandBlock" | 
                        "net.minecraft.client.gui.ServerSelectionList" | 
                        "net.optifine.ConnectedProperties" | 
                        "net.minecraft.world.ChunkCache" | 
                        "org.cef.callback.CefNativeAdapter" | 
                        "net.minecraft.block.BlockRedstoneLight" | 
                        "net.optifine.expr.TokenType" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds" | 
                        "slice.manager.ModuleManager" | 
                        "net.minecraft.entity.ai.EntityAISit" | 
                        "net.minecraft.tileentity.TileEntityDropper" | 
                        "net.minecraft.client.particle.EntityLargeExplodeFX" | 
                        "net.minecraft.world.gen.layer.GenLayerBiomeEdge" | 
                        "net.minecraft.world.Teleporter" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection" | 
                        "slice.module.data.Category" | 
                        "net.minecraft.block.BlockSilverfish" | 
                        "net.minecraft.world.storage.WorldInfo" | 
                        "net.minecraft.entity.ai.EntityAIFollowParent" | 
                        "net.optifine.util.TimedEvent" | 
                        "net.minecraft.world.gen.feature.WorldGenTallGrass" | 
                        "net.optifine.model.BlockModelCustomizer" | 
                        "com.sliceclient.anticheat.SliceAC$UpdateRemoveUserList" | 
                        "slice.command.commands.CommandToggle" | 
                        "net.minecraft.client.gui.GuiShareToLan" | 
                        "net.minecraft.client.renderer.tileentity.RenderWitherSkull" | 
                        "net.minecraft.client.renderer.entity.layers.LayerMooshroomMushroom" | 
                        "net.minecraft.entity.IEntityOwnable" | 
                        "net.minecraft.world.gen.MapGenBase" | 
                        "net.minecraft.client.gui.GuiCustomizeSkin$ButtonPart" | 
                        "org.cef.misc.CefPrintSettings" | 
                        "net.minecraft.client.renderer.GLAllocation" | 
                        "net.optifine.shaders.gui.GuiSliderShaderOption" | 
                        "net.minecraft.item.crafting.IRecipe" | 
                        "net.minecraft.command.EntityNotFoundException" | 
                        "net.minecraft.client.gui.inventory.GuiBeacon$PowerButton" | 
                        "net.minecraft.world.border.EnumBorderStatus" | 
                        "net.minecraft.block.BlockSeaLantern" | 
                        "net.minecraft.profiler.IPlayerUsage" | 
                        "net.minecraft.client.model.ModelZombieVillager" | 
                        "org.cef.handler.CefResourceHandlerAdapter" | 
                        "org.cef.callback.CefDownloadItem" | 
                        "net.minecraft.entity.ai.EntityAIMoveIndoors" | 
                        "net.minecraft.util.ResourceLocation" | 
                        "net.minecraft.client.particle.EntitySmokeFX" | 
                        "net.minecraft.block.BlockTripWire" | 
                        "net.minecraft.util.StatCollector" | 
                        "net.minecraft.world.EnumDifficulty" | 
                        "slice.event.events.EventMouse" | 
                        "net.minecraft.block.BlockDragonEgg" | 
                        "net.optifine.CustomGuis" | 
                        "net.minecraft.tileentity.TileEntityDispenser" | 
                        "net.optifine.expr.ParseException" | 
                        "net.minecraft.network.ThreadQuickExitException" | 
                        "org.cef.scheme.SchemeResponseData" | 
                        "slice.legacy.clickgui.ClickGui" | 
                        "net.minecraft.client.gui.GuiCustomizeSkin" | 
                        "net.minecraft.world.gen.structure.MapGenMineshaft" | 
                        "slice.manager.CommandManager" | 
                        "net.minecraft.client.audio.ITickableSound" | 
                        "com.sliceclient.anticheat.check.util.AntiCheatUtil" | 
                        "net.minecraft.world.gen.feature.WorldGenCanopyTree" | 
                        "net.minecraft.stats.IStatStringFormat" | 
                        "net.minecraft.tileentity.TileEntityNote" | 
                        "net.minecraft.client.renderer.entity.RenderBoat" | 
                        "net.optifine.reflect.ReflectorForge" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSnowmanHead" | 
                        "net.optifine.CustomGuiProperties" | 
                        "net.minecraft.entity.EntityLeashKnot" | 
                        "net.optifine.shaders.uniform.CustomUniform" | 
                        "org.cef.callback.CefQueryCallback" | 
                        "net.minecraft.client.particle.EntityRainFX" | 
                        "net.optifine.entity.model.anim.ModelVariableFloat" | 
                        "net.minecraft.client.resources.IResourceManager" | 
                        "com.sliceclient.anticheat.check.data.CheckInfo" | 
                        "net.minecraft.util.BlockPos" | 
                        "net.optifine.entity.model.ModelAdapterWither" | 
                        "net.optifine.CustomItemProperties" | 
                        "net.optifine.shaders.ShaderProgramData" | 
                        "net.optifine.EmissiveTextures" | 
                        "net.optifine.util.IteratorCache" | 
                        "net.minecraft.world.biome.BiomeGenTaiga" | 
                        "net.optifine.shaders.IteratorRenderChunks" | 
                        "net.minecraft.inventory.ICrafting" | 
                        "net.minecraft.entity.ai.EntityAIMoveTowardsRestriction" | 
                        "net.minecraft.block.BlockSlab" | 
                        "net.optifine.util.TextureUtils" | 
                        "net.minecraft.client.particle.EntitySplashFX" | 
                        "net.minecraft.world.gen.feature.WorldGenLakes" | 
                        "net.optifine.NaturalTextures" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces" | 
                        "net.minecraft.client.gui.GuiSpectator" | 
                        "net.minecraft.inventory.ContainerPlayer" | 
                        "net.minecraft.network.play.server.S22PacketMultiBlockChange$BlockUpdateData" | 
                        "net.minecraft.command.CommandTime" | 
                        "net.minecraft.command.server.CommandPublishLocalServer" | 
                        "net.optifine.shaders.ShadersRender" | 
                        "net.minecraft.util.IntegerCache" | 
                        "net.minecraft.dispenser.IBehaviorDispenseItem" | 
                        "net.minecraft.world.SpawnerAnimals" | 
                        "slice.font.TTFFontRenderer$CharacterData" | 
                        "net.minecraft.world.GameRules" | 
                        "net.minecraft.client.model.ModelEnderMite" | 
                        "net.optifine.CustomBlockLayers" | 
                        "net.optifine.render.ChunkVisibility" | 
                        "net.optifine.util.CacheLocalByte" | 
                        "net.minecraft.util.IObjectIntIterable" | 
                        "net.optifine.util.DisplayModeComparator" | 
                        "net.minecraft.block.BlockFlowerPot" | 
                        "net.optifine.entity.model.ModelAdapterGuardian" | 
                        "net.minecraft.block.BlockColored" | 
                        "net.minecraft.client.renderer.BlockModelRenderer" | 
                        "net.minecraft.command.CommandEnchant" | 
                        "net.minecraft.world.gen.layer.GenLayerDeepOcean" | 
                        "net.minecraft.client.particle.EntityFirework" | 
                        "net.minecraft.client.renderer.entity.RenderChicken" | 
                        "net.minecraft.item.crafting.RecipesMapExtending" | 
                        "net.minecraft.block.BlockJukebox" | 
                        "net.optifine.shaders.BlockAlias" | 
                        "net.minecraft.client.model.ModelWitch" | 
                        "net.minecraft.command.server.CommandTeleport" | 
                        "net.minecraft.tileentity.TileEntityEndPortal" | 
                        "org.cef.handler.CefDialogHandler" | 
                        "com.sliceclient.anticheat.event.manager.AntiCheatEventInfo" | 
                        "net.minecraft.network.ServerStatusResponse" | 
                        "net.minecraft.client.renderer.entity.layers.LayerCustomHead" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu" | 
                        "org.cef.scheme.SchemeResponseHeaders" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityEndPortalRenderer" | 
                        "net.minecraft.entity.ai.EntityAICreeperSwell" | 
                        "net.minecraft.world.storage.MapData" | 
                        "net.optifine.util.KeyUtils" | 
                        "net.minecraft.client.renderer.entity.RenderMooshroom" | 
                        "net.minecraft.client.gui.GuiListButton" | 
                        "net.minecraft.client.gui.GuiKeyBindingList$CategoryEntry" | 
                        "net.optifine.config.VillagerProfession" | 
                        "org.cef.ccbluex.ResourceScheme" | 
                        "net.minecraft.client.renderer.entity.ArmorStandRenderer" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces" | 
                        "net.minecraft.network.handshake.INetHandlerHandshakeServer" | 
                        "org.cef.handler.CefDisplayHandler" | 
                        "net.minecraft.block.BlockContainer" | 
                        "net.optifine.reflect.ReflectorResolver" | 
                        "net.optifine.shaders.gui.GuiSlotShaders" | 
                        "net.minecraft.entity.ai.EntityMoveHelper" | 
                        "net.minecraft.world.gen.layer.GenLayerAddSnow" | 
                        "net.minecraft.client.gui.GuiGameOver" | 
                        "net.minecraft.entity.item.EntityBoat" | 
                        "net.minecraft.block.BlockLever" | 
                        "net.minecraft.util.StringUtils" | 
                        "net.optifine.util.PropertiesOrdered" | 
                        "net.minecraft.block.BlockObsidian" | 
                        "net.optifine.entity.model.ModelAdapterBook" | 
                        "slice.util.RotationUtil" | 
                        "net.minecraft.entity.ai.EntityAIBase" | 
                        "net.minecraft.client.renderer.block.statemap.StateMap" | 
                        "net.minecraft.util.MinecraftError" | 
                        "net.minecraft.client.gui.inventory.GuiBeacon$ConfirmButton" | 
                        "net.minecraft.block.BlockFarmland" | 
                        "net.optifine.entity.model.ModelAdapterBat" | 
                        "net.minecraft.entity.ai.EntityAIMate" | 
                        "org.cef.callback.CefBeforeDownloadCallback_N" | 
                        "net.minecraft.util.RegistryNamespacedDefaultedByKey" | 
                        "org.cef.callback.CefPrintJobCallback_N" | 
                        "net.minecraft.world.Teleporter$PortalPosition" | 
                        "net.optifine.gui.GuiOptionButtonOF" | 
                        "net.minecraft.client.particle.EntityNoteFX" | 
                        "net.minecraft.client.renderer.entity.RenderSnowball" | 
                        "net.minecraft.client.renderer.InventoryEffectRenderer" | 
                        "net.minecraft.world.biome.BiomeGenPlains" | 
                        "net.minecraft.block.BlockOre" | 
                        "net.minecraft.event.ClickEvent" | 
                        "net.minecraft.entity.item.EntityMinecartHopper" | 
                        "net.minecraft.client.model.ModelVillager" | 
                        "net.minecraft.stats.ObjectiveStat" | 
                        "net.optifine.expr.IExpressionResolver" | 
                        "slice.gui.main.HTMLMainMenu" | 
                        "net.minecraft.block.BlockButton" | 
                        "net.minecraft.pathfinding.PathEntity" | 
                        "net.optifine.entity.model.ModelAdapterSnowman" | 
                        "org.cef.misc.StringRef" | 
                        "net.minecraft.item.crafting.RecipesFood" | 
                        "slice.event.data.EventInfo" | 
                        "net.optifine.gui.TooltipProvider" | 
                        "org.cef.handler.CefCookieAccessFilter" | 
                        "net.optifine.entity.model.ModelAdapterBlaze" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats" | 
                        "net.minecraft.client.renderer.entity.RenderGhast" | 
                        "net.minecraft.entity.boss.BossStatus" | 
                        "com.sliceclient.anticheat.user.User" | 
                        "slice.gui.hud.legacy.HUD" | 
                        "net.minecraft.util.ObjectIntIdentityMap" | 
                        "org.cef.handler.CefContextMenuHandler" | 
                        "net.minecraft.enchantment.EnchantmentDigging" | 
                        "net.minecraft.entity.ai.EntityAIWander" | 
                        "net.minecraft.block.ITileEntityProvider" | 
                        "net.optifine.expr.ExpressionFloatCached" | 
                        "net.minecraft.item.EnumRarity" | 
                        "net.minecraft.client.particle.EntityFishWakeFX" | 
                        "net.minecraft.world.demo.DemoWorldManager" | 
                        "net.minecraft.inventory.IInventory" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds$Button" | 
                        "net.minecraft.client.renderer.entity.RenderMinecartMobSpawner" | 
                        "net.minecraft.util.WeightedRandom" | 
                        "net.minecraft.client.gui.ScreenChatOptions.actionPerformed" | 
                        "net.minecraft.client.gui.ScreenChatOptions.initGui" | 
                        "net.minecraft.client.gui.ScreenChatOptions.drawScreen" | 
                        "net.minecraft.client.model.ModelGhast.setRotationAngles" | 
                        "net.minecraft.client.model.ModelGhast.render" | 
                        "net.minecraft.util.ReportedException.getMessage" | 
                        "net.minecraft.util.ReportedException.getCause" | 
                        "net.minecraft.util.ReportedException.getCrashReport" | 
                        "net.optifine.util.CounterInt.getValue" | 
                        "net.optifine.util.CounterInt.reset" | 
                        "net.optifine.util.CounterInt.nextValue" | 
                        "com.sliceclient.anticheat.user.UserManager.hasPlayer" | 
                        "com.sliceclient.anticheat.user.UserManager.addUser" | 
                        "com.sliceclient.anticheat.user.UserManager.getUser" | 
                        "com.sliceclient.anticheat.user.UserManager.remove" | 
                        "org.cef.browser.scheme.IScheme.readResponse" | 
                        "org.cef.browser.scheme.IScheme.getResponseHeaders" | 
                        "org.cef.browser.scheme.IScheme.processRequest" | 
                        "net.minecraft.client.model.ModelLeashKnot.setRotationAngles" | 
                        "net.minecraft.client.model.ModelLeashKnot.render" | 
                        "net.minecraft.client.renderer.chunk.SetVisibility.setVisible" | 
                        "net.minecraft.client.renderer.chunk.SetVisibility.setManyVisible" | 
                        "net.minecraft.client.renderer.chunk.SetVisibility.setAllVisible" | 
                        "net.minecraft.client.renderer.chunk.SetVisibility.setBit" | 
                        "net.minecraft.client.renderer.chunk.SetVisibility.toString" | 
                        "net.minecraft.client.renderer.chunk.SetVisibility.clearBit" | 
                        "net.minecraft.client.renderer.chunk.SetVisibility.isVisible" | 
                        "net.minecraft.client.renderer.chunk.SetVisibility.getBit" | 
                        "net.minecraft.client.gui.GuiDownloadTerrain.updateScreen" | 
                        "net.minecraft.client.gui.GuiDownloadTerrain.doesGuiPauseGame" | 
                        "net.minecraft.client.gui.GuiDownloadTerrain.initGui" | 
                        "net.minecraft.client.gui.GuiDownloadTerrain.drawScreen" | 
                        "net.minecraft.client.gui.GuiDownloadTerrain.keyTyped" | 
                        "net.optifine.gui.TooltipProviderOptions.isRenderBorder" | 
                        "net.optifine.gui.TooltipProviderOptions.getTooltipBounds" | 
                        "slice.event.events.EventRenderEntityModel.getModel" | 
                        "slice.event.events.EventRenderEntityModel.getRenderer" | 
                        "slice.event.events.EventRenderEntityModel.getP_77036_6_" | 
                        "slice.event.events.EventRenderEntityModel.getP_77036_5_" | 
                        "slice.event.events.EventRenderEntityModel.getEntity" | 
                        "slice.event.events.EventRenderEntityModel.getP_77036_4_" | 
                        "slice.event.events.EventRenderEntityModel.setScaleFactor" | 
                        "slice.event.events.EventRenderEntityModel.getP_77036_3_" | 
                        "slice.event.events.EventRenderEntityModel.getP_77036_2_" | 
                        "slice.event.events.EventRenderEntityModel.setMaxRenderDistance" | 
                        "slice.event.events.EventRenderEntityModel.setEntity" | 
                        "slice.event.events.EventRenderEntityModel.setPartialTicks" | 
                        "slice.event.events.EventRenderEntityModel.setP_77036_6_" | 
                        "slice.event.events.EventRenderEntityModel.setP_77036_5_" | 
                        "slice.event.events.EventRenderEntityModel.getMaxRenderDistance" | 
                        "slice.event.events.EventRenderEntityModel.getPartialTicks" | 
                        "slice.event.events.EventRenderEntityModel.setRenderer" | 
                        "slice.event.events.EventRenderEntityModel.getScaleFactor" | 
                        "slice.event.events.EventRenderEntityModel.setModel" | 
                        "slice.event.events.EventRenderEntityModel.setP_77036_4_" | 
                        "slice.event.events.EventRenderEntityModel.setP_77036_3_" | 
                        "slice.event.events.EventRenderEntityModel.setP_77036_2_" | 
                        "net.minecraft.entity.item.EntityMinecart$EnumMinecartType.getNetworkID" | 
                        "net.minecraft.entity.item.EntityMinecart$EnumMinecartType.getName" | 
                        "net.minecraft.util.EntityDamageSourceIndirect.getSourceOfDamage" | 
                        "net.minecraft.util.EntityDamageSourceIndirect.getEntity" | 
                        "net.minecraft.util.EntityDamageSourceIndirect.getDeathMessage" | 
                        "net.minecraft.world.storage.ISaveFormat.getSaveLoader" | 
                        "net.minecraft.world.storage.ISaveFormat.isOldMapFormat" | 
                        "net.minecraft.world.storage.ISaveFormat.getName" | 
                        "net.minecraft.world.storage.ISaveFormat.flushCache" | 
                        "net.minecraft.world.storage.ISaveFormat.deleteWorldDirectory" | 
                        "net.minecraft.world.storage.ISaveFormat.isNewLevelIdAcceptable" | 
                        "net.minecraft.world.storage.ISaveFormat.canLoadWorld" | 
                        "net.minecraft.world.storage.ISaveFormat.convertMapFormat" | 
                        "net.minecraft.world.storage.ISaveFormat.isConvertible" | 
                        "net.minecraft.world.storage.ISaveFormat.getSaveList" | 
                        "net.minecraft.world.storage.ISaveFormat.renameWorld" | 
                        "net.minecraft.world.storage.ISaveFormat.getWorldInfo" | 
                        "org.cef.handler.CefLifeSpanHandler.doClose" | 
                        "org.cef.handler.CefLifeSpanHandler.onAfterParentChanged" | 
                        "org.cef.handler.CefLifeSpanHandler.onBeforeClose" | 
                        "org.cef.handler.CefLifeSpanHandler.onBeforePopup" | 
                        "org.cef.handler.CefLifeSpanHandler.onAfterCreated" | 
                        "net.minecraft.world.gen.NoiseGeneratorOctaves.generateNoiseOctaves" | 
                        "net.minecraft.block.BlockSnow.getMetaFromState" | 
                        "net.minecraft.block.BlockSnow.isPassable" | 
                        "net.minecraft.block.BlockSnow.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockSnow.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockSnow.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockSnow.isFullCube" | 
                        "net.minecraft.block.BlockSnow.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockSnow.getBoundsForLayers" | 
                        "net.minecraft.block.BlockSnow.createBlockState" | 
                        "net.minecraft.block.BlockSnow.quantityDropped" | 
                        "net.minecraft.block.BlockSnow.checkAndDropBlock" | 
                        "net.minecraft.block.BlockSnow.harvestBlock" | 
                        "net.minecraft.block.BlockSnow.getStateFromMeta" | 
                        "net.minecraft.block.BlockSnow.isReplaceable" | 
                        "net.minecraft.block.BlockSnow.updateTick" | 
                        "net.minecraft.block.BlockSnow.isOpaqueCube" | 
                        "net.minecraft.block.BlockSnow.getItemDropped" | 
                        "net.minecraft.block.BlockSnow.setBlockBoundsForItemRender" | 
                        "net.minecraft.block.BlockSnow.shouldSideBeRendered" | 
                        "net.optifine.shaders.ProgramStage.getName" | 
                        "net.minecraft.block.BlockWall.getMetaFromState" | 
                        "net.minecraft.block.BlockWall.canConnectTo" | 
                        "net.minecraft.block.BlockWall.isPassable" | 
                        "net.minecraft.block.BlockWall.damageDropped" | 
                        "net.minecraft.block.BlockWall.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockWall.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockWall.isFullCube" | 
                        "net.minecraft.block.BlockWall.getActualState" | 
                        "net.minecraft.block.BlockWall.getSubBlocks" | 
                        "net.minecraft.block.BlockWall.getLocalizedName" | 
                        "net.minecraft.block.BlockWall.createBlockState" | 
                        "net.minecraft.block.BlockWall.getStateFromMeta" | 
                        "net.minecraft.block.BlockWall.isOpaqueCube" | 
                        "net.minecraft.block.BlockWall.shouldSideBeRendered" | 
                        "net.minecraft.scoreboard.GoalColor.getName" | 
                        "net.minecraft.scoreboard.GoalColor.isReadOnly" | 
                        "net.minecraft.scoreboard.GoalColor.getRenderType" | 
                        "net.minecraft.scoreboard.GoalColor.setScore" | 
                        "net.minecraft.block.BlockSandStone$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockSandStone$EnumType.getName" | 
                        "net.minecraft.block.BlockSandStone$EnumType.toString" | 
                        "net.minecraft.block.BlockSandStone$EnumType.getUnlocalizedName" | 
                        "net.minecraftforge.client.model.ITransformation.rotate" | 
                        "net.minecraftforge.client.model.ITransformation.getMatrix" | 
                        "net.optifine.http.HttpPipelineRequest.getHttpRequest" | 
                        "net.optifine.http.HttpPipelineRequest.isClosed" | 
                        "net.optifine.http.HttpPipelineRequest.setClosed" | 
                        "net.optifine.http.HttpPipelineRequest.getHttpListener" | 
                        "net.optifine.gui.GuiDetailSettingsOF.actionPerformed" | 
                        "net.optifine.gui.GuiDetailSettingsOF.initGui" | 
                        "net.optifine.gui.GuiDetailSettingsOF.drawScreen" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.getPossibleCreatures" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.func_180519_a" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.canSave" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.unloadQueuedChunks" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.func_180520_a" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.saveChunks" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.populate" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.provideChunk" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.populateChunk" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.initializeNoiseField" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.getStrongholdGen" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.saveExtraData" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.recreateStructures" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.chunkExists" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.getLoadedChunkCount" | 
                        "net.minecraft.world.gen.ChunkProviderEnd.makeString" | 
                        "net.optifine.shaders.Iterator3d.next" | 
                        "net.optifine.shaders.Iterator3d.reverseCoord" | 
                        "net.optifine.shaders.Iterator3d.hasNext" | 
                        "net.optifine.shaders.Iterator3d.remove" | 
                        "net.minecraft.client.player.inventory.ContainerLocalMenu.setField" | 
                        "net.minecraft.client.player.inventory.ContainerLocalMenu.setLockCode" | 
                        "net.minecraft.client.player.inventory.ContainerLocalMenu.isLocked" | 
                        "net.minecraft.client.player.inventory.ContainerLocalMenu.getField" | 
                        "net.minecraft.client.player.inventory.ContainerLocalMenu.createContainer" | 
                        "net.minecraft.client.player.inventory.ContainerLocalMenu.getFieldCount" | 
                        "net.minecraft.client.player.inventory.ContainerLocalMenu.getLockCode" | 
                        "net.minecraft.client.player.inventory.ContainerLocalMenu.getGuiID" | 
                        "net.minecraft.world.gen.structure.StructureComponent.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureComponent.isLiquidInStructureBoundingBox" | 
                        "net.minecraft.world.gen.structure.StructureComponent.createStructureBaseNBT" | 
                        "net.minecraft.world.gen.structure.StructureComponent.getBoundingBox" | 
                        "net.minecraft.world.gen.structure.StructureComponent.readStructureBaseNBT" | 
                        "net.minecraft.world.gen.structure.StructureComponent.getBlockStateFromPos" | 
                        "net.minecraft.world.gen.structure.StructureComponent.randomlyRareFillWithBlocks" | 
                        "net.minecraft.world.gen.structure.StructureComponent.getZWithOffset" | 
                        "net.minecraft.world.gen.structure.StructureComponent.getMetadataWithOffset" | 
                        "net.minecraft.world.gen.structure.StructureComponent.generateDispenserContents" | 
                        "net.minecraft.world.gen.structure.StructureComponent.getXWithOffset" | 
                        "net.minecraft.world.gen.structure.StructureComponent.randomlyPlaceBlock" | 
                        "net.minecraft.world.gen.structure.StructureComponent.fillWithBlocks" | 
                        "net.minecraft.world.gen.structure.StructureComponent.func_175805_a" | 
                        "net.minecraft.world.gen.structure.StructureComponent.setBlockState" | 
                        "net.minecraft.world.gen.structure.StructureComponent.fillWithRandomizedBlocks" | 
                        "net.minecraft.world.gen.structure.StructureComponent.getBoundingBoxCenter" | 
                        "net.minecraft.world.gen.structure.StructureComponent.placeDoorCurrentPosition" | 
                        "net.minecraft.world.gen.structure.StructureComponent.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureComponent.replaceAirAndLiquidDownwards" | 
                        "net.minecraft.world.gen.structure.StructureComponent.getComponentType" | 
                        "net.minecraft.world.gen.structure.StructureComponent.fillWithAir" | 
                        "net.minecraft.world.gen.structure.StructureComponent.clearCurrentPositionBlocksUpwards" | 
                        "net.minecraft.world.gen.structure.StructureComponent.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureComponent.func_181138_a" | 
                        "net.minecraft.world.gen.structure.StructureComponent.getYWithOffset" | 
                        "net.minecraft.world.gen.structure.StructureComponent.generateChestContents" | 
                        "net.minecraft.world.gen.structure.StructureComponent.writeStructureToNBT" | 
                        "net.minecraft.util.LongHashMap.add" | 
                        "net.minecraft.util.LongHashMap.getNumHashElements" | 
                        "net.minecraft.util.LongHashMap.containsItem" | 
                        "net.minecraft.util.LongHashMap.createKey" | 
                        "net.minecraft.util.LongHashMap.remove" | 
                        "net.minecraft.util.LongHashMap.resizeTable" | 
                        "net.minecraft.util.LongHashMap.copyHashTableTo" | 
                        "net.minecraft.util.LongHashMap.getKeyDistribution" | 
                        "net.minecraft.util.LongHashMap.removeKey" | 
                        "net.minecraft.util.LongHashMap.getValueByKey" | 
                        "net.minecraft.util.LongHashMap.getEntry" | 
                        "net.minecraft.entity.passive.EntityVillager$ListItemForEmeralds.modifyMerchantRecipeList" | 
                        "net.minecraft.client.particle.EntityHeartFX$Factory.getEntityFX" | 
                        "net.minecraft.command.CommandDefaultGameMode.setGameType" | 
                        "net.minecraft.command.CommandDefaultGameMode.getCommandUsage" | 
                        "net.minecraft.command.CommandDefaultGameMode.processCommand" | 
                        "net.minecraft.command.CommandDefaultGameMode.getCommandName" | 
                        "net.optifine.entity.model.anim.RenderResolverTileEntity.getParameter" | 
                        "net.optifine.reflect.ReflectorField.getValue" | 
                        "net.optifine.reflect.ReflectorField.getTargetField" | 
                        "net.optifine.reflect.ReflectorField.resolve" | 
                        "net.optifine.reflect.ReflectorField.setValue" | 
                        "net.optifine.reflect.ReflectorField.exists" | 
                        "net.minecraft.inventory.InventoryLargeChest.decrStackSize" | 
                        "net.minecraft.inventory.InventoryLargeChest.openInventory" | 
                        "net.minecraft.inventory.InventoryLargeChest.setField" | 
                        "net.minecraft.inventory.InventoryLargeChest.setLockCode" | 
                        "net.minecraft.inventory.InventoryLargeChest.getName" | 
                        "net.minecraft.inventory.InventoryLargeChest.markDirty" | 
                        "net.minecraft.inventory.InventoryLargeChest.clear" | 
                        "net.minecraft.inventory.InventoryLargeChest.getField" | 
                        "net.minecraft.inventory.InventoryLargeChest.createContainer" | 
                        "net.minecraft.inventory.InventoryLargeChest.getStackInSlot" | 
                        "net.minecraft.inventory.InventoryLargeChest.setInventorySlotContents" | 
                        "net.minecraft.inventory.InventoryLargeChest.closeInventory" | 
                        "net.minecraft.inventory.InventoryLargeChest.getLockCode" | 
                        "net.minecraft.inventory.InventoryLargeChest.getInventoryStackLimit" | 
                        "net.minecraft.inventory.InventoryLargeChest.getSizeInventory" | 
                        "net.minecraft.inventory.InventoryLargeChest.isPartOfLargeChest" | 
                        "net.minecraft.inventory.InventoryLargeChest.getDisplayName" | 
                        "net.minecraft.inventory.InventoryLargeChest.isUseableByPlayer" | 
                        "net.minecraft.inventory.InventoryLargeChest.isLocked" | 
                        "net.minecraft.inventory.InventoryLargeChest.hasCustomName" | 
                        "net.minecraft.inventory.InventoryLargeChest.removeStackFromSlot" | 
                        "net.minecraft.inventory.InventoryLargeChest.getFieldCount" | 
                        "net.minecraft.inventory.InventoryLargeChest.getGuiID" | 
                        "net.minecraft.inventory.InventoryLargeChest.isItemValidForSlot" | 
                        "net.minecraft.client.model.ModelBoat.render" | 
                        "slice.util.Timer.hasReached" | 
                        "slice.util.Timer.getDelay" | 
                        "slice.util.Timer.hasTimeReached" | 
                        "slice.util.Timer.getCurrentMS" | 
                        "slice.util.Timer.convertToMS" | 
                        "slice.util.Timer.reset" | 
                        "slice.util.Timer.setLastMS" | 
                        "net.minecraft.command.CommandTrigger.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandTrigger.getCommandUsage" | 
                        "net.minecraft.command.CommandTrigger.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandTrigger.processCommand" | 
                        "net.minecraft.command.CommandTrigger.getCommandName" | 
                        "net.minecraft.entity.item.EntityMinecartEmpty.interactFirst" | 
                        "net.minecraft.entity.item.EntityMinecartEmpty.getMinecartType" | 
                        "net.minecraft.entity.item.EntityMinecartEmpty.onActivatorRailPass" | 
                        "net.minecraft.client.multiplayer.ServerData.setBase64EncodedIconData" | 
                        "net.minecraft.client.multiplayer.ServerData.getResourceMode" | 
                        "net.minecraft.client.multiplayer.ServerData.getBase64EncodedIconData" | 
                        "net.minecraft.client.multiplayer.ServerData.isOnLAN" | 
                        "net.minecraft.client.multiplayer.ServerData.getNBTCompound" | 
                        "net.minecraft.client.multiplayer.ServerData.setResourceMode" | 
                        "net.minecraft.client.multiplayer.ServerData.copyFrom" | 
                        "net.minecraft.command.server.CommandBroadcast.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandBroadcast.getCommandUsage" | 
                        "net.minecraft.command.server.CommandBroadcast.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandBroadcast.processCommand" | 
                        "net.minecraft.command.server.CommandBroadcast.getCommandName" | 
                        "net.minecraft.world.gen.layer.GenLayerRiver.getInts" | 
                        "net.minecraft.world.gen.layer.GenLayerRiver.func_151630_c" | 
                        "net.minecraft.client.model.ModelSheep2.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelSheep2.setRotationAngles" | 
                        "net.minecraft.client.model.ModelSheep1.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelSheep1.setRotationAngles" | 
                        "net.minecraft.util.Tuple.getFirst" | 
                        "net.minecraft.util.Tuple.getSecond" | 
                        "net.minecraft.world.gen.feature.WorldGenIcePath.generate" | 
                        "net.optifine.ChunkPosComparator.compare" | 
                        "net.optifine.ChunkPosComparator.getDistSq" | 
                        "net.minecraft.item.crafting.CraftingManager.func_180303_b" | 
                        "net.minecraft.item.crafting.CraftingManager.addRecipe" | 
                        "net.minecraft.item.crafting.CraftingManager.findMatchingRecipe" | 
                        "net.minecraft.item.crafting.CraftingManager.addShapelessRecipe" | 
                        "net.minecraft.item.crafting.CraftingManager.getRecipeList" | 
                        "slice.gui.hud.slice.HUD.onTick" | 
                        "slice.gui.hud.slice.HUD.onLogo" | 
                        "slice.gui.hud.slice.HUD.onArrayList" | 
                        "org.cef.handler.CefDisplayHandlerAdapter.onTooltip" | 
                        "org.cef.handler.CefDisplayHandlerAdapter.onCursorChange" | 
                        "org.cef.handler.CefDisplayHandlerAdapter.onAddressChange" | 
                        "org.cef.handler.CefDisplayHandlerAdapter.onTitleChange" | 
                        "org.cef.handler.CefDisplayHandlerAdapter.onConsoleMessage" | 
                        "org.cef.handler.CefDisplayHandlerAdapter.onStatusMessage" | 
                        "net.minecraft.block.BlockFlowerPot$EnumFlowerType.getName" | 
                        "net.minecraft.block.BlockFlowerPot$EnumFlowerType.toString" | 
                        "net.minecraft.client.resources.data.AnimationFrame.hasNoTime" | 
                        "net.minecraft.client.resources.data.AnimationFrame.getFrameIndex" | 
                        "net.minecraft.client.resources.data.AnimationFrame.getFrameTime" | 
                        "net.optifine.CustomColormap.getColorSmooth" | 
                        "net.optifine.CustomColormap.detectMatchBlocks" | 
                        "net.optifine.CustomColormap.addMatchBlock" | 
                        "net.optifine.CustomColormap.getColorsRgb" | 
                        "net.optifine.CustomColormap.getWidth" | 
                        "net.optifine.CustomColormap.getColorRandom" | 
                        "net.optifine.CustomColormap.getMatchBlockIds" | 
                        "net.optifine.CustomColormap.getHeight" | 
                        "net.optifine.CustomColormap.getColorVanilla" | 
                        "net.optifine.CustomColormap.parseFormat" | 
                        "net.optifine.CustomColormap.isColorConstant" | 
                        "net.optifine.CustomColormap.isValidMatchBlocks" | 
                        "net.optifine.CustomColormap.isValid" | 
                        "net.optifine.CustomColormap.getColor" | 
                        "net.optifine.CustomColormap.getColorGrid" | 
                        "net.optifine.CustomColormap.getMatchBlock" | 
                        "net.optifine.CustomColormap.matchesBlock" | 
                        "net.optifine.CustomColormap.getLength" | 
                        "net.optifine.CustomColormap.toString" | 
                        "net.optifine.CustomColormap.readColors" | 
                        "org.cef.misc.CefPdfPrintSettings.clone" | 
                        "net.minecraft.client.gui.spectator.ISpectatorMenuView.func_178670_b" | 
                        "net.minecraft.client.gui.spectator.ISpectatorMenuView.func_178669_a" | 
                        "net.minecraft.client.renderer.entity.RenderMagmaCube.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderMagmaCube.getEntityTexture" | 
                        "net.minecraft.world.biome.BiomeCache$Block.getBiomeGenAt" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument.getScatteredFeatureSpawnList" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument.getStructureStart" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument.canSpawnStructureAtCoords" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument.getStructureName" | 
                        "viamcp.gui.GuiProtocolSelector.actionPerformed" | 
                        "viamcp.gui.GuiProtocolSelector.handleMouseInput" | 
                        "viamcp.gui.GuiProtocolSelector.initGui" | 
                        "viamcp.gui.GuiProtocolSelector.drawScreen" | 
                        "net.minecraft.util.RegistryNamespaced.iterator" | 
                        "net.minecraft.util.RegistryNamespaced.getObject" | 
                        "net.minecraft.util.RegistryNamespaced.containsKey" | 
                        "net.minecraft.util.RegistryNamespaced.getObjectById" | 
                        "net.minecraft.util.RegistryNamespaced.createUnderlyingMap" | 
                        "net.minecraft.util.RegistryNamespaced.getIDForObject" | 
                        "net.minecraft.util.RegistryNamespaced.getNameForObject" | 
                        "net.minecraft.util.RegistryNamespaced.register" | 
                        "net.minecraft.entity.ai.EntitySenses.clearSensingCache" | 
                        "net.minecraft.entity.ai.EntitySenses.canSee" | 
                        "net.minecraft.world.pathfinder.NodeProcessor.openPoint" | 
                        "net.minecraft.world.pathfinder.NodeProcessor.initProcessor" | 
                        "net.minecraft.world.pathfinder.NodeProcessor.getPathPointTo" | 
                        "net.minecraft.world.pathfinder.NodeProcessor.findPathOptions" | 
                        "net.minecraft.world.pathfinder.NodeProcessor.postProcess" | 
                        "net.minecraft.world.pathfinder.NodeProcessor.getPathPointToCoords" | 
                        "net.optifine.shaders.ClippingHelperShadow.copyPlane" | 
                        "net.optifine.shaders.ClippingHelperShadow.init" | 
                        "net.optifine.shaders.ClippingHelperShadow.assignPlane" | 
                        "net.optifine.shaders.ClippingHelperShadow.isBoxInFrustum" | 
                        "net.optifine.shaders.ClippingHelperShadow.makeShadowPlane" | 
                        "net.optifine.shaders.ClippingHelperShadow.distance" | 
                        "net.optifine.shaders.ClippingHelperShadow.dot4" | 
                        "net.optifine.shaders.ClippingHelperShadow.dot3" | 
                        "net.optifine.shaders.ClippingHelperShadow.length" | 
                        "net.optifine.shaders.ClippingHelperShadow.addShadowClipPlane" | 
                        "net.optifine.shaders.ClippingHelperShadow.normalize3" | 
                        "net.optifine.shaders.ClippingHelperShadow.cross3" | 
                        "net.optifine.shaders.ClippingHelperShadow.normalizePlane" | 
                        "net.optifine.LightMap.getColormap" | 
                        "net.optifine.LightMap.updateLightmap" | 
                        "net.optifine.LightMap.getLightMapColumn" | 
                        "org.cef.SystemBootstrap$Loader.loadLibrary" | 
                        "viamcp.gui.AsyncVersionSlider.mouseReleased" | 
                        "viamcp.gui.AsyncVersionSlider.mouseDragged" | 
                        "viamcp.gui.AsyncVersionSlider.setVersion" | 
                        "viamcp.gui.AsyncVersionSlider.getHoverState" | 
                        "viamcp.gui.AsyncVersionSlider.drawButton" | 
                        "viamcp.gui.AsyncVersionSlider.mousePressed" | 
                        "net.minecraft.entity.passive.EntityRabbit$EnumMoveType.func_180073_d" | 
                        "net.minecraft.entity.passive.EntityRabbit$EnumMoveType.func_180074_b" | 
                        "net.minecraft.entity.passive.EntityRabbit$EnumMoveType.getDuration" | 
                        "net.minecraft.entity.passive.EntityRabbit$EnumMoveType.getSpeed" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$ZDoubleRoomFitHelper.func_175969_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$ZDoubleRoomFitHelper.func_175968_a" | 
                        "net.optifine.util.LinkedList.checkNoParent" | 
                        "net.optifine.util.LinkedList.isEmpty" | 
                        "net.optifine.util.LinkedList.moveAfter" | 
                        "net.optifine.util.LinkedList.getLast" | 
                        "net.optifine.util.LinkedList.remove" | 
                        "net.optifine.util.LinkedList.addLast" | 
                        "net.optifine.util.LinkedList.iterator" | 
                        "net.optifine.util.LinkedList.contains" | 
                        "net.optifine.util.LinkedList.getSize" | 
                        "net.optifine.util.LinkedList.addAfter" | 
                        "net.optifine.util.LinkedList.find" | 
                        "net.optifine.util.LinkedList.getFirst" | 
                        "net.optifine.util.LinkedList.checkParent" | 
                        "net.optifine.util.LinkedList.toString" | 
                        "net.optifine.util.LinkedList.addFirst" | 
                        "org.cef.handler.CefRenderHandlerAdapter.startDragging" | 
                        "org.cef.handler.CefRenderHandlerAdapter.onPopupSize" | 
                        "org.cef.handler.CefRenderHandlerAdapter.getScreenPoint" | 
                        "org.cef.handler.CefRenderHandlerAdapter.onPaint" | 
                        "org.cef.handler.CefRenderHandlerAdapter.onPopupShow" | 
                        "org.cef.handler.CefRenderHandlerAdapter.onCursorChange" | 
                        "org.cef.handler.CefRenderHandlerAdapter.updateDragCursor" | 
                        "org.cef.handler.CefRenderHandlerAdapter.getScreenInfo" | 
                        "org.cef.handler.CefRenderHandlerAdapter.getViewRect" | 
                        "org.cef.handler.CefMessageRouterHandlerAdapter.onQueryCanceled" | 
                        "org.cef.handler.CefMessageRouterHandlerAdapter.onQuery" | 
                        "net.minecraft.command.CommandDifficulty.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandDifficulty.getCommandUsage" | 
                        "net.minecraft.command.CommandDifficulty.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandDifficulty.processCommand" | 
                        "net.minecraft.command.CommandDifficulty.getCommandName" | 
                        "net.minecraft.command.CommandDifficulty.getDifficultyFromCommand" | 
                        "net.optifine.shaders.ProgramStack.pop" | 
                        "net.optifine.shaders.ProgramStack.push" | 
                        "net.minecraft.block.BlockBush.getBlockLayer" | 
                        "net.minecraft.block.BlockBush.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockBush.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockBush.canPlaceBlockOn" | 
                        "net.minecraft.block.BlockBush.isFullCube" | 
                        "net.minecraft.block.BlockBush.checkAndDropBlock" | 
                        "net.minecraft.block.BlockBush.updateTick" | 
                        "net.minecraft.block.BlockBush.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockBush.isOpaqueCube" | 
                        "net.minecraft.block.BlockBush.canBlockStay" | 
                        "net.minecraft.command.CommandReplaceItem.getUsernames" | 
                        "net.minecraft.command.CommandReplaceItem.isUsernameIndex" | 
                        "net.minecraft.command.CommandReplaceItem.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandReplaceItem.getCommandUsage" | 
                        "net.minecraft.command.CommandReplaceItem.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandReplaceItem.getSlotForShortcut" | 
                        "net.minecraft.command.CommandReplaceItem.processCommand" | 
                        "net.minecraft.command.CommandReplaceItem.getCommandName" | 
                        "net.minecraft.entity.ai.EntityAIFollowGolem.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIFollowGolem.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIFollowGolem.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIFollowGolem.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIFollowGolem.continueExecuting" | 
                        "net.minecraft.client.resources.data.LanguageMetadataSection.getLanguages" | 
                        "net.optifine.entity.model.ModelAdapterHeadHumanoid.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterHeadHumanoid.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterHeadHumanoid.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterHeadHumanoid.getModelRendererNames" | 
                        "org.cef.callback.CefAuthCallback.cancel" | 
                        "org.cef.callback.CefAuthCallback.Continue" | 
                        "slice.event.events.EventPacket.isIncomming" | 
                        "slice.event.events.EventPacket.setOutgoing" | 
                        "slice.event.events.EventPacket.isOutgoing" | 
                        "slice.event.events.EventPacket.getPacket" | 
                        "slice.event.events.EventPacket.setPacket" | 
                        "slice.command.commands.CommandReload.handle" | 
                        "net.minecraft.client.renderer.texture.DynamicTexture.getTextureData" | 
                        "net.minecraft.client.renderer.texture.DynamicTexture.loadTexture" | 
                        "net.minecraft.client.renderer.texture.DynamicTexture.updateDynamicTexture" | 
                        "net.minecraft.client.renderer.vertex.VertexFormatElement$EnumType.getGlConstant" | 
                        "net.minecraft.client.renderer.vertex.VertexFormatElement$EnumType.getSize" | 
                        "net.minecraft.client.renderer.vertex.VertexFormatElement$EnumType.getDisplayName" | 
                        "net.minecraft.pathfinding.Path.sortBack" | 
                        "net.minecraft.pathfinding.Path.isPathEmpty" | 
                        "net.minecraft.pathfinding.Path.sortForward" | 
                        "net.minecraft.pathfinding.Path.dequeue" | 
                        "net.minecraft.pathfinding.Path.changeDistance" | 
                        "net.minecraft.pathfinding.Path.addPoint" | 
                        "net.minecraft.pathfinding.Path.clearPath" | 
                        "net.minecraft.block.BlockPressurePlateWeighted.getMetaFromState" | 
                        "net.minecraft.block.BlockPressurePlateWeighted.createBlockState" | 
                        "net.minecraft.block.BlockPressurePlateWeighted.getRedstoneStrength" | 
                        "net.minecraft.block.BlockPressurePlateWeighted.setRedstoneStrength" | 
                        "net.minecraft.block.BlockPressurePlateWeighted.computeRedstoneStrength" | 
                        "net.minecraft.block.BlockPressurePlateWeighted.getStateFromMeta" | 
                        "net.minecraft.block.BlockPressurePlateWeighted.tickRate" | 
                        "net.minecraft.inventory.ContainerHopper.onContainerClosed" | 
                        "net.minecraft.inventory.ContainerHopper.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerHopper.canInteractWith" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets.initGui" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets.onGuiClosed" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets.keyTyped" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets.updateScreen" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets.func_175305_g" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets.actionPerformed" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets.mouseClicked" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets.func_175304_a" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets.drawScreen" | 
                        "net.minecraft.block.BlockHugeMushroom$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockHugeMushroom$EnumType.getName" | 
                        "net.minecraft.block.BlockHugeMushroom$EnumType.toString" | 
                        "org.cef.callback.CefAuthCallback_N.cancel" | 
                        "org.cef.callback.CefAuthCallback_N.N_Cancel" | 
                        "org.cef.callback.CefAuthCallback_N.N_Continue" | 
                        "org.cef.callback.CefAuthCallback_N.finalize" | 
                        "org.cef.callback.CefAuthCallback_N.Continue" | 
                        "net.minecraft.block.BlockClay.quantityDropped" | 
                        "net.minecraft.block.BlockClay.getItemDropped" | 
                        "net.minecraft.util.RegistryDefaulted.getObject" | 
                        "net.minecraft.world.gen.feature.WorldGenHugeTrees.func_150533_a" | 
                        "net.minecraft.world.gen.feature.WorldGenHugeTrees.func_175925_a" | 
                        "net.minecraft.world.gen.feature.WorldGenHugeTrees.func_175926_c" | 
                        "net.minecraft.world.gen.feature.WorldGenHugeTrees.func_175927_a" | 
                        "net.minecraft.world.gen.feature.WorldGenHugeTrees.func_175929_a" | 
                        "net.minecraft.world.gen.feature.WorldGenHugeTrees.func_175928_b" | 
                        "net.minecraft.client.resources.model.BuiltInModel.isAmbientOcclusion" | 
                        "net.minecraft.client.resources.model.BuiltInModel.getItemCameraTransforms" | 
                        "net.minecraft.client.resources.model.BuiltInModel.getGeneralQuads" | 
                        "net.minecraft.client.resources.model.BuiltInModel.isGui3d" | 
                        "net.minecraft.client.resources.model.BuiltInModel.isBuiltInRenderer" | 
                        "net.minecraft.client.resources.model.BuiltInModel.getFaceQuads" | 
                        "net.minecraft.client.resources.model.BuiltInModel.getParticleTexture" | 
                        "net.minecraft.crash.CrashReportCategory.getPrunedStackTrace" | 
                        "net.minecraft.crash.CrashReportCategory.addCrashSection" | 
                        "net.minecraft.crash.CrashReportCategory.getStackTrace" | 
                        "net.minecraft.crash.CrashReportCategory.addCrashSectionThrowable" | 
                        "net.minecraft.crash.CrashReportCategory.firstTwoElementsOfStackTraceMatch" | 
                        "net.minecraft.crash.CrashReportCategory.trimStackTraceEntriesFromBottom" | 
                        "net.minecraft.crash.CrashReportCategory.addCrashSectionCallable" | 
                        "net.minecraft.crash.CrashReportCategory.appendToStringBuilder" | 
                        "net.minecraft.world.gen.layer.GenLayer.initWorldGenSeed" | 
                        "net.minecraft.world.gen.layer.GenLayer.getInts" | 
                        "net.minecraft.world.gen.layer.GenLayer.nextInt" | 
                        "net.minecraft.world.gen.layer.GenLayer.selectModeOrRandom" | 
                        "net.minecraft.world.gen.layer.GenLayer.selectRandom" | 
                        "net.minecraft.world.gen.layer.GenLayer.initChunkSeed" | 
                        "net.minecraft.block.BlockQuartz$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockQuartz$EnumType.getName" | 
                        "net.minecraft.block.BlockQuartz$EnumType.toString" | 
                        "net.minecraft.inventory.ContainerBrewingStand.detectAndSendChanges" | 
                        "net.minecraft.inventory.ContainerBrewingStand.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerBrewingStand.canInteractWith" | 
                        "net.minecraft.inventory.ContainerBrewingStand.onCraftGuiOpened" | 
                        "net.minecraft.inventory.ContainerBrewingStand.updateProgressBar" | 
                        "net.minecraft.server.management.PlayerManager$PlayerInstance.sendToAllPlayersWatchingChunk" | 
                        "net.minecraft.server.management.PlayerManager$PlayerInstance.increaseInhabitedTime" | 
                        "net.minecraft.server.management.PlayerManager$PlayerInstance.addPlayer" | 
                        "net.minecraft.server.management.PlayerManager$PlayerInstance.sendTileToAllPlayersWatchingChunk" | 
                        "net.minecraft.server.management.PlayerManager$PlayerInstance.flagChunkForUpdate" | 
                        "net.minecraft.server.management.PlayerManager$PlayerInstance.onUpdate" | 
                        "net.minecraft.server.management.PlayerManager$PlayerInstance.removePlayer" | 
                        "net.minecraft.server.management.PlayerManager$PlayerInstance.processChunk" | 
                        "net.minecraft.entity.ai.attributes.IAttribute.clampValue" | 
                        "net.minecraft.entity.ai.attributes.IAttribute.func_180372_d" | 
                        "net.minecraft.entity.ai.attributes.IAttribute.getAttributeUnlocalizedName" | 
                        "net.minecraft.entity.ai.attributes.IAttribute.getShouldWatch" | 
                        "net.minecraft.entity.ai.attributes.IAttribute.getDefaultValue" | 
                        "net.optifine.reflect.ReflectorConstructor.getTargetConstructor" | 
                        "net.optifine.reflect.ReflectorConstructor.resolve" | 
                        "net.optifine.reflect.ReflectorConstructor.exists" | 
                        "net.optifine.reflect.ReflectorConstructor.newInstance" | 
                        "net.optifine.reflect.ReflectorConstructor.deactivate" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$ChestCorridor.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$ChestCorridor.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$ChestCorridor.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$ChestCorridor.writeStructureToNBT" | 
                        "net.minecraft.world.biome.WorldChunkManagerHell.getBiomeGenerator" | 
                        "net.minecraft.world.biome.WorldChunkManagerHell.getRainfall" | 
                        "net.minecraft.world.biome.WorldChunkManagerHell.getBiomeGenAt" | 
                        "net.minecraft.world.biome.WorldChunkManagerHell.areBiomesViable" | 
                        "net.minecraft.world.biome.WorldChunkManagerHell.getBiomesForGeneration" | 
                        "net.minecraft.world.biome.WorldChunkManagerHell.findBiomePosition" | 
                        "net.minecraft.world.biome.WorldChunkManagerHell.loadBlockGeneratorData" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.getPossibleCreatures" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.canSave" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.unloadQueuedChunks" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.saveChunks" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.populate" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.provideChunk" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.populateChunk" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.getStrongholdGen" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.saveExtraData" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.recreateStructures" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.chunkExists" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.getLoadedChunkCount" | 
                        "net.minecraft.world.gen.ChunkProviderFlat.makeString" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsGeneral.elementClicked" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsGeneral.getSize" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsGeneral.drawSlot" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsGeneral.getContentHeight" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsGeneral.drawBackground" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsGeneral.isSelected" | 
                        "net.minecraft.world.gen.layer.GenLayerBiome.getInts" | 
                        "net.minecraft.tileentity.TileEntityDaylightDetector.update" | 
                        "org.cef.browser.mac.CefBrowserWindowMac.getWindowHandle" | 
                        "net.minecraft.client.gui.GuiOptionsRowList$Row.mouseReleased" | 
                        "net.minecraft.client.gui.GuiOptionsRowList$Row.drawEntry" | 
                        "net.minecraft.client.gui.GuiOptionsRowList$Row.setSelected" | 
                        "net.minecraft.client.gui.GuiOptionsRowList$Row.mousePressed" | 
                        "net.minecraft.world.storage.ThreadedFileIOBase.processQueue" | 
                        "net.minecraft.world.storage.ThreadedFileIOBase.run" | 
                        "net.minecraft.world.storage.ThreadedFileIOBase.queueIO" | 
                        "net.minecraft.world.storage.ThreadedFileIOBase.waitForFinish" | 
                        "net.minecraft.inventory.Slot.decrStackSize" | 
                        "net.minecraft.inventory.Slot.onSlotChange" | 
                        "net.minecraft.inventory.Slot.onSlotChanged" | 
                        "net.minecraft.inventory.Slot.isItemValid" | 
                        "net.minecraft.inventory.Slot.onPickupFromSlot" | 
                        "net.minecraft.inventory.Slot.getSlotStackLimit" | 
                        "net.minecraft.inventory.Slot.onCrafting" | 
                        "net.minecraft.inventory.Slot.putStack" | 
                        "net.minecraft.inventory.Slot.getHasStack" | 
                        "net.minecraft.inventory.Slot.getItemStackLimit" | 
                        "net.minecraft.inventory.Slot.canBeHovered" | 
                        "net.minecraft.inventory.Slot.isHere" | 
                        "net.minecraft.inventory.Slot.getStack" | 
                        "net.minecraft.inventory.Slot.canTakeStack" | 
                        "net.minecraft.inventory.Slot.getSlotTexture" | 
                        "net.optifine.render.GlBlendState.setEnabled" | 
                        "net.optifine.render.GlBlendState.isSeparate" | 
                        "net.optifine.render.GlBlendState.getDstFactorAlpha" | 
                        "net.optifine.render.GlBlendState.getDstFactor" | 
                        "net.optifine.render.GlBlendState.getSrcFactorAlpha" | 
                        "net.optifine.render.GlBlendState.setDisabled" | 
                        "net.optifine.render.GlBlendState.isEnabled" | 
                        "net.optifine.render.GlBlendState.setState" | 
                        "net.optifine.render.GlBlendState.toString" | 
                        "net.optifine.render.GlBlendState.setFactors" | 
                        "net.optifine.render.GlBlendState.getSrcFactor" | 
                        "org.cef.network.CefPostData.getElementCount" | 
                        "org.cef.network.CefPostData.isReadOnly" | 
                        "org.cef.network.CefPostData.getElements" | 
                        "org.cef.network.CefPostData.finalize" | 
                        "org.cef.network.CefPostData.toString" | 
                        "org.cef.network.CefPostData.dispose" | 
                        "org.cef.network.CefPostData.addElement" | 
                        "org.cef.network.CefPostData.removeElement" | 
                        "org.cef.network.CefPostData.removeElements" | 
                        "net.minecraft.client.gui.GuiOverlayDebug.call" | 
                        "net.minecraft.client.gui.GuiOverlayDebug.renderDebugInfoRight" | 
                        "net.minecraft.client.gui.GuiOverlayDebug.renderLagometer" | 
                        "net.minecraft.client.gui.GuiOverlayDebug.renderDebugInfoLeft" | 
                        "net.minecraft.client.gui.GuiOverlayDebug.isReducedDebug" | 
                        "net.minecraft.client.gui.GuiOverlayDebug.getFrameColor" | 
                        "net.minecraft.client.gui.GuiOverlayDebug.renderDebugInfo" | 
                        "net.minecraft.client.gui.GuiOverlayDebug.blendColors" | 
                        "net.minecraft.client.gui.GuiOverlayDebug.getDebugInfoRight" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.getMouseY" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.elementClicked" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.getSize" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.getScrollBarX" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.getMouseX" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.drawSlot" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.getContentHeight" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.drawBackground" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.isSelected" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.getWidth" | 
                        "net.minecraft.client.gui.GuiSimpleScrolledSelectionListProxy.drawScreen" | 
                        "net.minecraft.client.particle.EntityExplodeFX.onUpdate" | 
                        "net.minecraft.client.resources.IReloadableResourceManager.registerReloadListener" | 
                        "net.minecraft.client.resources.IReloadableResourceManager.reloadResources" | 
                        "net.minecraft.nbt.NBTTagByte.getByte" | 
                        "net.minecraft.nbt.NBTTagByte.read" | 
                        "net.minecraft.nbt.NBTTagByte.getShort" | 
                        "net.minecraft.nbt.NBTTagByte.getDouble" | 
                        "net.minecraft.nbt.NBTTagByte.getId" | 
                        "net.minecraft.nbt.NBTTagByte.getFloat" | 
                        "net.minecraft.nbt.NBTTagByte.getLong" | 
                        "net.minecraft.nbt.NBTTagByte.getInt" | 
                        "net.minecraft.nbt.NBTTagByte.hashCode" | 
                        "net.minecraft.nbt.NBTTagByte.equals" | 
                        "net.minecraft.nbt.NBTTagByte.toString" | 
                        "net.minecraft.nbt.NBTTagByte.copy" | 
                        "net.minecraft.nbt.NBTTagByte.write" | 
                        "net.optifine.entity.model.ModelAdapterMinecartTnt.makeEntityRender" | 
                        "net.minecraft.entity.passive.EntityRabbit$AIPanic.updateTask" | 
                        "net.minecraft.client.renderer.block.statemap.StateMap$Builder.build" | 
                        "net.minecraft.client.renderer.block.statemap.StateMap$Builder.ignore" | 
                        "net.minecraft.client.renderer.block.statemap.StateMap$Builder.withName" | 
                        "net.minecraft.client.renderer.block.statemap.StateMap$Builder.withSuffix" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$YDoubleRoomFitHelper.func_175969_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$YDoubleRoomFitHelper.func_175968_a" | 
                        "net.minecraft.client.particle.EntityLargeExplodeFX$Factory.getEntityFX" | 
                        "net.minecraft.client.renderer.entity.RenderSlime.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderSlime.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderSlime.getEntityTexture" | 
                        "org.cef.callback.CefCompletionCallback.onComplete" | 
                        "slice.command.Command.setName" | 
                        "slice.command.Command.init" | 
                        "slice.command.Command.getPlayer" | 
                        "slice.command.Command.getWorld" | 
                        "slice.command.Command.getAliases" | 
                        "slice.command.Command.getName" | 
                        "slice.command.Command.addAlias" | 
                        "slice.command.Command.getInfo" | 
                        "slice.command.Command.setAliases" | 
                        "slice.command.Command.setPlayer" | 
                        "slice.command.Command.handle" | 
                        "slice.command.Command.setDescription" | 
                        "slice.command.Command.getDescription" | 
                        "slice.command.Command.addMessage" | 
                        "slice.command.Command.getMc" | 
                        "slice.command.Command.setInfo" | 
                        "slice.command.Command.setWorld" | 
                        "slice.command.Command.setTimer" | 
                        "slice.command.Command.setMc" | 
                        "slice.command.Command.getTimer" | 
                        "net.minecraft.client.particle.EntityFlameFX$Factory.getEntityFX" | 
                        "net.minecraft.entity.monster.EntityGuardian$AIGuardianAttack.updateTask" | 
                        "net.minecraft.entity.monster.EntityGuardian$AIGuardianAttack.resetTask" | 
                        "net.minecraft.entity.monster.EntityGuardian$AIGuardianAttack.shouldExecute" | 
                        "net.minecraft.entity.monster.EntityGuardian$AIGuardianAttack.startExecuting" | 
                        "net.minecraft.entity.monster.EntityGuardian$AIGuardianAttack.continueExecuting" | 
                        "org.cef.handler.CefCookieAccessFilterAdapter.canSaveCookie" | 
                        "org.cef.handler.CefCookieAccessFilterAdapter.canSendCookie" | 
                        "slice.event.events.Event3D.getPartialTicks" | 
                        "com.sliceclient.anticheat.check.checks.movement.speed.SpeedA.onPlayerUpdate" | 
                        "net.optifine.entity.model.ModelAdapterVillager.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterVillager.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterVillager.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterVillager.getModelRendererNames" | 
                        "net.minecraft.client.model.ModelPlayer.renderRightArm" | 
                        "net.minecraft.client.model.ModelPlayer.postRenderArm" | 
                        "net.minecraft.client.model.ModelPlayer.setRotationAngles" | 
                        "net.minecraft.client.model.ModelPlayer.render" | 
                        "net.minecraft.client.model.ModelPlayer.renderCape" | 
                        "net.minecraft.client.model.ModelPlayer.setInvisible" | 
                        "net.minecraft.client.model.ModelPlayer.renderLeftArm" | 
                        "net.minecraft.client.model.ModelPlayer.renderDeadmau5Head" | 
                        "net.minecraft.block.BlockCactus.getMetaFromState" | 
                        "net.minecraft.block.BlockCactus.getBlockLayer" | 
                        "net.minecraft.block.BlockCactus.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockCactus.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockCactus.isFullCube" | 
                        "net.minecraft.block.BlockCactus.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockCactus.getSelectedBoundingBox" | 
                        "net.minecraft.block.BlockCactus.canBlockStay" | 
                        "net.minecraft.block.BlockCactus.createBlockState" | 
                        "net.minecraft.block.BlockCactus.onEntityCollidedWithBlock" | 
                        "net.minecraft.block.BlockCactus.getStateFromMeta" | 
                        "net.minecraft.block.BlockCactus.updateTick" | 
                        "net.minecraft.block.BlockCactus.isOpaqueCube" | 
                        "org.cef.callback.CefPrintDialogCallback.cancel" | 
                        "org.cef.callback.CefPrintDialogCallback.Continue" | 
                        "net.minecraft.command.ICommandSender.getEntityWorld" | 
                        "net.minecraft.command.ICommandSender.canCommandSenderUseCommand" | 
                        "net.minecraft.command.ICommandSender.getCommandSenderEntity" | 
                        "net.minecraft.command.ICommandSender.getName" | 
                        "net.minecraft.command.ICommandSender.getPosition" | 
                        "net.minecraft.command.ICommandSender.getPositionVector" | 
                        "net.minecraft.command.ICommandSender.getDisplayName" | 
                        "net.minecraft.command.ICommandSender.addChatMessage" | 
                        "net.minecraft.command.ICommandSender.sendCommandFeedback" | 
                        "net.minecraft.command.ICommandSender.setCommandStat" | 
                        "net.minecraft.client.gui.GuiLanguage$List.elementClicked" | 
                        "net.minecraft.client.gui.GuiLanguage$List.getSize" | 
                        "net.minecraft.client.gui.GuiLanguage$List.drawSlot" | 
                        "net.minecraft.client.gui.GuiLanguage$List.getContentHeight" | 
                        "net.minecraft.client.gui.GuiLanguage$List.drawBackground" | 
                        "net.minecraft.client.gui.GuiLanguage$List.isSelected" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsMobsList.elementClicked" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsMobsList.getSize" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsMobsList.drawSlot" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsMobsList.getContentHeight" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsMobsList.drawBackground" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsMobsList.isSelected" | 
                        "net.minecraft.enchantment.EnchantmentHelper$HurtIterator.calculateModifier" | 
                        "net.minecraft.client.particle.EntityDiggingFX$Factory.getEntityFX" | 
                        "org.cef.handler.CefAppHandlerAdapter.onRegisterCustomSchemes" | 
                        "org.cef.handler.CefAppHandlerAdapter.onScheduleMessagePumpWork" | 
                        "org.cef.handler.CefAppHandlerAdapter.onContextInitialized" | 
                        "org.cef.handler.CefAppHandlerAdapter.onBeforeCommandLineProcessing" | 
                        "org.cef.handler.CefAppHandlerAdapter.stateHasChanged" | 
                        "org.cef.handler.CefAppHandlerAdapter.onBeforeTerminate" | 
                        "net.minecraft.command.CommandToggleDownfall.getCommandUsage" | 
                        "net.minecraft.command.CommandToggleDownfall.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandToggleDownfall.processCommand" | 
                        "net.minecraft.command.CommandToggleDownfall.getCommandName" | 
                        "net.minecraft.command.CommandToggleDownfall.toggleDownfall" | 
                        "net.minecraft.client.audio.SoundList.getSoundList" | 
                        "net.minecraft.client.audio.SoundList.getSoundCategory" | 
                        "net.minecraft.client.audio.SoundList.setReplaceExisting" | 
                        "net.minecraft.client.audio.SoundList.canReplaceExisting" | 
                        "net.minecraft.client.audio.SoundList.setSoundCategory" | 
                        "net.optifine.shaders.config.ShaderOptionVariable.getValueText" | 
                        "net.optifine.shaders.config.ShaderOptionVariable.matchesLine" | 
                        "net.optifine.shaders.config.ShaderOptionVariable.getValueColor" | 
                        "net.optifine.shaders.config.ShaderOptionVariable.getSourceLine" | 
                        "net.minecraft.world.biome.BiomeGenSavanna$Mutated.decorate" | 
                        "net.minecraft.world.biome.BiomeGenSavanna$Mutated.genTerrainBlocks" | 
                        "net.minecraft.client.renderer.culling.Frustum.isBoxInFrustum" | 
                        "net.minecraft.client.renderer.culling.Frustum.isBoxInFrustumFully" | 
                        "net.minecraft.client.renderer.culling.Frustum.isBoundingBoxInFrustum" | 
                        "net.minecraft.client.renderer.culling.Frustum.setPosition" | 
                        "net.minecraft.client.renderer.GlStateManager$BooleanState.setEnabled" | 
                        "net.minecraft.client.renderer.GlStateManager$BooleanState.setDisabled" | 
                        "net.minecraft.client.renderer.GlStateManager$BooleanState.setState" | 
                        "slice.event.events.Event2D.setPartialTicks" | 
                        "slice.event.events.Event2D.getHeight" | 
                        "slice.event.events.Event2D.getScaledResolution" | 
                        "slice.event.events.Event2D.getPartialTicks" | 
                        "slice.event.events.Event2D.getWidth" | 
                        "slice.event.events.Event2D.setWidth" | 
                        "slice.event.events.Event2D.setHeight" | 
                        "slice.event.events.Event2D.setScaledResolution" | 
                        "net.minecraft.enchantment.EnchantmentArrowKnockback.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentArrowKnockback.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentArrowKnockback.getMaxLevel" | 
                        "net.minecraft.nbt.NBTTagFloat.getByte" | 
                        "net.minecraft.nbt.NBTTagFloat.read" | 
                        "net.minecraft.nbt.NBTTagFloat.getShort" | 
                        "net.minecraft.nbt.NBTTagFloat.getDouble" | 
                        "net.minecraft.nbt.NBTTagFloat.getId" | 
                        "net.minecraft.nbt.NBTTagFloat.getFloat" | 
                        "net.minecraft.nbt.NBTTagFloat.getLong" | 
                        "net.minecraft.nbt.NBTTagFloat.getInt" | 
                        "net.minecraft.nbt.NBTTagFloat.hashCode" | 
                        "net.minecraft.nbt.NBTTagFloat.equals" | 
                        "net.minecraft.nbt.NBTTagFloat.toString" | 
                        "net.minecraft.nbt.NBTTagFloat.copy" | 
                        "net.minecraft.nbt.NBTTagFloat.write" | 
                        "net.minecraft.command.server.CommandTestFor.isUsernameIndex" | 
                        "net.minecraft.command.server.CommandTestFor.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandTestFor.getCommandUsage" | 
                        "net.minecraft.command.server.CommandTestFor.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandTestFor.processCommand" | 
                        "net.minecraft.command.server.CommandTestFor.getCommandName" | 
                        "net.minecraft.util.MovingObjectPosition.getBlockPos" | 
                        "net.minecraft.util.MovingObjectPosition.toString" | 
                        "net.minecraft.realms.Tezzelator.normal" | 
                        "net.minecraft.realms.Tezzelator.offset" | 
                        "net.minecraft.realms.Tezzelator.color" | 
                        "net.minecraft.realms.Tezzelator.vertex" | 
                        "net.minecraft.realms.Tezzelator.tex" | 
                        "net.minecraft.realms.Tezzelator.end" | 
                        "net.minecraft.realms.Tezzelator.endVertex" | 
                        "net.minecraft.realms.Tezzelator.begin" | 
                        "net.minecraft.realms.Tezzelator.tex2" | 
                        "org.cef.network.CefRequest_N.setHeaderByName" | 
                        "org.cef.network.CefRequest_N.N_GetFirstPartyForCookies" | 
                        "org.cef.network.CefRequest_N.getMethod" | 
                        "org.cef.network.CefRequest_N.N_IsReadOnly" | 
                        "org.cef.network.CefRequest_N.getReferrerURL" | 
                        "org.cef.network.CefRequest_N.getTransitionType" | 
                        "org.cef.network.CefRequest_N.N_SetHeaderByName" | 
                        "org.cef.network.CefRequest_N.getPostData" | 
                        "org.cef.network.CefRequest_N.setNativeRef" | 
                        "org.cef.network.CefRequest_N.getNativeRef" | 
                        "org.cef.network.CefRequest_N.N_GetURL" | 
                        "org.cef.network.CefRequest_N.setReferrer" | 
                        "org.cef.network.CefRequest_N.getFirstPartyForCookies" | 
                        "org.cef.network.CefRequest_N.N_Set" | 
                        "org.cef.network.CefRequest_N.N_SetFlags" | 
                        "org.cef.network.CefRequest_N.N_SetURL" | 
                        "org.cef.network.CefRequest_N.setURL" | 
                        "org.cef.network.CefRequest_N.N_GetTransitionType" | 
                        "org.cef.network.CefRequest_N.getURL" | 
                        "org.cef.network.CefRequest_N.N_GetResourceType" | 
                        "org.cef.network.CefRequest_N.N_SetHeaderMap" | 
                        "org.cef.network.CefRequest_N.N_SetPostData" | 
                        "org.cef.network.CefRequest_N.N_GetMethod" | 
                        "org.cef.network.CefRequest_N.dispose" | 
                        "org.cef.network.CefRequest_N.getFlags" | 
                        "org.cef.network.CefRequest_N.setFlags" | 
                        "org.cef.network.CefRequest_N.setPostData" | 
                        "org.cef.network.CefRequest_N.setHeaderMap" | 
                        "org.cef.network.CefRequest_N.N_Dispose" | 
                        "org.cef.network.CefRequest_N.getReferrerPolicy" | 
                        "org.cef.network.CefRequest_N.N_GetFlags" | 
                        "org.cef.network.CefRequest_N.isReadOnly" | 
                        "org.cef.network.CefRequest_N.N_SetReferrer" | 
                        "org.cef.network.CefRequest_N.N_SetFirstPartyForCookies" | 
                        "org.cef.network.CefRequest_N.getIdentifier" | 
                        "org.cef.network.CefRequest_N.getResourceType" | 
                        "org.cef.network.CefRequest_N.getHeaderByName" | 
                        "org.cef.network.CefRequest_N.setFirstPartyForCookies" | 
                        "org.cef.network.CefRequest_N.N_GetIdentifier" | 
                        "org.cef.network.CefRequest_N.N_SetMethod" | 
                        "org.cef.network.CefRequest_N.set" | 
                        "org.cef.network.CefRequest_N.N_GetReferrerPolicy" | 
                        "org.cef.network.CefRequest_N.getHeaderMap" | 
                        "org.cef.network.CefRequest_N.setMethod" | 
                        "org.cef.network.CefRequest_N.N_GetReferrerURL" | 
                        "org.cef.network.CefRequest_N.N_GetHeaderByName" | 
                        "org.cef.network.CefRequest_N.N_GetPostData" | 
                        "org.cef.network.CefRequest_N.N_GetHeaderMap" | 
                        "net.minecraft.client.resources.IResourcePack.resourceExists" | 
                        "net.minecraft.client.resources.IResourcePack.getPackMetadata" | 
                        "net.minecraft.client.resources.IResourcePack.getPackName" | 
                        "net.minecraft.client.resources.IResourcePack.getResourceDomains" | 
                        "net.minecraft.client.resources.IResourcePack.getPackImage" | 
                        "net.minecraft.client.resources.IResourcePack.getInputStream" | 
                        "net.minecraft.inventory.ContainerEnchantment.onContainerClosed" | 
                        "net.minecraft.inventory.ContainerEnchantment.func_178148_a" | 
                        "net.minecraft.inventory.ContainerEnchantment.detectAndSendChanges" | 
                        "net.minecraft.inventory.ContainerEnchantment.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerEnchantment.onCraftMatrixChanged" | 
                        "net.minecraft.inventory.ContainerEnchantment.getLapisAmount" | 
                        "net.minecraft.inventory.ContainerEnchantment.enchantItem" | 
                        "net.minecraft.inventory.ContainerEnchantment.canInteractWith" | 
                        "net.minecraft.inventory.ContainerEnchantment.onCraftGuiOpened" | 
                        "net.minecraft.inventory.ContainerEnchantment.updateProgressBar" | 
                        "org.cef.callback.CefCommandLine_N.N_GetSwitches" | 
                        "org.cef.callback.CefCommandLine_N.hasSwitch" | 
                        "org.cef.callback.CefCommandLine_N.appendArgument" | 
                        "org.cef.callback.CefCommandLine_N.N_GetSwitchValue" | 
                        "org.cef.callback.CefCommandLine_N.N_GetArguments" | 
                        "org.cef.callback.CefCommandLine_N.N_HasSwitches" | 
                        "org.cef.callback.CefCommandLine_N.N_Reset" | 
                        "org.cef.callback.CefCommandLine_N.setProgram" | 
                        "org.cef.callback.CefCommandLine_N.N_HasSwitch" | 
                        "org.cef.callback.CefCommandLine_N.N_AppendSwitch" | 
                        "org.cef.callback.CefCommandLine_N.getProgram" | 
                        "org.cef.callback.CefCommandLine_N.N_GetProgram" | 
                        "org.cef.callback.CefCommandLine_N.appendSwitchWithValue" | 
                        "org.cef.callback.CefCommandLine_N.getSwitches" | 
                        "org.cef.callback.CefCommandLine_N.getSwitchValue" | 
                        "org.cef.callback.CefCommandLine_N.N_HasArguments" | 
                        "org.cef.callback.CefCommandLine_N.hasSwitches" | 
                        "org.cef.callback.CefCommandLine_N.N_SetProgram" | 
                        "org.cef.callback.CefCommandLine_N.N_AppendSwitchWithValue" | 
                        "org.cef.callback.CefCommandLine_N.hasArguments" | 
                        "org.cef.callback.CefCommandLine_N.reset" | 
                        "org.cef.callback.CefCommandLine_N.getArguments" | 
                        "org.cef.callback.CefCommandLine_N.toString" | 
                        "org.cef.callback.CefCommandLine_N.appendSwitch" | 
                        "org.cef.callback.CefCommandLine_N.N_AppendArgument" | 
                        "net.optifine.entity.model.CustomEntityRenderer.getBasePath" | 
                        "net.optifine.entity.model.CustomEntityRenderer.getName" | 
                        "net.optifine.entity.model.CustomEntityRenderer.getTextureLocation" | 
                        "net.optifine.entity.model.CustomEntityRenderer.getCustomModelRenderers" | 
                        "net.optifine.entity.model.CustomEntityRenderer.getShadowSize" | 
                        "net.minecraft.client.model.ModelChest.renderAll" | 
                        "net.minecraft.tileentity.TileEntityBeacon.setName" | 
                        "net.minecraft.tileentity.TileEntityBeacon.decrStackSize" | 
                        "net.minecraft.tileentity.TileEntityBeacon.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityBeacon.setField" | 
                        "net.minecraft.tileentity.TileEntityBeacon.getName" | 
                        "net.minecraft.tileentity.TileEntityBeacon.getMaxRenderDistanceSquared" | 
                        "net.minecraft.tileentity.TileEntityBeacon.createContainer" | 
                        "net.minecraft.tileentity.TileEntityBeacon.update" | 
                        "net.minecraft.tileentity.TileEntityBeacon.getDescriptionPacket" | 
                        "net.minecraft.tileentity.TileEntityBeacon.getBeamSegments" | 
                        "net.minecraft.tileentity.TileEntityBeacon.setInventorySlotContents" | 
                        "net.minecraft.tileentity.TileEntityBeacon.closeInventory" | 
                        "net.minecraft.tileentity.TileEntityBeacon.shouldBeamRender" | 
                        "net.minecraft.tileentity.TileEntityBeacon.getInventoryStackLimit" | 
                        "net.minecraft.tileentity.TileEntityBeacon.hasCustomName" | 
                        "net.minecraft.tileentity.TileEntityBeacon.writeToNBT" | 
                        "net.minecraft.tileentity.TileEntityBeacon.getGuiID" | 
                        "net.minecraft.tileentity.TileEntityBeacon.isItemValidForSlot" | 
                        "net.minecraft.tileentity.TileEntityBeacon.openInventory" | 
                        "net.minecraft.tileentity.TileEntityBeacon.receiveClientEvent" | 
                        "net.minecraft.tileentity.TileEntityBeacon.func_183001_h" | 
                        "net.minecraft.tileentity.TileEntityBeacon.clear" | 
                        "net.minecraft.tileentity.TileEntityBeacon.getField" | 
                        "net.minecraft.tileentity.TileEntityBeacon.updateSegmentColors" | 
                        "net.minecraft.tileentity.TileEntityBeacon.getStackInSlot" | 
                        "net.minecraft.tileentity.TileEntityBeacon.getSizeInventory" | 
                        "net.minecraft.tileentity.TileEntityBeacon.isUseableByPlayer" | 
                        "net.minecraft.tileentity.TileEntityBeacon.updateBeacon" | 
                        "net.minecraft.tileentity.TileEntityBeacon.removeStackFromSlot" | 
                        "net.minecraft.tileentity.TileEntityBeacon.getFieldCount" | 
                        "net.minecraft.tileentity.TileEntityBeacon.addEffectsToPlayers" | 
                        "net.minecraft.block.BlockGrass.getMetaFromState" | 
                        "net.minecraft.block.BlockGrass.getBlockLayer" | 
                        "net.minecraft.block.BlockGrass.getRenderColor" | 
                        "net.minecraft.block.BlockGrass.grow" | 
                        "net.minecraft.block.BlockGrass.createBlockState" | 
                        "net.minecraft.block.BlockGrass.colorMultiplier" | 
                        "net.minecraft.block.BlockGrass.updateTick" | 
                        "net.minecraft.block.BlockGrass.canUseBonemeal" | 
                        "net.minecraft.block.BlockGrass.getItemDropped" | 
                        "net.minecraft.block.BlockGrass.canGrow" | 
                        "net.minecraft.block.BlockGrass.getActualState" | 
                        "net.minecraft.block.BlockGrass.getBlockColor" | 
                        "org.cef.browser.lwjgl.CefRendererLwjgl.onPopupSize" | 
                        "org.cef.browser.lwjgl.CefRendererLwjgl.onPaint" | 
                        "org.cef.browser.lwjgl.CefRendererLwjgl.getPopupRectInWebView" | 
                        "org.cef.browser.lwjgl.CefRendererLwjgl.destroy" | 
                        "org.cef.browser.lwjgl.CefRendererLwjgl.finalize" | 
                        "org.cef.browser.lwjgl.CefRendererLwjgl.onPopupClosed" | 
                        "org.cef.browser.lwjgl.CefRendererLwjgl.initialize" | 
                        "org.cef.browser.lwjgl.CefRendererLwjgl.render" | 
                        "net.optifine.expr.IExpressionBool.eval" | 
                        "net.minecraft.enchantment.EnchantmentFishingSpeed.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentFishingSpeed.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentFishingSpeed.getMaxLevel" | 
                        "net.optifine.BlockPosM.offsetMutable" | 
                        "net.optifine.BlockPosM.getX" | 
                        "net.optifine.BlockPosM.set" | 
                        "net.optifine.BlockPosM.getY" | 
                        "net.optifine.BlockPosM.offset" | 
                        "net.optifine.BlockPosM.getZ" | 
                        "net.optifine.BlockPosM.setXyz" | 
                        "net.optifine.BlockPosM.update" | 
                        "net.optifine.BlockPosM.toImmutable" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.getItemCount" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.scroll" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.selectItem" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.renderItem" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.mouseEvent" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.getScrollbarPosition" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.ym" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.xm" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.width" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.renderBackground" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.getMaxPosition" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.renderList" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.render" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.getScroll" | 
                        "net.minecraft.realms.RealmsSimpleScrolledSelectionList.isSelectedItem" | 
                        "net.minecraft.client.particle.EntityAuraFX$Factory.getEntityFX" | 
                        "net.minecraft.client.particle.EntitySnowShovelFX.renderParticle" | 
                        "net.minecraft.client.particle.EntitySnowShovelFX.onUpdate" | 
                        "slice.font.FontManager.getFonts" | 
                        "slice.font.FontManager.getArialFont" | 
                        "slice.font.FontManager.getFont" | 
                        "slice.font.FontManager.createFont" | 
                        "slice.font.FontManager.getRobotoFont" | 
                        "slice.font.FontManager.getDefaultFont" | 
                        "net.optifine.http.FileDownloadThread.run" | 
                        "net.optifine.http.FileDownloadThread.getListener" | 
                        "net.optifine.http.FileDownloadThread.getUrlString" | 
                        "net.minecraft.client.audio.GuardianSound.update" | 
                        "net.minecraft.client.model.ModelHumanoidHead.setRotationAngles" | 
                        "net.minecraft.client.model.ModelHumanoidHead.render" | 
                        "net.optifine.entity.model.ModelAdapterEnderman.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterEnderman.makeEntityRender" | 
                        "net.minecraft.block.BlockStoneBrick.getMetaFromState" | 
                        "net.minecraft.block.BlockStoneBrick.damageDropped" | 
                        "net.minecraft.block.BlockStoneBrick.createBlockState" | 
                        "net.minecraft.block.BlockStoneBrick.getStateFromMeta" | 
                        "net.minecraft.block.BlockStoneBrick.getSubBlocks" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.ignite" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.getExplosionResistance" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.getFuseTicks" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.handleStatusUpdate" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.killMinecart" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.isIgnited" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.attackEntityFrom" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.fall" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.getMinecartType" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.verifyExplosion" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.onUpdate" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.onActivatorRailPass" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.getDefaultDisplayTile" | 
                        "net.minecraft.entity.item.EntityMinecartTNT.explodeCart" | 
                        "net.minecraft.client.gui.MapItemRenderer.renderMap" | 
                        "net.minecraft.client.gui.MapItemRenderer.updateMapTexture" | 
                        "net.minecraft.client.gui.MapItemRenderer.clearLoadedMaps" | 
                        "net.minecraft.client.gui.MapItemRenderer.getMapRendererInstance" | 
                        "net.minecraft.client.resources.FallbackResourceManager$InputStreamLeakedResourceLogger.read" | 
                        "net.minecraft.client.resources.FallbackResourceManager$InputStreamLeakedResourceLogger.finalize" | 
                        "net.minecraft.client.resources.FallbackResourceManager$InputStreamLeakedResourceLogger.close" | 
                        "net.optifine.util.SmoothFloat.getTimeLastMs" | 
                        "net.optifine.util.SmoothFloat.getValueLast" | 
                        "net.optifine.util.SmoothFloat.getTimeFadeDownSec" | 
                        "net.optifine.util.SmoothFloat.getSmoothValue" | 
                        "net.optifine.util.SmoothFloat.getTimeFadeUpSec" | 
                        "net.minecraft.block.BlockBasePressurePlate.isPassable" | 
                        "net.minecraft.block.BlockBasePressurePlate.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockBasePressurePlate.updateNeighbors" | 
                        "net.minecraft.block.BlockBasePressurePlate.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockBasePressurePlate.canBePlacedOn" | 
                        "net.minecraft.block.BlockBasePressurePlate.computeRedstoneStrength" | 
                        "net.minecraft.block.BlockBasePressurePlate.updateTick" | 
                        "net.minecraft.block.BlockBasePressurePlate.breakBlock" | 
                        "net.minecraft.block.BlockBasePressurePlate.setBlockBoundsForItemRender" | 
                        "net.minecraft.block.BlockBasePressurePlate.updateState" | 
                        "net.minecraft.block.BlockBasePressurePlate.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockBasePressurePlate.randomTick" | 
                        "net.minecraft.block.BlockBasePressurePlate.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockBasePressurePlate.getSensitiveAABB" | 
                        "net.minecraft.block.BlockBasePressurePlate.isFullCube" | 
                        "net.minecraft.block.BlockBasePressurePlate.tickRate" | 
                        "net.minecraft.block.BlockBasePressurePlate.canSpawnInBlock" | 
                        "net.minecraft.block.BlockBasePressurePlate.setBlockBoundsBasedOnState0" | 
                        "net.minecraft.block.BlockBasePressurePlate.getWeakPower" | 
                        "net.minecraft.block.BlockBasePressurePlate.getMobilityFlag" | 
                        "net.minecraft.block.BlockBasePressurePlate.onEntityCollidedWithBlock" | 
                        "net.minecraft.block.BlockBasePressurePlate.getRedstoneStrength" | 
                        "net.minecraft.block.BlockBasePressurePlate.setRedstoneStrength" | 
                        "net.minecraft.block.BlockBasePressurePlate.getStrongPower" | 
                        "net.minecraft.block.BlockBasePressurePlate.canProvidePower" | 
                        "net.minecraft.block.BlockBasePressurePlate.isOpaqueCube" | 
                        "net.minecraft.client.particle.EntityReddustFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityReddustFX.onUpdate" | 
                        "net.minecraft.world.gen.feature.WorldGenDoublePlant.generate" | 
                        "net.minecraft.world.gen.feature.WorldGenDoublePlant.setPlantType" | 
                        "net.optifine.shaders.uniform.ShaderParameterBool.getName" | 
                        "net.optifine.shaders.uniform.ShaderParameterBool.eval" | 
                        "net.optifine.shaders.uniform.ShaderParameterBool.getExpressionType" | 
                        "net.optifine.entity.model.ModelAdapterMinecart.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterMinecart.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterMinecart.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterMinecart.getModelRendererNames" | 
                        "net.minecraft.entity.ai.EntityLookHelper.updateRotation" | 
                        "net.minecraft.entity.ai.EntityLookHelper.onUpdateLook" | 
                        "net.minecraft.entity.ai.EntityLookHelper.setLookPositionWithEntity" | 
                        "net.minecraft.entity.ai.EntityLookHelper.getLookPosX" | 
                        "net.minecraft.entity.ai.EntityLookHelper.getLookPosY" | 
                        "net.minecraft.entity.ai.EntityLookHelper.getLookPosZ" | 
                        "net.minecraft.entity.ai.EntityLookHelper.getIsLooking" | 
                        "net.minecraft.entity.ai.EntityLookHelper.setLookPosition" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetContentDisposition" | 
                        "org.cef.callback.CefDownloadItem_N.isCanceled" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetFullPath" | 
                        "org.cef.callback.CefDownloadItem_N.getId" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetTotalBytes" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetStartTime" | 
                        "org.cef.callback.CefDownloadItem_N.getCurrentSpeed" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetMimeType" | 
                        "org.cef.callback.CefDownloadItem_N.getEndTime" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetEndTime" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetURL" | 
                        "org.cef.callback.CefDownloadItem_N.N_IsValid" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetId" | 
                        "org.cef.callback.CefDownloadItem_N.getStartTime" | 
                        "org.cef.callback.CefDownloadItem_N.isInProgress" | 
                        "org.cef.callback.CefDownloadItem_N.getTotalBytes" | 
                        "org.cef.callback.CefDownloadItem_N.getMimeType" | 
                        "org.cef.callback.CefDownloadItem_N.getFullPath" | 
                        "org.cef.callback.CefDownloadItem_N.N_IsCanceled" | 
                        "org.cef.callback.CefDownloadItem_N.isValid" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetSuggestedFileName" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetReceivedBytes" | 
                        "org.cef.callback.CefDownloadItem_N.getURL" | 
                        "org.cef.callback.CefDownloadItem_N.N_IsInProgress" | 
                        "org.cef.callback.CefDownloadItem_N.getSuggestedFileName" | 
                        "org.cef.callback.CefDownloadItem_N.getContentDisposition" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetCurrentSpeed" | 
                        "org.cef.callback.CefDownloadItem_N.N_IsComplete" | 
                        "org.cef.callback.CefDownloadItem_N.N_GetPercentComplete" | 
                        "org.cef.callback.CefDownloadItem_N.getReceivedBytes" | 
                        "org.cef.callback.CefDownloadItem_N.isComplete" | 
                        "org.cef.callback.CefDownloadItem_N.getPercentComplete" | 
                        "com.sliceclient.script.classloader.ScriptClassLoader.getScript" | 
                        "net.minecraft.entity.ai.EntityAIBeg.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIBeg.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIBeg.hasPlayerGotBoneInHand" | 
                        "net.minecraft.entity.ai.EntityAIBeg.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIBeg.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIBeg.continueExecuting" | 
                        "net.minecraft.block.IGrowable.grow" | 
                        "net.minecraft.block.IGrowable.canUseBonemeal" | 
                        "net.minecraft.block.IGrowable.canGrow" | 
                        "slice.gui.hud.legacy.arraylist.SmoothArrayListHUD.onToggle" | 
                        "slice.gui.hud.legacy.arraylist.SmoothArrayListHUD.lambda$tick$2" | 
                        "slice.gui.hud.legacy.arraylist.SmoothArrayListHUD.lambda$draw$1" | 
                        "slice.gui.hud.legacy.arraylist.SmoothArrayListHUD.tick" | 
                        "slice.gui.hud.legacy.arraylist.SmoothArrayListHUD.draw" | 
                        "net.optifine.expr.ExpressionParser.parseFloat" | 
                        "net.optifine.expr.ExpressionParser.makeFunction" | 
                        "net.optifine.expr.ExpressionParser.parseExpressions" | 
                        "net.optifine.expr.ExpressionParser.makeInfix" | 
                        "net.optifine.expr.ExpressionParser.parseBool" | 
                        "net.optifine.expr.ExpressionParser.parse" | 
                        "net.optifine.expr.ExpressionParser.makeBracketed" | 
                        "net.optifine.expr.ExpressionParser.parseInfix" | 
                        "net.optifine.expr.ExpressionParser.mergeOperators" | 
                        "net.optifine.expr.ExpressionParser.getFunctionType" | 
                        "net.optifine.expr.ExpressionParser.makeInfixFunc" | 
                        "net.optifine.expr.ExpressionParser.makeVariable" | 
                        "net.optifine.expr.ExpressionParser.parseExpression" | 
                        "net.minecraft.client.gui.inventory.GuiFurnace.getCookProgressScaled" | 
                        "net.minecraft.client.gui.inventory.GuiFurnace.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiFurnace.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiFurnace.getBurnLeftScaled" | 
                        "net.minecraft.block.BlockStandingSign.getMetaFromState" | 
                        "net.minecraft.block.BlockStandingSign.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockStandingSign.createBlockState" | 
                        "net.minecraft.block.BlockStandingSign.getStateFromMeta" | 
                        "net.minecraft.client.audio.SoundPoolEntry.getSoundPoolEntryLocation" | 
                        "net.minecraft.client.audio.SoundPoolEntry.getVolume" | 
                        "net.minecraft.client.audio.SoundPoolEntry.getPitch" | 
                        "net.minecraft.client.audio.SoundPoolEntry.setPitch" | 
                        "net.minecraft.client.audio.SoundPoolEntry.setVolume" | 
                        "net.minecraft.client.audio.SoundPoolEntry.isStreamingSound" | 
                        "net.minecraft.world.LockCode.getLock" | 
                        "net.minecraft.world.LockCode.toNBT" | 
                        "net.minecraft.world.LockCode.isEmpty" | 
                        "net.minecraft.client.renderer.block.model.ItemCameraTransforms.func_181687_c" | 
                        "net.minecraft.client.renderer.block.model.ItemCameraTransforms.applyTransform" | 
                        "net.minecraft.client.renderer.block.model.ItemCameraTransforms.getTransform" | 
                        "net.minecraft.block.BlockCarpet.getMetaFromState" | 
                        "net.minecraft.block.BlockCarpet.damageDropped" | 
                        "net.minecraft.block.BlockCarpet.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockCarpet.getMapColor" | 
                        "net.minecraft.block.BlockCarpet.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockCarpet.isFullCube" | 
                        "net.minecraft.block.BlockCarpet.setBlockBoundsFromMeta" | 
                        "net.minecraft.block.BlockCarpet.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockCarpet.canBlockStay" | 
                        "net.minecraft.block.BlockCarpet.getSubBlocks" | 
                        "net.minecraft.block.BlockCarpet.createBlockState" | 
                        "net.minecraft.block.BlockCarpet.getStateFromMeta" | 
                        "net.minecraft.block.BlockCarpet.isOpaqueCube" | 
                        "net.minecraft.block.BlockCarpet.setBlockBoundsForItemRender" | 
                        "net.minecraft.block.BlockCarpet.shouldSideBeRendered" | 
                        "net.minecraft.block.BlockCarpet.checkForDrop" | 
                        "net.minecraft.client.gui.ChatLine.getUpdatedCounter" | 
                        "net.minecraft.client.gui.ChatLine.getChatComponent" | 
                        "net.minecraft.client.gui.ChatLine.getChatLineID" | 
                        "net.optifine.shaders.uniform.ShaderUniforms.make3f" | 
                        "net.optifine.shaders.uniform.ShaderUniforms.reset" | 
                        "net.optifine.shaders.uniform.ShaderUniforms.make4f" | 
                        "net.optifine.shaders.uniform.ShaderUniforms.make1f" | 
                        "net.optifine.shaders.uniform.ShaderUniforms.make4i" | 
                        "net.optifine.shaders.uniform.ShaderUniforms.makeM4" | 
                        "net.optifine.shaders.uniform.ShaderUniforms.make2i" | 
                        "net.optifine.shaders.uniform.ShaderUniforms.setProgram" | 
                        "net.optifine.shaders.uniform.ShaderUniforms.make1i" | 
                        "net.minecraft.dispenser.ILocation.getWorld" | 
                        "net.minecraft.client.gui.GuiPageButtonList.getScrollBarX" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178069_s" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178062_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178066_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178065_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178060_e" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178061_c" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178063_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178058_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178068_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178071_h" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178067_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178059_e" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178056_g" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178057_f" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_181155_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList.getSize" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_181156_c" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178064_i" | 
                        "net.minecraft.client.gui.GuiPageButtonList.getListWidth" | 
                        "net.minecraft.client.gui.GuiPageButtonList.mouseClicked" | 
                        "net.minecraft.client.gui.GuiPageButtonList.getListEntry" | 
                        "net.minecraft.client.gui.GuiPageButtonList.func_178055_t" | 
                        "net.minecraft.block.BlockTrapDoor$DoorHalf.getName" | 
                        "net.minecraft.block.BlockTrapDoor$DoorHalf.toString" | 
                        "net.minecraft.network.INetHandler.onDisconnect" | 
                        "net.minecraft.util.TupleIntJsonSerializable.setIntegerValue" | 
                        "net.minecraft.util.TupleIntJsonSerializable.getIntegerValue" | 
                        "net.minecraft.util.TupleIntJsonSerializable.setJsonSerializableValue" | 
                        "net.minecraft.util.TupleIntJsonSerializable.getJsonSerializableValue" | 
                        "net.minecraft.client.renderer.entity.RenderHorse.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderHorse.func_110848_b" | 
                        "net.minecraft.client.renderer.entity.RenderHorse.getEntityTexture" | 
                        "net.minecraft.entity.NpcMerchant.setRecipes" | 
                        "net.minecraft.entity.NpcMerchant.setCustomer" | 
                        "net.minecraft.entity.NpcMerchant.getDisplayName" | 
                        "net.minecraft.entity.NpcMerchant.verifySellingItem" | 
                        "net.minecraft.entity.NpcMerchant.useRecipe" | 
                        "net.minecraft.entity.NpcMerchant.getRecipes" | 
                        "net.minecraft.entity.NpcMerchant.getCustomer" | 
                        "net.minecraft.nbt.JsonToNBT$List.parse" | 
                        "net.minecraft.command.server.CommandListBans.canCommandSenderUseCommand" | 
                        "net.minecraft.command.server.CommandListBans.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandListBans.getCommandUsage" | 
                        "net.minecraft.command.server.CommandListBans.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandListBans.processCommand" | 
                        "net.minecraft.command.server.CommandListBans.getCommandName" | 
                        "net.minecraft.inventory.InventoryBasic.decrStackSize" | 
                        "net.minecraft.inventory.InventoryBasic.openInventory" | 
                        "net.minecraft.inventory.InventoryBasic.setField" | 
                        "net.minecraft.inventory.InventoryBasic.getName" | 
                        "net.minecraft.inventory.InventoryBasic.markDirty" | 
                        "net.minecraft.inventory.InventoryBasic.setCustomName" | 
                        "net.minecraft.inventory.InventoryBasic.clear" | 
                        "net.minecraft.inventory.InventoryBasic.getField" | 
                        "net.minecraft.inventory.InventoryBasic.getStackInSlot" | 
                        "net.minecraft.inventory.InventoryBasic.setInventorySlotContents" | 
                        "net.minecraft.inventory.InventoryBasic.closeInventory" | 
                        "net.minecraft.inventory.InventoryBasic.func_174894_a" | 
                        "net.minecraft.inventory.InventoryBasic.getInventoryStackLimit" | 
                        "net.minecraft.inventory.InventoryBasic.getSizeInventory" | 
                        "net.minecraft.inventory.InventoryBasic.getDisplayName" | 
                        "net.minecraft.inventory.InventoryBasic.isUseableByPlayer" | 
                        "net.minecraft.inventory.InventoryBasic.addInventoryChangeListener" | 
                        "net.minecraft.inventory.InventoryBasic.hasCustomName" | 
                        "net.minecraft.inventory.InventoryBasic.removeStackFromSlot" | 
                        "net.minecraft.inventory.InventoryBasic.getFieldCount" | 
                        "net.minecraft.inventory.InventoryBasic.removeInventoryChangeListener" | 
                        "net.minecraft.inventory.InventoryBasic.isItemValidForSlot" | 
                        "net.minecraft.client.util.JsonException.getMessage" | 
                        "net.minecraft.client.util.JsonException.func_151380_a" | 
                        "net.minecraft.client.util.JsonException.func_151381_b" | 
                        "net.minecraft.command.server.CommandSaveAll.getCommandUsage" | 
                        "net.minecraft.command.server.CommandSaveAll.processCommand" | 
                        "net.minecraft.command.server.CommandSaveAll.getCommandName" | 
                        "net.optifine.http.IFileDownloadListener.fileDownloadFinished" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers$ServerList.elementClicked" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers$ServerList.getSize" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers$ServerList.getScrollBarX" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers$ServerList.drawSlot" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers$ServerList.drawBackground" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers$ServerList.isSelected" | 
                        "net.minecraft.client.particle.EntitySpellParticleFX$Factory.getEntityFX" | 
                        "net.minecraft.client.renderer.entity.RenderLightningBolt.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderLightningBolt.getEntityTexture" | 
                        "net.minecraft.entity.ai.EntityAIMoveThroughVillage.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIMoveThroughVillage.findNearestDoor" | 
                        "net.minecraft.entity.ai.EntityAIMoveThroughVillage.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIMoveThroughVillage.resizeDoorList" | 
                        "net.minecraft.entity.ai.EntityAIMoveThroughVillage.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIMoveThroughVillage.doesDoorListContain" | 
                        "net.minecraft.entity.ai.EntityAIMoveThroughVillage.continueExecuting" | 
                        "net.optifine.player.PlayerItemRenderer.getModelRenderer" | 
                        "net.optifine.player.PlayerItemRenderer.render" | 
                        "net.minecraft.block.BlockSapling.getMetaFromState" | 
                        "net.minecraft.block.BlockSapling.grow" | 
                        "net.minecraft.block.BlockSapling.damageDropped" | 
                        "net.minecraft.block.BlockSapling.isTypeAt" | 
                        "net.minecraft.block.BlockSapling.getSubBlocks" | 
                        "net.minecraft.block.BlockSapling.func_181624_a" | 
                        "net.minecraft.block.BlockSapling.getLocalizedName" | 
                        "net.minecraft.block.BlockSapling.createBlockState" | 
                        "net.minecraft.block.BlockSapling.getStateFromMeta" | 
                        "net.minecraft.block.BlockSapling.updateTick" | 
                        "net.minecraft.block.BlockSapling.canUseBonemeal" | 
                        "net.minecraft.block.BlockSapling.canGrow" | 
                        "net.minecraft.block.BlockSapling.generateTree" | 
                        "net.optifine.entity.model.ModelAdapterBoat.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterBoat.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterBoat.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterBoat.getModelRendererNames" | 
                        "net.minecraft.enchantment.EnchantmentHelper$IModifier.calculateModifier" | 
                        "org.cef.CefApp$CefVersion.getChromeVersion" | 
                        "org.cef.CefApp$CefVersion.getCefVersion" | 
                        "org.cef.CefApp$CefVersion.toString" | 
                        "org.cef.CefApp$CefVersion.getJcefVersion" | 
                        "net.minecraft.client.gui.spectator.categories.SpectatorDetails.func_178680_a" | 
                        "net.minecraft.client.gui.spectator.categories.SpectatorDetails.func_178681_b" | 
                        "net.minecraft.client.renderer.entity.RenderWither.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderWither.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderWither.getEntityTexture" | 
                        "slice.legacy.clickgui.setting.SettingComponent.getParent" | 
                        "slice.legacy.clickgui.setting.SettingComponent.setY" | 
                        "slice.legacy.clickgui.setting.SettingComponent.setX" | 
                        "slice.legacy.clickgui.setting.SettingComponent.getText" | 
                        "slice.legacy.clickgui.setting.SettingComponent.draw" | 
                        "slice.legacy.clickgui.setting.SettingComponent.getWidth" | 
                        "slice.legacy.clickgui.setting.SettingComponent.setWidth" | 
                        "slice.legacy.clickgui.setting.SettingComponent.setHeight" | 
                        "slice.legacy.clickgui.setting.SettingComponent.mouseReleased" | 
                        "slice.legacy.clickgui.setting.SettingComponent.getX" | 
                        "slice.legacy.clickgui.setting.SettingComponent.getHeight" | 
                        "slice.legacy.clickgui.setting.SettingComponent.getY" | 
                        "slice.legacy.clickgui.setting.SettingComponent.setSetting" | 
                        "slice.legacy.clickgui.setting.SettingComponent.getSetting" | 
                        "slice.legacy.clickgui.setting.SettingComponent.mouseClicked" | 
                        "slice.legacy.clickgui.setting.SettingComponent.setParent" | 
                        "slice.legacy.clickgui.setting.SettingComponent.setText" | 
                        "net.minecraft.block.BlockFalling.onStartFalling" | 
                        "net.minecraft.block.BlockFalling.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockFalling.checkFallable" | 
                        "net.minecraft.block.BlockFalling.onEndFalling" | 
                        "net.minecraft.block.BlockFalling.updateTick" | 
                        "net.minecraft.block.BlockFalling.onBlockAdded" | 
                        "net.minecraft.block.BlockFalling.tickRate" | 
                        "net.minecraft.enchantment.EnchantmentHelper$ModifierDamage.calculateModifier" | 
                        "net.minecraft.util.Timer.updateTimer" | 
                        "net.optifine.entity.model.ModelAdapterWitch.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterWitch.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterWitch.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterWitch.getModelRendererNames" | 
                        "net.minecraft.command.CommandStats.func_175776_d" | 
                        "net.minecraft.command.CommandStats.isUsernameIndex" | 
                        "net.minecraft.command.CommandStats.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandStats.getCommandUsage" | 
                        "net.minecraft.command.CommandStats.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandStats.processCommand" | 
                        "net.minecraft.command.CommandStats.getCommandName" | 
                        "net.minecraft.command.CommandStats.func_175777_e" | 
                        "net.minecraft.entity.DataWatcher$WatchableObject.getObject" | 
                        "net.minecraft.entity.DataWatcher$WatchableObject.getDataValueId" | 
                        "net.minecraft.entity.DataWatcher$WatchableObject.setWatched" | 
                        "net.minecraft.entity.DataWatcher$WatchableObject.getObjectType" | 
                        "net.minecraft.entity.DataWatcher$WatchableObject.isWatched" | 
                        "net.minecraft.entity.DataWatcher$WatchableObject.setObject" | 
                        "org.cef.handler.CefRequestContextHandlerAdapter.getResourceRequestHandler" | 
                        "net.minecraft.client.renderer.entity.RenderLiving.interpolateValue" | 
                        "net.minecraft.client.renderer.entity.RenderLiving.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderLiving.canRenderName" | 
                        "net.minecraft.client.renderer.entity.RenderLiving.setLightmap" | 
                        "net.minecraft.client.renderer.entity.RenderLiving.shouldRender" | 
                        "net.minecraft.client.renderer.entity.RenderLiving.renderLeash" | 
                        "net.optifine.gui.IOptionControl.getOption" | 
                        "net.optifine.render.GlAlphaState.setFuncRef" | 
                        "net.optifine.render.GlAlphaState.setEnabled" | 
                        "net.optifine.render.GlAlphaState.getRef" | 
                        "net.optifine.render.GlAlphaState.getFunc" | 
                        "net.optifine.render.GlAlphaState.setDisabled" | 
                        "net.optifine.render.GlAlphaState.isEnabled" | 
                        "net.optifine.render.GlAlphaState.setState" | 
                        "net.optifine.render.GlAlphaState.toString" | 
                        "net.minecraft.world.gen.feature.WorldGeneratorBonusChest.generate" | 
                        "net.minecraft.world.gen.feature.WorldGenFlowers.setGeneratedBlock" | 
                        "net.minecraft.world.gen.feature.WorldGenFlowers.generate" | 
                        "net.minecraft.client.renderer.Tessellator.getWorldRenderer" | 
                        "net.minecraft.client.renderer.Tessellator.draw" | 
                        "net.minecraft.block.BlockTNT.getMetaFromState" | 
                        "net.minecraft.block.BlockTNT.onBlockDestroyedByPlayer" | 
                        "net.minecraft.block.BlockTNT.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockTNT.onBlockDestroyedByExplosion" | 
                        "net.minecraft.block.BlockTNT.onBlockActivated" | 
                        "net.minecraft.block.BlockTNT.createBlockState" | 
                        "net.minecraft.block.BlockTNT.onEntityCollidedWithBlock" | 
                        "net.minecraft.block.BlockTNT.explode" | 
                        "net.minecraft.block.BlockTNT.getStateFromMeta" | 
                        "net.minecraft.block.BlockTNT.canDropFromExplosion" | 
                        "net.minecraft.block.BlockTNT.onBlockAdded" | 
                        "net.minecraft.client.renderer.entity.layers.LayerEnderDragonEyes.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerEnderDragonEyes.shouldCombineTextures" | 
                        "net.minecraft.entity.ai.EntityAIVillagerInteract.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIVillagerInteract.startExecuting" | 
                        "org.cef.callback.CefPrintJobCallback.Continue" | 
                        "net.minecraft.world.biome.BiomeGenMutated.decorate" | 
                        "net.minecraft.world.biome.BiomeGenMutated.genTerrainBlocks" | 
                        "net.minecraft.world.biome.BiomeGenMutated.genBigTreeChance" | 
                        "net.minecraft.world.biome.BiomeGenMutated.getTempCategory" | 
                        "net.minecraft.world.biome.BiomeGenMutated.getGrassColorAtPos" | 
                        "net.minecraft.world.biome.BiomeGenMutated.getBiomeClass" | 
                        "net.minecraft.world.biome.BiomeGenMutated.getSpawningChance" | 
                        "net.minecraft.world.biome.BiomeGenMutated.getFoliageColorAtPos" | 
                        "net.minecraft.world.biome.BiomeGenMutated.isEqualTo" | 
                        "org.cef.scheme.SchemeResourceHandler.readResponse" | 
                        "org.cef.scheme.SchemeResourceHandler.getResponseHeaders" | 
                        "org.cef.scheme.SchemeResourceHandler.processRequest" | 
                        "org.cef.network.CefPostDataElement_N.N_GetFile" | 
                        "org.cef.network.CefPostDataElement_N.setToFile" | 
                        "org.cef.network.CefPostDataElement_N.N_Dispose" | 
                        "org.cef.network.CefPostDataElement_N.setToEmpty" | 
                        "org.cef.network.CefPostDataElement_N.N_SetToEmpty" | 
                        "org.cef.network.CefPostDataElement_N.getFile" | 
                        "org.cef.network.CefPostDataElement_N.N_IsReadOnly" | 
                        "org.cef.network.CefPostDataElement_N.getBytes" | 
                        "org.cef.network.CefPostDataElement_N.getBytesCount" | 
                        "org.cef.network.CefPostDataElement_N.setNativeRef" | 
                        "org.cef.network.CefPostDataElement_N.getNativeRef" | 
                        "org.cef.network.CefPostDataElement_N.isReadOnly" | 
                        "org.cef.network.CefPostDataElement_N.N_GetBytesCount" | 
                        "org.cef.network.CefPostDataElement_N.getType" | 
                        "org.cef.network.CefPostDataElement_N.N_SetToFile" | 
                        "org.cef.network.CefPostDataElement_N.N_GetType" | 
                        "org.cef.network.CefPostDataElement_N.setToBytes" | 
                        "org.cef.network.CefPostDataElement_N.N_SetToBytes" | 
                        "org.cef.network.CefPostDataElement_N.dispose" | 
                        "org.cef.network.CefPostDataElement_N.N_GetBytes" | 
                        "net.minecraft.item.crafting.FurnaceRecipes.getSmeltingList" | 
                        "net.minecraft.item.crafting.FurnaceRecipes.getSmeltingResult" | 
                        "net.minecraft.item.crafting.FurnaceRecipes.addSmeltingRecipe" | 
                        "net.minecraft.item.crafting.FurnaceRecipes.compareItemStacks" | 
                        "net.minecraft.item.crafting.FurnaceRecipes.getSmeltingExperience" | 
                        "net.minecraft.item.crafting.FurnaceRecipes.addSmelting" | 
                        "net.minecraft.item.crafting.FurnaceRecipes.addSmeltingRecipeForBlock" | 
                        "net.minecraft.item.Item$ToolMaterial.getEnchantability" | 
                        "net.minecraft.item.Item$ToolMaterial.getEfficiencyOnProperMaterial" | 
                        "net.minecraft.item.Item$ToolMaterial.getMaxUses" | 
                        "net.minecraft.item.Item$ToolMaterial.getHarvestLevel" | 
                        "net.minecraft.item.Item$ToolMaterial.getRepairItem" | 
                        "net.minecraft.item.Item$ToolMaterial.getDamageVsEntity" | 
                        "net.minecraftforge.client.model.pipeline.IVertexProducer.pipe" | 
                        "net.minecraft.world.gen.layer.GenLayerRemoveTooMuchOcean.getInts" | 
                        "net.minecraft.client.particle.EntityRainFX$Factory.getEntityFX" | 
                        "net.minecraft.command.CommandBlockData.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandBlockData.getCommandUsage" | 
                        "net.minecraft.command.CommandBlockData.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandBlockData.processCommand" | 
                        "net.minecraft.command.CommandBlockData.getCommandName" | 
                        "net.minecraft.entity.monster.EntitySlime$AISlimeFloat.updateTask" | 
                        "net.minecraft.entity.monster.EntitySlime$AISlimeFloat.shouldExecute" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Holder.rotate" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Holder.getHeight" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Holder.setNewDimension" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Holder.toString" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Holder.compareTo" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Holder.getWidth" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Holder.isRotated" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Holder.getAtlasSprite" | 
                        "net.minecraft.util.ThreadSafeBoundList.func_152757_a" | 
                        "net.minecraft.util.ThreadSafeBoundList.func_152756_c" | 
                        "net.minecraft.util.ThreadSafeBoundList.func_152758_b" | 
                        "net.minecraft.client.particle.EntityCrit2FX.renderParticle" | 
                        "net.minecraft.client.particle.EntityCrit2FX.onUpdate" | 
                        "net.minecraft.pathfinding.PathPoint.isAssigned" | 
                        "net.minecraft.pathfinding.PathPoint.distanceToSquared" | 
                        "net.minecraft.pathfinding.PathPoint.hashCode" | 
                        "net.minecraft.pathfinding.PathPoint.equals" | 
                        "net.minecraft.pathfinding.PathPoint.toString" | 
                        "net.minecraft.pathfinding.PathPoint.distanceTo" | 
                        "slice.event.events.EventChatMessage.getChatComponent" | 
                        "slice.event.events.EventChatMessage.getFormattedMessage" | 
                        "slice.event.events.EventChatMessage.setChatComponent" | 
                        "slice.event.events.EventChatMessage.getUnformattedMessage" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld.func_146375_g" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld.actionPerformed" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld.func_146383_a" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld.initGui" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld.drawScreen" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld.func_146382_i" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld.func_146384_e" | 
                        "net.minecraft.command.CommandSetPlayerTimeout.getCommandUsage" | 
                        "net.minecraft.command.CommandSetPlayerTimeout.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandSetPlayerTimeout.processCommand" | 
                        "net.minecraft.command.CommandSetPlayerTimeout.getCommandName" | 
                        "net.optifine.DynamicLightsMap.size" | 
                        "net.optifine.DynamicLightsMap.get" | 
                        "net.optifine.DynamicLightsMap.valueList" | 
                        "net.optifine.DynamicLightsMap.clear" | 
                        "net.optifine.DynamicLightsMap.remove" | 
                        "net.optifine.DynamicLightsMap.put" | 
                        "net.optifine.DynamicLightsMap.setDirty" | 
                        "net.minecraft.client.renderer.VboRenderList.renderChunkLayer" | 
                        "net.minecraft.client.renderer.VboRenderList.preRenderRegion" | 
                        "net.minecraft.client.renderer.VboRenderList.drawRegion" | 
                        "net.minecraft.client.renderer.VboRenderList.initialize" | 
                        "net.minecraft.client.renderer.VboRenderList.setupArrayPointers" | 
                        "net.minecraft.entity.monster.EntityBlaze$AIFireballAttack.updateTask" | 
                        "net.minecraft.entity.monster.EntityBlaze$AIFireballAttack.resetTask" | 
                        "net.minecraft.entity.monster.EntityBlaze$AIFireballAttack.shouldExecute" | 
                        "net.minecraft.entity.monster.EntityBlaze$AIFireballAttack.startExecuting" | 
                        "net.minecraft.item.crafting.RecipesTools.addRecipes" | 
                        "net.minecraft.world.biome.BiomeGenOcean.genTerrainBlocks" | 
                        "net.minecraft.world.biome.BiomeGenOcean.getTempCategory" | 
                        "org.cef.CefApp.N_GetVersion" | 
                        "org.cef.CefApp.clientWasDisposed" | 
                        "org.cef.CefApp.clearSchemeHandlerFactories" | 
                        "org.cef.CefApp.N_Shutdown" | 
                        "org.cef.CefApp.doMessageLoopWork" | 
                        "org.cef.CefApp.N_DoMessageLoopWork" | 
                        "org.cef.CefApp.handleBeforeTerminate" | 
                        "org.cef.CefApp.N_ClearSchemeHandlerFactories" | 
                        "org.cef.CefApp.getVersion" | 
                        "org.cef.CefApp.createClient" | 
                        "org.cef.CefApp.registerSchemeHandlerFactory" | 
                        "org.cef.CefApp.N_PreInitialize" | 
                        "org.cef.CefApp.setSettings" | 
                        "org.cef.CefApp.dispose" | 
                        "org.cef.CefApp.initialize" | 
                        "org.cef.CefApp.N_Initialize" | 
                        "org.cef.CefApp.shutdown" | 
                        "org.cef.CefApp.N_RegisterSchemeHandlerFactory" | 
                        "net.minecraft.entity.ai.EntityAIHarvestFarmland.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIHarvestFarmland.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIHarvestFarmland.shouldMoveTo" | 
                        "net.minecraft.entity.ai.EntityAIHarvestFarmland.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIHarvestFarmland.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIHarvestFarmland.continueExecuting" | 
                        "net.minecraft.entity.ai.EntityAIHurtByTarget.setEntityAttackTarget" | 
                        "net.minecraft.entity.ai.EntityAIHurtByTarget.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIHurtByTarget.startExecuting" | 
                        "net.optifine.shaders.CustomTextureRaw.getTarget" | 
                        "net.optifine.shaders.CustomTextureRaw.deleteTexture" | 
                        "net.optifine.shaders.CustomTextureRaw.getTextureId" | 
                        "net.optifine.shaders.CustomTextureRaw.getTextureUnit" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$PieceWeight.canSpawnMoreVillagePiecesOfType" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$PieceWeight.canSpawnMoreVillagePieces" | 
                        "net.minecraft.world.gen.feature.WorldGenVines.generate" | 
                        "net.optifine.shaders.ShaderPackZip.hasDirectory" | 
                        "net.optifine.shaders.ShaderPackZip.getName" | 
                        "net.optifine.shaders.ShaderPackZip.resolveRelative" | 
                        "net.optifine.shaders.ShaderPackZip.getResourceAsStream" | 
                        "net.optifine.shaders.ShaderPackZip.close" | 
                        "net.optifine.shaders.ShaderPackZip.detectBaseFolder" | 
                        "net.minecraft.block.BlockFence.getMetaFromState" | 
                        "net.minecraft.block.BlockFence.canConnectTo" | 
                        "net.minecraft.block.BlockFence.isPassable" | 
                        "net.minecraft.block.BlockFence.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockFence.onBlockActivated" | 
                        "net.minecraft.block.BlockFence.createBlockState" | 
                        "net.minecraft.block.BlockFence.addCollisionBoxesToList" | 
                        "net.minecraft.block.BlockFence.isFullCube" | 
                        "net.minecraft.block.BlockFence.isOpaqueCube" | 
                        "net.minecraft.block.BlockFence.getActualState" | 
                        "net.minecraft.block.BlockFence.shouldSideBeRendered" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.renderRightArm" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.renderLivingAt" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.transformHeldFull3DItemLayer" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.setModelVisibilities" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.rotateCorpse" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.renderOffsetLivingLabel" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.getMainModel" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.renderLeftArm" | 
                        "net.minecraft.client.renderer.entity.RenderPlayer.getEntityTexture" | 
                        "net.minecraft.client.renderer.entity.layers.LayerHeldItemWitch.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerHeldItemWitch.shouldCombineTextures" | 
                        "net.minecraft.block.BlockPane.getMetaFromState" | 
                        "net.minecraft.block.BlockPane.getBlockLayer" | 
                        "net.minecraft.block.BlockPane.canSilkHarvest" | 
                        "net.minecraft.block.BlockPane.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockPane.isFullCube" | 
                        "net.minecraft.block.BlockPane.getActualState" | 
                        "net.minecraft.block.BlockPane.createBlockState" | 
                        "net.minecraft.block.BlockPane.addCollisionBoxesToList" | 
                        "net.minecraft.block.BlockPane.canPaneConnectToBlock" | 
                        "net.minecraft.block.BlockPane.isOpaqueCube" | 
                        "net.minecraft.block.BlockPane.getItemDropped" | 
                        "net.minecraft.block.BlockPane.setBlockBoundsForItemRender" | 
                        "net.minecraft.block.BlockPane.shouldSideBeRendered" | 
                        "net.minecraft.dispenser.IBlockSource.getBlockPos" | 
                        "net.minecraft.dispenser.IBlockSource.getX" | 
                        "net.minecraft.dispenser.IBlockSource.getY" | 
                        "net.minecraft.dispenser.IBlockSource.getZ" | 
                        "net.minecraft.dispenser.IBlockSource.getBlockTileEntity" | 
                        "net.minecraft.dispenser.IBlockSource.getBlockMetadata" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$DesertPyramid.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$DesertPyramid.addComponentParts" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$DesertPyramid.writeStructureToNBT" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsItem.func_148210_b" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsItem.drawListHeader" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsItem.drawSlot" | 
                        "net.minecraft.entity.boss.IBossDisplayData.getMaxHealth" | 
                        "net.minecraft.entity.boss.IBossDisplayData.getDisplayName" | 
                        "net.minecraft.entity.boss.IBossDisplayData.getHealth" | 
                        "net.minecraft.client.model.ModelSilverfish.setRotationAngles" | 
                        "net.minecraft.client.model.ModelSilverfish.render" | 
                        "net.minecraft.world.gen.structure.MapGenStronghold.getCoordList" | 
                        "net.minecraft.world.gen.structure.MapGenStronghold.getStructureStart" | 
                        "net.minecraft.world.gen.structure.MapGenStronghold.canSpawnStructureAtCoords" | 
                        "net.minecraft.world.gen.structure.MapGenStronghold.getStructureName" | 
                        "net.minecraft.world.gen.structure.MapGenVillage$Start.readFromNBT" | 
                        "net.minecraft.world.gen.structure.MapGenVillage$Start.isSizeableStructure" | 
                        "net.minecraft.world.gen.structure.MapGenVillage$Start.writeToNBT" | 
                        "net.minecraft.world.NextTickListEntry.getBlock" | 
                        "net.minecraft.world.NextTickListEntry.hashCode" | 
                        "net.minecraft.world.NextTickListEntry.equals" | 
                        "net.minecraft.world.NextTickListEntry.setScheduledTime" | 
                        "net.minecraft.world.NextTickListEntry.toString" | 
                        "net.minecraft.world.NextTickListEntry.compareTo" | 
                        "net.minecraft.world.NextTickListEntry.setPriority" | 
                        "net.optifine.entity.model.ModelAdapterGhast.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterGhast.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterGhast.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterGhast.getModelRendererNames" | 
                        "net.minecraft.world.gen.feature.WorldGenSpikes.generate" | 
                        "net.minecraft.client.particle.EntityBreakingFX$SlimeFactory.getEntityFX" | 
                        "net.optifine.player.PlayerItemModel.getTextureLocation" | 
                        "net.optifine.player.PlayerItemModel.setTextureImage" | 
                        "net.optifine.player.PlayerItemModel.getTextureImage" | 
                        "net.optifine.player.PlayerItemModel.setTextureLocation" | 
                        "net.optifine.player.PlayerItemModel.render" | 
                        "net.optifine.player.PlayerItemModel.getTexture" | 
                        "net.optifine.player.PlayerItemModel.isUsePlayerTexture" | 
                        "net.minecraft.client.audio.MovingSoundMinecartRiding.update" | 
                        "net.minecraft.world.gen.feature.WorldGenHellLava.generate" | 
                        "net.minecraft.world.gen.layer.GenLayerZoom.getInts" | 
                        "net.minecraft.world.gen.layer.GenLayerZoom.selectRandom2" | 
                        "net.minecraft.block.BlockMobSpawner.getBlockLayer" | 
                        "net.minecraft.block.BlockMobSpawner.quantityDropped" | 
                        "net.minecraft.block.BlockMobSpawner.createNewTileEntity" | 
                        "net.minecraft.block.BlockMobSpawner.getItem" | 
                        "net.minecraft.block.BlockMobSpawner.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockMobSpawner.getRenderType" | 
                        "net.minecraft.block.BlockMobSpawner.isOpaqueCube" | 
                        "net.minecraft.block.BlockMobSpawner.getItemDropped" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel.isAmbientOcclusion" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel.getItemCameraTransforms" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel.getGeneralQuads" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel.isGui3d" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel.getAlternativeModel" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel.isBuiltInRenderer" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel.getFaceQuads" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel.getParticleTexture" | 
                        "net.minecraft.client.renderer.entity.RenderEntity.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderEntity.getEntityTexture" | 
                        "net.minecraft.nbt.NBTTagShort.getByte" | 
                        "net.minecraft.nbt.NBTTagShort.read" | 
                        "net.minecraft.nbt.NBTTagShort.getShort" | 
                        "net.minecraft.nbt.NBTTagShort.getDouble" | 
                        "net.minecraft.nbt.NBTTagShort.getId" | 
                        "net.minecraft.nbt.NBTTagShort.getFloat" | 
                        "net.minecraft.nbt.NBTTagShort.getLong" | 
                        "net.minecraft.nbt.NBTTagShort.getInt" | 
                        "net.minecraft.nbt.NBTTagShort.hashCode" | 
                        "net.minecraft.nbt.NBTTagShort.equals" | 
                        "net.minecraft.nbt.NBTTagShort.toString" | 
                        "net.minecraft.nbt.NBTTagShort.copy" | 
                        "net.minecraft.nbt.NBTTagShort.write" | 
                        "net.optifine.CustomSkyLayer.parseWeatherList" | 
                        "net.optifine.CustomSkyLayer.parseAxis" | 
                        "net.optifine.CustomSkyLayer.parseFloat" | 
                        "net.optifine.CustomSkyLayer.renderSide" | 
                        "net.optifine.CustomSkyLayer.isValid" | 
                        "net.optifine.CustomSkyLayer.parseBoolean" | 
                        "net.optifine.CustomSkyLayer.getPositionBrightness" | 
                        "net.optifine.CustomSkyLayer.normalizeTime" | 
                        "net.optifine.CustomSkyLayer.isActive" | 
                        "net.optifine.CustomSkyLayer.getFadeBrightness" | 
                        "net.optifine.CustomSkyLayer.timeBetween" | 
                        "net.optifine.CustomSkyLayer.getWeatherBrightness" | 
                        "net.optifine.CustomSkyLayer.toString" | 
                        "net.optifine.CustomSkyLayer.getPositionBrightnessRaw" | 
                        "net.optifine.CustomSkyLayer.render" | 
                        "net.optifine.CustomSkyLayer.parseTime" | 
                        "com.sliceclient.anticheat.manager.AntiCheatEventManager.unregister" | 
                        "com.sliceclient.anticheat.manager.AntiCheatEventManager.runEvent" | 
                        "com.sliceclient.anticheat.manager.AntiCheatEventManager.getRegisteredObjects" | 
                        "com.sliceclient.anticheat.manager.AntiCheatEventManager.register" | 
                        "net.minecraft.client.renderer.block.model.BreakingFour.remapVert" | 
                        "net.minecraft.client.renderer.block.model.BreakingFour.remapQuad" | 
                        "net.minecraft.block.BlockRedstoneComparator$Mode.getName" | 
                        "net.minecraft.block.BlockRedstoneComparator$Mode.toString" | 
                        "com.sliceclient.anticheat.check.checks.misc.badpackets.BadPacketsA.onPlayerUpdate" | 
                        "net.minecraft.entity.ai.EntityAIOcelotSit.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIOcelotSit.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIOcelotSit.shouldMoveTo" | 
                        "net.minecraft.entity.ai.EntityAIOcelotSit.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIOcelotSit.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIOcelotSit.continueExecuting" | 
                        "net.minecraft.block.BlockNetherBrick.getMapColor" | 
                        "net.minecraft.world.GameRules$Value.getInt" | 
                        "net.minecraft.world.GameRules$Value.getType" | 
                        "net.minecraft.world.GameRules$Value.setValue" | 
                        "net.minecraft.world.GameRules$Value.getBoolean" | 
                        "net.minecraft.world.GameRules$Value.getString" | 
                        "net.minecraft.client.particle.MobAppearance$Factory.getEntityFX" | 
                        "net.minecraft.client.gui.inventory.GuiDispenser.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiDispenser.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.entity.projectile.EntitySmallFireball.canBeCollidedWith" | 
                        "net.minecraft.entity.projectile.EntitySmallFireball.attackEntityFrom" | 
                        "net.minecraft.entity.projectile.EntitySmallFireball.onImpact" | 
                        "net.minecraft.block.BlockEndPortal.randomDisplayTick" | 
                        "net.minecraft.block.BlockEndPortal.getMapColor" | 
                        "net.minecraft.block.BlockEndPortal.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockEndPortal.quantityDropped" | 
                        "net.minecraft.block.BlockEndPortal.onEntityCollidedWithBlock" | 
                        "net.minecraft.block.BlockEndPortal.createNewTileEntity" | 
                        "net.minecraft.block.BlockEndPortal.addCollisionBoxesToList" | 
                        "net.minecraft.block.BlockEndPortal.isFullCube" | 
                        "net.minecraft.block.BlockEndPortal.getItem" | 
                        "net.minecraft.block.BlockEndPortal.isOpaqueCube" | 
                        "net.minecraft.block.BlockEndPortal.shouldSideBeRendered" | 
                        "org.cef.ccbluex.GuiView.handleKeyboardInput" | 
                        "org.cef.ccbluex.GuiView.getPressedKeyMap" | 
                        "org.cef.ccbluex.GuiView.getPage" | 
                        "org.cef.ccbluex.GuiView.setTransparent" | 
                        "org.cef.ccbluex.GuiView.lambda$null$0" | 
                        "org.cef.ccbluex.GuiView.keyModifiers" | 
                        "org.cef.ccbluex.GuiView.mouseReleased" | 
                        "org.cef.ccbluex.GuiView.mouseModifiers" | 
                        "org.cef.ccbluex.GuiView.getCefRenderer" | 
                        "org.cef.ccbluex.GuiView.getMouseClickX" | 
                        "org.cef.ccbluex.GuiView.isTransparent" | 
                        "org.cef.ccbluex.GuiView.drawScreen" | 
                        "org.cef.ccbluex.GuiView.setPressedKeyMap" | 
                        "org.cef.ccbluex.GuiView.setPage" | 
                        "org.cef.ccbluex.GuiView.init" | 
                        "org.cef.ccbluex.GuiView.setCefRenderer" | 
                        "org.cef.ccbluex.GuiView.doesGuiPauseGame" | 
                        "org.cef.ccbluex.GuiView.mouseClickMove" | 
                        "org.cef.ccbluex.GuiView.destroy" | 
                        "org.cef.ccbluex.GuiView.getMouseClickY" | 
                        "org.cef.ccbluex.GuiView.initGui" | 
                        "org.cef.ccbluex.GuiView.getCefBrowser" | 
                        "org.cef.ccbluex.GuiView.onGuiClosed" | 
                        "org.cef.ccbluex.GuiView.onResize" | 
                        "org.cef.ccbluex.GuiView.lambda$drawScreen$1" | 
                        "org.cef.ccbluex.GuiView.mouseClicked" | 
                        "org.cef.ccbluex.GuiView.setMouseClickY" | 
                        "org.cef.ccbluex.GuiView.setMouseClickX" | 
                        "org.cef.ccbluex.GuiView.setCefBrowser" | 
                        "net.minecraft.util.IStringSerializable.getName" | 
                        "net.minecraft.world.storage.ISaveHandler.getChunkLoader" | 
                        "net.minecraft.world.storage.ISaveHandler.flush" | 
                        "net.minecraft.world.storage.ISaveHandler.loadWorldInfo" | 
                        "net.minecraft.world.storage.ISaveHandler.saveWorldInfoWithPlayer" | 
                        "net.minecraft.world.storage.ISaveHandler.getWorldDirectory" | 
                        "net.minecraft.world.storage.ISaveHandler.saveWorldInfo" | 
                        "net.minecraft.world.storage.ISaveHandler.getMapFileFromName" | 
                        "net.minecraft.world.storage.ISaveHandler.getPlayerNBTManager" | 
                        "net.minecraft.world.storage.ISaveHandler.getWorldDirectoryName" | 
                        "net.minecraft.world.storage.ISaveHandler.checkSessionLock" | 
                        "net.optifine.reflect.ReflectorMethod.callString" | 
                        "net.optifine.reflect.ReflectorMethod.callInt" | 
                        "net.optifine.reflect.ReflectorMethod.getTargetMethod" | 
                        "net.optifine.reflect.ReflectorMethod.resolve" | 
                        "net.optifine.reflect.ReflectorMethod.callVoid" | 
                        "net.optifine.reflect.ReflectorMethod.deactivate" | 
                        "net.optifine.reflect.ReflectorMethod.call" | 
                        "net.optifine.reflect.ReflectorMethod.callString1" | 
                        "net.optifine.reflect.ReflectorMethod.getReturnType" | 
                        "net.optifine.reflect.ReflectorMethod.exists" | 
                        "net.optifine.reflect.ReflectorMethod.callFloat" | 
                        "net.optifine.reflect.ReflectorMethod.callBoolean" | 
                        "net.optifine.reflect.ReflectorMethod.callDouble" | 
                        "net.minecraft.client.renderer.entity.RenderBiped.transformHeldFull3DItemLayer" | 
                        "net.minecraft.client.renderer.entity.RenderBiped.getEntityTexture" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityChestRenderer.renderTileEntityAt" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$House3.addComponentParts" | 
                        "net.minecraft.client.renderer.BlockModelRenderer$AmbientOcclusionFace.setMaxBlockLight" | 
                        "net.minecraft.client.renderer.BlockModelRenderer$AmbientOcclusionFace.getAoBrightness" | 
                        "net.minecraft.client.renderer.BlockModelRenderer$AmbientOcclusionFace.getVertexBrightness" | 
                        "net.minecraft.client.renderer.BlockModelRenderer$AmbientOcclusionFace.updateVertexBrightness" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$House1.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$House1.func_180779_c" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$House2.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$House2.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$House2.func_180779_c" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$House2.writeStructureToNBT" | 
                        "org.cef.handler.CefDownloadHandlerAdapter.onBeforeDownload" | 
                        "org.cef.handler.CefDownloadHandlerAdapter.onDownloadUpdated" | 
                        "net.minecraft.client.model.ModelWither.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelWither.setRotationAngles" | 
                        "net.minecraft.client.model.ModelWither.render" | 
                        "net.minecraft.entity.ai.attributes.BaseAttribute.hashCode" | 
                        "net.minecraft.entity.ai.attributes.BaseAttribute.equals" | 
                        "net.minecraft.entity.ai.attributes.BaseAttribute.func_180372_d" | 
                        "net.minecraft.entity.ai.attributes.BaseAttribute.setShouldWatch" | 
                        "net.minecraft.entity.ai.attributes.BaseAttribute.getAttributeUnlocalizedName" | 
                        "net.minecraft.entity.ai.attributes.BaseAttribute.getShouldWatch" | 
                        "net.minecraft.entity.ai.attributes.BaseAttribute.getDefaultValue" | 
                        "net.minecraft.block.properties.IProperty.getValueClass" | 
                        "net.minecraft.block.properties.IProperty.getName" | 
                        "net.minecraft.block.properties.IProperty.getAllowedValues" | 
                        "net.minecraft.block.properties.PropertyHelper.getValueClass" | 
                        "net.minecraft.block.properties.PropertyHelper.getName" | 
                        "net.minecraft.block.properties.PropertyHelper.hashCode" | 
                        "net.minecraft.block.properties.PropertyHelper.equals" | 
                        "net.minecraft.block.properties.PropertyHelper.toString" | 
                        "net.minecraft.world.gen.layer.GenLayerVoronoiZoom.getInts" | 
                        "net.minecraft.util.BlockPos$MutableBlockPos.crossProduct" | 
                        "net.minecraft.util.BlockPos$MutableBlockPos.getX" | 
                        "net.minecraft.util.BlockPos$MutableBlockPos.set" | 
                        "net.minecraft.util.BlockPos$MutableBlockPos.getY" | 
                        "net.minecraft.util.BlockPos$MutableBlockPos.getZ" | 
                        "net.optifine.NaturalProperties.equalsDelta" | 
                        "net.optifine.NaturalProperties.transformVertexData" | 
                        "net.optifine.NaturalProperties.isValid" | 
                        "net.optifine.NaturalProperties.isFullSprite" | 
                        "net.optifine.NaturalProperties.getQuad" | 
                        "net.optifine.NaturalProperties.makeQuad" | 
                        "slice.gui.main.MainButton.getX" | 
                        "slice.gui.main.MainButton.setY" | 
                        "slice.gui.main.MainButton.getY" | 
                        "slice.gui.main.MainButton.setX" | 
                        "slice.gui.main.MainButton.setAction" | 
                        "slice.gui.main.MainButton.setTimeSpan" | 
                        "slice.gui.main.MainButton.getAction" | 
                        "slice.gui.main.MainButton.getTimeSpan" | 
                        "slice.gui.main.MainButton.click" | 
                        "slice.gui.main.MainButton.drawButton" | 
                        "org.cef.handler.CefLoadHandler$ErrorCode.getCode" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentBuilding.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentBuilding.func_175841_d" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentBuilding.func_175838_g" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentBuilding.func_175840_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentBuilding.func_175837_c" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentBuilding.func_175835_e" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentBuilding.func_175839_b" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentBuilding.func_175836_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentBuilding.func_175842_f" | 
                        "net.minecraft.command.server.CommandPardonPlayer.canCommandSenderUseCommand" | 
                        "net.minecraft.command.server.CommandPardonPlayer.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandPardonPlayer.getCommandUsage" | 
                        "net.minecraft.command.server.CommandPardonPlayer.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandPardonPlayer.processCommand" | 
                        "net.minecraft.command.server.CommandPardonPlayer.getCommandName" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor.writeStructureToNBT" | 
                        "net.minecraft.realms.RealmsLevelSummary.getSizeOnDisk" | 
                        "net.minecraft.realms.RealmsLevelSummary.isHardcore" | 
                        "net.minecraft.realms.RealmsLevelSummary.hasCheats" | 
                        "net.minecraft.realms.RealmsLevelSummary.getLastPlayed" | 
                        "net.minecraft.realms.RealmsLevelSummary.getGameMode" | 
                        "net.minecraft.realms.RealmsLevelSummary.compareTo" | 
                        "net.minecraft.realms.RealmsLevelSummary.getLevelName" | 
                        "net.minecraft.realms.RealmsLevelSummary.isRequiresConversion" | 
                        "net.minecraft.realms.RealmsLevelSummary.getLevelId" | 
                        "net.optifine.expr.FunctionFloat.eval" | 
                        "net.optifine.expr.FunctionFloat.getExpressionType" | 
                        "net.optifine.expr.FunctionFloat.toString" | 
                        "net.minecraft.command.server.CommandTestForBlock.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandTestForBlock.getCommandUsage" | 
                        "net.minecraft.command.server.CommandTestForBlock.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandTestForBlock.processCommand" | 
                        "net.minecraft.command.server.CommandTestForBlock.getCommandName" | 
                        "net.minecraft.client.particle.EntitySmokeFX$Factory.getEntityFX" | 
                        "net.minecraft.enchantment.EnchantmentOxygen.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentOxygen.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentOxygen.getMaxLevel" | 
                        "slice.file.ConfigSaver.setModules" | 
                        "slice.file.ConfigSaver.load" | 
                        "slice.file.ConfigSaver.getModuleManager" | 
                        "slice.file.ConfigSaver.getModules" | 
                        "slice.file.ConfigSaver.save" | 
                        "slice.file.ConfigSaver.setModuleManager" | 
                        "org.cef.handler.CefLoadHandlerAdapter.onLoadEnd" | 
                        "org.cef.handler.CefLoadHandlerAdapter.onLoadingStateChange" | 
                        "org.cef.handler.CefLoadHandlerAdapter.onLoadStart" | 
                        "org.cef.handler.CefLoadHandlerAdapter.onLoadError" | 
                        "net.minecraft.stats.IStatType.format" | 
                        "net.optifine.entity.model.ModelAdapterSkeleton.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterSkeleton.makeEntityRender" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$XDoubleRoomFitHelper.func_175969_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$XDoubleRoomFitHelper.func_175968_a" | 
                        "net.optifine.shaders.config.ShaderOptionVariableConst.matchesLine" | 
                        "net.optifine.shaders.config.ShaderOptionVariableConst.getSourceLine" | 
                        "net.minecraft.client.renderer.entity.RenderIronGolem.rotateCorpse" | 
                        "net.minecraft.client.renderer.entity.RenderIronGolem.getEntityTexture" | 
                        "net.minecraft.world.gen.feature.WorldGenMegaJungle.func_181632_a" | 
                        "net.minecraft.world.gen.feature.WorldGenMegaJungle.func_175930_c" | 
                        "net.minecraft.world.gen.feature.WorldGenMegaJungle.generate" | 
                        "net.minecraft.nbt.NBTBase$NBTPrimitive.getLong" | 
                        "net.minecraft.nbt.NBTBase$NBTPrimitive.getInt" | 
                        "net.minecraft.nbt.NBTBase$NBTPrimitive.getByte" | 
                        "net.minecraft.nbt.NBTBase$NBTPrimitive.getShort" | 
                        "net.minecraft.nbt.NBTBase$NBTPrimitive.getDouble" | 
                        "net.minecraft.nbt.NBTBase$NBTPrimitive.getFloat" | 
                        "net.minecraft.world.biome.BiomeGenSnow.decorate" | 
                        "net.minecraft.world.biome.BiomeGenSnow.createMutatedBiome" | 
                        "net.minecraft.world.biome.BiomeGenSnow.genBigTreeChance" | 
                        "net.optifine.entity.model.ModelAdapterWolf.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterWolf.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterWolf.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterWolf.getModelRendererNames" | 
                        "net.minecraft.enchantment.EnchantmentUntouching.canApply" | 
                        "net.minecraft.enchantment.EnchantmentUntouching.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentUntouching.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentUntouching.getMaxLevel" | 
                        "net.minecraft.enchantment.EnchantmentUntouching.canApplyTogether" | 
                        "net.optifine.NextTickHashSet.add" | 
                        "net.optifine.NextTickHashSet.clearIteratorLimits" | 
                        "net.optifine.NextTickHashSet.iterator" | 
                        "net.optifine.NextTickHashSet.contains" | 
                        "net.optifine.NextTickHashSet.setIteratorLimits" | 
                        "net.optifine.NextTickHashSet.getSubSet" | 
                        "net.optifine.NextTickHashSet.remove" | 
                        "net.optifine.model.ListQuadsOverlay.addQuad" | 
                        "net.optifine.model.ListQuadsOverlay.getListQuadsSingle" | 
                        "net.optifine.model.ListQuadsOverlay.size" | 
                        "net.optifine.model.ListQuadsOverlay.clear" | 
                        "net.optifine.model.ListQuadsOverlay.getQuad" | 
                        "net.optifine.model.ListQuadsOverlay.getBlockState" | 
                        "org.cef.browser.CefRequestContext.isGlobal" | 
                        "org.cef.browser.CefRequestContext.dispose" | 
                        "org.cef.browser.CefRequestContext.getHandler" | 
                        "net.optifine.util.IteratorCache$IteratorReadOnly.next" | 
                        "net.optifine.util.IteratorCache$IteratorReadOnly.hasNext" | 
                        "net.optifine.util.IteratorCache$IteratorReadOnly.setList" | 
                        "net.optifine.util.IteratorCache$IteratorReadOnly.remove" | 
                        "net.minecraft.entity.item.EntityMinecartChest.killMinecart" | 
                        "net.minecraft.entity.item.EntityMinecartChest.getSizeInventory" | 
                        "net.minecraft.entity.item.EntityMinecartChest.getMinecartType" | 
                        "net.minecraft.entity.item.EntityMinecartChest.getDefaultDisplayTileOffset" | 
                        "net.minecraft.entity.item.EntityMinecartChest.createContainer" | 
                        "net.minecraft.entity.item.EntityMinecartChest.getGuiID" | 
                        "net.minecraft.entity.item.EntityMinecartChest.getDefaultDisplayTile" | 
                        "org.cef.browser.CefBrowser_N.N_PrintToPDF" | 
                        "org.cef.browser.CefBrowser_N.N_IsLoading" | 
                        "org.cef.browser.CefBrowser_N.getWindowHandle" | 
                        "org.cef.browser.CefBrowser_N.runFileDialog" | 
                        "org.cef.browser.CefBrowser_N.getFrameCount" | 
                        "org.cef.browser.CefBrowser_N.N_CreateDevTools" | 
                        "org.cef.browser.CefBrowser_N.N_SendKeyEvent" | 
                        "org.cef.browser.CefBrowser_N.doClose" | 
                        "org.cef.browser.CefBrowser_N.goBack" | 
                        "org.cef.browser.CefBrowser_N.createDevToolsBrowser" | 
                        "org.cef.browser.CefBrowser_N.getParentBrowser" | 
                        "org.cef.browser.CefBrowser_N.createDevTools" | 
                        "org.cef.browser.CefBrowser_N.N_ReplaceMisspelling" | 
                        "org.cef.browser.CefBrowser_N.N_SetFocus" | 
                        "org.cef.browser.CefBrowser_N.setZoomLevel" | 
                        "org.cef.browser.CefBrowser_N.N_GetFrameCount" | 
                        "org.cef.browser.CefBrowser_N.N_WasResized" | 
                        "org.cef.browser.CefBrowser_N.N_GetFocusedFrame" | 
                        "org.cef.browser.CefBrowser_N.getText" | 
                        "org.cef.browser.CefBrowser_N.N_LoadURL" | 
                        "org.cef.browser.CefBrowser_N.N_StopLoad" | 
                        "org.cef.browser.CefBrowser_N.isLoading" | 
                        "org.cef.browser.CefBrowser_N.executeJavaScript" | 
                        "org.cef.browser.CefBrowser_N.dragSourceEndedAt" | 
                        "org.cef.browser.CefBrowser_N.getInspectAt" | 
                        "org.cef.browser.CefBrowser_N.N_LoadRequest" | 
                        "org.cef.browser.CefBrowser_N.stopLoad" | 
                        "org.cef.browser.CefBrowser_N.sendMouseWheelEvent" | 
                        "org.cef.browser.CefBrowser_N.getFrameIdentifiers" | 
                        "org.cef.browser.CefBrowser_N.N_StopFinding" | 
                        "org.cef.browser.CefBrowser_N.closeDevTools" | 
                        "org.cef.browser.CefBrowser_N.N_GetSource" | 
                        "org.cef.browser.CefBrowser_N.N_SetWindowVisibility" | 
                        "org.cef.browser.CefBrowser_N.N_Invalidate" | 
                        "org.cef.browser.CefBrowser_N.dragSourceSystemDragEnded" | 
                        "org.cef.browser.CefBrowser_N.dragTargetDragOver" | 
                        "org.cef.browser.CefBrowser_N.N_GoBack" | 
                        "org.cef.browser.CefBrowser_N.getIdentifier" | 
                        "org.cef.browser.CefBrowser_N.N_SendMouseEvent" | 
                        "org.cef.browser.CefBrowser_N.setParent" | 
                        "org.cef.browser.CefBrowser_N.N_ViewSource" | 
                        "org.cef.browser.CefBrowser_N.N_Find" | 
                        "org.cef.browser.CefBrowser_N.close" | 
                        "org.cef.browser.CefBrowser_N.N_CanGoForward" | 
                        "org.cef.browser.CefBrowser_N.setWindowVisibility" | 
                        "org.cef.browser.CefBrowser_N.printToPDF" | 
                        "org.cef.browser.CefBrowser_N.hasDocument" | 
                        "org.cef.browser.CefBrowser_N.getZoomLevel" | 
                        "org.cef.browser.CefBrowser_N.createBrowser" | 
                        "org.cef.browser.CefBrowser_N.setFocus" | 
                        "org.cef.browser.CefBrowser_N.getMainFrame" | 
                        "org.cef.browser.CefBrowser_N.dragTargetDrop" | 
                        "org.cef.browser.CefBrowser_N.N_GetFrameNames" | 
                        "org.cef.browser.CefBrowser_N.getWindowHandler" | 
                        "org.cef.browser.CefBrowser_N.N_GetFrame2" | 
                        "org.cef.browser.CefBrowser_N.N_Reload" | 
                        "org.cef.browser.CefBrowser_N.N_DragTargetDragOver" | 
                        "org.cef.browser.CefBrowser_N.isClosed" | 
                        "org.cef.browser.CefBrowser_N.N_CanGoBack" | 
                        "org.cef.browser.CefBrowser_N.notifyMoveOrResizeStarted" | 
                        "org.cef.browser.CefBrowser_N.N_SendMouseWheelEvent" | 
                        "org.cef.browser.CefBrowser_N.loadRequest" | 
                        "org.cef.browser.CefBrowser_N.N_IsPopup" | 
                        "org.cef.browser.CefBrowser_N.finalize" | 
                        "org.cef.browser.CefBrowser_N.N_UpdateUI" | 
                        "org.cef.browser.CefBrowser_N.N_Close" | 
                        "org.cef.browser.CefBrowser_N.N_Print" | 
                        "org.cef.browser.CefBrowser_N.N_SetParent" | 
                        "org.cef.browser.CefBrowser_N.N_GoForward" | 
                        "org.cef.browser.CefBrowser_N.N_SetZoomLevel" | 
                        "org.cef.browser.CefBrowser_N.getRenderHandler" | 
                        "org.cef.browser.CefBrowser_N.replaceMisspelling" | 
                        "org.cef.browser.CefBrowser_N.N_GetURL" | 
                        "org.cef.browser.CefBrowser_N.find" | 
                        "org.cef.browser.CefBrowser_N.N_CreateBrowser" | 
                        "org.cef.browser.CefBrowser_N.N_DragTargetDrop" | 
                        "org.cef.browser.CefBrowser_N.viewSource" | 
                        "org.cef.browser.CefBrowser_N.startDownload" | 
                        "org.cef.browser.CefBrowser_N.N_DragSourceSystemDragEnded" | 
                        "org.cef.browser.CefBrowser_N.setCloseAllowed" | 
                        "org.cef.browser.CefBrowser_N.canGoForward" | 
                        "org.cef.browser.CefBrowser_N.N_ExecuteJavaScript" | 
                        "org.cef.browser.CefBrowser_N.N_DragSourceEndedAt" | 
                        "org.cef.browser.CefBrowser_N.getURL" | 
                        "org.cef.browser.CefBrowser_N.getUrl" | 
                        "org.cef.browser.CefBrowser_N.N_DragTargetDragEnter" | 
                        "org.cef.browser.CefBrowser_N.N_GetText" | 
                        "org.cef.browser.CefBrowser_N.getSource" | 
                        "org.cef.browser.CefBrowser_N.stopFinding" | 
                        "org.cef.browser.CefBrowser_N.N_HasDocument" | 
                        "org.cef.browser.CefBrowser_N.N_GetFrame" | 
                        "org.cef.browser.CefBrowser_N.loadURL" | 
                        "org.cef.browser.CefBrowser_N.goForward" | 
                        "org.cef.browser.CefBrowser_N.getRequestContext" | 
                        "org.cef.browser.CefBrowser_N.sendKeyEvent" | 
                        "org.cef.browser.CefBrowser_N.dragTargetDragLeave" | 
                        "org.cef.browser.CefBrowser_N.N_GetWindowHandle" | 
                        "org.cef.browser.CefBrowser_N.canGoBack" | 
                        "org.cef.browser.CefBrowser_N.getFrame" | 
                        "org.cef.browser.CefBrowser_N.updateUI" | 
                        "org.cef.browser.CefBrowser_N.N_GetFrameIdentifiers" | 
                        "org.cef.browser.CefBrowser_N.N_NotifyMoveOrResizeStarted" | 
                        "org.cef.browser.CefBrowser_N.N_StartDownload" | 
                        "org.cef.browser.CefBrowser_N.wasResized" | 
                        "org.cef.browser.CefBrowser_N.reload" | 
                        "org.cef.browser.CefBrowser_N.N_GetIdentifier" | 
                        "org.cef.browser.CefBrowser_N.notifyBrowserCreated" | 
                        "org.cef.browser.CefBrowser_N.onBeforeClose" | 
                        "org.cef.browser.CefBrowser_N.isPopup" | 
                        "org.cef.browser.CefBrowser_N.getDevTools" | 
                        "org.cef.browser.CefBrowser_N.sendMouseEvent" | 
                        "org.cef.browser.CefBrowser_N.invalidate" | 
                        "org.cef.browser.CefBrowser_N.getClient" | 
                        "org.cef.browser.CefBrowser_N.N_CloseDevTools" | 
                        "org.cef.browser.CefBrowser_N.getFocusedFrame" | 
                        "org.cef.browser.CefBrowser_N.N_DragTargetDragLeave" | 
                        "org.cef.browser.CefBrowser_N.N_RunFileDialog" | 
                        "org.cef.browser.CefBrowser_N.N_GetZoomLevel" | 
                        "org.cef.browser.CefBrowser_N.print" | 
                        "org.cef.browser.CefBrowser_N.N_ReloadIgnoreCache" | 
                        "org.cef.browser.CefBrowser_N.reloadIgnoreCache" | 
                        "org.cef.browser.CefBrowser_N.getFrameNames" | 
                        "org.cef.browser.CefBrowser_N.N_GetMainFrame" | 
                        "org.cef.browser.CefBrowser_N.dragTargetDragEnter" | 
                        "net.optifine.entity.model.anim.ModelUpdater.update" | 
                        "net.optifine.entity.model.anim.ModelUpdater.initialize" | 
                        "net.minecraft.command.CommandBase.compareTo" | 
                        "net.minecraft.command.CommandBase.canCommandSenderUseCommand" | 
                        "net.minecraft.command.CommandBase.isUsernameIndex" | 
                        "net.minecraft.command.CommandBase.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandBase.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandBase.getCommandAliases" | 
                        "net.minecraft.client.gui.inventory.GuiChest.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiChest.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.client.model.ModelBase.getRandomModelBox" | 
                        "net.minecraft.client.model.ModelBase.setModelAttributes" | 
                        "net.minecraft.client.model.ModelBase.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelBase.getTextureOffset" | 
                        "net.minecraft.client.model.ModelBase.setTextureOffset" | 
                        "net.minecraft.client.model.ModelBase.setRotationAngles" | 
                        "net.minecraft.client.model.ModelBase.render" | 
                        "net.minecraft.world.chunk.NibbleArray.getCoordinateIndex" | 
                        "net.minecraft.world.chunk.NibbleArray.getFromIndex" | 
                        "net.minecraft.world.chunk.NibbleArray.set" | 
                        "net.minecraft.world.chunk.NibbleArray.setIndex" | 
                        "net.minecraft.world.chunk.NibbleArray.get" | 
                        "net.minecraft.world.chunk.NibbleArray.getNibbleIndex" | 
                        "net.minecraft.world.chunk.NibbleArray.getData" | 
                        "net.minecraft.world.chunk.NibbleArray.isLowerNibble" | 
                        "net.optifine.override.PlayerControllerOF.clickBlock" | 
                        "net.optifine.override.PlayerControllerOF.onPlayerDamageBlock" | 
                        "net.optifine.override.PlayerControllerOF.sendUseItem" | 
                        "net.optifine.override.PlayerControllerOF.isActing" | 
                        "net.optifine.override.PlayerControllerOF.getLastClickBlockPos" | 
                        "net.optifine.override.PlayerControllerOF.onPlayerRightClick" | 
                        "net.optifine.override.PlayerControllerOF.isPlayerRightClickingOnEntity" | 
                        "net.optifine.override.PlayerControllerOF.interactWithEntitySendPacket" | 
                        "net.optifine.override.PlayerControllerOF.getLastClickEntity" | 
                        "net.minecraft.block.material.Material.setTranslucent" | 
                        "net.minecraft.block.material.Material.isToolNotRequired" | 
                        "net.minecraft.block.material.Material.getCanBurn" | 
                        "net.minecraft.block.material.Material.isOpaque" | 
                        "net.minecraft.block.material.Material.setReplaceable" | 
                        "net.minecraft.block.material.Material.setNoPushMobility" | 
                        "net.minecraft.block.material.Material.getMaterialMobility" | 
                        "net.minecraft.block.material.Material.blocksLight" | 
                        "net.minecraft.block.material.Material.isSolid" | 
                        "net.minecraft.block.material.Material.setBurning" | 
                        "net.minecraft.block.material.Material.setRequiresTool" | 
                        "net.minecraft.block.material.Material.isLiquid" | 
                        "net.minecraft.block.material.Material.blocksMovement" | 
                        "net.minecraft.block.material.Material.getMaterialMapColor" | 
                        "net.minecraft.block.material.Material.isReplaceable" | 
                        "net.minecraft.block.material.Material.setImmovableMobility" | 
                        "net.minecraft.block.material.Material.setAdventureModeExempt" | 
                        "net.minecraft.util.Cartesian$Product.iterator" | 
                        "slice.setting.settings.NumberValue.setMax" | 
                        "slice.setting.settings.NumberValue.getValue" | 
                        "slice.setting.settings.NumberValue.setMin" | 
                        "slice.setting.settings.NumberValue.getMin" | 
                        "slice.setting.settings.NumberValue.getType" | 
                        "slice.setting.settings.NumberValue.getMax" | 
                        "slice.setting.settings.NumberValue.setValue" | 
                        "slice.setting.settings.NumberValue.setType" | 
                        "net.minecraft.block.BlockLever$EnumOrientation.getMetadata" | 
                        "net.minecraft.block.BlockLever$EnumOrientation.getName" | 
                        "net.minecraft.block.BlockLever$EnumOrientation.toString" | 
                        "net.minecraft.block.BlockLever$EnumOrientation.getFacing" | 
                        "net.minecraft.client.gui.spectator.BaseSpectatorGroup.func_178670_b" | 
                        "net.minecraft.client.gui.spectator.BaseSpectatorGroup.func_178669_a" | 
                        "net.optifine.entity.model.ModelAdapterChest.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterChest.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterChest.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterChest.getModelRendererNames" | 
                        "net.minecraft.entity.monster.EntitySilverfish$AIHideInStone.shouldExecute" | 
                        "net.minecraft.entity.monster.EntitySilverfish$AIHideInStone.startExecuting" | 
                        "net.minecraft.entity.monster.EntitySilverfish$AIHideInStone.continueExecuting" | 
                        "net.minecraft.client.renderer.chunk.VisGraph.func_178604_a" | 
                        "net.minecraft.client.renderer.chunk.VisGraph.computeVisibility" | 
                        "net.minecraft.client.renderer.chunk.VisGraph.func_178603_a" | 
                        "net.minecraft.client.renderer.chunk.VisGraph.func_178606_a" | 
                        "net.minecraft.client.renderer.chunk.VisGraph.func_178610_a" | 
                        "net.minecraft.client.renderer.chunk.VisGraph.func_178609_b" | 
                        "net.minecraft.inventory.ContainerBeacon$BeaconSlot.isItemValid" | 
                        "net.minecraft.inventory.ContainerBeacon$BeaconSlot.getSlotStackLimit" | 
                        "org.cef.ICefRenderer.onPopupSize" | 
                        "org.cef.ICefRenderer.onPaint" | 
                        "org.cef.ICefRenderer.destroy" | 
                        "org.cef.ICefRenderer.onPopupClosed" | 
                        "org.cef.ICefRenderer.render" | 
                        "org.cef.browser.CefBrowserWr.getWindowHandle" | 
                        "org.cef.browser.CefBrowserWr.createBrowserIfRequired" | 
                        "org.cef.browser.CefBrowserWr.getWindowHandler" | 
                        "org.cef.browser.CefBrowserWr.createDevToolsBrowser" | 
                        "org.cef.browser.CefBrowserWr.createImmediately" | 
                        "org.cef.browser.CefBrowserWr.doUpdate" | 
                        "org.cef.browser.CefBrowserWr.getUIComponent" | 
                        "org.cef.browser.CefBrowserWr.createScreenshot" | 
                        "net.minecraft.client.particle.EntityLavaFX$Factory.getEntityFX" | 
                        "net.minecraft.world.gen.layer.GenLayerRiverInit.getInts" | 
                        "net.minecraft.client.particle.EntityFlameFX.getBrightnessForRender" | 
                        "net.minecraft.client.particle.EntityFlameFX.getBrightness" | 
                        "net.minecraft.client.particle.EntityFlameFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityFlameFX.onUpdate" | 
                        "net.minecraft.world.biome.BiomeDecorator.decorate" | 
                        "net.minecraft.world.biome.BiomeDecorator.genDecorations" | 
                        "net.minecraft.world.biome.BiomeDecorator.genStandardOre2" | 
                        "net.minecraft.world.biome.BiomeDecorator.genStandardOre1" | 
                        "net.minecraft.world.biome.BiomeDecorator.generateOres" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.setLocationTextureCustom" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.bindTexture" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.setEntityClass" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.getWorld" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.getLocationTextureCustom" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.getEntityClass" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.renderTileEntityAt" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.setRendererDispatcher" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.forceTileEntityRender" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.getFontRenderer" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer.renderTileEntityFast" | 
                        "net.optifine.shaders.FlipTextures.isChanged" | 
                        "net.optifine.shaders.FlipTextures.get" | 
                        "net.optifine.shaders.FlipTextures.reset" | 
                        "net.optifine.shaders.FlipTextures.getA" | 
                        "net.optifine.shaders.FlipTextures.getB" | 
                        "net.optifine.shaders.FlipTextures.flip" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.getRenderChunk" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.getLock" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.setRegionRenderCacheBuilder" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.getType" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.addFinishRunnable" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.getCompiledChunk" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.finish" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.isFinished" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.getStatus" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.getRegionRenderCacheBuilder" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.setStatus" | 
                        "net.minecraft.client.renderer.chunk.ChunkCompileTaskGenerator.setCompiledChunk" | 
                        "net.minecraft.stats.StatBase.getCriteria" | 
                        "net.minecraft.stats.StatBase.registerStat" | 
                        "net.minecraft.stats.StatBase.format" | 
                        "net.minecraft.stats.StatBase.func_150954_l" | 
                        "net.minecraft.stats.StatBase.initIndependentStat" | 
                        "net.minecraft.stats.StatBase.getStatName" | 
                        "net.minecraft.stats.StatBase.hashCode" | 
                        "net.minecraft.stats.StatBase.equals" | 
                        "net.minecraft.stats.StatBase.func_150953_b" | 
                        "net.minecraft.stats.StatBase.toString" | 
                        "net.minecraft.stats.StatBase.isAchievement" | 
                        "net.minecraft.stats.StatBase.createChatComponent" | 
                        "slice.command.commands.CommandBind.handle" | 
                        "net.optifine.util.ArrayCache.allocate" | 
                        "net.optifine.util.ArrayCache.free" | 
                        "org.cef.handler.CefContextMenuHandlerAdapter.onContextMenuCommand" | 
                        "org.cef.handler.CefContextMenuHandlerAdapter.onBeforeContextMenu" | 
                        "org.cef.handler.CefContextMenuHandlerAdapter.onContextMenuDismissed" | 
                        "org.cef.network.CefRequest.setPostData" | 
                        "org.cef.network.CefRequest.setHeaderMap" | 
                        "org.cef.network.CefRequest.getReferrerPolicy" | 
                        "org.cef.network.CefRequest.setHeaderByName" | 
                        "org.cef.network.CefRequest.getMethod" | 
                        "org.cef.network.CefRequest.getReferrerURL" | 
                        "org.cef.network.CefRequest.getTransitionType" | 
                        "org.cef.network.CefRequest.getPostData" | 
                        "org.cef.network.CefRequest.isReadOnly" | 
                        "org.cef.network.CefRequest.getIdentifier" | 
                        "org.cef.network.CefRequest.getResourceType" | 
                        "org.cef.network.CefRequest.getHeaderByName" | 
                        "org.cef.network.CefRequest.setFirstPartyForCookies" | 
                        "org.cef.network.CefRequest.setReferrer" | 
                        "org.cef.network.CefRequest.getFirstPartyForCookies" | 
                        "org.cef.network.CefRequest.set" | 
                        "org.cef.network.CefRequest.setURL" | 
                        "org.cef.network.CefRequest.getHeaderMap" | 
                        "org.cef.network.CefRequest.setMethod" | 
                        "org.cef.network.CefRequest.getURL" | 
                        "org.cef.network.CefRequest.finalize" | 
                        "org.cef.network.CefRequest.toString" | 
                        "org.cef.network.CefRequest.dispose" | 
                        "org.cef.network.CefRequest.getFlags" | 
                        "org.cef.network.CefRequest.setFlags" | 
                        "net.minecraft.client.renderer.texture.ITickable.tick" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.getSafePoint" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.getAvoidsWater" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.getPathPointToCoords" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.setEnterDoors" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.getCanSwim" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.setCanSwim" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.getVerticalOffset" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.getEnterDoors" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.initProcessor" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.getPathPointTo" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.findPathOptions" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.postProcess" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.setAvoidsWater" | 
                        "net.minecraft.world.pathfinder.WalkNodeProcessor.setBreakDoors" | 
                        "net.optifine.shaders.gui.GuiButtonShaderOption.getShaderOption" | 
                        "net.optifine.shaders.gui.GuiButtonShaderOption.valueChanged" | 
                        "net.optifine.shaders.gui.GuiButtonShaderOption.isSwitchable" | 
                        "net.minecraft.entity.ai.EntityAIMoveToBlock.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIMoveToBlock.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIMoveToBlock.shouldMoveTo" | 
                        "net.minecraft.entity.ai.EntityAIMoveToBlock.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIMoveToBlock.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIMoveToBlock.searchForDestination" | 
                        "net.minecraft.entity.ai.EntityAIMoveToBlock.getIsAboveDestination" | 
                        "net.minecraft.entity.ai.EntityAIMoveToBlock.continueExecuting" | 
                        "net.optifine.entity.model.ModelAdapterSpider.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterSpider.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterSpider.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterSpider.getModelRendererNames" | 
                        "net.optifine.RandomEntityRule.parseMinMaxHeight" | 
                        "net.optifine.RandomEntityRule.getTextureLocation" | 
                        "net.optifine.RandomEntityRule.isValid" | 
                        "net.optifine.RandomEntityRule.matches" | 
                        "net.minecraft.entity.IEntityMultiPart.getWorld" | 
                        "net.minecraft.entity.IEntityMultiPart.attackEntityFromPart" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityPistonRenderer.renderTileEntityAt" | 
                        "net.minecraft.scoreboard.ScoreDummyCriteria.getName" | 
                        "net.minecraft.scoreboard.ScoreDummyCriteria.isReadOnly" | 
                        "net.minecraft.scoreboard.ScoreDummyCriteria.getRenderType" | 
                        "net.minecraft.scoreboard.ScoreDummyCriteria.setScore" | 
                        "net.minecraft.world.gen.feature.WorldGenBigMushroom.generate" | 
                        "net.minecraft.inventory.InventoryCraftResult.decrStackSize" | 
                        "net.minecraft.inventory.InventoryCraftResult.openInventory" | 
                        "net.minecraft.inventory.InventoryCraftResult.setField" | 
                        "net.minecraft.inventory.InventoryCraftResult.getName" | 
                        "net.minecraft.inventory.InventoryCraftResult.markDirty" | 
                        "net.minecraft.inventory.InventoryCraftResult.clear" | 
                        "net.minecraft.inventory.InventoryCraftResult.getField" | 
                        "net.minecraft.inventory.InventoryCraftResult.getStackInSlot" | 
                        "net.minecraft.inventory.InventoryCraftResult.setInventorySlotContents" | 
                        "net.minecraft.inventory.InventoryCraftResult.closeInventory" | 
                        "net.minecraft.inventory.InventoryCraftResult.getInventoryStackLimit" | 
                        "net.minecraft.inventory.InventoryCraftResult.getSizeInventory" | 
                        "net.minecraft.inventory.InventoryCraftResult.getDisplayName" | 
                        "net.minecraft.inventory.InventoryCraftResult.isUseableByPlayer" | 
                        "net.minecraft.inventory.InventoryCraftResult.hasCustomName" | 
                        "net.minecraft.inventory.InventoryCraftResult.removeStackFromSlot" | 
                        "net.minecraft.inventory.InventoryCraftResult.getFieldCount" | 
                        "net.minecraft.inventory.InventoryCraftResult.isItemValidForSlot" | 
                        "org.cef.callback.CefStringVisitor.visit" | 
                        "net.minecraft.tileentity.TileEntityFlowerPot.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityFlowerPot.getFlowerPotData" | 
                        "net.minecraft.tileentity.TileEntityFlowerPot.getDescriptionPacket" | 
                        "net.minecraft.tileentity.TileEntityFlowerPot.setFlowerPotData" | 
                        "net.minecraft.tileentity.TileEntityFlowerPot.getFlowerPotItem" | 
                        "net.minecraft.tileentity.TileEntityFlowerPot.writeToNBT" | 
                        "net.optifine.shaders.gui.GuiShaderOptions.updateAllButtons" | 
                        "net.optifine.shaders.gui.GuiShaderOptions.actionPerformed" | 
                        "net.optifine.shaders.gui.GuiShaderOptions.actionPerformedRightClick" | 
                        "net.optifine.shaders.gui.GuiShaderOptions.initGui" | 
                        "net.optifine.shaders.gui.GuiShaderOptions.drawScreen" | 
                        "net.optifine.shaders.gui.GuiShaderOptions.onGuiClosed" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$SimpleRoom.addComponentParts" | 
                        "net.minecraft.item.ItemArmor$ArmorMaterial.getDurability" | 
                        "net.minecraft.item.ItemArmor$ArmorMaterial.getEnchantability" | 
                        "net.minecraft.item.ItemArmor$ArmorMaterial.getName" | 
                        "net.minecraft.item.ItemArmor$ArmorMaterial.getDamageReductionAmount" | 
                        "net.minecraft.item.ItemArmor$ArmorMaterial.getRepairItem" | 
                        "net.minecraft.client.renderer.entity.layers.LayerEnderDragonDeath.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerEnderDragonDeath.shouldCombineTextures" | 
                        "slice.clickgui.HTMLGui.setVisible" | 
                        "slice.clickgui.HTMLGui.queryInit" | 
                        "slice.clickgui.HTMLGui.setEnabled" | 
                        "slice.clickgui.HTMLGui.runOnIFrame" | 
                        "slice.clickgui.HTMLGui.setHidden" | 
                        "slice.clickgui.HTMLGui.updateBooleanValue" | 
                        "slice.clickgui.HTMLGui.initGui" | 
                        "slice.clickgui.HTMLGui.drawScreen" | 
                        "slice.clickgui.HTMLGui.onGuiClosed" | 
                        "slice.clickgui.HTMLGui.addModule" | 
                        "slice.clickgui.HTMLGui.javascript" | 
                        "net.minecraft.world.gen.feature.WorldGenMegaPineTree.func_150541_c" | 
                        "net.minecraft.world.gen.feature.WorldGenMegaPineTree.func_180711_a" | 
                        "net.minecraft.world.gen.feature.WorldGenMegaPineTree.func_175934_c" | 
                        "net.minecraft.world.gen.feature.WorldGenMegaPineTree.func_175933_b" | 
                        "net.minecraft.world.gen.feature.WorldGenMegaPineTree.generate" | 
                        "net.minecraft.tileentity.TileEntityMobSpawner.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityMobSpawner.receiveClientEvent" | 
                        "net.minecraft.tileentity.TileEntityMobSpawner.func_183000_F" | 
                        "net.minecraft.tileentity.TileEntityMobSpawner.update" | 
                        "net.minecraft.tileentity.TileEntityMobSpawner.getDescriptionPacket" | 
                        "net.minecraft.tileentity.TileEntityMobSpawner.getSpawnerBaseLogic" | 
                        "net.minecraft.tileentity.TileEntityMobSpawner.writeToNBT" | 
                        "net.minecraft.block.BlockPistonExtension$EnumPistonType.getName" | 
                        "net.minecraft.block.BlockPistonExtension$EnumPistonType.toString" | 
                        "net.minecraft.entity.passive.EntityRabbit$RabbitJumpHelper.func_180065_d" | 
                        "net.minecraft.entity.passive.EntityRabbit$RabbitJumpHelper.func_180066_a" | 
                        "net.minecraft.entity.passive.EntityRabbit$RabbitJumpHelper.getIsJumping" | 
                        "net.minecraft.entity.passive.EntityRabbit$RabbitJumpHelper.doJump" | 
                        "net.minecraft.world.gen.feature.WorldGenFire.generate" | 
                        "com.sliceclient.script.classloader.ScriptDescriptionFile.getVariables" | 
                        "com.sliceclient.script.classloader.ScriptDescriptionFile.getJson" | 
                        "net.optifine.gui.TooltipManager.drawTooltips" | 
                        "net.optifine.gui.TooltipManager.drawRectBorder" | 
                        "net.minecraft.world.gen.structure.MapGenStructureData.readFromNBT" | 
                        "net.minecraft.world.gen.structure.MapGenStructureData.getTagCompound" | 
                        "net.minecraft.world.gen.structure.MapGenStructureData.writeInstance" | 
                        "net.minecraft.world.gen.structure.MapGenStructureData.writeToNBT" | 
                        "net.minecraft.client.gui.GuiDisconnected.actionPerformed" | 
                        "net.minecraft.client.gui.GuiDisconnected.initGui" | 
                        "net.minecraft.client.gui.GuiDisconnected.drawScreen" | 
                        "net.minecraft.client.gui.GuiDisconnected.keyTyped" | 
                        "net.minecraft.command.CommandResultStats$Type.getTypeName" | 
                        "net.minecraft.command.CommandResultStats$Type.getTypeID" | 
                        "net.minecraft.block.BlockCompressedPowered.getWeakPower" | 
                        "net.minecraft.block.BlockCompressedPowered.canProvidePower" | 
                        "net.minecraft.stats.Achievement.setSpecial" | 
                        "net.minecraft.stats.Achievement.registerStat" | 
                        "net.minecraft.stats.Achievement.getStatName" | 
                        "net.minecraft.stats.Achievement.getSpecial" | 
                        "net.minecraft.stats.Achievement.setStatStringFormatter" | 
                        "net.minecraft.stats.Achievement.func_150953_b" | 
                        "net.minecraft.stats.Achievement.isAchievement" | 
                        "net.minecraft.stats.Achievement.initIndependentStat" | 
                        "net.minecraft.stats.Achievement.getDescription" | 
                        "net.minecraft.client.particle.EntitySuspendFX.onUpdate" | 
                        "net.minecraft.entity.ai.EntityAIRunAroundLikeCrazy.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIRunAroundLikeCrazy.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIRunAroundLikeCrazy.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIRunAroundLikeCrazy.continueExecuting" | 
                        "net.optifine.entity.model.ModelAdapterSilverfish.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterSilverfish.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterSilverfish.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterSilverfish.getModelRendererNames" | 
                        "net.minecraft.block.BlockSnowBlock.quantityDropped" | 
                        "net.minecraft.block.BlockSnowBlock.updateTick" | 
                        "net.minecraft.block.BlockSnowBlock.getItemDropped" | 
                        "net.minecraft.util.Vec3i.crossProduct" | 
                        "net.minecraft.util.Vec3i.getX" | 
                        "net.minecraft.util.Vec3i.distanceSqToCenter" | 
                        "net.minecraft.util.Vec3i.getY" | 
                        "net.minecraft.util.Vec3i.getZ" | 
                        "net.minecraft.util.Vec3i.hashCode" | 
                        "net.minecraft.util.Vec3i.equals" | 
                        "net.minecraft.util.Vec3i.toString" | 
                        "net.minecraft.util.Vec3i.compareTo" | 
                        "net.minecraft.util.Vec3i.distanceSq" | 
                        "slice.command.commands.CommandConnect.handle" | 
                        "net.minecraft.block.BlockMycelium.getMetaFromState" | 
                        "net.minecraft.block.BlockMycelium.randomDisplayTick" | 
                        "net.minecraft.block.BlockMycelium.createBlockState" | 
                        "net.minecraft.block.BlockMycelium.updateTick" | 
                        "net.minecraft.block.BlockMycelium.getItemDropped" | 
                        "net.minecraft.block.BlockMycelium.getActualState" | 
                        "net.minecraft.tileentity.IHopper.getWorld" | 
                        "net.minecraft.tileentity.IHopper.getXPos" | 
                        "net.minecraft.tileentity.IHopper.getYPos" | 
                        "net.minecraft.tileentity.IHopper.getZPos" | 
                        "net.minecraft.block.BlockDoublePlant$EnumPlantType.getName" | 
                        "net.minecraft.block.BlockDoublePlant$EnumPlantType.getMeta" | 
                        "net.minecraft.block.BlockDoublePlant$EnumPlantType.toString" | 
                        "net.minecraft.block.BlockDoublePlant$EnumPlantType.getUnlocalizedName" | 
                        "net.optifine.shaders.ICustomTexture.getTarget" | 
                        "net.optifine.shaders.ICustomTexture.deleteTexture" | 
                        "net.optifine.shaders.ICustomTexture.getTextureId" | 
                        "net.optifine.shaders.ICustomTexture.getTextureUnit" | 
                        "net.minecraft.tileentity.TileEntityComparator.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityComparator.getOutputSignal" | 
                        "net.minecraft.tileentity.TileEntityComparator.setOutputSignal" | 
                        "net.minecraft.tileentity.TileEntityComparator.writeToNBT" | 
                        "net.minecraft.client.renderer.entity.RenderPotion.func_177082_d" | 
                        "net.minecraft.world.gen.feature.WorldGenLiquids.generate" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stairs2.getBoundingBoxCenter" | 
                        "net.optifine.expr.Parameters.getParameterTypes" | 
                        "net.minecraft.enchantment.EnchantmentArrowDamage.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentArrowDamage.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentArrowDamage.getMaxLevel" | 
                        "net.minecraft.nbt.NBTTagCompound.setByte" | 
                        "net.minecraft.nbt.NBTTagCompound.getByte" | 
                        "net.minecraft.nbt.NBTTagCompound.getCompoundTag" | 
                        "net.minecraft.nbt.NBTTagCompound.setInteger" | 
                        "net.minecraft.nbt.NBTTagCompound.getDouble" | 
                        "net.minecraft.nbt.NBTTagCompound.getId" | 
                        "net.minecraft.nbt.NBTTagCompound.getInteger" | 
                        "net.minecraft.nbt.NBTTagCompound.getFloat" | 
                        "net.minecraft.nbt.NBTTagCompound.setShort" | 
                        "net.minecraft.nbt.NBTTagCompound.getKeySet" | 
                        "net.minecraft.nbt.NBTTagCompound.createCrashReport" | 
                        "net.minecraft.nbt.NBTTagCompound.setDouble" | 
                        "net.minecraft.nbt.NBTTagCompound.hashCode" | 
                        "net.minecraft.nbt.NBTTagCompound.merge" | 
                        "net.minecraft.nbt.NBTTagCompound.getTagList" | 
                        "net.minecraft.nbt.NBTTagCompound.removeTag" | 
                        "net.minecraft.nbt.NBTTagCompound.getBoolean" | 
                        "net.minecraft.nbt.NBTTagCompound.setTag" | 
                        "net.minecraft.nbt.NBTTagCompound.copy" | 
                        "net.minecraft.nbt.NBTTagCompound.write" | 
                        "net.minecraft.nbt.NBTTagCompound.hasNoTags" | 
                        "net.minecraft.nbt.NBTTagCompound.setFloat" | 
                        "net.minecraft.nbt.NBTTagCompound.hasKey" | 
                        "net.minecraft.nbt.NBTTagCompound.read" | 
                        "net.minecraft.nbt.NBTTagCompound.getShort" | 
                        "net.minecraft.nbt.NBTTagCompound.getString" | 
                        "net.minecraft.nbt.NBTTagCompound.getTag" | 
                        "net.minecraft.nbt.NBTTagCompound.getLong" | 
                        "net.minecraft.nbt.NBTTagCompound.setLong" | 
                        "net.minecraft.nbt.NBTTagCompound.setString" | 
                        "net.minecraft.nbt.NBTTagCompound.getTagId" | 
                        "net.minecraft.nbt.NBTTagCompound.equals" | 
                        "net.minecraft.nbt.NBTTagCompound.setByteArray" | 
                        "net.minecraft.nbt.NBTTagCompound.getByteArray" | 
                        "net.minecraft.nbt.NBTTagCompound.toString" | 
                        "net.minecraft.nbt.NBTTagCompound.setIntArray" | 
                        "net.minecraft.nbt.NBTTagCompound.getIntArray" | 
                        "net.minecraft.nbt.NBTTagCompound.setBoolean" | 
                        "org.cef.handler.CefClientHandler.removeDialogHandler" | 
                        "org.cef.handler.CefClientHandler.removeLoadHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeDownloadHandler" | 
                        "org.cef.handler.CefClientHandler.N_removePrintHandler" | 
                        "org.cef.handler.CefClientHandler.N_addMessageRouter" | 
                        "org.cef.handler.CefClientHandler.N_removeKeyboardHandler" | 
                        "org.cef.handler.CefClientHandler.removeDragHandler" | 
                        "org.cef.handler.CefClientHandler.setNativeRef" | 
                        "org.cef.handler.CefClientHandler.getNativeRef" | 
                        "org.cef.handler.CefClientHandler.getRenderHandler" | 
                        "org.cef.handler.CefClientHandler.removeRequestHandler" | 
                        "org.cef.handler.CefClientHandler.removePrintHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeLifeSpanHandler" | 
                        "org.cef.handler.CefClientHandler.getAllBrowser" | 
                        "org.cef.handler.CefClientHandler.removeLifeSpanHandler" | 
                        "org.cef.handler.CefClientHandler.removeJSDialogHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeDisplayHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeJSDialogHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeRenderHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeWindowHandler" | 
                        "org.cef.handler.CefClientHandler.removeContextMenuHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeDialogHandler" | 
                        "org.cef.handler.CefClientHandler.getDragHandler" | 
                        "org.cef.handler.CefClientHandler.getDisplayHandler" | 
                        "org.cef.handler.CefClientHandler.getJSDialogHandler" | 
                        "org.cef.handler.CefClientHandler.getContextMenuHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeMessageRouter" | 
                        "org.cef.handler.CefClientHandler.dispose" | 
                        "org.cef.handler.CefClientHandler.getBrowser" | 
                        "org.cef.handler.CefClientHandler.removeRenderHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeFocusHandler" | 
                        "org.cef.handler.CefClientHandler.getPrintHandler" | 
                        "org.cef.handler.CefClientHandler.removeFocusHandler" | 
                        "org.cef.handler.CefClientHandler.removeWindowHandler" | 
                        "org.cef.handler.CefClientHandler.N_CefClientHandler_DTOR" | 
                        "org.cef.handler.CefClientHandler.getDownloadHandler" | 
                        "org.cef.handler.CefClientHandler.getKeyboardHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeLoadHandler" | 
                        "org.cef.handler.CefClientHandler.N_removeContextMenuHandler" | 
                        "org.cef.handler.CefClientHandler.getLoadHandler" | 
                        "org.cef.handler.CefClientHandler.getLifeSpanHandler" | 
                        "org.cef.handler.CefClientHandler.N_CefClientHandler_CTOR" | 
                        "org.cef.handler.CefClientHandler.N_removeDragHandler" | 
                        "org.cef.handler.CefClientHandler.getWindowHandler" | 
                        "org.cef.handler.CefClientHandler.getRequestHandler" | 
                        "org.cef.handler.CefClientHandler.getFocusHandler" | 
                        "org.cef.handler.CefClientHandler.removeDisplayHandler" | 
                        "org.cef.handler.CefClientHandler.removeMessageRouter" | 
                        "org.cef.handler.CefClientHandler.removeDownloadHandler" | 
                        "org.cef.handler.CefClientHandler.getDialogHandler" | 
                        "org.cef.handler.CefClientHandler.removeKeyboardHandler" | 
                        "org.cef.handler.CefClientHandler.addMessageRouter" | 
                        "org.cef.handler.CefClientHandler.N_removeRequestHandler" | 
                        "net.minecraft.block.BlockBeacon.getBlockLayer" | 
                        "net.minecraft.block.BlockBeacon.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockBeacon.onBlockActivated" | 
                        "net.minecraft.block.BlockBeacon.createNewTileEntity" | 
                        "net.minecraft.block.BlockBeacon.isFullCube" | 
                        "net.minecraft.block.BlockBeacon.onBlockPlacedBy" | 
                        "net.minecraft.block.BlockBeacon.getRenderType" | 
                        "net.minecraft.block.BlockBeacon.isOpaqueCube" | 
                        "net.minecraft.entity.item.EntityMinecart.performHurtAnimation" | 
                        "net.minecraft.entity.item.EntityMinecart.getCollisionBox" | 
                        "net.minecraft.entity.item.EntityMinecart.applyDrag" | 
                        "net.minecraft.entity.item.EntityMinecart.getName" | 
                        "net.minecraft.entity.item.EntityMinecart.getCollisionBoundingBox" | 
                        "net.minecraft.entity.item.EntityMinecart.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityMinecart.entityInit" | 
                        "net.minecraft.entity.item.EntityMinecart.applyEntityCollision" | 
                        "net.minecraft.entity.item.EntityMinecart.getDefaultDisplayTileOffset" | 
                        "net.minecraft.entity.item.EntityMinecart.func_70495_a" | 
                        "net.minecraft.entity.item.EntityMinecart.getDisplayTileOffset" | 
                        "net.minecraft.entity.item.EntityMinecart.setDamage" | 
                        "net.minecraft.entity.item.EntityMinecart.getRollingAmplitude" | 
                        "net.minecraft.entity.item.EntityMinecart.getCustomNameTag" | 
                        "net.minecraft.entity.item.EntityMinecart.setPosition" | 
                        "net.minecraft.entity.item.EntityMinecart.attackEntityFrom" | 
                        "net.minecraft.entity.item.EntityMinecart.getMinecartType" | 
                        "net.minecraft.entity.item.EntityMinecart.setVelocity" | 
                        "net.minecraft.entity.item.EntityMinecart.hasCustomName" | 
                        "net.minecraft.entity.item.EntityMinecart.func_70489_a" | 
                        "net.minecraft.entity.item.EntityMinecart.moveDerailedMinecart" | 
                        "net.minecraft.entity.item.EntityMinecart.setDisplayTileOffset" | 
                        "net.minecraft.entity.item.EntityMinecart.getDisplayTile" | 
                        "net.minecraft.entity.item.EntityMinecart.onActivatorRailPass" | 
                        "net.minecraft.entity.item.EntityMinecart.getDefaultDisplayTile" | 
                        "net.minecraft.entity.item.EntityMinecart.getDamage" | 
                        "net.minecraft.entity.item.EntityMinecart.setCustomNameTag" | 
                        "net.minecraft.entity.item.EntityMinecart.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityMinecart.getMountedYOffset" | 
                        "net.minecraft.entity.item.EntityMinecart.getMaximumSpeed" | 
                        "net.minecraft.entity.item.EntityMinecart.canTriggerWalking" | 
                        "net.minecraft.entity.item.EntityMinecart.func_180460_a" | 
                        "net.minecraft.entity.item.EntityMinecart.setHasDisplayTile" | 
                        "net.minecraft.entity.item.EntityMinecart.setDead" | 
                        "net.minecraft.entity.item.EntityMinecart.canBeCollidedWith" | 
                        "net.minecraft.entity.item.EntityMinecart.killMinecart" | 
                        "net.minecraft.entity.item.EntityMinecart.hasDisplayTile" | 
                        "net.minecraft.entity.item.EntityMinecart.setPositionAndRotation2" | 
                        "net.minecraft.entity.item.EntityMinecart.getDisplayName" | 
                        "net.minecraft.entity.item.EntityMinecart.canBePushed" | 
                        "net.minecraft.entity.item.EntityMinecart.func_174899_a" | 
                        "net.minecraft.entity.item.EntityMinecart.setRollingAmplitude" | 
                        "net.minecraft.entity.item.EntityMinecart.setRollingDirection" | 
                        "net.minecraft.entity.item.EntityMinecart.getRollingDirection" | 
                        "net.minecraft.entity.item.EntityMinecart.onUpdate" | 
                        "net.minecraft.client.shader.Framebuffer.createFramebuffer" | 
                        "net.minecraft.client.shader.Framebuffer.framebufferRender" | 
                        "net.minecraft.client.shader.Framebuffer.unbindFramebuffer" | 
                        "net.minecraft.client.shader.Framebuffer.createBindFramebuffer" | 
                        "net.minecraft.client.shader.Framebuffer.deleteFramebuffer" | 
                        "net.minecraft.client.shader.Framebuffer.setFramebufferFilter" | 
                        "net.minecraft.client.shader.Framebuffer.bindFramebufferTexture" | 
                        "net.minecraft.client.shader.Framebuffer.bindFramebuffer" | 
                        "net.minecraft.client.shader.Framebuffer.setFramebufferColor" | 
                        "net.minecraft.client.shader.Framebuffer.checkFramebufferComplete" | 
                        "net.minecraft.client.shader.Framebuffer.framebufferClear" | 
                        "net.minecraft.client.shader.Framebuffer.unbindFramebufferTexture" | 
                        "net.minecraft.client.shader.Framebuffer.framebufferRenderExt" | 
                        "net.minecraft.client.renderer.entity.RenderSquid.handleRotationFloat" | 
                        "net.minecraft.client.renderer.entity.RenderSquid.rotateCorpse" | 
                        "net.minecraft.client.renderer.entity.RenderSquid.getEntityTexture" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiListEntry.func_178935_b" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiListEntry.func_178934_d" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiListEntry.func_178936_c" | 
                        "net.minecraft.enchantment.Enchantment.setName" | 
                        "net.minecraft.enchantment.Enchantment.getName" | 
                        "net.minecraft.enchantment.Enchantment.getMinEnchantability" | 
                        "net.minecraft.enchantment.Enchantment.getWeight" | 
                        "net.minecraft.enchantment.Enchantment.onUserHurt" | 
                        "net.minecraft.enchantment.Enchantment.getMaxLevel" | 
                        "net.minecraft.enchantment.Enchantment.canApplyTogether" | 
                        "net.minecraft.enchantment.Enchantment.canApply" | 
                        "net.minecraft.enchantment.Enchantment.getTranslatedName" | 
                        "net.minecraft.enchantment.Enchantment.onEntityDamaged" | 
                        "net.minecraft.enchantment.Enchantment.getMaxEnchantability" | 
                        "net.minecraft.enchantment.Enchantment.getMinLevel" | 
                        "net.minecraft.enchantment.Enchantment.calcDamageByCreature" | 
                        "net.minecraft.enchantment.Enchantment.calcModifierDamage" | 
                        "slice.legacy.clickgui.pane.SettingPane.getModule" | 
                        "slice.legacy.clickgui.pane.SettingPane.setY" | 
                        "slice.legacy.clickgui.pane.SettingPane.formatDouble" | 
                        "slice.legacy.clickgui.pane.SettingPane.setX" | 
                        "slice.legacy.clickgui.pane.SettingPane.getSettings" | 
                        "slice.legacy.clickgui.pane.SettingPane.getWidth" | 
                        "slice.legacy.clickgui.pane.SettingPane.setWidth" | 
                        "slice.legacy.clickgui.pane.SettingPane.setHeight" | 
                        "slice.legacy.clickgui.pane.SettingPane.getLargestSetting" | 
                        "slice.legacy.clickgui.pane.SettingPane.mouseReleased" | 
                        "slice.legacy.clickgui.pane.SettingPane.setSettings" | 
                        "slice.legacy.clickgui.pane.SettingPane.getX" | 
                        "slice.legacy.clickgui.pane.SettingPane.getHeight" | 
                        "slice.legacy.clickgui.pane.SettingPane.getY" | 
                        "slice.legacy.clickgui.pane.SettingPane.mouseClicked" | 
                        "slice.legacy.clickgui.pane.SettingPane.drawPane" | 
                        "slice.legacy.clickgui.pane.SettingPane.setModule" | 
                        "org.cef.ccbluex.WindowView.getBrowserScale" | 
                        "org.cef.ccbluex.WindowView.setY" | 
                        "org.cef.ccbluex.WindowView.setX" | 
                        "org.cef.ccbluex.WindowView.setBrowserScale" | 
                        "org.cef.ccbluex.WindowView.setMinWidth" | 
                        "org.cef.ccbluex.WindowView.setTransparent" | 
                        "org.cef.ccbluex.WindowView.setHandleInput" | 
                        "org.cef.ccbluex.WindowView.setTextField" | 
                        "org.cef.ccbluex.WindowView.getDragOffsetY" | 
                        "org.cef.ccbluex.WindowView.setLastFocusUpdate" | 
                        "org.cef.ccbluex.WindowView.getWidth" | 
                        "org.cef.ccbluex.WindowView.keyModifiers" | 
                        "org.cef.ccbluex.WindowView.getDragOffsetX" | 
                        "org.cef.ccbluex.WindowView.coerceAtLeast" | 
                        "org.cef.ccbluex.WindowView.mouseModifiers" | 
                        "org.cef.ccbluex.WindowView.getCefRenderer" | 
                        "org.cef.ccbluex.WindowView.getHeight" | 
                        "org.cef.ccbluex.WindowView.getMinWidth" | 
                        "org.cef.ccbluex.WindowView.getMinHeight" | 
                        "org.cef.ccbluex.WindowView.getMc" | 
                        "org.cef.ccbluex.WindowView.isTransparent" | 
                        "org.cef.ccbluex.WindowView.isDrag" | 
                        "org.cef.ccbluex.WindowView.render" | 
                        "org.cef.ccbluex.WindowView.setMinHeight" | 
                        "org.cef.ccbluex.WindowView.getText1" | 
                        "org.cef.ccbluex.WindowView.setCefRenderer" | 
                        "org.cef.ccbluex.WindowView.setScale" | 
                        "org.cef.ccbluex.WindowView.getTextField" | 
                        "org.cef.ccbluex.WindowView.setDragOffsetY" | 
                        "org.cef.ccbluex.WindowView.setFocus" | 
                        "org.cef.ccbluex.WindowView.isScale" | 
                        "org.cef.ccbluex.WindowView.getCefBrowser" | 
                        "org.cef.ccbluex.WindowView.setWidth" | 
                        "org.cef.ccbluex.WindowView.setHeight" | 
                        "org.cef.ccbluex.WindowView.getX" | 
                        "org.cef.ccbluex.WindowView.getY" | 
                        "org.cef.ccbluex.WindowView.isFocus" | 
                        "org.cef.ccbluex.WindowView.setDragOffsetX" | 
                        "org.cef.ccbluex.WindowView.setShowTitle" | 
                        "org.cef.ccbluex.WindowView.isHandleInput" | 
                        "org.cef.ccbluex.WindowView.isShowTitle" | 
                        "org.cef.ccbluex.WindowView.setCefBrowser" | 
                        "org.cef.ccbluex.WindowView.getLastFocusUpdate" | 
                        "org.cef.ccbluex.WindowView.setDrag" | 
                        "net.minecraft.world.WorldSavedData.readFromNBT" | 
                        "net.minecraft.world.WorldSavedData.isDirty" | 
                        "net.minecraft.world.WorldSavedData.markDirty" | 
                        "net.minecraft.world.WorldSavedData.writeToNBT" | 
                        "net.minecraft.world.WorldSavedData.setDirty" | 
                        "net.minecraft.enchantment.EnchantmentWaterWalker.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentWaterWalker.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentWaterWalker.getMaxLevel" | 
                        "net.minecraft.entity.ai.EntityAIControlledByPlayer.isControlledByPlayer" | 
                        "net.minecraft.entity.ai.EntityAIControlledByPlayer.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIControlledByPlayer.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIControlledByPlayer.boostSpeed" | 
                        "net.minecraft.entity.ai.EntityAIControlledByPlayer.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIControlledByPlayer.isSpeedBoosted" | 
                        "net.minecraft.entity.ai.EntityAIControlledByPlayer.isStairOrSlab" | 
                        "net.minecraft.entity.ai.EntityAIControlledByPlayer.startExecuting" | 
                        "net.optifine.CustomLoadingScreen.drawBackground" | 
                        "net.minecraft.world.biome.BiomeEndDecorator.genDecorations" | 
                        "org.cef.browser.CefFrame.getParent" | 
                        "org.cef.browser.CefFrame.getName" | 
                        "org.cef.browser.CefFrame.cut" | 
                        "org.cef.browser.CefFrame.isMain" | 
                        "org.cef.browser.CefFrame.isValid" | 
                        "org.cef.browser.CefFrame.paste" | 
                        "org.cef.browser.CefFrame.redo" | 
                        "org.cef.browser.CefFrame.isFocused" | 
                        "org.cef.browser.CefFrame.getURL" | 
                        "org.cef.browser.CefFrame.executeJavaScript" | 
                        "org.cef.browser.CefFrame.undo" | 
                        "org.cef.browser.CefFrame.getIdentifier" | 
                        "org.cef.browser.CefFrame.dispose" | 
                        "org.cef.browser.CefFrame.copy" | 
                        "net.optifine.expr.FunctionBool.eval" | 
                        "net.optifine.expr.FunctionBool.getExpressionType" | 
                        "net.optifine.expr.FunctionBool.toString" | 
                        "net.minecraft.block.BlockWeb.getBlockLayer" | 
                        "net.minecraft.block.BlockWeb.canSilkHarvest" | 
                        "net.minecraft.block.BlockWeb.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockWeb.onEntityCollidedWithBlock" | 
                        "net.minecraft.block.BlockWeb.isFullCube" | 
                        "net.minecraft.block.BlockWeb.isOpaqueCube" | 
                        "net.minecraft.block.BlockWeb.getItemDropped" | 
                        "net.minecraft.item.crafting.ShapelessRecipes.getRecipeOutput" | 
                        "net.minecraft.item.crafting.ShapelessRecipes.getRemainingItems" | 
                        "net.minecraft.item.crafting.ShapelessRecipes.getCraftingResult" | 
                        "net.minecraft.item.crafting.ShapelessRecipes.getRecipeSize" | 
                        "net.minecraft.item.crafting.ShapelessRecipes.matches" | 
                        "net.minecraft.enchantment.EnchantmentLootBonus.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentLootBonus.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentLootBonus.getMaxLevel" | 
                        "net.minecraft.enchantment.EnchantmentLootBonus.canApplyTogether" | 
                        "org.cef.handler.CefResourceRequestHandler.getResourceHandler" | 
                        "org.cef.handler.CefResourceRequestHandler.onResourceResponse" | 
                        "org.cef.handler.CefResourceRequestHandler.getCookieAccessFilter" | 
                        "org.cef.handler.CefResourceRequestHandler.onResourceRedirect" | 
                        "org.cef.handler.CefResourceRequestHandler.onBeforeResourceLoad" | 
                        "org.cef.handler.CefResourceRequestHandler.onResourceLoadComplete" | 
                        "org.cef.handler.CefResourceRequestHandler.onProtocolExecution" | 
                        "net.minecraft.util.FoodStats.getSaturationLevel" | 
                        "net.minecraft.util.FoodStats.writeNBT" | 
                        "net.minecraft.util.FoodStats.addStats" | 
                        "net.minecraft.util.FoodStats.setFoodSaturationLevel" | 
                        "net.minecraft.util.FoodStats.needFood" | 
                        "net.minecraft.util.FoodStats.addExhaustion" | 
                        "net.minecraft.util.FoodStats.setFoodLevel" | 
                        "net.minecraft.util.FoodStats.getFoodLevel" | 
                        "net.minecraft.util.FoodStats.onUpdate" | 
                        "net.minecraft.util.FoodStats.readNBT" | 
                        "net.minecraft.util.FoodStats.getPrevFoodLevel" | 
                        "net.minecraft.tileentity.TileEntityPiston.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityPiston.clearPistonTileEntity" | 
                        "net.minecraft.tileentity.TileEntityPiston.shouldPistonHeadBeRendered" | 
                        "net.minecraft.tileentity.TileEntityPiston.update" | 
                        "net.minecraft.tileentity.TileEntityPiston.getBlockMetadata" | 
                        "net.minecraft.tileentity.TileEntityPiston.getProgress" | 
                        "net.minecraft.tileentity.TileEntityPiston.isExtending" | 
                        "net.minecraft.tileentity.TileEntityPiston.getOffsetX" | 
                        "net.minecraft.tileentity.TileEntityPiston.launchWithSlimeBlock" | 
                        "net.minecraft.tileentity.TileEntityPiston.getOffsetY" | 
                        "net.minecraft.tileentity.TileEntityPiston.getOffsetZ" | 
                        "net.minecraft.tileentity.TileEntityPiston.getPistonState" | 
                        "net.minecraft.tileentity.TileEntityPiston.getFacing" | 
                        "net.minecraft.tileentity.TileEntityPiston.writeToNBT" | 
                        "net.minecraft.util.Vec4b.func_176111_d" | 
                        "net.minecraft.util.Vec4b.func_176112_b" | 
                        "net.minecraft.util.Vec4b.hashCode" | 
                        "net.minecraft.util.Vec4b.equals" | 
                        "net.minecraft.util.Vec4b.func_176113_c" | 
                        "net.minecraft.util.Vec4b.func_176110_a" | 
                        "net.optifine.entity.model.anim.RenderEntityParameterBool.getName" | 
                        "net.optifine.entity.model.anim.RenderEntityParameterBool.eval" | 
                        "net.optifine.entity.model.anim.RenderEntityParameterBool.getExpressionType" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Straight.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Straight.buildComponent" | 
                        "net.optifine.gui.GuiScreenOF.actionPerformedRightClick" | 
                        "net.optifine.gui.GuiScreenOF.mouseClicked" | 
                        "net.minecraft.command.CommandWorldBorder.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandWorldBorder.getCommandUsage" | 
                        "net.minecraft.command.CommandWorldBorder.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandWorldBorder.processCommand" | 
                        "net.minecraft.command.CommandWorldBorder.getCommandName" | 
                        "net.minecraft.command.CommandWorldBorder.getWorldBorder" | 
                        "net.minecraft.scoreboard.ScoreObjective.getCriteria" | 
                        "net.minecraft.scoreboard.ScoreObjective.getName" | 
                        "net.minecraft.scoreboard.ScoreObjective.setRenderType" | 
                        "net.minecraft.scoreboard.ScoreObjective.getDisplayName" | 
                        "net.minecraft.scoreboard.ScoreObjective.getScoreboard" | 
                        "net.minecraft.scoreboard.ScoreObjective.getRenderType" | 
                        "net.minecraft.scoreboard.ScoreObjective.setDisplayName" | 
                        "net.minecraft.command.server.CommandDeOp.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandDeOp.getCommandUsage" | 
                        "net.minecraft.command.server.CommandDeOp.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandDeOp.processCommand" | 
                        "net.minecraft.command.server.CommandDeOp.getCommandName" | 
                        "net.optifine.TextureAnimation.getSrcTex" | 
                        "net.optifine.TextureAnimation.updateTexture" | 
                        "net.optifine.TextureAnimation.getCurrentFrame" | 
                        "net.optifine.TextureAnimation.nextFrame" | 
                        "net.optifine.TextureAnimation.updateTextureInerpolate" | 
                        "net.optifine.TextureAnimation.getFrame" | 
                        "net.optifine.TextureAnimation.getDstTexLoc" | 
                        "net.optifine.TextureAnimation.isActive" | 
                        "net.optifine.TextureAnimation.getFrameCount" | 
                        "net.optifine.TextureAnimation.mix" | 
                        "net.optifine.TextureAnimation.getDstTex" | 
                        "net.minecraft.client.renderer.ImageBufferDownload.hasTransparency" | 
                        "net.minecraft.client.renderer.ImageBufferDownload.parseUserSkin" | 
                        "net.minecraft.client.renderer.ImageBufferDownload.setAreaTransparent" | 
                        "net.minecraft.client.renderer.ImageBufferDownload.skinAvailable" | 
                        "net.minecraft.client.renderer.ImageBufferDownload.setAreaOpaque" | 
                        "net.optifine.render.RenderEnv.setOverlaysRendered" | 
                        "net.optifine.render.RenderEnv.getBoundsFlags" | 
                        "net.optifine.render.RenderEnv.getMetadata" | 
                        "net.optifine.render.RenderEnv.isBreakingAnimation" | 
                        "net.optifine.render.RenderEnv.getListQuadsOverlay" | 
                        "net.optifine.render.RenderEnv.getArrayQuadsCtm" | 
                        "net.optifine.render.RenderEnv.isOverlaysRendered" | 
                        "net.optifine.render.RenderEnv.getListQuadsCtmMultipass" | 
                        "net.optifine.render.RenderEnv.getBorderFlags2" | 
                        "net.optifine.render.RenderEnv.getBorderFlags" | 
                        "net.optifine.render.RenderEnv.isSmartLeaves" | 
                        "net.optifine.render.RenderEnv.getBorderDirections" | 
                        "net.optifine.render.RenderEnv.getBorderFlags3" | 
                        "net.optifine.render.RenderEnv.getBlockId" | 
                        "net.optifine.render.RenderEnv.getQuadBounds" | 
                        "net.optifine.render.RenderEnv.getListQuadsCustomizer" | 
                        "net.optifine.render.RenderEnv.setRegionRenderCacheBuilder" | 
                        "net.optifine.render.RenderEnv.reset" | 
                        "net.optifine.render.RenderEnv.getAoFace" | 
                        "net.optifine.render.RenderEnv.getBlockState" | 
                        "net.optifine.render.RenderEnv.getRegionRenderCacheBuilder" | 
                        "net.optifine.render.RenderEnv.getColorizerBlockPosM" | 
                        "net.minecraft.command.CommandException.getErrorObjects" | 
                        "net.minecraft.world.gen.FlatGeneratorInfo.func_82645_d" | 
                        "net.minecraft.world.gen.FlatGeneratorInfo.getFlatLayers" | 
                        "net.minecraft.world.gen.FlatGeneratorInfo.toString" | 
                        "net.minecraft.world.gen.FlatGeneratorInfo.setBiome" | 
                        "net.minecraft.world.gen.FlatGeneratorInfo.getWorldFeatures" | 
                        "net.minecraft.world.gen.FlatGeneratorInfo.getBiome" | 
                        "net.optifine.entity.model.ModelAdapterCreeper.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterCreeper.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterCreeper.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterCreeper.getModelRendererNames" | 
                        "net.minecraft.event.HoverEvent.getValue" | 
                        "net.minecraft.event.HoverEvent.hashCode" | 
                        "net.minecraft.event.HoverEvent.equals" | 
                        "net.minecraft.event.HoverEvent.toString" | 
                        "net.minecraft.event.HoverEvent.getAction" | 
                        "net.minecraft.client.renderer.entity.RenderEnderman.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderEnderman.getEntityTexture" | 
                        "slice.command.commands.CommandVClip.handle" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree$FoliageCoordinates.func_177999_q" | 
                        "net.optifine.expr.ConstantFloat.eval" | 
                        "net.optifine.expr.ConstantFloat.getExpressionType" | 
                        "net.optifine.expr.ConstantFloat.toString" | 
                        "net.minecraft.block.BlockDirt.getMetaFromState" | 
                        "net.minecraft.block.BlockDirt.damageDropped" | 
                        "net.minecraft.block.BlockDirt.getMapColor" | 
                        "net.minecraft.block.BlockDirt.createBlockState" | 
                        "net.minecraft.block.BlockDirt.getDamageValue" | 
                        "net.minecraft.block.BlockDirt.getStateFromMeta" | 
                        "net.minecraft.block.BlockDirt.getActualState" | 
                        "net.minecraft.block.BlockDirt.getSubBlocks" | 
                        "net.optifine.shaders.uniform.ShaderUniformM4.getValue" | 
                        "net.optifine.shaders.uniform.ShaderUniformM4.onProgramSet" | 
                        "net.optifine.shaders.uniform.ShaderUniformM4.setValue" | 
                        "net.optifine.shaders.uniform.ShaderUniformM4.resetValue" | 
                        "net.minecraft.util.IntHashMap$Entry.getValue" | 
                        "net.minecraft.util.IntHashMap$Entry.getHash" | 
                        "net.minecraft.util.IntHashMap$Entry.hashCode" | 
                        "net.minecraft.util.IntHashMap$Entry.equals" | 
                        "net.minecraft.util.IntHashMap$Entry.toString" | 
                        "net.minecraft.client.gui.GuiOptionButton.returnEnumOptions" | 
                        "net.minecraft.realms.DisconnectedRealmsScreen.init" | 
                        "net.minecraft.realms.DisconnectedRealmsScreen.keyPressed" | 
                        "net.minecraft.realms.DisconnectedRealmsScreen.buttonClicked" | 
                        "net.minecraft.realms.DisconnectedRealmsScreen.render" | 
                        "net.minecraft.client.gui.GuiConfirmOpenLink.actionPerformed" | 
                        "net.minecraft.client.gui.GuiConfirmOpenLink.disableSecurityWarning" | 
                        "net.minecraft.client.gui.GuiConfirmOpenLink.initGui" | 
                        "net.minecraft.client.gui.GuiConfirmOpenLink.drawScreen" | 
                        "net.minecraft.client.gui.GuiConfirmOpenLink.copyLinkToClipboard" | 
                        "net.minecraft.world.storage.SaveDataMemoryStorage.setData" | 
                        "net.minecraft.world.storage.SaveDataMemoryStorage.loadData" | 
                        "net.minecraft.world.storage.SaveDataMemoryStorage.saveAllData" | 
                        "net.minecraft.world.storage.SaveDataMemoryStorage.getUniqueDataId" | 
                        "slice.notification.Type.getName" | 
                        "net.minecraft.block.BlockMushroom.grow" | 
                        "net.minecraft.block.BlockMushroom.generateBigMushroom" | 
                        "net.minecraft.block.BlockMushroom.canPlaceBlockOn" | 
                        "net.minecraft.block.BlockMushroom.updateTick" | 
                        "net.minecraft.block.BlockMushroom.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockMushroom.canUseBonemeal" | 
                        "net.minecraft.block.BlockMushroom.canGrow" | 
                        "net.minecraft.block.BlockMushroom.canBlockStay" | 
                        "net.minecraft.world.gen.layer.GenLayerRareBiome.getInts" | 
                        "net.minecraft.client.particle.EntityDiggingFX.getBrightnessForRender" | 
                        "net.minecraft.client.particle.EntityDiggingFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityDiggingFX.getFXLayer" | 
                        "net.minecraft.client.particle.EntityDiggingFX.setBlockPos" | 
                        "net.minecraft.client.particle.EntityDiggingFX.func_174845_l" | 
                        "net.minecraft.world.gen.feature.WorldGenWaterlily.generate" | 
                        "net.minecraft.entity.ai.EntityAILookAtTradePlayer.shouldExecute" | 
                        "net.minecraft.client.renderer.RenderList.renderChunkLayer" | 
                        "net.minecraft.client.renderer.RenderList.preRenderRegion" | 
                        "net.minecraft.client.renderer.RenderList.drawRegion" | 
                        "net.minecraft.client.renderer.RenderList.initialize" | 
                        "net.minecraft.entity.ai.EntityJumpHelper.setJumping" | 
                        "net.minecraft.entity.ai.EntityJumpHelper.doJump" | 
                        "net.minecraft.command.server.CommandMessage.isUsernameIndex" | 
                        "net.minecraft.command.server.CommandMessage.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandMessage.getCommandUsage" | 
                        "net.minecraft.command.server.CommandMessage.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandMessage.processCommand" | 
                        "net.minecraft.command.server.CommandMessage.getCommandName" | 
                        "net.minecraft.command.server.CommandMessage.getCommandAliases" | 
                        "net.minecraft.client.renderer.block.model.ModelBlockDefinition$Variant.getModelLocation" | 
                        "net.minecraft.client.renderer.block.model.ModelBlockDefinition$Variant.hashCode" | 
                        "net.minecraft.client.renderer.block.model.ModelBlockDefinition$Variant.getWeight" | 
                        "net.minecraft.client.renderer.block.model.ModelBlockDefinition$Variant.equals" | 
                        "net.minecraft.client.renderer.block.model.ModelBlockDefinition$Variant.getRotation" | 
                        "net.minecraft.client.renderer.block.model.ModelBlockDefinition$Variant.isUvLocked" | 
                        "net.minecraft.client.renderer.entity.RenderZombie.func_82427_a" | 
                        "net.minecraft.client.renderer.entity.RenderZombie.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderZombie.rotateCorpse" | 
                        "net.minecraft.client.renderer.entity.RenderZombie.getEntityTexture" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Start.getWorldChunkManager" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Cross.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Cross.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Cross.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Cross.writeStructureToNBT" | 
                        "net.optifine.expr.ParametersVariable.getRepeat" | 
                        "net.optifine.expr.ParametersVariable.last" | 
                        "net.optifine.expr.ParametersVariable.getFirst" | 
                        "net.optifine.expr.ParametersVariable.repeat" | 
                        "net.optifine.expr.ParametersVariable.getParameterTypes" | 
                        "net.optifine.expr.ParametersVariable.getLast" | 
                        "net.optifine.expr.ParametersVariable.maxCount" | 
                        "net.optifine.expr.ParametersVariable.first" | 
                        "net.optifine.expr.ParametersVariable.getCountRepeat" | 
                        "net.minecraft.block.BlockPressurePlate.getMetaFromState" | 
                        "net.minecraft.block.BlockPressurePlate.createBlockState" | 
                        "net.minecraft.block.BlockPressurePlate.getRedstoneStrength" | 
                        "net.minecraft.block.BlockPressurePlate.setRedstoneStrength" | 
                        "net.minecraft.block.BlockPressurePlate.computeRedstoneStrength" | 
                        "net.minecraft.block.BlockPressurePlate.getStateFromMeta" | 
                        "net.minecraft.inventory.Container.putStackInSlot" | 
                        "net.minecraft.inventory.Container.slotClick" | 
                        "net.minecraft.inventory.Container.setCanCraft" | 
                        "net.minecraft.inventory.Container.onContainerClosed" | 
                        "net.minecraft.inventory.Container.putStacksInSlots" | 
                        "net.minecraft.inventory.Container.getInventory" | 
                        "net.minecraft.inventory.Container.onCraftGuiOpened" | 
                        "net.minecraft.inventory.Container.updateProgressBar" | 
                        "net.minecraft.inventory.Container.detectAndSendChanges" | 
                        "net.minecraft.inventory.Container.getCanCraft" | 
                        "net.minecraft.inventory.Container.transferStackInSlot" | 
                        "net.minecraft.inventory.Container.onCraftMatrixChanged" | 
                        "net.minecraft.inventory.Container.removeCraftingFromCrafters" | 
                        "net.minecraft.inventory.Container.canInteractWith" | 
                        "net.minecraft.inventory.Container.canDragIntoSlot" | 
                        "net.minecraft.inventory.Container.getSlot" | 
                        "net.minecraft.inventory.Container.getSlotFromInventory" | 
                        "net.minecraft.inventory.Container.addSlotToContainer" | 
                        "net.minecraft.inventory.Container.canMergeSlot" | 
                        "net.minecraft.inventory.Container.resetDrag" | 
                        "net.minecraft.inventory.Container.retrySlotClick" | 
                        "net.minecraft.inventory.Container.enchantItem" | 
                        "net.minecraft.inventory.Container.mergeItemStack" | 
                        "net.minecraft.inventory.Container.getNextTransactionID" | 
                        "net.minecraft.client.gui.GuiListExtended.mouseReleased" | 
                        "net.minecraft.client.gui.GuiListExtended.elementClicked" | 
                        "net.minecraft.client.gui.GuiListExtended.drawSlot" | 
                        "net.minecraft.client.gui.GuiListExtended.func_178040_a" | 
                        "net.minecraft.client.gui.GuiListExtended.drawBackground" | 
                        "net.minecraft.client.gui.GuiListExtended.mouseClicked" | 
                        "net.minecraft.client.gui.GuiListExtended.isSelected" | 
                        "net.minecraft.client.gui.GuiListExtended.getListEntry" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.generateStructure" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.isPositionInStructure" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.getCoordList" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.getStructureStart" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.getClosestStrongholdPos" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.initializeStructureData" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.func_175795_b" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.setStructureStart" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.func_175797_c" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.canSpawnStructureAtCoords" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.recursiveGenerate" | 
                        "net.minecraft.world.gen.structure.MapGenStructure.getStructureName" | 
                        "net.minecraft.block.BlockPlanks$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockPlanks$EnumType.getName" | 
                        "net.minecraft.block.BlockPlanks$EnumType.getMapColor" | 
                        "net.minecraft.block.BlockPlanks$EnumType.toString" | 
                        "net.minecraft.block.BlockPlanks$EnumType.getUnlocalizedName" | 
                        "slice.gui.alt.HTMLAlt.initGui" | 
                        "slice.gui.alt.HTMLAlt.drawScreen" | 
                        "net.minecraft.client.gui.Gui.drawGradientRect" | 
                        "net.minecraft.client.gui.Gui.drawTexturedModalRect" | 
                        "net.minecraft.client.gui.Gui.drawHorizontalLine" | 
                        "net.minecraft.client.gui.Gui.drawString" | 
                        "net.minecraft.client.gui.Gui.drawVerticalLine" | 
                        "net.minecraft.world.biome.BiomeGenBase$SpawnListEntry.toString" | 
                        "net.minecraft.client.resources.model.ModelManager.getBlockModelShapes" | 
                        "net.minecraft.client.resources.model.ModelManager.getModel" | 
                        "net.minecraft.client.resources.model.ModelManager.getTextureMap" | 
                        "net.minecraft.client.resources.model.ModelManager.getMissingModel" | 
                        "net.minecraft.client.resources.model.ModelManager.onResourceManagerReload" | 
                        "org.cef.handler.CefFocusHandler.onSetFocus" | 
                        "org.cef.handler.CefFocusHandler.onTakeFocus" | 
                        "org.cef.handler.CefFocusHandler.onGotFocus" | 
                        "com.sliceclient.anticheat.check.checks.movement.ground.GroundSpoofA.onPlayerUpdate" | 
                        "net.minecraft.village.VillageDoorInfo.getInsidePosY" | 
                        "net.minecraft.village.VillageDoorInfo.getDistanceToDoorBlockSq" | 
                        "net.minecraft.village.VillageDoorInfo.getDoorBlockPos" | 
                        "net.minecraft.village.VillageDoorInfo.func_179850_c" | 
                        "net.minecraft.village.VillageDoorInfo.resetDoorOpeningRestrictionCounter" | 
                        "net.minecraft.village.VillageDoorInfo.getIsDetachedFromVillageFlag" | 
                        "net.minecraft.village.VillageDoorInfo.incrementDoorOpeningRestrictionCounter" | 
                        "net.minecraft.village.VillageDoorInfo.getDistanceToInsideBlockSq" | 
                        "net.minecraft.village.VillageDoorInfo.setIsDetachedFromVillageFlag" | 
                        "net.minecraft.village.VillageDoorInfo.getDoorOpeningRestrictionCounter" | 
                        "net.minecraft.village.VillageDoorInfo.getInsideOffsetZ" | 
                        "net.minecraft.village.VillageDoorInfo.getDistanceSquared" | 
                        "net.minecraft.village.VillageDoorInfo.getInsideBlockPos" | 
                        "net.minecraft.village.VillageDoorInfo.getInsideOffsetX" | 
                        "net.minecraft.village.VillageDoorInfo.func_179849_a" | 
                        "net.minecraft.entity.passive.EntitySquid$AIMoveRandom.updateTask" | 
                        "net.minecraft.entity.passive.EntitySquid$AIMoveRandom.shouldExecute" | 
                        "net.optifine.shaders.config.ShaderOptionSwitchConst.matchesLine" | 
                        "net.optifine.shaders.config.ShaderOptionSwitchConst.checkUsed" | 
                        "net.optifine.shaders.config.ShaderOptionSwitchConst.getSourceLine" | 
                        "net.minecraft.command.server.CommandSaveOff.getCommandUsage" | 
                        "net.minecraft.command.server.CommandSaveOff.processCommand" | 
                        "net.minecraft.command.server.CommandSaveOff.getCommandName" | 
                        "net.minecraft.entity.passive.EntityVillager$EmeraldForItems.modifyMerchantRecipeList" | 
                        "net.minecraft.inventory.ContainerHorseInventory.onContainerClosed" | 
                        "net.minecraft.inventory.ContainerHorseInventory.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerHorseInventory.canInteractWith" | 
                        "net.minecraft.pathfinding.PathFinder.createEntityPathTo" | 
                        "net.minecraft.pathfinding.PathFinder.addToPath" | 
                        "net.minecraft.pathfinding.PathFinder.createEntityPath" | 
                        "net.minecraft.block.BlockSign.canSpawnInBlock" | 
                        "net.minecraft.block.BlockSign.isPassable" | 
                        "net.minecraft.block.BlockSign.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockSign.onBlockActivated" | 
                        "net.minecraft.block.BlockSign.createNewTileEntity" | 
                        "net.minecraft.block.BlockSign.isFullCube" | 
                        "net.minecraft.block.BlockSign.getItem" | 
                        "net.minecraft.block.BlockSign.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockSign.getSelectedBoundingBox" | 
                        "net.minecraft.block.BlockSign.isOpaqueCube" | 
                        "net.minecraft.block.BlockSign.getItemDropped" | 
                        "net.minecraft.client.renderer.block.statemap.IStateMapper.putStateModelLocations" | 
                        "net.minecraft.block.BlockDispenser.getBehavior" | 
                        "net.minecraft.block.BlockDispenser.getMetaFromState" | 
                        "net.minecraft.block.BlockDispenser.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockDispenser.onBlockActivated" | 
                        "net.minecraft.block.BlockDispenser.dispense" | 
                        "net.minecraft.block.BlockDispenser.setDefaultDirection" | 
                        "net.minecraft.block.BlockDispenser.getRenderType" | 
                        "net.minecraft.block.BlockDispenser.onBlockAdded" | 
                        "net.minecraft.block.BlockDispenser.getStateForEntityRender" | 
                        "net.minecraft.block.BlockDispenser.tickRate" | 
                        "net.minecraft.block.BlockDispenser.hasComparatorInputOverride" | 
                        "net.minecraft.block.BlockDispenser.getComparatorInputOverride" | 
                        "net.minecraft.block.BlockDispenser.createBlockState" | 
                        "net.minecraft.block.BlockDispenser.createNewTileEntity" | 
                        "net.minecraft.block.BlockDispenser.onBlockPlacedBy" | 
                        "net.minecraft.block.BlockDispenser.getStateFromMeta" | 
                        "net.minecraft.block.BlockDispenser.updateTick" | 
                        "net.minecraft.block.BlockDispenser.breakBlock" | 
                        "net.minecraft.block.BlockDispenser.onBlockPlaced" | 
                        "org.cef.network.CefResponse_N.N_GetError" | 
                        "org.cef.network.CefResponse_N.N_SetStatusText" | 
                        "org.cef.network.CefResponse_N.setHeaderMap" | 
                        "org.cef.network.CefResponse_N.setMimeType" | 
                        "org.cef.network.CefResponse_N.N_Dispose" | 
                        "org.cef.network.CefResponse_N.setHeaderByName" | 
                        "org.cef.network.CefResponse_N.getStatus" | 
                        "org.cef.network.CefResponse_N.N_IsReadOnly" | 
                        "org.cef.network.CefResponse_N.N_GetMimeType" | 
                        "org.cef.network.CefResponse_N.N_SetHeaderByName" | 
                        "org.cef.network.CefResponse_N.N_GetStatus" | 
                        "org.cef.network.CefResponse_N.setNativeRef" | 
                        "org.cef.network.CefResponse_N.getNativeRef" | 
                        "org.cef.network.CefResponse_N.isReadOnly" | 
                        "org.cef.network.CefResponse_N.getHeaderByName" | 
                        "org.cef.network.CefResponse_N.N_SetStatus" | 
                        "org.cef.network.CefResponse_N.getMimeType" | 
                        "org.cef.network.CefResponse_N.N_SetMimeType" | 
                        "org.cef.network.CefResponse_N.N_SetError" | 
                        "org.cef.network.CefResponse_N.setStatusText" | 
                        "org.cef.network.CefResponse_N.setStatus" | 
                        "org.cef.network.CefResponse_N.getHeaderMap" | 
                        "org.cef.network.CefResponse_N.getError" | 
                        "org.cef.network.CefResponse_N.N_GetStatusText" | 
                        "org.cef.network.CefResponse_N.setError" | 
                        "org.cef.network.CefResponse_N.N_SetHeaderMap" | 
                        "org.cef.network.CefResponse_N.dispose" | 
                        "org.cef.network.CefResponse_N.N_GetHeaderByName" | 
                        "org.cef.network.CefResponse_N.getStatusText" | 
                        "org.cef.network.CefResponse_N.N_GetHeaderMap" | 
                        "net.optifine.reflect.IFieldLocator.getField" | 
                        "net.minecraft.util.IProgressUpdate.displayLoadingString" | 
                        "net.minecraft.util.IProgressUpdate.setDoneWorking" | 
                        "net.minecraft.util.IProgressUpdate.setLoadingProgress" | 
                        "net.minecraft.util.IProgressUpdate.displaySavingString" | 
                        "net.minecraft.util.IProgressUpdate.resetProgressAndMessage" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSheepWool.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSheepWool.shouldCombineTextures" | 
                        "net.optifine.entity.model.ModelAdapterSheep.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterSheep.makeEntityRender" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiSlideEntry.func_178945_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiSlideEntry.func_178943_e" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiSlideEntry.func_178944_f" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiSlideEntry.func_178942_g" | 
                        "net.optifine.entity.model.ModelAdapterHorse.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterHorse.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterHorse.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterHorse.getModelRendererNames" | 
                        "org.cef.browser.scheme.SchemeResourceHandler.readResponse" | 
                        "org.cef.browser.scheme.SchemeResourceHandler.getResponseHeaders" | 
                        "org.cef.browser.scheme.SchemeResourceHandler.processRequest" | 
                        "net.minecraft.client.gui.spectator.ISpectatorMenuRecipient.func_175257_a" | 
                        "net.minecraft.entity.boss.EntityDragonPart.writeEntityToNBT" | 
                        "net.minecraft.entity.boss.EntityDragonPart.canBeCollidedWith" | 
                        "net.minecraft.entity.boss.EntityDragonPart.attackEntityFrom" | 
                        "net.minecraft.entity.boss.EntityDragonPart.readEntityFromNBT" | 
                        "net.minecraft.entity.boss.EntityDragonPart.entityInit" | 
                        "net.minecraft.entity.boss.EntityDragonPart.isEntityEqual" | 
                        "net.minecraft.world.storage.SaveHandlerMP.getChunkLoader" | 
                        "net.minecraft.world.storage.SaveHandlerMP.flush" | 
                        "net.minecraft.world.storage.SaveHandlerMP.loadWorldInfo" | 
                        "net.minecraft.world.storage.SaveHandlerMP.saveWorldInfoWithPlayer" | 
                        "net.minecraft.world.storage.SaveHandlerMP.getWorldDirectory" | 
                        "net.minecraft.world.storage.SaveHandlerMP.saveWorldInfo" | 
                        "net.minecraft.world.storage.SaveHandlerMP.getMapFileFromName" | 
                        "net.minecraft.world.storage.SaveHandlerMP.getPlayerNBTManager" | 
                        "net.minecraft.world.storage.SaveHandlerMP.getWorldDirectoryName" | 
                        "net.minecraft.world.storage.SaveHandlerMP.checkSessionLock" | 
                        "net.minecraft.entity.EntityBodyHelper.updateRenderAngles" | 
                        "net.minecraft.entity.EntityBodyHelper.computeAngleWithBound" | 
                        "net.minecraft.client.renderer.BlockRendererDispatcher.getBlockModelShapes" | 
                        "net.minecraft.client.renderer.BlockRendererDispatcher.getModelFromBlockState" | 
                        "net.minecraft.client.renderer.BlockRendererDispatcher.getBakedModel" | 
                        "net.minecraft.client.renderer.BlockRendererDispatcher.getBlockModelRenderer" | 
                        "net.minecraft.client.renderer.BlockRendererDispatcher.isRenderTypeChest" | 
                        "net.minecraft.client.renderer.BlockRendererDispatcher.renderBlock" | 
                        "net.minecraft.client.renderer.BlockRendererDispatcher.onResourceManagerReload" | 
                        "net.minecraft.client.renderer.BlockRendererDispatcher.renderBlockBrightness" | 
                        "net.minecraft.client.renderer.BlockRendererDispatcher.renderBlockDamage" | 
                        "net.minecraft.client.audio.ISoundEventAccessor.getWeight" | 
                        "net.minecraft.client.audio.ISoundEventAccessor.cloneEntry" | 
                        "net.minecraft.command.server.CommandPardonIp.canCommandSenderUseCommand" | 
                        "net.minecraft.command.server.CommandPardonIp.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandPardonIp.getCommandUsage" | 
                        "net.minecraft.command.server.CommandPardonIp.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandPardonIp.processCommand" | 
                        "net.minecraft.command.server.CommandPardonIp.getCommandName" | 
                        "net.optifine.config.EntityClassLocator.getObject" | 
                        "net.minecraft.client.particle.EntityHeartFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityHeartFX.onUpdate" | 
                        "net.minecraft.realms.RealmsEditBox.getValue" | 
                        "net.minecraft.realms.RealmsEditBox.keyPressed" | 
                        "net.minecraft.realms.RealmsEditBox.setValue" | 
                        "net.minecraft.realms.RealmsEditBox.mouseClicked" | 
                        "net.minecraft.realms.RealmsEditBox.tick" | 
                        "net.minecraft.realms.RealmsEditBox.setFocus" | 
                        "net.minecraft.realms.RealmsEditBox.render" | 
                        "net.minecraft.realms.RealmsEditBox.isFocused" | 
                        "net.minecraft.realms.RealmsEditBox.setMaxLength" | 
                        "net.minecraft.realms.RealmsEditBox.setIsEditable" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$RoomDefinition.func_175960_c" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$RoomDefinition.func_175961_b" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$RoomDefinition.func_175959_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$RoomDefinition.func_175958_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$RoomDefinition.func_175957_a" | 
                        "net.optifine.entity.model.ModelAdapterDragon.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterDragon.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterDragon.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterDragon.getModelRendererNames" | 
                        "net.optifine.shaders.uniform.UniformType.updateUniform" | 
                        "net.optifine.shaders.uniform.UniformType.makeShaderUniform" | 
                        "net.optifine.shaders.uniform.UniformType.updateUniformFloat4" | 
                        "net.optifine.shaders.uniform.UniformType.matchesExpressionType" | 
                        "net.optifine.shaders.uniform.UniformType.updateUniformFloat3" | 
                        "net.optifine.shaders.uniform.UniformType.updateUniformFloat2" | 
                        "net.optifine.shaders.uniform.UniformType.updateUniformFloat" | 
                        "net.optifine.shaders.uniform.UniformType.updateUniformInt" | 
                        "net.optifine.shaders.uniform.UniformType.updateUniformBool" | 
                        "org.cef.misc.IntRef.set" | 
                        "org.cef.misc.IntRef.get" | 
                        "net.optifine.RandomEntityProperties.parseRules" | 
                        "net.optifine.RandomEntityProperties.isDefault" | 
                        "net.optifine.RandomEntityProperties.getTextureLocation" | 
                        "net.optifine.RandomEntityProperties.isValid" | 
                        "net.minecraft.entity.ai.EntityAIOpenDoor.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIOpenDoor.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIOpenDoor.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIOpenDoor.continueExecuting" | 
                        "net.minecraft.client.renderer.ViewFrustum.deleteGlResources" | 
                        "net.minecraft.client.renderer.ViewFrustum.getRenderChunk" | 
                        "net.minecraft.client.renderer.ViewFrustum.markBlocksForUpdate" | 
                        "net.minecraft.client.renderer.ViewFrustum.updateChunkPositions" | 
                        "net.minecraft.client.renderer.ViewFrustum.createRenderChunks" | 
                        "net.minecraft.client.renderer.ViewFrustum.updateVboRegion" | 
                        "net.minecraft.client.renderer.ViewFrustum.deleteVboRegions" | 
                        "net.minecraft.client.renderer.ViewFrustum.setCountChunksXYZ" | 
                        "net.minecraft.client.renderer.ViewFrustum.func_178157_a" | 
                        "net.minecraft.scoreboard.Scoreboard.getObjectiveInDisplaySlot" | 
                        "net.minecraft.scoreboard.Scoreboard.getObjectivesForEntity" | 
                        "net.minecraft.scoreboard.Scoreboard.removeObjective" | 
                        "net.minecraft.scoreboard.Scoreboard.getTeamNames" | 
                        "net.minecraft.scoreboard.Scoreboard.func_96516_a" | 
                        "net.minecraft.scoreboard.Scoreboard.func_96536_a" | 
                        "net.minecraft.scoreboard.Scoreboard.removePlayerFromTeams" | 
                        "net.minecraft.scoreboard.Scoreboard.broadcastTeamCreated" | 
                        "net.minecraft.scoreboard.Scoreboard.onScoreObjectiveAdded" | 
                        "net.minecraft.scoreboard.Scoreboard.func_96513_c" | 
                        "net.minecraft.scoreboard.Scoreboard.onScoreObjectiveRemoved" | 
                        "net.minecraft.scoreboard.Scoreboard.func_181140_a" | 
                        "net.minecraft.scoreboard.Scoreboard.getTeam" | 
                        "net.minecraft.scoreboard.Scoreboard.entityHasObjective" | 
                        "net.minecraft.scoreboard.Scoreboard.getScoreObjectives" | 
                        "net.minecraft.scoreboard.Scoreboard.getSortedScores" | 
                        "net.minecraft.scoreboard.Scoreboard.addPlayerToTeam" | 
                        "net.minecraft.scoreboard.Scoreboard.func_178820_a" | 
                        "net.minecraft.scoreboard.Scoreboard.getValueFromObjective" | 
                        "net.minecraft.scoreboard.Scoreboard.createTeam" | 
                        "net.minecraft.scoreboard.Scoreboard.getObjective" | 
                        "net.minecraft.scoreboard.Scoreboard.addScoreObjective" | 
                        "net.minecraft.scoreboard.Scoreboard.getScores" | 
                        "net.minecraft.scoreboard.Scoreboard.getObjectiveNames" | 
                        "net.minecraft.scoreboard.Scoreboard.getPlayersTeam" | 
                        "net.minecraft.scoreboard.Scoreboard.getTeams" | 
                        "net.minecraft.scoreboard.Scoreboard.removeObjectiveFromEntity" | 
                        "net.minecraft.scoreboard.Scoreboard.removePlayerFromTeam" | 
                        "net.minecraft.scoreboard.Scoreboard.sendTeamUpdate" | 
                        "net.minecraft.scoreboard.Scoreboard.removeTeam" | 
                        "net.minecraft.scoreboard.Scoreboard.getObjectivesFromCriteria" | 
                        "net.minecraft.scoreboard.Scoreboard.onObjectiveDisplayNameChanged" | 
                        "net.minecraft.scoreboard.Scoreboard.setObjectiveInDisplaySlot" | 
                        "net.minecraft.scoreboard.ServerScoreboard.addPlayerToTeam" | 
                        "net.minecraft.scoreboard.ServerScoreboard.func_178820_a" | 
                        "net.minecraft.scoreboard.ServerScoreboard.markSaveDataDirty" | 
                        "net.minecraft.scoreboard.ServerScoreboard.func_96548_f" | 
                        "net.minecraft.scoreboard.ServerScoreboard.func_96549_e" | 
                        "net.minecraft.scoreboard.ServerScoreboard.func_96516_a" | 
                        "net.minecraft.scoreboard.ServerScoreboard.func_96536_a" | 
                        "net.minecraft.scoreboard.ServerScoreboard.func_96552_h" | 
                        "net.minecraft.scoreboard.ServerScoreboard.func_96547_a" | 
                        "net.minecraft.scoreboard.ServerScoreboard.broadcastTeamCreated" | 
                        "net.minecraft.scoreboard.ServerScoreboard.onScoreObjectiveAdded" | 
                        "net.minecraft.scoreboard.ServerScoreboard.func_96513_c" | 
                        "net.minecraft.scoreboard.ServerScoreboard.onScoreObjectiveRemoved" | 
                        "net.minecraft.scoreboard.ServerScoreboard.func_96550_d" | 
                        "net.minecraft.scoreboard.ServerScoreboard.removePlayerFromTeam" | 
                        "net.minecraft.scoreboard.ServerScoreboard.sendTeamUpdate" | 
                        "net.minecraft.scoreboard.ServerScoreboard.onObjectiveDisplayNameChanged" | 
                        "net.minecraft.scoreboard.ServerScoreboard.setObjectiveInDisplaySlot" | 
                        "net.minecraft.scoreboard.ServerScoreboard.sendDisplaySlotRemovalPackets" | 
                        "net.minecraft.item.crafting.RecipesCrafting.addRecipes" | 
                        "net.minecraft.client.renderer.entity.RenderBat.rotateCorpse" | 
                        "net.minecraft.client.renderer.entity.RenderBat.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderBat.getEntityTexture" | 
                        "net.minecraft.client.renderer.BlockModelShapes.registerBuiltInBlocks" | 
                        "net.minecraft.client.renderer.BlockModelShapes.getBlockStateMapper" | 
                        "net.minecraft.client.renderer.BlockModelShapes.registerAllBlocks" | 
                        "net.minecraft.client.renderer.BlockModelShapes.getModelManager" | 
                        "net.minecraft.client.renderer.BlockModelShapes.registerBlockWithStateMapper" | 
                        "net.minecraft.client.renderer.BlockModelShapes.reloadModels" | 
                        "net.minecraft.client.renderer.BlockModelShapes.getTexture" | 
                        "net.minecraft.client.renderer.BlockModelShapes.getModelForState" | 
                        "net.minecraft.client.particle.Barrier.renderParticle" | 
                        "net.minecraft.client.particle.Barrier.getFXLayer" | 
                        "net.minecraft.tileentity.TileEntityEnchantmentTable.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityEnchantmentTable.getName" | 
                        "net.minecraft.tileentity.TileEntityEnchantmentTable.getDisplayName" | 
                        "net.minecraft.tileentity.TileEntityEnchantmentTable.setCustomName" | 
                        "net.minecraft.tileentity.TileEntityEnchantmentTable.hasCustomName" | 
                        "net.minecraft.tileentity.TileEntityEnchantmentTable.createContainer" | 
                        "net.minecraft.tileentity.TileEntityEnchantmentTable.update" | 
                        "net.minecraft.tileentity.TileEntityEnchantmentTable.writeToNBT" | 
                        "net.minecraft.tileentity.TileEntityEnchantmentTable.getGuiID" | 
                        "org.cef.network.CefCookieManager_N.visitUrlCookies" | 
                        "org.cef.network.CefCookieManager_N.N_VisitUrlCookies" | 
                        "org.cef.network.CefCookieManager_N.flushStore" | 
                        "org.cef.network.CefCookieManager_N.N_FlushStore" | 
                        "org.cef.network.CefCookieManager_N.N_DeleteCookies" | 
                        "org.cef.network.CefCookieManager_N.visitAllCookies" | 
                        "org.cef.network.CefCookieManager_N.deleteCookies" | 
                        "org.cef.network.CefCookieManager_N.N_Dispose" | 
                        "org.cef.network.CefCookieManager_N.setCookie" | 
                        "org.cef.network.CefCookieManager_N.N_VisitAllCookies" | 
                        "org.cef.network.CefCookieManager_N.setNativeRef" | 
                        "org.cef.network.CefCookieManager_N.getNativeRef" | 
                        "org.cef.network.CefCookieManager_N.N_SetCookie" | 
                        "org.cef.network.CefCookieManager_N.dispose" | 
                        "net.minecraft.client.renderer.entity.RenderMinecart.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderMinecart.func_180560_a" | 
                        "net.minecraft.client.renderer.entity.RenderMinecart.getEntityTexture" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Torch.addComponentParts" | 
                        "net.minecraft.world.biome.BiomeCache.cleanupCache" | 
                        "net.minecraft.world.biome.BiomeCache.getBiomeCacheBlock" | 
                        "net.minecraft.world.biome.BiomeCache.getCachedBiomes" | 
                        "net.minecraft.world.biome.BiomeCache.func_180284_a" | 
                        "net.minecraft.entity.ai.EntityAITempt.updateTask" | 
                        "net.minecraft.entity.ai.EntityAITempt.resetTask" | 
                        "net.minecraft.entity.ai.EntityAITempt.isRunning" | 
                        "net.minecraft.entity.ai.EntityAITempt.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAITempt.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAITempt.continueExecuting" | 
                        "net.optifine.shaders.ShaderPackDefault.hasDirectory" | 
                        "net.optifine.shaders.ShaderPackDefault.getName" | 
                        "net.optifine.shaders.ShaderPackDefault.getResourceAsStream" | 
                        "net.optifine.shaders.ShaderPackDefault.close" | 
                        "org.cef.CefSettings.clone" | 
                        "net.optifine.expr.IExpressionFloat.eval" | 
                        "net.optifine.http.IFileUploadListener.fileUploadFinished" | 
                        "net.optifine.shaders.Programs.makeShadow" | 
                        "net.optifine.shaders.Programs.getProgramNames" | 
                        "net.optifine.shaders.Programs.makeComposites" | 
                        "net.optifine.shaders.Programs.getProgramNone" | 
                        "net.optifine.shaders.Programs.getPrograms" | 
                        "net.optifine.shaders.Programs.getProgram" | 
                        "net.optifine.shaders.Programs.makeComposite" | 
                        "net.optifine.shaders.Programs.makeDeferred" | 
                        "net.optifine.shaders.Programs.makeDeferreds" | 
                        "net.optifine.shaders.Programs.toString" | 
                        "net.optifine.shaders.Programs.makeVirtual" | 
                        "net.optifine.shaders.Programs.make" | 
                        "net.optifine.shaders.Programs.getCount" | 
                        "net.optifine.shaders.Programs.makeGbuffers" | 
                        "net.minecraft.block.BlockDynamicLiquid.getPossibleFlowDirections" | 
                        "net.minecraft.block.BlockDynamicLiquid.tryFlowInto" | 
                        "net.minecraft.block.BlockDynamicLiquid.checkAdjacentBlock" | 
                        "net.minecraft.block.BlockDynamicLiquid.canFlowInto" | 
                        "net.minecraft.block.BlockDynamicLiquid.isBlocked" | 
                        "net.minecraft.block.BlockDynamicLiquid.func_176374_a" | 
                        "net.minecraft.block.BlockDynamicLiquid.updateTick" | 
                        "net.minecraft.block.BlockDynamicLiquid.placeStaticBlock" | 
                        "net.minecraft.block.BlockDynamicLiquid.onBlockAdded" | 
                        "net.optifine.reflect.FieldLocatorFixed.getField" | 
                        "org.cef.handler.CefRequestContextHandler.getResourceRequestHandler" | 
                        "net.minecraft.enchantment.EnchantmentDamage.canApply" | 
                        "net.minecraft.enchantment.EnchantmentDamage.onEntityDamaged" | 
                        "net.minecraft.enchantment.EnchantmentDamage.getName" | 
                        "net.minecraft.enchantment.EnchantmentDamage.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentDamage.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentDamage.calcDamageByCreature" | 
                        "net.minecraft.enchantment.EnchantmentDamage.getMaxLevel" | 
                        "net.minecraft.enchantment.EnchantmentDamage.canApplyTogether" | 
                        "net.minecraft.client.gui.GuiKeyBindingList.getSize" | 
                        "net.minecraft.client.gui.GuiKeyBindingList.getListWidth" | 
                        "net.minecraft.client.gui.GuiKeyBindingList.getScrollBarX" | 
                        "net.minecraft.client.gui.GuiKeyBindingList.getListEntry" | 
                        "net.minecraft.enchantment.EnchantmentFireAspect.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentFireAspect.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentFireAspect.getMaxLevel" | 
                        "net.optifine.expr.FunctionFloatArray.eval" | 
                        "net.optifine.expr.FunctionFloatArray.getExpressionType" | 
                        "net.optifine.expr.FunctionFloatArray.toString" | 
                        "org.cef.callback.CefMenuModel_N.N_GetSubMenu" | 
                        "org.cef.callback.CefMenuModel_N.N_InsertRadioItemAt" | 
                        "org.cef.callback.CefMenuModel_N.N_IsEnabled" | 
                        "org.cef.callback.CefMenuModel_N.setEnabledAt" | 
                        "org.cef.callback.CefMenuModel_N.N_Remove" | 
                        "org.cef.callback.CefMenuModel_N.getGroupIdAt" | 
                        "org.cef.callback.CefMenuModel_N.getAccelerator" | 
                        "org.cef.callback.CefMenuModel_N.getLabelAt" | 
                        "org.cef.callback.CefMenuModel_N.N_GetLabelAt" | 
                        "org.cef.callback.CefMenuModel_N.getCount" | 
                        "org.cef.callback.CefMenuModel_N.addCheckItem" | 
                        "org.cef.callback.CefMenuModel_N.N_GetAccelerator" | 
                        "org.cef.callback.CefMenuModel_N.N_SetEnabled" | 
                        "org.cef.callback.CefMenuModel_N.setAccelerator" | 
                        "org.cef.callback.CefMenuModel_N.hasAccelerator" | 
                        "org.cef.callback.CefMenuModel_N.setEnabled" | 
                        "org.cef.callback.CefMenuModel_N.insertCheckItemAt" | 
                        "org.cef.callback.CefMenuModel_N.getAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel_N.getType" | 
                        "org.cef.callback.CefMenuModel_N.isCheckedAt" | 
                        "org.cef.callback.CefMenuModel_N.isEnabled" | 
                        "org.cef.callback.CefMenuModel_N.insertSeparatorAt" | 
                        "org.cef.callback.CefMenuModel_N.N_IsVisibleAt" | 
                        "org.cef.callback.CefMenuModel_N.N_SetAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel_N.hasAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel_N.N_SetLabel" | 
                        "org.cef.callback.CefMenuModel_N.N_GetCommandIdAt" | 
                        "org.cef.callback.CefMenuModel_N.N_SetCommandIdAt" | 
                        "org.cef.callback.CefMenuModel_N.N_GetSubMenuAt" | 
                        "org.cef.callback.CefMenuModel_N.addSeparator" | 
                        "org.cef.callback.CefMenuModel_N.insertSubMenuAt" | 
                        "org.cef.callback.CefMenuModel_N.N_IsChecked" | 
                        "org.cef.callback.CefMenuModel_N.N_IsEnabledAt" | 
                        "org.cef.callback.CefMenuModel_N.insertItemAt" | 
                        "org.cef.callback.CefMenuModel_N.N_AddItem" | 
                        "org.cef.callback.CefMenuModel_N.N_SetGroupId" | 
                        "org.cef.callback.CefMenuModel_N.insertRadioItemAt" | 
                        "org.cef.callback.CefMenuModel_N.N_GetGroupId" | 
                        "org.cef.callback.CefMenuModel_N.isVisibleAt" | 
                        "org.cef.callback.CefMenuModel_N.N_SetAccelerator" | 
                        "org.cef.callback.CefMenuModel_N.setCheckedAt" | 
                        "org.cef.callback.CefMenuModel_N.N_GetLabel" | 
                        "org.cef.callback.CefMenuModel_N.N_HasAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel_N.N_GetTypeAt" | 
                        "org.cef.callback.CefMenuModel_N.N_SetLabelAt" | 
                        "org.cef.callback.CefMenuModel_N.N_SetVisible" | 
                        "org.cef.callback.CefMenuModel_N.getLabel" | 
                        "org.cef.callback.CefMenuModel_N.setGroupId" | 
                        "org.cef.callback.CefMenuModel_N.addSubMenu" | 
                        "org.cef.callback.CefMenuModel_N.removeAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel_N.N_GetAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel_N.N_AddCheckItem" | 
                        "org.cef.callback.CefMenuModel_N.N_GetGroupIdAt" | 
                        "org.cef.callback.CefMenuModel_N.getGroupId" | 
                        "org.cef.callback.CefMenuModel_N.N_AddRadioItem" | 
                        "org.cef.callback.CefMenuModel_N.setChecked" | 
                        "org.cef.callback.CefMenuModel_N.N_SetEnabledAt" | 
                        "org.cef.callback.CefMenuModel_N.setVisible" | 
                        "org.cef.callback.CefMenuModel_N.N_SetVisibleAt" | 
                        "org.cef.callback.CefMenuModel_N.N_AddSubMenu" | 
                        "org.cef.callback.CefMenuModel_N.N_SetGroupIdAt" | 
                        "org.cef.callback.CefMenuModel_N.isVisible" | 
                        "org.cef.callback.CefMenuModel_N.isChecked" | 
                        "org.cef.callback.CefMenuModel_N.N_GetCount" | 
                        "org.cef.callback.CefMenuModel_N.removeAccelerator" | 
                        "org.cef.callback.CefMenuModel_N.getIndexOf" | 
                        "org.cef.callback.CefMenuModel_N.N_InsertCheckItemAt" | 
                        "org.cef.callback.CefMenuModel_N.N_IsVisible" | 
                        "org.cef.callback.CefMenuModel_N.N_InsertSeparatorAt" | 
                        "org.cef.callback.CefMenuModel_N.N_GetIndexOf" | 
                        "org.cef.callback.CefMenuModel_N.N_GetType" | 
                        "org.cef.callback.CefMenuModel_N.removeAt" | 
                        "org.cef.callback.CefMenuModel_N.N_AddSeparator" | 
                        "org.cef.callback.CefMenuModel_N.N_RemoveAccelerator" | 
                        "org.cef.callback.CefMenuModel_N.N_InsertSubMenuAt" | 
                        "org.cef.callback.CefMenuModel_N.getSubMenuAt" | 
                        "org.cef.callback.CefMenuModel_N.N_HasAccelerator" | 
                        "org.cef.callback.CefMenuModel_N.N_RemoveAt" | 
                        "org.cef.callback.CefMenuModel_N.setCommandIdAt" | 
                        "org.cef.callback.CefMenuModel_N.remove" | 
                        "org.cef.callback.CefMenuModel_N.addItem" | 
                        "org.cef.callback.CefMenuModel_N.N_IsCheckedAt" | 
                        "org.cef.callback.CefMenuModel_N.N_Clear" | 
                        "org.cef.callback.CefMenuModel_N.setVisibleAt" | 
                        "org.cef.callback.CefMenuModel_N.getCommandIdAt" | 
                        "org.cef.callback.CefMenuModel_N.N_SetChecked" | 
                        "org.cef.callback.CefMenuModel_N.setGroupIdAt" | 
                        "org.cef.callback.CefMenuModel_N.isEnabledAt" | 
                        "org.cef.callback.CefMenuModel_N.N_SetCheckedAt" | 
                        "org.cef.callback.CefMenuModel_N.getSubMenu" | 
                        "org.cef.callback.CefMenuModel_N.addRadioItem" | 
                        "org.cef.callback.CefMenuModel_N.getTypeAt" | 
                        "org.cef.callback.CefMenuModel_N.clear" | 
                        "org.cef.callback.CefMenuModel_N.N_InsertItemAt" | 
                        "org.cef.callback.CefMenuModel_N.setAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel_N.N_RemoveAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel_N.setLabel" | 
                        "org.cef.callback.CefMenuModel_N.setLabelAt" | 
                        "net.minecraft.realms.RealmsSliderButton.toValue" | 
                        "net.minecraft.realms.RealmsSliderButton.toPct" | 
                        "net.minecraft.realms.RealmsSliderButton.getYImage" | 
                        "net.minecraft.realms.RealmsSliderButton.getMessage" | 
                        "net.minecraft.realms.RealmsSliderButton.clampSteps" | 
                        "net.minecraft.realms.RealmsSliderButton.renderBg" | 
                        "net.minecraft.realms.RealmsSliderButton.clicked" | 
                        "net.minecraft.realms.RealmsSliderButton.released" | 
                        "net.minecraft.realms.RealmsSliderButton.clamp" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityEnchantmentTableRenderer.renderTileEntityAt" | 
                        "net.minecraft.client.model.ModelBlaze.setRotationAngles" | 
                        "net.minecraft.client.model.ModelBlaze.render" | 
                        "slice.event.events.EventAttack.getEntity" | 
                        "slice.event.events.EventAttack.setEntity" | 
                        "net.minecraft.block.BlockStainedGlassPane.getMetaFromState" | 
                        "net.minecraft.block.BlockStainedGlassPane.getBlockLayer" | 
                        "net.minecraft.block.BlockStainedGlassPane.damageDropped" | 
                        "net.minecraft.block.BlockStainedGlassPane.getMapColor" | 
                        "net.minecraft.block.BlockStainedGlassPane.createBlockState" | 
                        "net.minecraft.block.BlockStainedGlassPane.getStateFromMeta" | 
                        "net.minecraft.block.BlockStainedGlassPane.breakBlock" | 
                        "net.minecraft.block.BlockStainedGlassPane.onBlockAdded" | 
                        "net.minecraft.block.BlockStainedGlassPane.getSubBlocks" | 
                        "net.optifine.http.HttpPipelineSender.run" | 
                        "net.optifine.http.HttpPipelineSender.writeRequest" | 
                        "net.optifine.http.HttpPipelineSender.write" | 
                        "net.optifine.http.HttpPipelineSender.connect" | 
                        "org.cef.scheme.IScheme.readResponse" | 
                        "org.cef.scheme.IScheme.getResponseHeaders" | 
                        "org.cef.scheme.IScheme.processRequest" | 
                        "net.minecraft.realms.RealmsBufferBuilder.restoreState" | 
                        "net.minecraft.realms.RealmsBufferBuilder.color" | 
                        "net.minecraft.realms.RealmsBufferBuilder.getBuffer" | 
                        "net.minecraft.realms.RealmsBufferBuilder.vertex" | 
                        "net.minecraft.realms.RealmsBufferBuilder.sortQuads" | 
                        "net.minecraft.realms.RealmsBufferBuilder.fixupQuadColor" | 
                        "net.minecraft.realms.RealmsBufferBuilder.postNormal" | 
                        "net.minecraft.realms.RealmsBufferBuilder.noColor" | 
                        "net.minecraft.realms.RealmsBufferBuilder.end" | 
                        "net.minecraft.realms.RealmsBufferBuilder.from" | 
                        "net.minecraft.realms.RealmsBufferBuilder.tex2" | 
                        "net.minecraft.realms.RealmsBufferBuilder.normal" | 
                        "net.minecraft.realms.RealmsBufferBuilder.faceTint" | 
                        "net.minecraft.realms.RealmsBufferBuilder.offset" | 
                        "net.minecraft.realms.RealmsBufferBuilder.tex" | 
                        "net.minecraft.realms.RealmsBufferBuilder.clear" | 
                        "net.minecraft.realms.RealmsBufferBuilder.postProcessFacePosition" | 
                        "net.minecraft.realms.RealmsBufferBuilder.endVertex" | 
                        "net.minecraft.realms.RealmsBufferBuilder.getVertexCount" | 
                        "net.minecraft.realms.RealmsBufferBuilder.getDrawMode" | 
                        "net.minecraft.realms.RealmsBufferBuilder.faceTex2" | 
                        "net.minecraft.realms.RealmsBufferBuilder.fixupVertexColor" | 
                        "net.minecraft.realms.RealmsBufferBuilder.getVertexFormat" | 
                        "net.minecraft.realms.RealmsBufferBuilder.putBulkData" | 
                        "net.minecraft.realms.RealmsBufferBuilder.begin" | 
                        "net.optifine.http.HttpListener.finished" | 
                        "net.optifine.http.HttpListener.failed" | 
                        "net.optifine.shaders.config.PropertyDefaultFastFancyOff.isDefault" | 
                        "net.optifine.shaders.config.PropertyDefaultFastFancyOff.isFast" | 
                        "net.optifine.shaders.config.PropertyDefaultFastFancyOff.setPropertyValue" | 
                        "net.optifine.shaders.config.PropertyDefaultFastFancyOff.isOff" | 
                        "net.optifine.shaders.config.PropertyDefaultFastFancyOff.isFancy" | 
                        "net.minecraft.entity.monster.EntitySlime$AISlimeFaceRandom.updateTask" | 
                        "net.minecraft.entity.monster.EntitySlime$AISlimeFaceRandom.shouldExecute" | 
                        "net.minecraft.client.model.ModelMinecart.render" | 
                        "org.cef.handler.CefDragHandler.onDragEnter" | 
                        "net.minecraft.entity.ai.EntityAIFleeSun.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIFleeSun.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIFleeSun.findPossibleShelter" | 
                        "net.minecraft.entity.ai.EntityAIFleeSun.continueExecuting" | 
                        "net.minecraft.world.chunk.storage.NibbleArrayReader.get" | 
                        "net.minecraft.util.Vec3.add" | 
                        "net.minecraft.util.Vec3.crossProduct" | 
                        "net.minecraft.util.Vec3.squareDistanceTo" | 
                        "net.minecraft.util.Vec3.subtract" | 
                        "net.minecraft.util.Vec3.subtractReverse" | 
                        "net.minecraft.util.Vec3.getIntermediateWithZValue" | 
                        "net.minecraft.util.Vec3.rotatePitch" | 
                        "net.minecraft.util.Vec3.dotProduct" | 
                        "net.minecraft.util.Vec3.distanceTo" | 
                        "net.minecraft.util.Vec3.rotateYaw" | 
                        "net.minecraft.util.Vec3.getIntermediateWithXValue" | 
                        "net.minecraft.util.Vec3.addVector" | 
                        "net.minecraft.util.Vec3.normalize" | 
                        "net.minecraft.util.Vec3.toString" | 
                        "net.minecraft.util.Vec3.lengthVector" | 
                        "net.minecraft.util.Vec3.getIntermediateWithYValue" | 
                        "net.minecraft.inventory.ContainerBeacon.onContainerClosed" | 
                        "net.minecraft.inventory.ContainerBeacon.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerBeacon.func_180611_e" | 
                        "net.minecraft.inventory.ContainerBeacon.canInteractWith" | 
                        "net.minecraft.inventory.ContainerBeacon.onCraftGuiOpened" | 
                        "net.minecraft.inventory.ContainerBeacon.updateProgressBar" | 
                        "org.cef.browser.CefDropTargetListener.drop" | 
                        "org.cef.browser.CefDropTargetListener.dragEnter" | 
                        "org.cef.browser.CefDropTargetListener.AssertDragData" | 
                        "org.cef.browser.CefDropTargetListener.ClearDragData" | 
                        "org.cef.browser.CefDropTargetListener.CreateDragData" | 
                        "org.cef.browser.CefDropTargetListener.dropActionChanged" | 
                        "org.cef.browser.CefDropTargetListener.dragOver" | 
                        "org.cef.browser.CefDropTargetListener.dragExit" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.getAttributeValue" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.removeAllModifiers" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.getModifier" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.computeValue" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.setBaseValue" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.getBaseValue" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.applyModifier" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.getModifiersByOperation" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.getAttribute" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.hasModifier" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.func_111122_c" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.flagForUpdate" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.func_180375_b" | 
                        "net.minecraft.entity.ai.attributes.ModifiableAttributeInstance.removeModifier" | 
                        "org.cef.ccbluex.DynamicGuiView.onGuiClosed" | 
                        "net.minecraft.world.chunk.storage.RegionFile.setOffset" | 
                        "net.minecraft.world.chunk.storage.RegionFile.getOffset" | 
                        "net.minecraft.world.chunk.storage.RegionFile.setChunkTimestamp" | 
                        "net.minecraft.world.chunk.storage.RegionFile.write" | 
                        "net.minecraft.world.chunk.storage.RegionFile.close" | 
                        "net.minecraft.world.chunk.storage.RegionFile.outOfBounds" | 
                        "net.minecraft.world.chunk.storage.RegionFile.getChunkDataOutputStream" | 
                        "net.minecraft.world.chunk.storage.RegionFile.getChunkDataInputStream" | 
                        "net.minecraft.world.chunk.storage.RegionFile.isChunkSaved" | 
                        "net.optifine.shaders.ShaderPackNone.hasDirectory" | 
                        "net.optifine.shaders.ShaderPackNone.getName" | 
                        "net.optifine.shaders.ShaderPackNone.getResourceAsStream" | 
                        "net.optifine.shaders.ShaderPackNone.close" | 
                        "net.minecraft.world.biome.BiomeGenMesa.decorate" | 
                        "net.minecraft.world.biome.BiomeGenMesa.createMutatedBiome" | 
                        "net.minecraft.world.biome.BiomeGenMesa.genTerrainBlocks" | 
                        "net.minecraft.world.biome.BiomeGenMesa.genBigTreeChance" | 
                        "net.minecraft.world.biome.BiomeGenMesa.func_180629_a" | 
                        "net.minecraft.world.biome.BiomeGenMesa.getGrassColorAtPos" | 
                        "net.minecraft.world.biome.BiomeGenMesa.getFoliageColorAtPos" | 
                        "net.minecraft.world.biome.BiomeGenMesa.func_150619_a" | 
                        "net.minecraft.world.gen.feature.WorldGenSand.generate" | 
                        "net.optifine.shaders.uniform.ShaderExpressionResolver.getExpression" | 
                        "net.optifine.shaders.uniform.ShaderExpressionResolver.hasExpression" | 
                        "net.optifine.shaders.uniform.ShaderExpressionResolver.addParameterFloat" | 
                        "net.optifine.shaders.uniform.ShaderExpressionResolver.registerExpression" | 
                        "net.optifine.shaders.uniform.ShaderExpressionResolver.registerExpressions" | 
                        "net.minecraft.potion.PotionHealth.isReady" | 
                        "net.minecraft.potion.PotionHealth.isInstant" | 
                        "net.minecraft.block.BlockDirt$DirtType.func_181066_d" | 
                        "net.minecraft.block.BlockDirt$DirtType.getMetadata" | 
                        "net.minecraft.block.BlockDirt$DirtType.getName" | 
                        "net.minecraft.block.BlockDirt$DirtType.toString" | 
                        "net.minecraft.block.BlockDirt$DirtType.getUnlocalizedName" | 
                        "org.cef.handler.CefRequestHandlerAdapter.onQuotaRequest" | 
                        "org.cef.handler.CefRequestHandlerAdapter.getAuthCredentials" | 
                        "org.cef.handler.CefRequestHandlerAdapter.onCertificateError" | 
                        "org.cef.handler.CefRequestHandlerAdapter.onRenderProcessTerminated" | 
                        "org.cef.handler.CefRequestHandlerAdapter.onBeforeBrowse" | 
                        "org.cef.handler.CefRequestHandlerAdapter.onOpenURLFromTab" | 
                        "org.cef.handler.CefRequestHandlerAdapter.getResourceRequestHandler" | 
                        "net.minecraft.world.gen.feature.WorldGenDeadBush.generate" | 
                        "net.minecraft.block.BlockDoubleStoneSlab.isDouble" | 
                        "net.minecraft.client.gui.GuiErrorScreen.actionPerformed" | 
                        "net.minecraft.client.gui.GuiErrorScreen.initGui" | 
                        "net.minecraft.client.gui.GuiErrorScreen.drawScreen" | 
                        "net.minecraft.client.gui.GuiErrorScreen.keyTyped" | 
                        "net.optifine.render.CloudRenderer.renderGlList" | 
                        "net.optifine.render.CloudRenderer.prepareToRender" | 
                        "net.optifine.render.CloudRenderer.endUpdateGlList" | 
                        "net.optifine.render.CloudRenderer.reset" | 
                        "net.optifine.render.CloudRenderer.shouldUpdateGlList" | 
                        "net.optifine.render.CloudRenderer.startUpdateGlList" | 
                        "net.minecraft.util.MouseFilter.reset" | 
                        "net.minecraft.util.MouseFilter.smooth" | 
                        "net.minecraft.world.WorldType.getWorldTypeForGeneratorVersion" | 
                        "net.minecraft.world.WorldType.getWorldTypeName" | 
                        "net.minecraft.world.WorldType.getWorldTypeID" | 
                        "net.minecraft.world.WorldType.showWorldInfoNotice" | 
                        "net.minecraft.world.WorldType.setNotificationData" | 
                        "net.minecraft.world.WorldType.setCanBeCreated" | 
                        "net.minecraft.world.WorldType.getTranslateName" | 
                        "net.minecraft.world.WorldType.isVersioned" | 
                        "net.minecraft.world.WorldType.getCanBeCreated" | 
                        "net.minecraft.world.WorldType.setVersioned" | 
                        "net.minecraft.world.WorldType.getGeneratorVersion" | 
                        "net.minecraft.world.WorldType.getTranslatedInfo" | 
                        "net.minecraft.scoreboard.Score.func_96651_a" | 
                        "net.minecraft.scoreboard.Score.increseScore" | 
                        "net.minecraft.scoreboard.Score.setScorePoints" | 
                        "net.minecraft.scoreboard.Score.decreaseScore" | 
                        "net.minecraft.scoreboard.Score.isLocked" | 
                        "net.minecraft.scoreboard.Score.getObjective" | 
                        "net.minecraft.scoreboard.Score.func_96648_a" | 
                        "net.minecraft.scoreboard.Score.getPlayerName" | 
                        "net.minecraft.scoreboard.Score.getScorePoints" | 
                        "net.minecraft.scoreboard.Score.setLocked" | 
                        "net.minecraft.scoreboard.Score.getScoreScoreboard" | 
                        "net.minecraft.entity.monster.EntityPigZombie$AIHurtByAggressor.setEntityAttackTarget" | 
                        "net.optifine.entity.model.ModelAdapterWitherSkull.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterWitherSkull.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterWitherSkull.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterWitherSkull.getModelRendererNames" | 
                        "net.minecraft.block.BlockLeavesBase.isOpaqueCube" | 
                        "net.minecraft.block.BlockLeavesBase.shouldSideBeRendered" | 
                        "net.minecraftforge.fml.common.registry.RegistryDelegate.get" | 
                        "net.minecraftforge.fml.common.registry.RegistryDelegate.name" | 
                        "net.minecraftforge.fml.common.registry.RegistryDelegate.type" | 
                        "org.cef.callback.CefFileDialogCallback.Cancel" | 
                        "org.cef.callback.CefFileDialogCallback.Continue" | 
                        "slice.setting.settings.BooleanValue.getValue" | 
                        "slice.setting.settings.BooleanValue.setValue" | 
                        "net.minecraft.command.CommandPlaySound.isUsernameIndex" | 
                        "net.minecraft.command.CommandPlaySound.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandPlaySound.getCommandUsage" | 
                        "net.minecraft.command.CommandPlaySound.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandPlaySound.processCommand" | 
                        "net.minecraft.command.CommandPlaySound.getCommandName" | 
                        "net.minecraft.client.particle.Barrier$Factory.getEntityFX" | 
                        "net.optifine.config.INameGetter.getName" | 
                        "net.minecraft.client.renderer.entity.RenderSkeleton.transformHeldFull3DItemLayer" | 
                        "net.minecraft.client.renderer.entity.RenderSkeleton.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderSkeleton.getEntityTexture" | 
                        "net.minecraft.entity.item.EntityExpBottle.getVelocity" | 
                        "net.minecraft.entity.item.EntityExpBottle.onImpact" | 
                        "net.minecraft.entity.item.EntityExpBottle.getGravityVelocity" | 
                        "net.minecraft.entity.item.EntityExpBottle.getInaccuracy" | 
                        "net.optifine.entity.model.ModelAdapterChestLarge.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterChestLarge.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterChestLarge.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterChestLarge.getModelRendererNames" | 
                        "net.optifine.util.IntArray.getPosition" | 
                        "net.optifine.util.IntArray.getLimit" | 
                        "net.optifine.util.IntArray.get" | 
                        "net.optifine.util.IntArray.clear" | 
                        "net.optifine.util.IntArray.getArray" | 
                        "net.optifine.util.IntArray.position" | 
                        "net.optifine.util.IntArray.put" | 
                        "net.minecraft.entity.projectile.EntityThrowable.writeEntityToNBT" | 
                        "net.minecraft.entity.projectile.EntityThrowable.getVelocity" | 
                        "net.minecraft.entity.projectile.EntityThrowable.onImpact" | 
                        "net.minecraft.entity.projectile.EntityThrowable.readEntityFromNBT" | 
                        "net.minecraft.entity.projectile.EntityThrowable.entityInit" | 
                        "net.minecraft.entity.projectile.EntityThrowable.isInRangeToRenderDist" | 
                        "net.minecraft.entity.projectile.EntityThrowable.setThrowableHeading" | 
                        "net.minecraft.entity.projectile.EntityThrowable.setVelocity" | 
                        "net.minecraft.entity.projectile.EntityThrowable.getGravityVelocity" | 
                        "net.minecraft.entity.projectile.EntityThrowable.getInaccuracy" | 
                        "net.minecraft.entity.projectile.EntityThrowable.onUpdate" | 
                        "net.minecraft.entity.projectile.EntityThrowable.getThrower" | 
                        "net.minecraft.client.gui.GuiRepair.sendProgressBarUpdate" | 
                        "net.minecraft.client.gui.GuiRepair.renameItem" | 
                        "net.minecraft.client.gui.GuiRepair.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.GuiRepair.mouseClicked" | 
                        "net.minecraft.client.gui.GuiRepair.sendAllWindowProperties" | 
                        "net.minecraft.client.gui.GuiRepair.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.client.gui.GuiRepair.sendSlotContents" | 
                        "net.minecraft.client.gui.GuiRepair.initGui" | 
                        "net.minecraft.client.gui.GuiRepair.drawScreen" | 
                        "net.minecraft.client.gui.GuiRepair.updateCraftingInventory" | 
                        "net.minecraft.client.gui.GuiRepair.onGuiClosed" | 
                        "net.minecraft.client.gui.GuiRepair.keyTyped" | 
                        "org.cef.callback.CefSchemeRegistrar.addCustomScheme" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.renderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.initArmor" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.renderGlint" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.getArmorModelHook" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.getCurrentArmor" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.isSlotForLeggings" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.setModelPartVisible" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.getArmorModel" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.shouldCombineTextures" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArmorBase.getArmorResource" | 
                        "net.minecraft.block.BlockStoneSlabNew$EnumType.func_181068_c" | 
                        "net.minecraft.block.BlockStoneSlabNew$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockStoneSlabNew$EnumType.getName" | 
                        "net.minecraft.block.BlockStoneSlabNew$EnumType.toString" | 
                        "net.minecraft.block.BlockStoneSlabNew$EnumType.getUnlocalizedName" | 
                        "slice.module.data.ModuleInfo.name" | 
                        "slice.module.data.ModuleInfo.description" | 
                        "slice.module.data.ModuleInfo.category" | 
                        "slice.module.data.ModuleInfo.key" | 
                        "net.minecraft.client.gui.ServerListEntryLanDetected.mouseReleased" | 
                        "net.minecraft.client.gui.ServerListEntryLanDetected.drawEntry" | 
                        "net.minecraft.client.gui.ServerListEntryLanDetected.getLanServer" | 
                        "net.minecraft.client.gui.ServerListEntryLanDetected.setSelected" | 
                        "net.minecraft.client.gui.ServerListEntryLanDetected.mousePressed" | 
                        "net.minecraft.block.BlockWorkbench.onBlockActivated" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements.drawAchievementScreen" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements.updateScreen" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements.actionPerformed" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements.func_175371_a" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements.doesGuiPauseGame" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements.drawTitle" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements.initGui" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements.drawScreen" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements.keyTyped" | 
                        "net.minecraft.client.gui.achievement.GuiAchievements.doneLoading" | 
                        "net.minecraft.entity.passive.EntityRabbit$RabbitMoveHelper.onUpdateMoveHelper" | 
                        "net.optifine.shaders.ShaderPackFolder.hasDirectory" | 
                        "net.optifine.shaders.ShaderPackFolder.getName" | 
                        "net.optifine.shaders.ShaderPackFolder.getResourceAsStream" | 
                        "net.optifine.shaders.ShaderPackFolder.close" | 
                        "net.minecraft.tileentity.TileEntityFurnace.decrStackSize" | 
                        "net.minecraft.tileentity.TileEntityFurnace.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityFurnace.setField" | 
                        "net.minecraft.tileentity.TileEntityFurnace.smeltItem" | 
                        "net.minecraft.tileentity.TileEntityFurnace.getName" | 
                        "net.minecraft.tileentity.TileEntityFurnace.getSlotsForFace" | 
                        "net.minecraft.tileentity.TileEntityFurnace.createContainer" | 
                        "net.minecraft.tileentity.TileEntityFurnace.update" | 
                        "net.minecraft.tileentity.TileEntityFurnace.setInventorySlotContents" | 
                        "net.minecraft.tileentity.TileEntityFurnace.closeInventory" | 
                        "net.minecraft.tileentity.TileEntityFurnace.canExtractItem" | 
                        "net.minecraft.tileentity.TileEntityFurnace.getInventoryStackLimit" | 
                        "net.minecraft.tileentity.TileEntityFurnace.hasCustomName" | 
                        "net.minecraft.tileentity.TileEntityFurnace.getCookTime" | 
                        "net.minecraft.tileentity.TileEntityFurnace.writeToNBT" | 
                        "net.minecraft.tileentity.TileEntityFurnace.getGuiID" | 
                        "net.minecraft.tileentity.TileEntityFurnace.isItemValidForSlot" | 
                        "net.minecraft.tileentity.TileEntityFurnace.openInventory" | 
                        "net.minecraft.tileentity.TileEntityFurnace.clear" | 
                        "net.minecraft.tileentity.TileEntityFurnace.getField" | 
                        "net.minecraft.tileentity.TileEntityFurnace.canSmelt" | 
                        "net.minecraft.tileentity.TileEntityFurnace.getStackInSlot" | 
                        "net.minecraft.tileentity.TileEntityFurnace.getSizeInventory" | 
                        "net.minecraft.tileentity.TileEntityFurnace.isUseableByPlayer" | 
                        "net.minecraft.tileentity.TileEntityFurnace.setCustomInventoryName" | 
                        "net.minecraft.tileentity.TileEntityFurnace.removeStackFromSlot" | 
                        "net.minecraft.tileentity.TileEntityFurnace.getFieldCount" | 
                        "net.minecraft.tileentity.TileEntityFurnace.canInsertItem" | 
                        "net.optifine.config.ConnectedParser.parseBlockPart" | 
                        "net.optifine.config.ConnectedParser.parseEnums" | 
                        "net.optifine.config.ConnectedParser.parseFace" | 
                        "net.optifine.config.ConnectedParser.parseBoolean" | 
                        "net.optifine.config.ConnectedParser.matchState" | 
                        "net.optifine.config.ConnectedParser.parseBlockMetadatas" | 
                        "net.optifine.config.ConnectedParser.parseWeather" | 
                        "net.optifine.config.ConnectedParser.parseMatchBlock" | 
                        "net.optifine.config.ConnectedParser.parseEntities" | 
                        "net.optifine.config.ConnectedParser.isFullBlockName" | 
                        "net.optifine.config.ConnectedParser.parseMatchBlocks" | 
                        "net.optifine.config.ConnectedParser.parseObjects" | 
                        "net.optifine.config.ConnectedParser.parseBiomes" | 
                        "net.optifine.config.ConnectedParser.parseBlockState" | 
                        "net.optifine.config.ConnectedParser.parseProfessions" | 
                        "net.optifine.config.ConnectedParser.parseProfession" | 
                        "net.optifine.config.ConnectedParser.getStateFromMeta" | 
                        "net.optifine.config.ConnectedParser.parseBooleanObject" | 
                        "net.optifine.config.ConnectedParser.parseItems" | 
                        "net.optifine.config.ConnectedParser.parseBasePath" | 
                        "net.optifine.config.ConnectedParser.parseBlockRenderLayer" | 
                        "net.optifine.config.ConnectedParser.parseDyeColors" | 
                        "net.optifine.config.ConnectedParser.parseNbtTagValue" | 
                        "net.optifine.config.ConnectedParser.parseFaces" | 
                        "net.optifine.config.ConnectedParser.parseRangeInt" | 
                        "net.optifine.config.ConnectedParser.findBiome" | 
                        "net.optifine.config.ConnectedParser.parseEnum" | 
                        "net.optifine.config.ConnectedParser.parseName" | 
                        "net.optifine.config.ConnectedParser.dbg" | 
                        "net.optifine.config.ConnectedParser.parseRangeListInt" | 
                        "net.optifine.config.ConnectedParser.parseObject" | 
                        "net.optifine.config.ConnectedParser.parseInt" | 
                        "net.optifine.config.ConnectedParser.warn" | 
                        "net.optifine.config.ConnectedParser.startsWithDigit" | 
                        "net.optifine.config.ConnectedParser.parseIntList" | 
                        "net.minecraft.item.crafting.RecipesArmor.addRecipes" | 
                        "org.cef.handler.CefKeyboardHandlerAdapter.onKeyEvent" | 
                        "org.cef.handler.CefKeyboardHandlerAdapter.onPreKeyEvent" | 
                        "slice.event.events.EventChat.getMessage" | 
                        "slice.event.events.EventChat.setMessage" | 
                        "slice.event.events.EventPlayerReach.setReach" | 
                        "slice.event.events.EventPlayerReach.getReach" | 
                        "net.minecraft.client.gui.inventory.GuiBrewingStand.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiBrewingStand.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Stairs.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Stairs.buildComponent" | 
                        "net.minecraft.entity.IMerchant.setRecipes" | 
                        "net.minecraft.entity.IMerchant.setCustomer" | 
                        "net.minecraft.entity.IMerchant.getDisplayName" | 
                        "net.minecraft.entity.IMerchant.verifySellingItem" | 
                        "net.minecraft.entity.IMerchant.useRecipe" | 
                        "net.minecraft.entity.IMerchant.getRecipes" | 
                        "net.minecraft.entity.IMerchant.getCustomer" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu$EndSpectatorObject.getSpectatorName" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu$EndSpectatorObject.func_178662_A_" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu$EndSpectatorObject.func_178663_a" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu$EndSpectatorObject.func_178661_a" | 
                        "net.minecraft.client.renderer.tileentity.RenderItemFrame.isRenderItem" | 
                        "net.minecraft.client.renderer.tileentity.RenderItemFrame.renderName" | 
                        "net.minecraft.client.renderer.tileentity.RenderItemFrame.doRender" | 
                        "net.minecraft.client.renderer.tileentity.RenderItemFrame.renderItem" | 
                        "net.minecraft.client.renderer.tileentity.RenderItemFrame.getEntityTexture" | 
                        "net.minecraft.client.resources.DefaultResourcePack.resourceExists" | 
                        "net.minecraft.client.resources.DefaultResourcePack.getInputStreamAssets" | 
                        "net.minecraft.client.resources.DefaultResourcePack.getPackMetadata" | 
                        "net.minecraft.client.resources.DefaultResourcePack.getResourceStream" | 
                        "net.minecraft.client.resources.DefaultResourcePack.getPackName" | 
                        "net.minecraft.client.resources.DefaultResourcePack.getResourceDomains" | 
                        "net.minecraft.client.resources.DefaultResourcePack.getPackImage" | 
                        "net.minecraft.client.resources.DefaultResourcePack.getInputStream" | 
                        "org.cef.handler.CefResourceHandler.cancel" | 
                        "org.cef.handler.CefResourceHandler.readResponse" | 
                        "org.cef.handler.CefResourceHandler.getResponseHeaders" | 
                        "org.cef.handler.CefResourceHandler.processRequest" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$DoubleZRoom.addComponentParts" | 
                        "org.cef.callback.CefMenuModel.getLabel" | 
                        "org.cef.callback.CefMenuModel.setGroupId" | 
                        "org.cef.callback.CefMenuModel.addSubMenu" | 
                        "org.cef.callback.CefMenuModel.removeAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel.setEnabledAt" | 
                        "org.cef.callback.CefMenuModel.getGroupId" | 
                        "org.cef.callback.CefMenuModel.getGroupIdAt" | 
                        "org.cef.callback.CefMenuModel.getAccelerator" | 
                        "org.cef.callback.CefMenuModel.setChecked" | 
                        "org.cef.callback.CefMenuModel.getLabelAt" | 
                        "org.cef.callback.CefMenuModel.getCount" | 
                        "org.cef.callback.CefMenuModel.addCheckItem" | 
                        "org.cef.callback.CefMenuModel.setVisible" | 
                        "org.cef.callback.CefMenuModel.isVisible" | 
                        "org.cef.callback.CefMenuModel.isChecked" | 
                        "org.cef.callback.CefMenuModel.setAccelerator" | 
                        "org.cef.callback.CefMenuModel.hasAccelerator" | 
                        "org.cef.callback.CefMenuModel.removeAccelerator" | 
                        "org.cef.callback.CefMenuModel.setEnabled" | 
                        "org.cef.callback.CefMenuModel.getIndexOf" | 
                        "org.cef.callback.CefMenuModel.insertCheckItemAt" | 
                        "org.cef.callback.CefMenuModel.getAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel.getType" | 
                        "org.cef.callback.CefMenuModel.isCheckedAt" | 
                        "org.cef.callback.CefMenuModel.isEnabled" | 
                        "org.cef.callback.CefMenuModel.insertSeparatorAt" | 
                        "org.cef.callback.CefMenuModel.removeAt" | 
                        "org.cef.callback.CefMenuModel.getSubMenuAt" | 
                        "org.cef.callback.CefMenuModel.hasAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel.setCommandIdAt" | 
                        "org.cef.callback.CefMenuModel.remove" | 
                        "org.cef.callback.CefMenuModel.addItem" | 
                        "org.cef.callback.CefMenuModel.addSeparator" | 
                        "org.cef.callback.CefMenuModel.insertSubMenuAt" | 
                        "org.cef.callback.CefMenuModel.setVisibleAt" | 
                        "org.cef.callback.CefMenuModel.getCommandIdAt" | 
                        "org.cef.callback.CefMenuModel.setGroupIdAt" | 
                        "org.cef.callback.CefMenuModel.isEnabledAt" | 
                        "org.cef.callback.CefMenuModel.getSubMenu" | 
                        "org.cef.callback.CefMenuModel.addRadioItem" | 
                        "org.cef.callback.CefMenuModel.insertItemAt" | 
                        "org.cef.callback.CefMenuModel.getTypeAt" | 
                        "org.cef.callback.CefMenuModel.clear" | 
                        "org.cef.callback.CefMenuModel.insertRadioItemAt" | 
                        "org.cef.callback.CefMenuModel.setAcceleratorAt" | 
                        "org.cef.callback.CefMenuModel.isVisibleAt" | 
                        "org.cef.callback.CefMenuModel.setCheckedAt" | 
                        "org.cef.callback.CefMenuModel.setLabel" | 
                        "org.cef.callback.CefMenuModel.setLabelAt" | 
                        "net.minecraft.entity.player.EnumPlayerModelParts.func_179326_d" | 
                        "net.minecraft.entity.player.EnumPlayerModelParts.getPartId" | 
                        "net.minecraft.entity.player.EnumPlayerModelParts.getPartMask" | 
                        "net.minecraft.entity.player.EnumPlayerModelParts.getPartName" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processConfirmTransaction" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processUpdateSign" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processEntityAction" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.handleSpectate" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processChatMessage" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processPlayer" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processCreativeInventoryAction" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processClientSettings" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processEnchantItem" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processClickWindow" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.handleAnimation" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processHeldItemChange" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processInput" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.handleResourcePackStatus" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processPlayerBlockPlacement" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processClientStatus" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processPlayerAbilities" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processCloseWindow" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processKeepAlive" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processTabComplete" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processPlayerDigging" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processVanilla250Packet" | 
                        "net.minecraft.network.play.INetHandlerPlayServer.processUseEntity" | 
                        "net.optifine.config.RangeListInt.getRange" | 
                        "net.optifine.config.RangeListInt.toString" | 
                        "net.optifine.config.RangeListInt.addRange" | 
                        "net.optifine.config.RangeListInt.isInRange" | 
                        "net.optifine.config.RangeListInt.getCountRanges" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stones.selectBlocks" | 
                        "net.minecraft.entity.effect.EntityLightningBolt.writeEntityToNBT" | 
                        "net.minecraft.entity.effect.EntityLightningBolt.readEntityFromNBT" | 
                        "net.minecraft.entity.effect.EntityLightningBolt.entityInit" | 
                        "net.minecraft.entity.effect.EntityLightningBolt.onUpdate" | 
                        "net.minecraft.client.model.ModelRabbit.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelRabbit.setRotationAngles" | 
                        "net.minecraft.client.model.ModelRabbit.render" | 
                        "net.minecraft.client.model.ModelRabbit.setRotationOffset" | 
                        "net.minecraft.client.settings.GameSettings$Options.getValueMax" | 
                        "net.minecraft.client.settings.GameSettings$Options.getEnumString" | 
                        "net.minecraft.client.settings.GameSettings$Options.normalizeValue" | 
                        "net.minecraft.client.settings.GameSettings$Options.snapToStepClamp" | 
                        "net.minecraft.client.settings.GameSettings$Options.denormalizeValue" | 
                        "net.minecraft.client.settings.GameSettings$Options.returnEnumOrdinal" | 
                        "net.minecraft.client.settings.GameSettings$Options.getEnumBoolean" | 
                        "net.minecraft.client.settings.GameSettings$Options.getEnumFloat" | 
                        "net.minecraft.client.settings.GameSettings$Options.setValueMax" | 
                        "net.minecraft.client.settings.GameSettings$Options.snapToStep" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.addClientStat" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.getCurrentStats" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.startSnooper" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.getUniqueID" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.addJvmArgsToSnooper" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.addStatToSnooper" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.addMemoryStatsToSnooper" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.getMinecraftStartTimeMillis" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.addOSData" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.stopSnooper" | 
                        "net.minecraft.profiler.PlayerUsageSnooper.isSnooperRunning" | 
                        "net.minecraft.client.model.ModelSign.renderSign" | 
                        "net.minecraft.world.gen.NoiseGeneratorPerlin.func_151600_a" | 
                        "net.minecraft.world.gen.NoiseGeneratorPerlin.func_151601_a" | 
                        "net.minecraft.world.gen.NoiseGeneratorPerlin.func_151599_a" | 
                        "net.optifine.texture.PixelFormat.getId" | 
                        "net.minecraft.client.audio.MusicTicker.func_181558_a" | 
                        "net.minecraft.client.audio.MusicTicker.func_181557_a" | 
                        "net.minecraft.client.audio.MusicTicker.update" | 
                        "net.minecraft.client.renderer.entity.RenderTntMinecart.func_180560_a" | 
                        "net.minecraft.entity.monster.EntityEnderman$AITakeBlock.updateTask" | 
                        "net.minecraft.entity.monster.EntityEnderman$AITakeBlock.shouldExecute" | 
                        "net.minecraft.block.BlockStoneSlab$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockStoneSlab$EnumType.getName" | 
                        "net.minecraft.block.BlockStoneSlab$EnumType.toString" | 
                        "net.minecraft.block.BlockStoneSlab$EnumType.func_181074_c" | 
                        "net.minecraft.block.BlockStoneSlab$EnumType.getUnlocalizedName" | 
                        "net.minecraft.util.Rotations.getX" | 
                        "net.minecraft.util.Rotations.getY" | 
                        "net.minecraft.util.Rotations.getZ" | 
                        "net.minecraft.util.Rotations.equals" | 
                        "net.minecraft.util.Rotations.writeToNBT" | 
                        "net.optifine.expr.IExpressionCached.reset" | 
                        "net.optifine.Lagometer$TimerNano.start" | 
                        "net.optifine.Lagometer$TimerNano.reset" | 
                        "net.optifine.Lagometer$TimerNano.end" | 
                        "net.minecraft.realms.RealmsVertexFormat.getColorOffset" | 
                        "net.minecraft.realms.RealmsVertexFormat.getOffset" | 
                        "net.minecraft.realms.RealmsVertexFormat.clear" | 
                        "net.minecraft.realms.RealmsVertexFormat.getNormalOffset" | 
                        "net.minecraft.realms.RealmsVertexFormat.hasColor" | 
                        "net.minecraft.realms.RealmsVertexFormat.getElementCount" | 
                        "net.minecraft.realms.RealmsVertexFormat.getVertexSize" | 
                        "net.minecraft.realms.RealmsVertexFormat.getUvOffset" | 
                        "net.minecraft.realms.RealmsVertexFormat.hashCode" | 
                        "net.minecraft.realms.RealmsVertexFormat.getElement" | 
                        "net.minecraft.realms.RealmsVertexFormat.hasNormal" | 
                        "net.minecraft.realms.RealmsVertexFormat.equals" | 
                        "net.minecraft.realms.RealmsVertexFormat.getElements" | 
                        "net.minecraft.realms.RealmsVertexFormat.toString" | 
                        "net.minecraft.realms.RealmsVertexFormat.from" | 
                        "net.minecraft.realms.RealmsVertexFormat.addElement" | 
                        "net.minecraft.realms.RealmsVertexFormat.getVertexFormat" | 
                        "net.minecraft.realms.RealmsVertexFormat.hasUv" | 
                        "net.minecraft.realms.RealmsVertexFormat.getIntegerSize" | 
                        "net.minecraft.client.gui.GuiSlider.mouseReleased" | 
                        "net.minecraft.client.gui.GuiSlider.mouseDragged" | 
                        "net.minecraft.client.gui.GuiSlider.func_175219_a" | 
                        "net.minecraft.client.gui.GuiSlider.func_175217_d" | 
                        "net.minecraft.client.gui.GuiSlider.getHoverState" | 
                        "net.minecraft.client.gui.GuiSlider.func_175218_a" | 
                        "net.minecraft.client.gui.GuiSlider.getDisplayString" | 
                        "net.minecraft.client.gui.GuiSlider.mousePressed" | 
                        "net.minecraft.client.gui.GuiSlider.func_175220_c" | 
                        "net.minecraft.entity.ai.EntityAIDoorInteract.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIDoorInteract.getBlockDoor" | 
                        "net.minecraft.entity.ai.EntityAIDoorInteract.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIDoorInteract.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIDoorInteract.continueExecuting" | 
                        "net.minecraftforge.common.property.IUnlistedProperty.getName" | 
                        "net.minecraftforge.common.property.IUnlistedProperty.getType" | 
                        "net.minecraftforge.common.property.IUnlistedProperty.isValid" | 
                        "net.minecraftforge.common.property.IUnlistedProperty.valueToString" | 
                        "net.optifine.entity.model.ModelAdapterArmorStand.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterArmorStand.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterArmorStand.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterArmorStand.getModelRendererNames" | 
                        "org.cef.ccbluex.AllTimeGuiView.finalize" | 
                        "net.optifine.gui.GuiMessage.updateScreen" | 
                        "net.optifine.gui.GuiMessage.actionPerformed" | 
                        "net.optifine.gui.GuiMessage.setButtonDelay" | 
                        "net.optifine.gui.GuiMessage.initGui" | 
                        "net.optifine.gui.GuiMessage.drawScreen" | 
                        "net.minecraft.block.BlockCauldron.getMetaFromState" | 
                        "net.minecraft.block.BlockCauldron.onBlockActivated" | 
                        "net.minecraft.block.BlockCauldron.isFullCube" | 
                        "net.minecraft.block.BlockCauldron.getItem" | 
                        "net.minecraft.block.BlockCauldron.fillWithRain" | 
                        "net.minecraft.block.BlockCauldron.hasComparatorInputOverride" | 
                        "net.minecraft.block.BlockCauldron.setWaterLevel" | 
                        "net.minecraft.block.BlockCauldron.getComparatorInputOverride" | 
                        "net.minecraft.block.BlockCauldron.createBlockState" | 
                        "net.minecraft.block.BlockCauldron.onEntityCollidedWithBlock" | 
                        "net.minecraft.block.BlockCauldron.addCollisionBoxesToList" | 
                        "net.minecraft.block.BlockCauldron.getStateFromMeta" | 
                        "net.minecraft.block.BlockCauldron.isOpaqueCube" | 
                        "net.minecraft.block.BlockCauldron.getItemDropped" | 
                        "net.minecraft.block.BlockCauldron.setBlockBoundsForItemRender" | 
                        "net.minecraft.realms.RealmsServerAddress.getPort" | 
                        "net.minecraft.realms.RealmsServerAddress.getHost" | 
                        "net.minecraft.client.resources.data.PackMetadataSection.getPackFormat" | 
                        "net.minecraft.client.resources.data.PackMetadataSection.getPackDescription" | 
                        "net.minecraft.entity.monster.EntityGhast$GhastMoveHelper.isNotColliding" | 
                        "net.minecraft.entity.monster.EntityGhast$GhastMoveHelper.onUpdateMoveHelper" | 
                        "net.minecraft.client.renderer.entity.layers.LayerEndermanEyes.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerEndermanEyes.shouldCombineTextures" | 
                        "net.minecraft.block.BlockAir.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockAir.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockAir.isReplaceable" | 
                        "net.minecraft.block.BlockAir.getRenderType" | 
                        "net.minecraft.block.BlockAir.isOpaqueCube" | 
                        "net.minecraft.block.BlockAir.canCollideCheck" | 
                        "net.minecraft.world.gen.layer.GenLayerFuzzyZoom.selectModeOrRandom" | 
                        "net.optifine.texture.InternalFormat.getId" | 
                        "net.minecraft.entity.player.InventoryPlayer.decrStackSize" | 
                        "net.minecraft.entity.player.InventoryPlayer.readFromNBT" | 
                        "net.minecraft.entity.player.InventoryPlayer.getFirstEmptyStack" | 
                        "net.minecraft.entity.player.InventoryPlayer.hasItemStack" | 
                        "net.minecraft.entity.player.InventoryPlayer.setField" | 
                        "net.minecraft.entity.player.InventoryPlayer.getName" | 
                        "net.minecraft.entity.player.InventoryPlayer.markDirty" | 
                        "net.minecraft.entity.player.InventoryPlayer.getTotalArmorValue" | 
                        "net.minecraft.entity.player.InventoryPlayer.canHeldItemHarvest" | 
                        "net.minecraft.entity.player.InventoryPlayer.hasItem" | 
                        "net.minecraft.entity.player.InventoryPlayer.consumeInventoryItem" | 
                        "net.minecraft.entity.player.InventoryPlayer.setItemStack" | 
                        "net.minecraft.entity.player.InventoryPlayer.setInventorySlotContents" | 
                        "net.minecraft.entity.player.InventoryPlayer.closeInventory" | 
                        "net.minecraft.entity.player.InventoryPlayer.getCurrentItem" | 
                        "net.minecraft.entity.player.InventoryPlayer.decrementAnimations" | 
                        "net.minecraft.entity.player.InventoryPlayer.getInventoryStackLimit" | 
                        "net.minecraft.entity.player.InventoryPlayer.storeItemStack" | 
                        "net.minecraft.entity.player.InventoryPlayer.hasCustomName" | 
                        "net.minecraft.entity.player.InventoryPlayer.storePartialItemStack" | 
                        "net.minecraft.entity.player.InventoryPlayer.getItemStack" | 
                        "net.minecraft.entity.player.InventoryPlayer.writeToNBT" | 
                        "net.minecraft.entity.player.InventoryPlayer.copyInventory" | 
                        "net.minecraft.entity.player.InventoryPlayer.isItemValidForSlot" | 
                        "net.minecraft.entity.player.InventoryPlayer.openInventory" | 
                        "net.minecraft.entity.player.InventoryPlayer.getStrVsBlock" | 
                        "net.minecraft.entity.player.InventoryPlayer.setCurrentItem" | 
                        "net.minecraft.entity.player.InventoryPlayer.clear" | 
                        "net.minecraft.entity.player.InventoryPlayer.getField" | 
                        "net.minecraft.entity.player.InventoryPlayer.clearMatchingItems" | 
                        "net.minecraft.entity.player.InventoryPlayer.getStackInSlot" | 
                        "net.minecraft.entity.player.InventoryPlayer.getInventorySlotContainItem" | 
                        "net.minecraft.entity.player.InventoryPlayer.armorItemInSlot" | 
                        "net.minecraft.entity.player.InventoryPlayer.damageArmor" | 
                        "net.minecraft.entity.player.InventoryPlayer.getSizeInventory" | 
                        "net.minecraft.entity.player.InventoryPlayer.getDisplayName" | 
                        "net.minecraft.entity.player.InventoryPlayer.isUseableByPlayer" | 
                        "net.minecraft.entity.player.InventoryPlayer.dropAllItems" | 
                        "net.minecraft.entity.player.InventoryPlayer.changeCurrentItem" | 
                        "net.minecraft.entity.player.InventoryPlayer.addItemStackToInventory" | 
                        "net.minecraft.entity.player.InventoryPlayer.removeStackFromSlot" | 
                        "net.minecraft.entity.player.InventoryPlayer.getFieldCount" | 
                        "net.minecraft.entity.player.InventoryPlayer.getInventorySlotContainItemAndDamage" | 
                        "net.optifine.http.FileUploadThread.getContent" | 
                        "net.optifine.http.FileUploadThread.run" | 
                        "net.optifine.http.FileUploadThread.getListener" | 
                        "net.optifine.http.FileUploadThread.getUrlString" | 
                        "viamcp.gui.GuiCredits.actionPerformed" | 
                        "viamcp.gui.GuiCredits.handleMouseInput" | 
                        "viamcp.gui.GuiCredits.initGui" | 
                        "viamcp.gui.GuiCredits.drawScreen" | 
                        "net.minecraft.client.renderer.entity.layers.LayerWitherAura.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerWitherAura.shouldCombineTextures" | 
                        "net.minecraft.client.gui.spectator.ISpectatorMenuObject.getSpectatorName" | 
                        "net.minecraft.client.gui.spectator.ISpectatorMenuObject.func_178662_A_" | 
                        "net.minecraft.client.gui.spectator.ISpectatorMenuObject.func_178663_a" | 
                        "net.minecraft.client.gui.spectator.ISpectatorMenuObject.func_178661_a" | 
                        "net.minecraft.dispenser.BehaviorProjectileDispense.func_82500_b" | 
                        "net.minecraft.dispenser.BehaviorProjectileDispense.getProjectileEntity" | 
                        "net.minecraft.dispenser.BehaviorProjectileDispense.dispenseStack" | 
                        "net.minecraft.dispenser.BehaviorProjectileDispense.playDispenseSound" | 
                        "net.minecraft.dispenser.BehaviorProjectileDispense.func_82498_a" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Stairs.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Stairs.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Stairs.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Stairs.writeStructureToNBT" | 
                        "net.minecraft.block.BlockSoulSand.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockSoulSand.onEntityCollidedWithBlock" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityEnderChestRenderer.renderTileEntityAt" | 
                        "net.minecraft.block.BlockPackedIce.quantityDropped" | 
                        "net.minecraft.world.biome.WorldChunkManager.getBiomeGenerator" | 
                        "net.minecraft.world.biome.WorldChunkManager.getBiomesToSpawnIn" | 
                        "net.minecraft.world.biome.WorldChunkManager.cleanupCache" | 
                        "net.minecraft.world.biome.WorldChunkManager.getRainfall" | 
                        "net.minecraft.world.biome.WorldChunkManager.getBiomeGenAt" | 
                        "net.minecraft.world.biome.WorldChunkManager.areBiomesViable" | 
                        "net.minecraft.world.biome.WorldChunkManager.getBiomesForGeneration" | 
                        "net.minecraft.world.biome.WorldChunkManager.findBiomePosition" | 
                        "net.minecraft.world.biome.WorldChunkManager.loadBlockGeneratorData" | 
                        "net.minecraft.world.biome.WorldChunkManager.getTemperatureAtHeight" | 
                        "net.minecraft.client.gui.IProgressMeter.doneLoading" | 
                        "net.minecraft.util.MovementInput.updatePlayerMoveState" | 
                        "net.optifine.shaders.IteratorAxis.next" | 
                        "net.optifine.shaders.IteratorAxis.nextPos" | 
                        "net.optifine.shaders.IteratorAxis.hasNext" | 
                        "net.optifine.shaders.IteratorAxis.remove" | 
                        "net.minecraft.client.renderer.entity.layers.LayerRenderer.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerRenderer.shouldCombineTextures" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.expandLocations" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.getLocation" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.getProgram" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.getName" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.onProgramSet" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.disable" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.isDefined" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.reset" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.toString" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.checkGLError" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.resetValue" | 
                        "net.optifine.shaders.uniform.ShaderUniformBase.setProgram" | 
                        "net.minecraft.client.renderer.texture.ITextureObject.restoreLastBlurMipmap" | 
                        "net.minecraft.client.renderer.texture.ITextureObject.setBlurMipmap" | 
                        "net.minecraft.client.renderer.texture.ITextureObject.getMultiTexID" | 
                        "net.minecraft.client.renderer.texture.ITextureObject.loadTexture" | 
                        "net.minecraft.client.renderer.texture.ITextureObject.getGlTextureId" | 
                        "net.minecraft.world.WorldProviderHell.canRespawnHere" | 
                        "net.minecraft.world.WorldProviderHell.isSurfaceWorld" | 
                        "net.minecraft.world.WorldProviderHell.getInternalNameSuffix" | 
                        "net.minecraft.world.WorldProviderHell.getDimensionName" | 
                        "net.minecraft.world.WorldProviderHell.getFogColor" | 
                        "net.minecraft.world.WorldProviderHell.createChunkGenerator" | 
                        "net.minecraft.world.WorldProviderHell.canCoordinateBeSpawn" | 
                        "net.minecraft.world.WorldProviderHell.doesXZShowFog" | 
                        "net.minecraft.world.WorldProviderHell.registerWorldChunkManager" | 
                        "net.minecraft.world.WorldProviderHell.generateLightBrightnessTable" | 
                        "net.minecraft.world.WorldProviderHell.calculateCelestialAngle" | 
                        "net.minecraft.world.WorldProviderHell.getWorldBorder" | 
                        "net.minecraft.client.renderer.WorldRenderer.putBrightness4" | 
                        "net.minecraft.client.renderer.WorldRenderer.putColor" | 
                        "net.minecraft.client.renderer.WorldRenderer.getBufferSize" | 
                        "net.minecraft.client.renderer.WorldRenderer.getVertexState" | 
                        "net.minecraft.client.renderer.WorldRenderer.getByteBuffer" | 
                        "net.minecraft.client.renderer.WorldRenderer.putColorRGB_F4" | 
                        "net.minecraft.client.renderer.WorldRenderer.getYOffset" | 
                        "net.minecraft.client.renderer.WorldRenderer.setVertexState" | 
                        "net.minecraft.client.renderer.WorldRenderer.drawForIcon" | 
                        "net.minecraft.client.renderer.WorldRenderer.noColor" | 
                        "net.minecraft.client.renderer.WorldRenderer.putSprite" | 
                        "net.minecraft.client.renderer.WorldRenderer.getXOffset" | 
                        "net.minecraft.client.renderer.WorldRenderer.drawMultiTexture" | 
                        "net.minecraft.client.renderer.WorldRenderer.tex" | 
                        "net.minecraft.client.renderer.WorldRenderer.lightmap" | 
                        "net.minecraft.client.renderer.WorldRenderer.putColorRGB_F" | 
                        "net.minecraft.client.renderer.WorldRenderer.sortVertexData" | 
                        "net.minecraft.client.renderer.WorldRenderer.setSprite" | 
                        "net.minecraft.client.renderer.WorldRenderer.getVertexCount" | 
                        "net.minecraft.client.renderer.WorldRenderer.reset" | 
                        "net.minecraft.client.renderer.WorldRenderer.setBlockLayer" | 
                        "net.minecraft.client.renderer.WorldRenderer.isMultiTexture" | 
                        "net.minecraft.client.renderer.WorldRenderer.begin" | 
                        "net.minecraft.client.renderer.WorldRenderer.putColorRGBA" | 
                        "net.minecraft.client.renderer.WorldRenderer.getColorIndex" | 
                        "net.minecraft.client.renderer.WorldRenderer.color" | 
                        "net.minecraft.client.renderer.WorldRenderer.isColorDisabled" | 
                        "net.minecraft.client.renderer.WorldRenderer.putNormal" | 
                        "net.minecraft.client.renderer.WorldRenderer.nextVertexFormatIndex" | 
                        "net.minecraft.client.renderer.WorldRenderer.getRenderEnv" | 
                        "net.minecraft.client.renderer.WorldRenderer.pos" | 
                        "net.minecraft.client.renderer.WorldRenderer.addVertexData" | 
                        "net.minecraft.client.renderer.WorldRenderer.getZOffset" | 
                        "net.minecraft.client.renderer.WorldRenderer.putPosition" | 
                        "net.minecraft.client.renderer.WorldRenderer.growBuffer" | 
                        "net.minecraft.client.renderer.WorldRenderer.getBufferQuadSize" | 
                        "net.minecraft.client.renderer.WorldRenderer.normal" | 
                        "net.minecraft.client.renderer.WorldRenderer.getBlockLayer" | 
                        "net.minecraft.client.renderer.WorldRenderer.isDrawing" | 
                        "net.minecraft.client.renderer.WorldRenderer.finishDrawing" | 
                        "net.minecraft.client.renderer.WorldRenderer.endVertex" | 
                        "net.minecraft.client.renderer.WorldRenderer.setTranslation" | 
                        "net.minecraft.client.renderer.WorldRenderer.draw" | 
                        "net.minecraft.client.renderer.WorldRenderer.putColorMultiplierRgba" | 
                        "net.minecraft.client.renderer.WorldRenderer.putColor4" | 
                        "net.minecraft.client.renderer.WorldRenderer.getDrawMode" | 
                        "net.minecraft.client.renderer.WorldRenderer.putColorMultiplier" | 
                        "net.minecraft.client.renderer.WorldRenderer.quadsToTriangles" | 
                        "net.minecraft.client.renderer.WorldRenderer.getVertexFormat" | 
                        "net.optifine.shaders.config.MacroExpressionResolver.getExpression" | 
                        "net.minecraft.client.audio.ISound.getVolume" | 
                        "net.minecraft.client.audio.ISound.getSoundLocation" | 
                        "net.minecraft.client.audio.ISound.getPitch" | 
                        "net.minecraft.client.audio.ISound.getRepeatDelay" | 
                        "net.minecraft.client.audio.ISound.getYPosF" | 
                        "net.minecraft.client.audio.ISound.getXPosF" | 
                        "net.minecraft.client.audio.ISound.canRepeat" | 
                        "net.minecraft.client.audio.ISound.getZPosF" | 
                        "net.minecraft.client.audio.ISound.getAttenuationType" | 
                        "net.optifine.shaders.IShaderPack.hasDirectory" | 
                        "net.optifine.shaders.IShaderPack.getName" | 
                        "net.optifine.shaders.IShaderPack.getResourceAsStream" | 
                        "net.optifine.shaders.IShaderPack.close" | 
                        "net.minecraft.client.model.TexturedQuad.draw" | 
                        "net.minecraft.client.model.TexturedQuad.flipFace" | 
                        "net.minecraft.entity.monster.EntityEnderman$AIPlaceBlock.updateTask" | 
                        "net.minecraft.entity.monster.EntityEnderman$AIPlaceBlock.shouldExecute" | 
                        "net.minecraft.entity.monster.EntityEnderman$AIPlaceBlock.func_179474_a" | 
                        "net.minecraft.client.model.ModelEnderman.setRotationAngles" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stronghold.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stronghold.getNextComponentZ" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stronghold.getNextComponentNormal" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stronghold.getNextComponentX" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stronghold.getRandomDoor" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stronghold.placeDoor" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stronghold.writeStructureToNBT" | 
                        "net.minecraft.block.BlockIce.getBlockLayer" | 
                        "net.minecraft.block.BlockIce.getMobilityFlag" | 
                        "net.minecraft.block.BlockIce.quantityDropped" | 
                        "net.minecraft.block.BlockIce.harvestBlock" | 
                        "net.minecraft.block.BlockIce.updateTick" | 
                        "net.minecraft.client.particle.EntityFirework$OverlayFX.renderParticle" | 
                        "net.minecraft.enchantment.EnchantmentWaterWorker.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentWaterWorker.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentWaterWorker.getMaxLevel" | 
                        "net.minecraft.client.renderer.RegionRenderCache.getPositionIndex" | 
                        "net.minecraft.client.renderer.RegionRenderCache.getTileEntity" | 
                        "net.minecraft.client.renderer.RegionRenderCache.getCombinedLight" | 
                        "net.minecraft.client.renderer.RegionRenderCache.getBlockState" | 
                        "net.minecraft.client.renderer.RegionRenderCache.getBlockStateRaw" | 
                        "net.minecraft.client.renderer.RegionRenderCache.freeBuffers" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.getRealmsButton" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.mouseDragged" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.getId" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.mousePressed" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.mouseReleased" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.setEnabled" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.getHeight" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.getEnabled" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.getPositionY" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.getHoverState" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.func_154312_c" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.getButtonWidth" | 
                        "net.minecraft.client.gui.GuiButtonRealmsProxy.setText" | 
                        "slice.event.Event.call" | 
                        "slice.event.Event.isCancelled" | 
                        "slice.event.Event.setCancelled" | 
                        "slice.event.Event.getScriptName" | 
                        "net.minecraft.client.gui.GuiScreenServerList.updateScreen" | 
                        "net.minecraft.client.gui.GuiScreenServerList.actionPerformed" | 
                        "net.minecraft.client.gui.GuiScreenServerList.mouseClicked" | 
                        "net.minecraft.client.gui.GuiScreenServerList.initGui" | 
                        "net.minecraft.client.gui.GuiScreenServerList.drawScreen" | 
                        "net.minecraft.client.gui.GuiScreenServerList.onGuiClosed" | 
                        "net.minecraft.client.gui.GuiScreenServerList.keyTyped" | 
                        "slice.command.commands.CommandHelp.handle" | 
                        "net.optifine.entity.model.ModelAdapterZombie.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterZombie.makeEntityRender" | 
                        "net.optifine.shaders.config.ShaderOptionScreen.getNameText" | 
                        "net.optifine.shaders.config.ShaderOptionScreen.getDescriptionText" | 
                        "net.minecraft.client.resources.Language.getLanguageCode" | 
                        "net.minecraft.client.resources.Language.hashCode" | 
                        "net.minecraft.client.resources.Language.equals" | 
                        "net.minecraft.client.resources.Language.isBidirectional" | 
                        "net.minecraft.client.resources.Language.toString" | 
                        "net.minecraft.client.resources.Language.compareTo" | 
                        "net.minecraft.enchantment.EnchantmentHelper$DamageIterator.calculateModifier" | 
                        "net.optifine.shaders.config.ScreenShaderOptions.getShaderOptions" | 
                        "net.optifine.shaders.config.ScreenShaderOptions.getName" | 
                        "net.optifine.shaders.config.ScreenShaderOptions.getColumns" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.renderSelected" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.itemClicked" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.getItemCount" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.setLeftPos" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.scroll" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.selectItem" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.customMouseEvent" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.renderItem" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.mouseEvent" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.getScrollbarPosition" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.ym" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.xm" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.width" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.renderBackground" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.getMaxPosition" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.renderList" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.render" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.getScroll" | 
                        "net.minecraft.realms.RealmsClickableScrolledSelectionList.isSelectedItem" | 
                        "net.minecraft.command.server.CommandOp.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandOp.getCommandUsage" | 
                        "net.minecraft.command.server.CommandOp.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandOp.processCommand" | 
                        "net.minecraft.command.server.CommandOp.getCommandName" | 
                        "slice.setting.Setting.getModule" | 
                        "slice.setting.Setting.setName" | 
                        "slice.setting.Setting.setVisible" | 
                        "slice.setting.Setting.getName" | 
                        "slice.setting.Setting.updateSetting" | 
                        "slice.setting.Setting.setHidden" | 
                        "slice.setting.Setting.setModule" | 
                        "slice.setting.Setting.isHidden" | 
                        "net.minecraft.util.ITickable.update" | 
                        "slice.command.commands.CommandSetting.lambda$new$0" | 
                        "slice.command.commands.CommandSetting.handle" | 
                        "org.cef.callback.CefNative.setNativeRef" | 
                        "org.cef.callback.CefNative.getNativeRef" | 
                        "net.minecraft.tileentity.TileEntityHopper.decrStackSize" | 
                        "net.minecraft.tileentity.TileEntityHopper.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityHopper.setField" | 
                        "net.minecraft.tileentity.TileEntityHopper.getName" | 
                        "net.minecraft.tileentity.TileEntityHopper.markDirty" | 
                        "net.minecraft.tileentity.TileEntityHopper.setCustomName" | 
                        "net.minecraft.tileentity.TileEntityHopper.getInventoryForHopperTransfer" | 
                        "net.minecraft.tileentity.TileEntityHopper.createContainer" | 
                        "net.minecraft.tileentity.TileEntityHopper.update" | 
                        "net.minecraft.tileentity.TileEntityHopper.setInventorySlotContents" | 
                        "net.minecraft.tileentity.TileEntityHopper.isInventoryFull" | 
                        "net.minecraft.tileentity.TileEntityHopper.closeInventory" | 
                        "net.minecraft.tileentity.TileEntityHopper.mayTransfer" | 
                        "net.minecraft.tileentity.TileEntityHopper.getInventoryStackLimit" | 
                        "net.minecraft.tileentity.TileEntityHopper.getYPos" | 
                        "net.minecraft.tileentity.TileEntityHopper.hasCustomName" | 
                        "net.minecraft.tileentity.TileEntityHopper.writeToNBT" | 
                        "net.minecraft.tileentity.TileEntityHopper.setTransferCooldown" | 
                        "net.minecraft.tileentity.TileEntityHopper.getGuiID" | 
                        "net.minecraft.tileentity.TileEntityHopper.isItemValidForSlot" | 
                        "net.minecraft.tileentity.TileEntityHopper.openInventory" | 
                        "net.minecraft.tileentity.TileEntityHopper.transferItemsOut" | 
                        "net.minecraft.tileentity.TileEntityHopper.clear" | 
                        "net.minecraft.tileentity.TileEntityHopper.isEmpty" | 
                        "net.minecraft.tileentity.TileEntityHopper.getField" | 
                        "net.minecraft.tileentity.TileEntityHopper.getStackInSlot" | 
                        "net.minecraft.tileentity.TileEntityHopper.getSizeInventory" | 
                        "net.minecraft.tileentity.TileEntityHopper.isUseableByPlayer" | 
                        "net.minecraft.tileentity.TileEntityHopper.getXPos" | 
                        "net.minecraft.tileentity.TileEntityHopper.updateHopper" | 
                        "net.minecraft.tileentity.TileEntityHopper.getZPos" | 
                        "net.minecraft.tileentity.TileEntityHopper.isFull" | 
                        "net.minecraft.tileentity.TileEntityHopper.removeStackFromSlot" | 
                        "net.minecraft.tileentity.TileEntityHopper.getFieldCount" | 
                        "net.minecraft.tileentity.TileEntityHopper.isOnTransferCooldown" | 
                        "net.minecraft.client.model.ModelIronGolem.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelIronGolem.func_78172_a" | 
                        "net.minecraft.client.model.ModelIronGolem.setRotationAngles" | 
                        "net.minecraft.client.model.ModelIronGolem.render" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getIconWidth" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.updateAnimationInterpolated" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getFrameCount" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.allocateFrameTextureData" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.setFramesTextureData" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.loadShadersSprites" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getSpriteV16" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.hasAnimationMetadata" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.isAnimationActive" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getOriginY" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getOriginX" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.loadSprite" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.setAnimationIndex" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.updateIndexInMap" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.toSingleV" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.bindSpriteTexture" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.toSingleU" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.setIconHeight" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getIndexInMap" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.hasCustomLoader" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getMinV" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getAnimationIndex" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.clearFramesTextureData" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getMinU" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.updateAnimation" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getIconName" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.initSprite" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getInterpolatedU" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getInterpolatedV" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.resetSprite" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.generateMipmaps" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.deleteSpriteTexture" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getFramesTextureData" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.load" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.setIconWidth" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.fixTransparentColor" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getMaxU" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.setAnimationMetadata" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getMaxV" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getSpriteU16" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.copyFrom" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getIconHeight" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.setIndexInMap" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.getAnimationMetadata" | 
                        "net.minecraft.client.renderer.texture.TextureAtlasSprite.toString" | 
                        "net.minecraft.world.gen.FlatLayerInfo.setMinY" | 
                        "net.minecraft.world.gen.FlatLayerInfo.toString" | 
                        "net.minecraft.world.gen.FlatLayerInfo.getLayerMaterialBlock" | 
                        "net.minecraft.world.gen.FlatLayerInfo.getLayerMaterial" | 
                        "net.minecraft.world.gen.FlatLayerInfo.getLayerCount" | 
                        "net.minecraft.world.gen.FlatLayerInfo.getFillBlockMeta" | 
                        "net.minecraft.world.gen.FlatLayerInfo.getMinY" | 
                        "slice.legacy.clickgui.setting.settings.BooleanButton.formatDouble" | 
                        "slice.legacy.clickgui.setting.settings.BooleanButton.setBooleanValue" | 
                        "slice.legacy.clickgui.setting.settings.BooleanButton.mouseClicked" | 
                        "slice.legacy.clickgui.setting.settings.BooleanButton.getBooleanValue" | 
                        "slice.legacy.clickgui.setting.settings.BooleanButton.draw" | 
                        "net.minecraft.command.CommandKill.isUsernameIndex" | 
                        "net.minecraft.command.CommandKill.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandKill.getCommandUsage" | 
                        "net.minecraft.command.CommandKill.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandKill.processCommand" | 
                        "net.minecraft.command.CommandKill.getCommandName" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$JunglePyramid.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$JunglePyramid.addComponentParts" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$JunglePyramid.writeStructureToNBT" | 
                        "net.minecraft.item.crafting.RecipesArmorDyes.getRecipeOutput" | 
                        "net.minecraft.item.crafting.RecipesArmorDyes.getRemainingItems" | 
                        "net.minecraft.item.crafting.RecipesArmorDyes.getCraftingResult" | 
                        "net.minecraft.item.crafting.RecipesArmorDyes.getRecipeSize" | 
                        "net.minecraft.item.crafting.RecipesArmorDyes.matches" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Start.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Start.writeStructureToNBT" | 
                        "net.minecraft.village.VillageCollection.readFromNBT" | 
                        "net.minecraft.village.VillageCollection.getNearestVillage" | 
                        "net.minecraft.village.VillageCollection.getVillageList" | 
                        "net.minecraft.village.VillageCollection.removeAnnihilatedVillages" | 
                        "net.minecraft.village.VillageCollection.isWoodDoor" | 
                        "net.minecraft.village.VillageCollection.setWorldsForAll" | 
                        "net.minecraft.village.VillageCollection.addDoorsAround" | 
                        "net.minecraft.village.VillageCollection.tick" | 
                        "net.minecraft.village.VillageCollection.addNewDoorsToVillageOrCreateVillage" | 
                        "net.minecraft.village.VillageCollection.addToVillagerPositionList" | 
                        "net.minecraft.village.VillageCollection.countBlocksCanSeeSky" | 
                        "net.minecraft.village.VillageCollection.dropOldestVillagerPosition" | 
                        "net.minecraft.village.VillageCollection.positionInList" | 
                        "net.minecraft.village.VillageCollection.checkDoorExistence" | 
                        "net.minecraft.village.VillageCollection.addToNewDoorsList" | 
                        "net.minecraft.village.VillageCollection.writeToNBT" | 
                        "net.minecraft.world.gen.layer.GenLayerRiverMix.initWorldGenSeed" | 
                        "net.minecraft.world.gen.layer.GenLayerRiverMix.getInts" | 
                        "net.minecraft.block.BlockSand$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockSand$EnumType.getName" | 
                        "net.minecraft.block.BlockSand$EnumType.getMapColor" | 
                        "net.minecraft.block.BlockSand$EnumType.toString" | 
                        "net.minecraft.block.BlockSand$EnumType.getUnlocalizedName" | 
                        "net.minecraft.inventory.InventoryMerchant.decrStackSize" | 
                        "net.minecraft.inventory.InventoryMerchant.openInventory" | 
                        "net.minecraft.inventory.InventoryMerchant.setField" | 
                        "net.minecraft.inventory.InventoryMerchant.getName" | 
                        "net.minecraft.inventory.InventoryMerchant.markDirty" | 
                        "net.minecraft.inventory.InventoryMerchant.clear" | 
                        "net.minecraft.inventory.InventoryMerchant.getField" | 
                        "net.minecraft.inventory.InventoryMerchant.setCurrentRecipeIndex" | 
                        "net.minecraft.inventory.InventoryMerchant.inventoryResetNeededOnSlotChange" | 
                        "net.minecraft.inventory.InventoryMerchant.getStackInSlot" | 
                        "net.minecraft.inventory.InventoryMerchant.setInventorySlotContents" | 
                        "net.minecraft.inventory.InventoryMerchant.closeInventory" | 
                        "net.minecraft.inventory.InventoryMerchant.resetRecipeAndSlots" | 
                        "net.minecraft.inventory.InventoryMerchant.getInventoryStackLimit" | 
                        "net.minecraft.inventory.InventoryMerchant.getSizeInventory" | 
                        "net.minecraft.inventory.InventoryMerchant.getDisplayName" | 
                        "net.minecraft.inventory.InventoryMerchant.isUseableByPlayer" | 
                        "net.minecraft.inventory.InventoryMerchant.getCurrentRecipe" | 
                        "net.minecraft.inventory.InventoryMerchant.hasCustomName" | 
                        "net.minecraft.inventory.InventoryMerchant.removeStackFromSlot" | 
                        "net.minecraft.inventory.InventoryMerchant.getFieldCount" | 
                        "net.minecraft.inventory.InventoryMerchant.isItemValidForSlot" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator$SpanFacing.func_178372_b" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator$SpanFacing.func_178371_c" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator$SpanFacing.func_178369_d" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator$SpanFacing.getFacing" | 
                        "net.minecraft.nbt.NBTTagLong.getByte" | 
                        "net.minecraft.nbt.NBTTagLong.read" | 
                        "net.minecraft.nbt.NBTTagLong.getShort" | 
                        "net.minecraft.nbt.NBTTagLong.getDouble" | 
                        "net.minecraft.nbt.NBTTagLong.getId" | 
                        "net.minecraft.nbt.NBTTagLong.getFloat" | 
                        "net.minecraft.nbt.NBTTagLong.getLong" | 
                        "net.minecraft.nbt.NBTTagLong.getInt" | 
                        "net.minecraft.nbt.NBTTagLong.hashCode" | 
                        "net.minecraft.nbt.NBTTagLong.equals" | 
                        "net.minecraft.nbt.NBTTagLong.toString" | 
                        "net.minecraft.nbt.NBTTagLong.copy" | 
                        "net.minecraft.nbt.NBTTagLong.write" | 
                        "net.optifine.entity.model.ModelAdapterSheepWool.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterSheepWool.makeEntityRender" | 
                        "net.minecraft.entity.IRangedAttackMob.attackEntityWithRangedAttack" | 
                        "org.cef.handler.CefKeyboardHandler$CefKeyEvent.toString" | 
                        "com.sliceclient.anticheat.event.manager.AntiCheatEventSender.getEvent" | 
                        "com.sliceclient.anticheat.event.manager.AntiCheatEventSender.getMethodParameterType" | 
                        "com.sliceclient.anticheat.event.manager.AntiCheatEventSender.hasAnnotation" | 
                        "com.sliceclient.anticheat.event.manager.AntiCheatEventSender.getTarget" | 
                        "com.sliceclient.anticheat.event.manager.AntiCheatEventSender.getMethod" | 
                        "com.sliceclient.anticheat.event.manager.AntiCheatEventSender.execute" | 
                        "net.minecraft.world.WorldProviderEnd.getCloudHeight" | 
                        "net.minecraft.world.WorldProviderEnd.getDimensionName" | 
                        "net.minecraft.world.WorldProviderEnd.getAverageGroundLevel" | 
                        "net.minecraft.world.WorldProviderEnd.createChunkGenerator" | 
                        "net.minecraft.world.WorldProviderEnd.doesXZShowFog" | 
                        "net.minecraft.world.WorldProviderEnd.isSkyColored" | 
                        "net.minecraft.world.WorldProviderEnd.canRespawnHere" | 
                        "net.minecraft.world.WorldProviderEnd.isSurfaceWorld" | 
                        "net.minecraft.world.WorldProviderEnd.getInternalNameSuffix" | 
                        "net.minecraft.world.WorldProviderEnd.getFogColor" | 
                        "net.minecraft.world.WorldProviderEnd.canCoordinateBeSpawn" | 
                        "net.minecraft.world.WorldProviderEnd.registerWorldChunkManager" | 
                        "net.minecraft.world.WorldProviderEnd.getSpawnCoordinate" | 
                        "net.minecraft.world.WorldProviderEnd.calcSunriseSunsetColors" | 
                        "net.minecraft.world.WorldProviderEnd.calculateCelestialAngle" | 
                        "net.optifine.gui.GuiChatOF.checkCustomCommand" | 
                        "net.optifine.gui.GuiChatOF.sendChatMessage" | 
                        "net.minecraft.network.play.server.S08PacketPlayerPosLook$EnumFlags.func_180054_b" | 
                        "net.minecraft.network.play.server.S08PacketPlayerPosLook$EnumFlags.func_180055_a" | 
                        "net.minecraft.world.IInteractionObject.createContainer" | 
                        "net.minecraft.world.IInteractionObject.getGuiID" | 
                        "net.optifine.util.CompoundKey.getKeysCopy" | 
                        "net.optifine.util.CompoundKey.hashCode" | 
                        "net.optifine.util.CompoundKey.equals" | 
                        "net.optifine.util.CompoundKey.toString" | 
                        "net.optifine.util.CompoundKey.getKeys" | 
                        "net.minecraft.block.BlockBed$EnumPartType.getName" | 
                        "net.minecraft.block.BlockBed$EnumPartType.toString" | 
                        "net.minecraft.client.model.ModelSquid.setRotationAngles" | 
                        "net.minecraft.client.model.ModelSquid.render" | 
                        "net.optifine.expr.ExpressionFloatArrayCached.eval" | 
                        "net.optifine.expr.ExpressionFloatArrayCached.getExpressionType" | 
                        "net.optifine.expr.ExpressionFloatArrayCached.reset" | 
                        "net.optifine.expr.ExpressionFloatArrayCached.toString" | 
                        "net.minecraft.util.WeightedRandomFishable.setEnchantable" | 
                        "net.minecraft.util.WeightedRandomFishable.getItemStack" | 
                        "net.minecraft.util.WeightedRandomFishable.setMaxDamagePercent" | 
                        "net.minecraft.block.BlockRedstoneWire$EnumAttachPosition.getName" | 
                        "net.minecraft.block.BlockRedstoneWire$EnumAttachPosition.toString" | 
                        "net.optifine.shaders.config.ShaderOptionResolver.getExpression" | 
                        "net.minecraft.command.server.CommandScoreboard.setTeamOption" | 
                        "net.minecraft.command.server.CommandScoreboard.removeObjective" | 
                        "net.minecraft.command.server.CommandScoreboard.setObjectiveDisplay" | 
                        "net.minecraft.command.server.CommandScoreboard.resetPlayers" | 
                        "net.minecraft.command.server.CommandScoreboard.processCommand" | 
                        "net.minecraft.command.server.CommandScoreboard.func_147184_a" | 
                        "net.minecraft.command.server.CommandScoreboard.listTeams" | 
                        "net.minecraft.command.server.CommandScoreboard.func_175781_o" | 
                        "net.minecraft.command.server.CommandScoreboard.joinTeam" | 
                        "net.minecraft.command.server.CommandScoreboard.getTeam" | 
                        "net.minecraft.command.server.CommandScoreboard.emptyTeam" | 
                        "net.minecraft.command.server.CommandScoreboard.addTeam" | 
                        "net.minecraft.command.server.CommandScoreboard.getScoreboard" | 
                        "net.minecraft.command.server.CommandScoreboard.listPlayers" | 
                        "net.minecraft.command.server.CommandScoreboard.func_175782_e" | 
                        "net.minecraft.command.server.CommandScoreboard.isUsernameIndex" | 
                        "net.minecraft.command.server.CommandScoreboard.func_175780_b" | 
                        "net.minecraft.command.server.CommandScoreboard.addObjective" | 
                        "net.minecraft.command.server.CommandScoreboard.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandScoreboard.getObjective" | 
                        "net.minecraft.command.server.CommandScoreboard.setPlayer" | 
                        "net.minecraft.command.server.CommandScoreboard.func_175779_n" | 
                        "net.minecraft.command.server.CommandScoreboard.func_175778_p" | 
                        "net.minecraft.command.server.CommandScoreboard.leaveTeam" | 
                        "net.minecraft.command.server.CommandScoreboard.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandScoreboard.getCommandUsage" | 
                        "net.minecraft.command.server.CommandScoreboard.listObjectives" | 
                        "net.minecraft.command.server.CommandScoreboard.getCommandName" | 
                        "net.minecraft.command.server.CommandScoreboard.removeTeam" | 
                        "org.cef.callback.CefRunFileDialogCallback.onFileDialogDismissed" | 
                        "org.cef.browser.scheme.SchemeResponseHeaders.setResponseLength" | 
                        "org.cef.browser.scheme.SchemeResponseHeaders.setMimeType" | 
                        "org.cef.browser.scheme.SchemeResponseHeaders.setStatusText" | 
                        "org.cef.browser.scheme.SchemeResponseHeaders.setRedirectURL" | 
                        "org.cef.browser.scheme.SchemeResponseHeaders.setStatus" | 
                        "net.minecraft.inventory.InventoryEnderChest.openInventory" | 
                        "net.minecraft.inventory.InventoryEnderChest.saveInventoryToNBT" | 
                        "net.minecraft.inventory.InventoryEnderChest.loadInventoryFromNBT" | 
                        "net.minecraft.inventory.InventoryEnderChest.isUseableByPlayer" | 
                        "net.minecraft.inventory.InventoryEnderChest.setChestTileEntity" | 
                        "net.minecraft.inventory.InventoryEnderChest.closeInventory" | 
                        "net.minecraft.inventory.SlotFurnaceFuel.getItemStackLimit" | 
                        "net.minecraft.inventory.SlotFurnaceFuel.isItemValid" | 
                        "net.minecraft.client.renderer.entity.layers.LayerVillagerArmor.initArmor" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityMobSpawnerRenderer.renderTileEntityAt" | 
                        "net.minecraft.client.particle.EntityPickupFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityPickupFX.getFXLayer" | 
                        "net.minecraft.client.particle.EntityPickupFX.onUpdate" | 
                        "net.minecraft.block.BlockRailBase$EnumRailDirection.getMetadata" | 
                        "net.minecraft.block.BlockRailBase$EnumRailDirection.getName" | 
                        "net.minecraft.block.BlockRailBase$EnumRailDirection.toString" | 
                        "net.minecraft.block.BlockRailBase$EnumRailDirection.isAscending" | 
                        "net.minecraft.block.BlockRedstoneOre.randomDisplayTick" | 
                        "net.minecraft.block.BlockRedstoneOre.createStackedBlock" | 
                        "net.minecraft.block.BlockRedstoneOre.onBlockActivated" | 
                        "net.minecraft.block.BlockRedstoneOre.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockRedstoneOre.quantityDroppedWithBonus" | 
                        "net.minecraft.block.BlockRedstoneOre.tickRate" | 
                        "net.minecraft.block.BlockRedstoneOre.quantityDropped" | 
                        "net.minecraft.block.BlockRedstoneOre.onEntityCollidedWithBlock" | 
                        "net.minecraft.block.BlockRedstoneOre.onBlockClicked" | 
                        "net.minecraft.block.BlockRedstoneOre.spawnParticles" | 
                        "net.minecraft.block.BlockRedstoneOre.activate" | 
                        "net.minecraft.block.BlockRedstoneOre.updateTick" | 
                        "net.minecraft.block.BlockRedstoneOre.getItemDropped" | 
                        "net.minecraft.command.ICommand.canCommandSenderUseCommand" | 
                        "net.minecraft.command.ICommand.isUsernameIndex" | 
                        "net.minecraft.command.ICommand.addTabCompletionOptions" | 
                        "net.minecraft.command.ICommand.getCommandUsage" | 
                        "net.minecraft.command.ICommand.processCommand" | 
                        "net.minecraft.command.ICommand.getCommandName" | 
                        "net.minecraft.command.ICommand.getCommandAliases" | 
                        "net.optifine.render.VboRange.getSize" | 
                        "net.optifine.render.VboRange.setSize" | 
                        "net.optifine.render.VboRange.getPosition" | 
                        "net.optifine.render.VboRange.getPositionNext" | 
                        "net.optifine.render.VboRange.toString" | 
                        "net.optifine.render.VboRange.getNode" | 
                        "net.optifine.render.VboRange.getNext" | 
                        "net.optifine.render.VboRange.getPrev" | 
                        "net.optifine.render.VboRange.setPosition" | 
                        "net.minecraft.block.BlockNote.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockNote.getInstrument" | 
                        "net.minecraft.block.BlockNote.onBlockEventReceived" | 
                        "net.minecraft.block.BlockNote.onBlockActivated" | 
                        "net.minecraft.block.BlockNote.createNewTileEntity" | 
                        "net.minecraft.block.BlockNote.onBlockClicked" | 
                        "net.minecraft.block.BlockNote.getRenderType" | 
                        "net.optifine.IRandomEntity.getMaxHealth" | 
                        "net.optifine.IRandomEntity.getName" | 
                        "net.optifine.IRandomEntity.getSpawnBiome" | 
                        "net.optifine.IRandomEntity.getId" | 
                        "net.optifine.IRandomEntity.getSpawnPosition" | 
                        "net.optifine.IRandomEntity.getHealth" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSaddle.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSaddle.shouldCombineTextures" | 
                        "net.minecraft.client.renderer.texture.AbstractTexture.restoreLastBlurMipmap" | 
                        "net.minecraft.client.renderer.texture.AbstractTexture.setBlurMipmap" | 
                        "net.minecraft.client.renderer.texture.AbstractTexture.getMultiTexID" | 
                        "net.minecraft.client.renderer.texture.AbstractTexture.deleteGlTexture" | 
                        "net.minecraft.client.renderer.texture.AbstractTexture.setBlurMipmapDirect" | 
                        "net.minecraft.client.renderer.texture.AbstractTexture.getGlTextureId" | 
                        "net.minecraft.block.BlockHalfStoneSlab.isDouble" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Crossing.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Crossing.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Crossing.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Crossing.writeStructureToNBT" | 
                        "net.minecraft.entity.monster.EntityGhast$AIRandomFly.shouldExecute" | 
                        "net.minecraft.entity.monster.EntityGhast$AIRandomFly.startExecuting" | 
                        "net.minecraft.entity.monster.EntityGhast$AIRandomFly.continueExecuting" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$SimpleTopRoom.addComponentParts" | 
                        "net.minecraft.block.BlockEnchantmentTable.randomDisplayTick" | 
                        "net.minecraft.block.BlockEnchantmentTable.onBlockActivated" | 
                        "net.minecraft.block.BlockEnchantmentTable.createNewTileEntity" | 
                        "net.minecraft.block.BlockEnchantmentTable.isFullCube" | 
                        "net.minecraft.block.BlockEnchantmentTable.onBlockPlacedBy" | 
                        "net.minecraft.block.BlockEnchantmentTable.getRenderType" | 
                        "net.minecraft.block.BlockEnchantmentTable.isOpaqueCube" | 
                        "net.minecraft.client.renderer.entity.RenderGuardian.func_177110_a" | 
                        "net.minecraft.client.renderer.entity.RenderGuardian.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderGuardian.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderGuardian.shouldRender" | 
                        "net.minecraft.client.renderer.entity.RenderGuardian.getEntityTexture" | 
                        "net.minecraft.command.CommandGive.isUsernameIndex" | 
                        "net.minecraft.command.CommandGive.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandGive.getCommandUsage" | 
                        "net.minecraft.command.CommandGive.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandGive.processCommand" | 
                        "net.minecraft.command.CommandGive.getCommandName" | 
                        "net.minecraft.command.CommandGive.getPlayers" | 
                        "net.minecraft.inventory.SlotFurnaceOutput.decrStackSize" | 
                        "net.minecraft.inventory.SlotFurnaceOutput.isItemValid" | 
                        "net.minecraft.inventory.SlotFurnaceOutput.onPickupFromSlot" | 
                        "net.minecraft.inventory.SlotFurnaceOutput.onCrafting" | 
                        "net.minecraft.client.particle.EntityBubbleFX$Factory.getEntityFX" | 
                        "net.minecraft.block.state.BlockPistonStructureHelper.canMove" | 
                        "net.minecraft.block.state.BlockPistonStructureHelper.func_177251_a" | 
                        "net.minecraft.block.state.BlockPistonStructureHelper.func_177250_b" | 
                        "net.minecraft.block.state.BlockPistonStructureHelper.func_177255_a" | 
                        "net.minecraft.block.state.BlockPistonStructureHelper.getBlocksToMove" | 
                        "net.minecraft.block.state.BlockPistonStructureHelper.getBlocksToDestroy" | 
                        "net.minecraft.entity.ai.EntityAILookIdle.updateTask" | 
                        "net.minecraft.entity.ai.EntityAILookIdle.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAILookIdle.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAILookIdle.continueExecuting" | 
                        "net.minecraft.client.renderer.tileentity.TileEntitySignRenderer.renderTileEntityAt" | 
                        "net.minecraft.network.status.INetHandlerStatusClient.handlePong" | 
                        "net.minecraft.network.status.INetHandlerStatusClient.handleServerInfo" | 
                        "net.minecraft.block.BlockPrismarine$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockPrismarine$EnumType.getName" | 
                        "net.minecraft.block.BlockPrismarine$EnumType.toString" | 
                        "net.minecraft.block.BlockPrismarine$EnumType.getUnlocalizedName" | 
                        "net.minecraft.entity.monster.EntitySlime$AISlimeHop.updateTask" | 
                        "net.minecraft.entity.monster.EntitySlime$AISlimeHop.shouldExecute" | 
                        "org.cef.callback.CefSchemeHandlerFactory.create" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers.initGui" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers.onGuiClosed" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers.actionPerformed" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers.handleMouseInput" | 
                        "net.minecraft.client.gui.stream.GuiIngestServers.drawScreen" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$DoubleXRoom.addComponentParts" | 
                        "net.minecraft.block.BlockStoneSlabNew.getVariantProperty" | 
                        "net.minecraft.block.BlockStoneSlabNew.getMetaFromState" | 
                        "net.minecraft.block.BlockStoneSlabNew.damageDropped" | 
                        "net.minecraft.block.BlockStoneSlabNew.getLocalizedName" | 
                        "net.minecraft.block.BlockStoneSlabNew.getMapColor" | 
                        "net.minecraft.block.BlockStoneSlabNew.getVariant" | 
                        "net.minecraft.block.BlockStoneSlabNew.createBlockState" | 
                        "net.minecraft.block.BlockStoneSlabNew.getItem" | 
                        "net.minecraft.block.BlockStoneSlabNew.getStateFromMeta" | 
                        "net.minecraft.block.BlockStoneSlabNew.getItemDropped" | 
                        "net.minecraft.block.BlockStoneSlabNew.getUnlocalizedName" | 
                        "net.minecraft.block.BlockStoneSlabNew.getSubBlocks" | 
                        "net.optifine.config.MatchBlock.getMetadatas" | 
                        "net.optifine.config.MatchBlock.getBlockId" | 
                        "net.optifine.config.MatchBlock.toString" | 
                        "net.optifine.config.MatchBlock.addMetadata" | 
                        "net.optifine.config.MatchBlock.matches" | 
                        "net.minecraft.inventory.ContainerBrewingStand$Potion.isItemValid" | 
                        "net.minecraft.inventory.ContainerBrewingStand$Potion.onPickupFromSlot" | 
                        "net.minecraft.inventory.ContainerBrewingStand$Potion.getSlotStackLimit" | 
                        "net.minecraft.world.gen.GeneratorBushFeature.generate" | 
                        "org.cef.network.CefPostData_N.N_GetElements" | 
                        "org.cef.network.CefPostData_N.N_Dispose" | 
                        "org.cef.network.CefPostData_N.N_GetElementCount" | 
                        "org.cef.network.CefPostData_N.N_RemoveElement" | 
                        "org.cef.network.CefPostData_N.removeElements" | 
                        "org.cef.network.CefPostData_N.N_IsReadOnly" | 
                        "org.cef.network.CefPostData_N.N_RemoveElements" | 
                        "org.cef.network.CefPostData_N.getElementCount" | 
                        "org.cef.network.CefPostData_N.setNativeRef" | 
                        "org.cef.network.CefPostData_N.getNativeRef" | 
                        "org.cef.network.CefPostData_N.isReadOnly" | 
                        "org.cef.network.CefPostData_N.getElements" | 
                        "org.cef.network.CefPostData_N.dispose" | 
                        "org.cef.network.CefPostData_N.addElement" | 
                        "org.cef.network.CefPostData_N.removeElement" | 
                        "org.cef.network.CefPostData_N.N_AddElement" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Corridor.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Corridor.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Corridor.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Corridor.generateChestContents" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Corridor.writeStructureToNBT" | 
                        "net.minecraft.command.ServerCommandManager.notifyOperators" | 
                        "net.minecraft.dispenser.IPosition.getX" | 
                        "net.minecraft.dispenser.IPosition.getY" | 
                        "net.minecraft.dispenser.IPosition.getZ" | 
                        "net.minecraft.entity.item.EntityEnderEye.moveTowards" | 
                        "net.minecraft.entity.item.EntityEnderEye.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityEnderEye.getBrightnessForRender" | 
                        "net.minecraft.entity.item.EntityEnderEye.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityEnderEye.entityInit" | 
                        "net.minecraft.entity.item.EntityEnderEye.getBrightness" | 
                        "net.minecraft.entity.item.EntityEnderEye.canAttackWithItem" | 
                        "net.minecraft.entity.item.EntityEnderEye.isInRangeToRenderDist" | 
                        "net.minecraft.entity.item.EntityEnderEye.setVelocity" | 
                        "net.minecraft.entity.item.EntityEnderEye.onUpdate" | 
                        "net.minecraft.client.model.ModelBook.setRotationAngles" | 
                        "net.minecraft.client.model.ModelBook.render" | 
                        "net.minecraft.block.material.MaterialLiquid.isSolid" | 
                        "net.minecraft.block.material.MaterialLiquid.isLiquid" | 
                        "net.minecraft.block.material.MaterialLiquid.blocksMovement" | 
                        "net.minecraft.entity.projectile.EntitySnowball.onImpact" | 
                        "net.minecraft.world.biome.BiomeGenJungle.decorate" | 
                        "net.minecraft.world.biome.BiomeGenJungle.genBigTreeChance" | 
                        "net.minecraft.world.biome.BiomeGenJungle.getRandomWorldGenForGrass" | 
                        "net.minecraft.client.particle.EntityHeartFX$AngryVillagerFactory.getEntityFX" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentRoomFitHelper.func_175969_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentRoomFitHelper.func_175968_a" | 
                        "net.optifine.VersionCheckThread.run" | 
                        "net.minecraft.world.Explosion.getAffectedBlockPositions" | 
                        "net.minecraft.world.Explosion.doExplosionA" | 
                        "net.minecraft.world.Explosion.getExplosivePlacedBy" | 
                        "net.minecraft.world.Explosion.doExplosionB" | 
                        "net.minecraft.world.Explosion.clearAffectedBlockPositions" | 
                        "net.minecraft.world.Explosion.getPlayerKnockbackMap" | 
                        "org.cef.callback.CefCommandLine.getProgram" | 
                        "org.cef.callback.CefCommandLine.hasSwitch" | 
                        "org.cef.callback.CefCommandLine.hasArguments" | 
                        "org.cef.callback.CefCommandLine.hasSwitches" | 
                        "org.cef.callback.CefCommandLine.appendArgument" | 
                        "org.cef.callback.CefCommandLine.appendSwitchWithValue" | 
                        "org.cef.callback.CefCommandLine.reset" | 
                        "org.cef.callback.CefCommandLine.getArguments" | 
                        "org.cef.callback.CefCommandLine.getSwitches" | 
                        "org.cef.callback.CefCommandLine.getSwitchValue" | 
                        "org.cef.callback.CefCommandLine.appendSwitch" | 
                        "org.cef.callback.CefCommandLine.setProgram" | 
                        "net.minecraft.world.WorldSettings$GameType.isCreative" | 
                        "net.minecraft.world.WorldSettings$GameType.getName" | 
                        "net.minecraft.world.WorldSettings$GameType.isSurvivalOrAdventure" | 
                        "net.minecraft.world.WorldSettings$GameType.isAdventure" | 
                        "net.minecraft.world.WorldSettings$GameType.getID" | 
                        "net.minecraft.world.WorldSettings$GameType.configurePlayerCapabilities" | 
                        "net.minecraft.block.BlockWall$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockWall$EnumType.getName" | 
                        "net.minecraft.block.BlockWall$EnumType.toString" | 
                        "net.minecraft.block.BlockWall$EnumType.getUnlocalizedName" | 
                        "net.minecraft.world.gen.feature.WorldGenClay.generate" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Church.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Church.func_180779_c" | 
                        "net.minecraft.block.BlockRedSandstone.getMetaFromState" | 
                        "net.minecraft.block.BlockRedSandstone.damageDropped" | 
                        "net.minecraft.block.BlockRedSandstone.createBlockState" | 
                        "net.minecraft.block.BlockRedSandstone.getStateFromMeta" | 
                        "net.minecraft.block.BlockRedSandstone.getSubBlocks" | 
                        "net.minecraft.client.particle.EntitySpellParticleFX$AmbientMobFactory.getEntityFX" | 
                        "slice.file.Saver.setModules" | 
                        "slice.file.Saver.load" | 
                        "slice.file.Saver.getModuleManager" | 
                        "slice.file.Saver.getModules" | 
                        "slice.file.Saver.save" | 
                        "slice.file.Saver.setModuleManager" | 
                        "com.sliceclient.anticheat.SliceAC.getEventManager" | 
                        "com.sliceclient.anticheat.SliceAC.onUpdate" | 
                        "com.sliceclient.anticheat.SliceAC.getUserManager" | 
                        "com.sliceclient.anticheat.SliceAC.onPacket" | 
                        "net.minecraft.entity.ai.EntityMinecartMobSpawner.func_98039_d" | 
                        "net.minecraft.entity.ai.EntityMinecartMobSpawner.handleStatusUpdate" | 
                        "net.minecraft.entity.ai.EntityMinecartMobSpawner.writeEntityToNBT" | 
                        "net.minecraft.entity.ai.EntityMinecartMobSpawner.readEntityFromNBT" | 
                        "net.minecraft.entity.ai.EntityMinecartMobSpawner.getMinecartType" | 
                        "net.minecraft.entity.ai.EntityMinecartMobSpawner.onUpdate" | 
                        "net.minecraft.entity.ai.EntityMinecartMobSpawner.getDefaultDisplayTile" | 
                        "net.minecraft.profiler.Profiler$Result.getColor" | 
                        "net.minecraft.profiler.Profiler$Result.compareTo" | 
                        "net.optifine.config.IObjectLocator.getObject" | 
                        "net.minecraft.client.renderer.ChunkRenderContainer.renderChunkLayer" | 
                        "net.minecraft.client.renderer.ChunkRenderContainer.addRenderChunk" | 
                        "net.minecraft.client.renderer.ChunkRenderContainer.preRenderChunk" | 
                        "net.minecraft.client.renderer.ChunkRenderContainer.initialize" | 
                        "org.cef.callback.CefDragData_N.getLinkURL" | 
                        "org.cef.callback.CefDragData_N.N_AddFile" | 
                        "org.cef.callback.CefDragData_N.N_ResetFileContents" | 
                        "org.cef.callback.CefDragData_N.N_IsReadOnly" | 
                        "org.cef.callback.CefDragData_N.N_SetFragmentHtml" | 
                        "org.cef.callback.CefDragData_N.setNativeRef" | 
                        "org.cef.callback.CefDragData_N.getNativeRef" | 
                        "org.cef.callback.CefDragData_N.N_SetLinkURL" | 
                        "org.cef.callback.CefDragData_N.N_GetFileNames" | 
                        "org.cef.callback.CefDragData_N.N_GetFileContents" | 
                        "org.cef.callback.CefDragData_N.setFragmentBaseURL" | 
                        "org.cef.callback.CefDragData_N.N_SetLinkMetadata" | 
                        "org.cef.callback.CefDragData_N.getFileName" | 
                        "org.cef.callback.CefDragData_N.setLinkURL" | 
                        "org.cef.callback.CefDragData_N.getFileContents" | 
                        "org.cef.callback.CefDragData_N.resetFileContents" | 
                        "org.cef.callback.CefDragData_N.N_Clone" | 
                        "org.cef.callback.CefDragData_N.N_SetFragmentText" | 
                        "org.cef.callback.CefDragData_N.setFragmentText" | 
                        "org.cef.callback.CefDragData_N.getLinkTitle" | 
                        "org.cef.callback.CefDragData_N.dispose" | 
                        "org.cef.callback.CefDragData_N.setFragmentHtml" | 
                        "org.cef.callback.CefDragData_N.N_GetLinkURL" | 
                        "org.cef.callback.CefDragData_N.addFile" | 
                        "org.cef.callback.CefDragData_N.isFragment" | 
                        "org.cef.callback.CefDragData_N.N_GetLinkTitle" | 
                        "org.cef.callback.CefDragData_N.N_GetFragmentBaseURL" | 
                        "org.cef.callback.CefDragData_N.N_Dispose" | 
                        "org.cef.callback.CefDragData_N.N_GetFileName" | 
                        "org.cef.callback.CefDragData_N.getFragmentHtml" | 
                        "org.cef.callback.CefDragData_N.isReadOnly" | 
                        "org.cef.callback.CefDragData_N.N_GetFragmentHtml" | 
                        "org.cef.callback.CefDragData_N.N_GetFragmentText" | 
                        "org.cef.callback.CefDragData_N.getLinkMetadata" | 
                        "org.cef.callback.CefDragData_N.N_SetFragmentBaseURL" | 
                        "org.cef.callback.CefDragData_N.N_IsFragment" | 
                        "org.cef.callback.CefDragData_N.setLinkMetadata" | 
                        "org.cef.callback.CefDragData_N.isLink" | 
                        "org.cef.callback.CefDragData_N.N_IsLink" | 
                        "org.cef.callback.CefDragData_N.N_SetLinkTitle" | 
                        "org.cef.callback.CefDragData_N.isFile" | 
                        "org.cef.callback.CefDragData_N.N_IsFile" | 
                        "org.cef.callback.CefDragData_N.getFragmentBaseURL" | 
                        "org.cef.callback.CefDragData_N.setLinkTitle" | 
                        "org.cef.callback.CefDragData_N.getFragmentText" | 
                        "org.cef.callback.CefDragData_N.N_GetLinkMetadata" | 
                        "org.cef.callback.CefDragData_N.getFileNames" | 
                        "org.cef.callback.CefDragData_N.clone" | 
                        "org.cef.callback.CefDragData_N.toString" | 
                        "net.minecraft.command.CommandCompare.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandCompare.getCommandUsage" | 
                        "net.minecraft.command.CommandCompare.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandCompare.processCommand" | 
                        "net.minecraft.command.CommandCompare.getCommandName" | 
                        "net.minecraft.block.BlockSand.getMetaFromState" | 
                        "net.minecraft.block.BlockSand.damageDropped" | 
                        "net.minecraft.block.BlockSand.getMapColor" | 
                        "net.minecraft.block.BlockSand.createBlockState" | 
                        "net.minecraft.block.BlockSand.getStateFromMeta" | 
                        "net.minecraft.block.BlockSand.getSubBlocks" | 
                        "net.minecraft.client.gui.GuiButton.mouseReleased" | 
                        "net.minecraft.client.gui.GuiButton.isMouseOver" | 
                        "net.minecraft.client.gui.GuiButton.mouseDragged" | 
                        "net.minecraft.client.gui.GuiButton.getHoverState" | 
                        "net.minecraft.client.gui.GuiButton.playPressSound" | 
                        "net.minecraft.client.gui.GuiButton.drawButtonForegroundLayer" | 
                        "net.minecraft.client.gui.GuiButton.getButtonWidth" | 
                        "net.minecraft.client.gui.GuiButton.setWidth" | 
                        "net.minecraft.client.gui.GuiButton.drawButton" | 
                        "net.minecraft.client.gui.GuiButton.mousePressed" | 
                        "net.minecraft.entity.ai.EntityAILeapAtTarget.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAILeapAtTarget.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAILeapAtTarget.continueExecuting" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$DoubleYZRoom.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$PortalRoom.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$PortalRoom.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$PortalRoom.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$PortalRoom.writeStructureToNBT" | 
                        "net.minecraft.entity.EnumCreatureType.getCreatureClass" | 
                        "net.minecraft.entity.EnumCreatureType.getPeacefulCreature" | 
                        "net.minecraft.entity.EnumCreatureType.getMaxNumberOfCreature" | 
                        "net.minecraft.entity.EnumCreatureType.getAnimal" | 
                        "net.optifine.reflect.FieldLocatorTypes.getField" | 
                        "net.minecraft.client.audio.SoundEventAccessorComposite.getWeight" | 
                        "net.minecraft.client.audio.SoundEventAccessorComposite.addSoundToEventPool" | 
                        "net.minecraft.client.audio.SoundEventAccessorComposite.getSoundCategory" | 
                        "net.minecraft.client.audio.SoundEventAccessorComposite.cloneEntry" | 
                        "net.minecraft.client.audio.SoundEventAccessorComposite.getSoundEventLocation" | 
                        "org.cef.browser.CefMessageRouter.addHandler" | 
                        "org.cef.browser.CefMessageRouter.cancelPending" | 
                        "org.cef.browser.CefMessageRouter.setMessageRouterConfig" | 
                        "org.cef.browser.CefMessageRouter.getMessageRouterConfig" | 
                        "org.cef.browser.CefMessageRouter.finalize" | 
                        "org.cef.browser.CefMessageRouter.dispose" | 
                        "org.cef.browser.CefMessageRouter.removeHandler" | 
                        "net.minecraft.world.gen.structure.StructureComponent$BlockSelector.selectBlocks" | 
                        "net.minecraft.world.gen.structure.StructureComponent$BlockSelector.getBlockState" | 
                        "slice.event.events.EventKey.getKey" | 
                        "slice.event.events.EventKey.setKey" | 
                        "net.minecraft.enchantment.EnchantmentHelper$ModifierLiving.calculateModifier" | 
                        "net.optifine.shaders.uniform.ShaderParameterIndexed.eval" | 
                        "net.optifine.shaders.uniform.ShaderParameterIndexed.getExpressionType" | 
                        "net.optifine.shaders.uniform.ShaderParameterIndexed.toString" | 
                        "net.optifine.shaders.HFNoiseTexture.random" | 
                        "net.optifine.shaders.HFNoiseTexture.getTarget" | 
                        "net.optifine.shaders.HFNoiseTexture.genHFNoiseImage" | 
                        "net.optifine.shaders.HFNoiseTexture.deleteTexture" | 
                        "net.optifine.shaders.HFNoiseTexture.getID" | 
                        "net.optifine.shaders.HFNoiseTexture.getTextureId" | 
                        "net.optifine.shaders.HFNoiseTexture.getTextureUnit" | 
                        "slice.event.manager.EventManager.getRegisteredSenders" | 
                        "slice.event.manager.EventManager.unregister" | 
                        "slice.event.manager.EventManager.runEvent" | 
                        "slice.event.manager.EventManager.isRegistered" | 
                        "slice.event.manager.EventManager.getEventSender" | 
                        "slice.event.manager.EventManager.getRegisteredObjects" | 
                        "slice.event.manager.EventManager.getMethods" | 
                        "slice.event.manager.EventManager.onPacket" | 
                        "slice.event.manager.EventManager.register" | 
                        "org.cef.browser.CefMessageRouter_N.addHandler" | 
                        "org.cef.browser.CefMessageRouter_N.N_RemoveHandler" | 
                        "org.cef.browser.CefMessageRouter_N.setNativeRef" | 
                        "org.cef.browser.CefMessageRouter_N.getNativeRef" | 
                        "org.cef.browser.CefMessageRouter_N.cancelPending" | 
                        "org.cef.browser.CefMessageRouter_N.N_AddHandler" | 
                        "org.cef.browser.CefMessageRouter_N.N_Dispose" | 
                        "org.cef.browser.CefMessageRouter_N.N_CancelPending" | 
                        "org.cef.browser.CefMessageRouter_N.dispose" | 
                        "org.cef.browser.CefMessageRouter_N.removeHandler" | 
                        "net.minecraft.entity.projectile.EntityEgg.onImpact" | 
                        "net.optifine.shaders.gui.GuiShaders.updateButtons" | 
                        "net.optifine.shaders.gui.GuiShaders.drawCenteredString" | 
                        "net.optifine.shaders.gui.GuiShaders.actionPerformedRightClick" | 
                        "net.optifine.shaders.gui.GuiShaders.initGui" | 
                        "net.optifine.shaders.gui.GuiShaders.onGuiClosed" | 
                        "net.optifine.shaders.gui.GuiShaders.updateScreen" | 
                        "net.optifine.shaders.gui.GuiShaders.hasShiftDown" | 
                        "net.optifine.shaders.gui.GuiShaders.actionPerformed" | 
                        "net.optifine.shaders.gui.GuiShaders.handleMouseInput" | 
                        "net.optifine.shaders.gui.GuiShaders.getMc" | 
                        "net.optifine.shaders.gui.GuiShaders.drawScreen" | 
                        "net.optifine.shaders.gui.GuiShaders.getNextValue" | 
                        "net.minecraft.client.audio.MusicTicker$MusicType.getMusicLocation" | 
                        "net.minecraft.client.audio.MusicTicker$MusicType.getMinDelay" | 
                        "net.minecraft.client.audio.MusicTicker$MusicType.getMaxDelay" | 
                        "net.minecraft.client.particle.EntityCloudFX$Factory.getEntityFX" | 
                        "net.minecraft.client.particle.EntityHugeExplodeFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityHugeExplodeFX.getFXLayer" | 
                        "net.minecraft.client.particle.EntityHugeExplodeFX.onUpdate" | 
                        "net.minecraft.command.CommandSetSpawnpoint.isUsernameIndex" | 
                        "net.minecraft.command.CommandSetSpawnpoint.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandSetSpawnpoint.getCommandUsage" | 
                        "net.minecraft.command.CommandSetSpawnpoint.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandSetSpawnpoint.processCommand" | 
                        "net.minecraft.command.CommandSetSpawnpoint.getCommandName" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$WingRoom.addComponentParts" | 
                        "net.optifine.gui.GuiOptionSliderOF.getOption" | 
                        "net.optifine.shaders.config.MacroState.eval" | 
                        "net.optifine.shaders.config.MacroState.processMacro" | 
                        "net.optifine.shaders.config.MacroState.processLine" | 
                        "net.minecraft.client.renderer.ItemModelMesher.getMetadata" | 
                        "net.minecraft.client.renderer.ItemModelMesher.getIndex" | 
                        "net.minecraft.client.renderer.ItemModelMesher.getModelManager" | 
                        "net.minecraft.client.renderer.ItemModelMesher.getItemModel" | 
                        "net.minecraft.client.renderer.ItemModelMesher.register" | 
                        "net.minecraft.client.renderer.ItemModelMesher.rebuildCache" | 
                        "net.minecraft.client.renderer.ItemModelMesher.getParticleIcon" | 
                        "net.optifine.entity.model.ModelAdapterBiped.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterBiped.getModelRendererNames" | 
                        "net.minecraft.command.CommandSpreadPlayers.func_110670_a" | 
                        "net.minecraft.command.CommandSpreadPlayers.func_110671_a" | 
                        "net.minecraft.command.CommandSpreadPlayers.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandSpreadPlayers.getCommandUsage" | 
                        "net.minecraft.command.CommandSpreadPlayers.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandSpreadPlayers.processCommand" | 
                        "net.minecraft.command.CommandSpreadPlayers.getCommandName" | 
                        "net.minecraft.command.CommandSpreadPlayers.func_110669_a" | 
                        "net.minecraft.command.CommandSpreadPlayers.func_110668_a" | 
                        "net.minecraft.command.CommandSpreadPlayers.func_110667_a" | 
                        "net.minecraft.client.model.ModelChicken.setRotationAngles" | 
                        "net.minecraft.client.model.ModelChicken.render" | 
                        "net.minecraft.entity.ai.EntityAILookAtVillager.updateTask" | 
                        "net.minecraft.entity.ai.EntityAILookAtVillager.resetTask" | 
                        "net.minecraft.entity.ai.EntityAILookAtVillager.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAILookAtVillager.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAILookAtVillager.continueExecuting" | 
                        "net.optifine.config.ParserEnchantmentId.parse" | 
                        "net.minecraft.command.CommandResultStats.setCommandStatScore" | 
                        "net.minecraft.command.CommandResultStats.writeStatsToNBT" | 
                        "net.minecraft.command.CommandResultStats.addAllStats" | 
                        "net.minecraft.command.CommandResultStats.readStatsFromNBT" | 
                        "net.minecraft.util.EntityDamageSource.isDifficultyScaled" | 
                        "net.minecraft.util.EntityDamageSource.setIsThornsDamage" | 
                        "net.minecraft.util.EntityDamageSource.getIsThornsDamage" | 
                        "net.minecraft.util.EntityDamageSource.getEntity" | 
                        "net.minecraft.util.EntityDamageSource.getDeathMessage" | 
                        "net.minecraft.client.renderer.RenderGlobal$ContainerLocalRenderInformation.setFacingBit" | 
                        "net.minecraft.client.renderer.RenderGlobal$ContainerLocalRenderInformation.initialize" | 
                        "net.minecraft.client.renderer.RenderGlobal$ContainerLocalRenderInformation.isFacingBit" | 
                        "net.minecraft.block.BlockDeadBush.getMapColor" | 
                        "net.minecraft.block.BlockDeadBush.canPlaceBlockOn" | 
                        "net.minecraft.block.BlockDeadBush.harvestBlock" | 
                        "net.minecraft.block.BlockDeadBush.isReplaceable" | 
                        "net.minecraft.block.BlockDeadBush.getItemDropped" | 
                        "net.minecraft.client.particle.EntityBubbleFX.onUpdate" | 
                        "net.minecraft.world.gen.feature.WorldGenSavannaTree.func_181642_b" | 
                        "net.minecraft.world.gen.feature.WorldGenSavannaTree.func_175924_b" | 
                        "net.minecraft.world.gen.feature.WorldGenSavannaTree.generate" | 
                        "net.minecraft.command.CommandBase$CoordinateArg.func_179629_b" | 
                        "net.minecraft.command.CommandBase$CoordinateArg.func_179630_c" | 
                        "net.minecraft.command.CommandBase$CoordinateArg.func_179628_a" | 
                        "org.cef.misc.CefPrintSettings_N.N_SetDeviceName" | 
                        "org.cef.misc.CefPrintSettings_N.getDuplexMode" | 
                        "org.cef.misc.CefPrintSettings_N.N_IsReadOnly" | 
                        "org.cef.misc.CefPrintSettings_N.getPageRanges" | 
                        "org.cef.misc.CefPrintSettings_N.setNativeRef" | 
                        "org.cef.misc.CefPrintSettings_N.getNativeRef" | 
                        "org.cef.misc.CefPrintSettings_N.N_GetDuplexMode" | 
                        "org.cef.misc.CefPrintSettings_N.N_GetPageRanges" | 
                        "org.cef.misc.CefPrintSettings_N.setDPI" | 
                        "org.cef.misc.CefPrintSettings_N.N_IsSelectionOnly" | 
                        "org.cef.misc.CefPrintSettings_N.setDuplexMode" | 
                        "org.cef.misc.CefPrintSettings_N.setPageRanges" | 
                        "org.cef.misc.CefPrintSettings_N.getCopies" | 
                        "org.cef.misc.CefPrintSettings_N.N_GetDPI" | 
                        "org.cef.misc.CefPrintSettings_N.N_SetOrientation" | 
                        "org.cef.misc.CefPrintSettings_N.getDPI" | 
                        "org.cef.misc.CefPrintSettings_N.setCollate" | 
                        "org.cef.misc.CefPrintSettings_N.isLandscape" | 
                        "org.cef.misc.CefPrintSettings_N.N_SetCollate" | 
                        "org.cef.misc.CefPrintSettings_N.N_GetDeviceName" | 
                        "org.cef.misc.CefPrintSettings_N.dispose" | 
                        "org.cef.misc.CefPrintSettings_N.getDeviceName" | 
                        "org.cef.misc.CefPrintSettings_N.N_SetColorModel" | 
                        "org.cef.misc.CefPrintSettings_N.N_WillCollate" | 
                        "org.cef.misc.CefPrintSettings_N.N_SetDPI" | 
                        "org.cef.misc.CefPrintSettings_N.setSelectionOnly" | 
                        "org.cef.misc.CefPrintSettings_N.N_GetCopies" | 
                        "org.cef.misc.CefPrintSettings_N.N_Dispose" | 
                        "org.cef.misc.CefPrintSettings_N.N_GetColorModel" | 
                        "org.cef.misc.CefPrintSettings_N.setColorModel" | 
                        "org.cef.misc.CefPrintSettings_N.getPageRangesCount" | 
                        "org.cef.misc.CefPrintSettings_N.isReadOnly" | 
                        "org.cef.misc.CefPrintSettings_N.N_SetPageRanges" | 
                        "org.cef.misc.CefPrintSettings_N.N_GetPageRangesCount" | 
                        "org.cef.misc.CefPrintSettings_N.N_SetPrinterPrintableArea" | 
                        "org.cef.misc.CefPrintSettings_N.N_SetDuplexMode" | 
                        "org.cef.misc.CefPrintSettings_N.N_IsValid" | 
                        "org.cef.misc.CefPrintSettings_N.setCopies" | 
                        "org.cef.misc.CefPrintSettings_N.setPrinterPrintableArea" | 
                        "org.cef.misc.CefPrintSettings_N.setOrientation" | 
                        "org.cef.misc.CefPrintSettings_N.getColorModel" | 
                        "org.cef.misc.CefPrintSettings_N.N_IsLandscape" | 
                        "org.cef.misc.CefPrintSettings_N.isValid" | 
                        "org.cef.misc.CefPrintSettings_N.willCollate" | 
                        "org.cef.misc.CefPrintSettings_N.N_SetCopies" | 
                        "org.cef.misc.CefPrintSettings_N.N_SetSelectionOnly" | 
                        "org.cef.misc.CefPrintSettings_N.setDeviceName" | 
                        "org.cef.misc.CefPrintSettings_N.isSelectionOnly" | 
                        "net.minecraft.world.gen.feature.WorldGenAbstractTree.func_150523_a" | 
                        "net.minecraft.world.gen.feature.WorldGenAbstractTree.func_175921_a" | 
                        "net.minecraft.world.gen.feature.WorldGenAbstractTree.func_180711_a" | 
                        "net.minecraft.client.renderer.entity.RenderSheep.getEntityTexture" | 
                        "net.minecraft.enchantment.EnumEnchantmentType.canEnchantItem" | 
                        "net.optifine.entity.model.ModelAdapterCaveSpider.makeEntityRender" | 
                        "net.optifine.player.PlayerConfiguration.getPlayerItemModels" | 
                        "net.optifine.player.PlayerConfiguration.isInitialized" | 
                        "net.optifine.player.PlayerConfiguration.renderPlayerItems" | 
                        "net.optifine.player.PlayerConfiguration.addPlayerItemModel" | 
                        "net.optifine.player.PlayerConfiguration.setInitialized" | 
                        "net.minecraft.block.BlockTallGrass$EnumType.getName" | 
                        "net.minecraft.block.BlockTallGrass$EnumType.getMeta" | 
                        "net.minecraft.block.BlockTallGrass$EnumType.toString" | 
                        "net.minecraft.block.BlockSourceImpl.getBlockPos" | 
                        "net.minecraft.block.BlockSourceImpl.getX" | 
                        "net.minecraft.block.BlockSourceImpl.getWorld" | 
                        "net.minecraft.block.BlockSourceImpl.getY" | 
                        "net.minecraft.block.BlockSourceImpl.getZ" | 
                        "net.minecraft.block.BlockSourceImpl.getBlockTileEntity" | 
                        "net.minecraft.block.BlockSourceImpl.getBlockMetadata" | 
                        "net.minecraft.client.renderer.entity.RenderTNTPrimed.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderTNTPrimed.getEntityTexture" | 
                        "net.minecraft.client.renderer.chunk.ListedRenderChunk.deleteGlResources" | 
                        "net.minecraft.client.renderer.chunk.ListedRenderChunk.getDisplayList" | 
                        "net.minecraft.client.renderer.entity.RenderPigZombie.getEntityTexture" | 
                        "net.minecraft.stats.StatCrafting.func_150959_a" | 
                        "net.minecraft.entity.item.EntityFireworkRocket.handleStatusUpdate" | 
                        "net.minecraft.entity.item.EntityFireworkRocket.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityFireworkRocket.getBrightnessForRender" | 
                        "net.minecraft.entity.item.EntityFireworkRocket.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityFireworkRocket.entityInit" | 
                        "net.minecraft.entity.item.EntityFireworkRocket.getBrightness" | 
                        "net.minecraft.entity.item.EntityFireworkRocket.canAttackWithItem" | 
                        "net.minecraft.entity.item.EntityFireworkRocket.isInRangeToRenderDist" | 
                        "net.minecraft.entity.item.EntityFireworkRocket.setVelocity" | 
                        "net.minecraft.entity.item.EntityFireworkRocket.onUpdate" | 
                        "net.minecraft.client.particle.EntityFootStepFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityFootStepFX.getFXLayer" | 
                        "net.minecraft.client.particle.EntityFootStepFX.onUpdate" | 
                        "org.cef.network.CefURLRequest.cancel" | 
                        "org.cef.network.CefURLRequest.getRequestStatus" | 
                        "org.cef.network.CefURLRequest.getRequest" | 
                        "org.cef.network.CefURLRequest.getResponse" | 
                        "org.cef.network.CefURLRequest.finalize" | 
                        "org.cef.network.CefURLRequest.dispose" | 
                        "org.cef.network.CefURLRequest.getClient" | 
                        "org.cef.network.CefURLRequest.getRequestError" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.formatString" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.setNameSuffix" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.func_98298_a" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.getMembershipCollection" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.setNameTagVisibility" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.setAllowFriendlyFire" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.setSeeFriendlyInvisiblesEnabled" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.setDeathMessageVisibility" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.setNamePrefix" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.setTeamName" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.func_98299_i" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.getRegisteredName" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.setChatFormat" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.getColorSuffix" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.getNameTagVisibility" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.getSeeFriendlyInvisiblesEnabled" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.getAllowFriendlyFire" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.getChatFormat" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.getTeamName" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.getDeathMessageVisibility" | 
                        "net.minecraft.scoreboard.ScorePlayerTeam.getColorPrefix" | 
                        "slice.cef.RequestHandler.sendJavascript" | 
                        "slice.cef.RequestHandler.setupInfo" | 
                        "slice.cef.RequestHandler.setupSessionHUD" | 
                        "slice.cef.RequestHandler.isSessionHUDShown" | 
                        "slice.cef.RequestHandler.removeArrayList" | 
                        "slice.cef.RequestHandler.setBrowser" | 
                        "slice.cef.RequestHandler.setSessionHUDShown" | 
                        "slice.cef.RequestHandler.setupArrayList" | 
                        "slice.cef.RequestHandler.setupTargetHUD" | 
                        "slice.cef.RequestHandler.isTargetHUDShown" | 
                        "slice.cef.RequestHandler.setTargetHUDShown" | 
                        "slice.cef.RequestHandler.createIframe" | 
                        "slice.cef.RequestHandler.getBrowser" | 
                        "net.minecraft.client.multiplayer.ServerData$ServerResourceMode.getMotd" | 
                        "org.cef.handler.CefLoadHandler.onLoadEnd" | 
                        "org.cef.handler.CefLoadHandler.onLoadingStateChange" | 
                        "org.cef.handler.CefLoadHandler.onLoadStart" | 
                        "org.cef.handler.CefLoadHandler.onLoadError" | 
                        "net.minecraft.client.particle.EffectRenderer.renderLitParticles" | 
                        "net.minecraft.client.particle.EffectRenderer.getStatistics" | 
                        "net.minecraft.client.particle.EffectRenderer.moveToNoAlphaLayer" | 
                        "net.minecraft.client.particle.EffectRenderer.tickParticle" | 
                        "net.minecraft.client.particle.EffectRenderer.moveToLayer" | 
                        "net.minecraft.client.particle.EffectRenderer.addEffect" | 
                        "net.minecraft.client.particle.EffectRenderer.moveToAlphaLayer" | 
                        "net.minecraft.client.particle.EffectRenderer.registerVanillaParticles" | 
                        "net.minecraft.client.particle.EffectRenderer.updateEffectAlphaLayer" | 
                        "net.minecraft.client.particle.EffectRenderer.renderParticles" | 
                        "net.minecraft.client.particle.EffectRenderer.clearEffects" | 
                        "net.minecraft.client.particle.EffectRenderer.emitParticleAtEntity" | 
                        "net.minecraft.client.particle.EffectRenderer.addBlockDestroyEffects" | 
                        "net.minecraft.client.particle.EffectRenderer.updateEffectLayer" | 
                        "net.minecraft.client.particle.EffectRenderer.addBlockHitEffects" | 
                        "net.minecraft.client.particle.EffectRenderer.registerParticle" | 
                        "net.minecraft.client.particle.EffectRenderer.updateEffects" | 
                        "net.minecraft.client.particle.EffectRenderer.spawnEffectParticle" | 
                        "net.optifine.render.AabbFrame.isBoundingBoxInFrustumFully" | 
                        "net.optifine.shaders.config.ShaderOptionProfile.applyProfileOptions" | 
                        "net.optifine.shaders.config.ShaderOptionProfile.getNameText" | 
                        "net.optifine.shaders.config.ShaderOptionProfile.getValueText" | 
                        "net.optifine.shaders.config.ShaderOptionProfile.updateProfile" | 
                        "net.optifine.shaders.config.ShaderOptionProfile.getValueColor" | 
                        "net.optifine.shaders.config.ShaderOptionProfile.getDescriptionText" | 
                        "net.optifine.shaders.config.ShaderOptionProfile.getProfile" | 
                        "net.optifine.shaders.config.ShaderOptionProfile.getOption" | 
                        "net.optifine.shaders.config.ShaderOptionProfile.nextValue" | 
                        "net.minecraft.world.gen.MapGenCaves.func_175793_a" | 
                        "net.minecraft.world.gen.MapGenCaves.func_180703_a" | 
                        "net.minecraft.world.gen.MapGenCaves.recursiveGenerate" | 
                        "net.minecraft.world.gen.MapGenCaves.func_180702_a" | 
                        "net.minecraft.world.gen.structure.MapGenVillage.getStructureStart" | 
                        "net.minecraft.world.gen.structure.MapGenVillage.canSpawnStructureAtCoords" | 
                        "net.minecraft.world.gen.structure.MapGenVillage.getStructureName" | 
                        "net.minecraft.client.renderer.entity.layers.LayerDeadmau5Head.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerDeadmau5Head.shouldCombineTextures" | 
                        "net.minecraft.tileentity.TileEntityCommandBlock.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityCommandBlock.getCommandResultStats" | 
                        "net.minecraft.tileentity.TileEntityCommandBlock.getCommandBlockLogic" | 
                        "net.minecraft.tileentity.TileEntityCommandBlock.func_183000_F" | 
                        "net.minecraft.tileentity.TileEntityCommandBlock.getDescriptionPacket" | 
                        "net.minecraft.tileentity.TileEntityCommandBlock.writeToNBT" | 
                        "net.optifine.expr.FunctionType.getName" | 
                        "net.optifine.expr.FunctionType.getParameterCount" | 
                        "net.optifine.expr.FunctionType.getPrecedence" | 
                        "net.optifine.expr.FunctionType.getMax" | 
                        "net.optifine.expr.FunctionType.evalFloatArray" | 
                        "net.optifine.expr.FunctionType.getExpressionType" | 
                        "net.optifine.expr.FunctionType.getParameterTypes" | 
                        "net.optifine.expr.FunctionType.evalBool" | 
                        "net.optifine.expr.FunctionType.getMin" | 
                        "net.optifine.expr.FunctionType.getParameters" | 
                        "net.minecraft.entity.passive.EntityVillager$ItemAndEmeraldToItem.modifyMerchantRecipeList" | 
                        "net.minecraft.client.gui.GuiLanguage.actionPerformed" | 
                        "net.minecraft.client.gui.GuiLanguage.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiLanguage.initGui" | 
                        "net.minecraft.client.gui.GuiLanguage.drawScreen" | 
                        "net.minecraft.block.BlockSlab$EnumBlockHalf.getName" | 
                        "net.minecraft.block.BlockSlab$EnumBlockHalf.toString" | 
                        "net.minecraft.block.BlockStainedGlass.getMetaFromState" | 
                        "net.minecraft.block.BlockStainedGlass.getBlockLayer" | 
                        "net.minecraft.block.BlockStainedGlass.canSilkHarvest" | 
                        "net.minecraft.block.BlockStainedGlass.damageDropped" | 
                        "net.minecraft.block.BlockStainedGlass.getMapColor" | 
                        "net.minecraft.block.BlockStainedGlass.createBlockState" | 
                        "net.minecraft.block.BlockStainedGlass.quantityDropped" | 
                        "net.minecraft.block.BlockStainedGlass.isFullCube" | 
                        "net.minecraft.block.BlockStainedGlass.getStateFromMeta" | 
                        "net.minecraft.block.BlockStainedGlass.breakBlock" | 
                        "net.minecraft.block.BlockStainedGlass.onBlockAdded" | 
                        "net.minecraft.block.BlockStainedGlass.getSubBlocks" | 
                        "net.minecraft.world.chunk.storage.AnvilSaveHandler.getChunkLoader" | 
                        "net.minecraft.world.chunk.storage.AnvilSaveHandler.flush" | 
                        "net.minecraft.world.chunk.storage.AnvilSaveHandler.saveWorldInfoWithPlayer" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeDuplicatePattern.getRecipeOutput" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeDuplicatePattern.getRemainingItems" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeDuplicatePattern.getCraftingResult" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeDuplicatePattern.getRecipeSize" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeDuplicatePattern.matches" | 
                        "org.cef.handler.CefJSDialogHandler.onDialogClosed" | 
                        "org.cef.handler.CefJSDialogHandler.onBeforeUnloadDialog" | 
                        "org.cef.handler.CefJSDialogHandler.onJSDialog" | 
                        "org.cef.handler.CefJSDialogHandler.onResetDialogState" | 
                        "net.minecraft.entity.ai.EntityAIWatchClosest.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIWatchClosest.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIWatchClosest.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIWatchClosest.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIWatchClosest.continueExecuting" | 
                        "org.cef.callback.CefJSDialogCallback_N.N_Continue" | 
                        "org.cef.callback.CefJSDialogCallback_N.finalize" | 
                        "org.cef.callback.CefJSDialogCallback_N.Continue" | 
                        "net.minecraft.client.multiplayer.ServerAddress.getPort" | 
                        "net.minecraft.client.multiplayer.ServerAddress.getIP" | 
                        "net.minecraft.entity.item.EntityEnderCrystal.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityEnderCrystal.canBeCollidedWith" | 
                        "net.minecraft.entity.item.EntityEnderCrystal.attackEntityFrom" | 
                        "net.minecraft.entity.item.EntityEnderCrystal.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityEnderCrystal.entityInit" | 
                        "net.minecraft.entity.item.EntityEnderCrystal.canTriggerWalking" | 
                        "net.minecraft.entity.item.EntityEnderCrystal.onUpdate" | 
                        "net.minecraft.block.BlockDoubleStoneSlabNew.isDouble" | 
                        "net.minecraft.block.BlockDoor$EnumDoorHalf.getName" | 
                        "net.minecraft.block.BlockDoor$EnumDoorHalf.toString" | 
                        "net.minecraft.world.gen.layer.GenLayerShore.func_151633_d" | 
                        "net.minecraft.world.gen.layer.GenLayerShore.getInts" | 
                        "net.minecraft.world.gen.layer.GenLayerShore.func_151632_a" | 
                        "net.minecraft.world.gen.layer.GenLayerShore.func_151631_c" | 
                        "net.minecraft.world.gen.layer.GenLayerAddIsland.getInts" | 
                        "net.minecraft.entity.ai.EntityAIVillagerMate.checkSufficientDoorsPresentForNewVillager" | 
                        "net.minecraft.entity.ai.EntityAIVillagerMate.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIVillagerMate.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIVillagerMate.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIVillagerMate.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIVillagerMate.giveBirth" | 
                        "net.minecraft.entity.ai.EntityAIVillagerMate.continueExecuting" | 
                        "net.optifine.gui.GuiAnimationSettingsOF.actionPerformed" | 
                        "net.optifine.gui.GuiAnimationSettingsOF.initGui" | 
                        "net.optifine.gui.GuiAnimationSettingsOF.drawScreen" | 
                        "com.sliceclient.anticheat.manager.CheckManager.getChecks" | 
                        "com.sliceclient.anticheat.manager.CheckManager.register" | 
                        "net.minecraft.client.gui.GuiKeyBindingList$KeyEntry.mouseReleased" | 
                        "net.minecraft.client.gui.GuiKeyBindingList$KeyEntry.drawEntry" | 
                        "net.minecraft.client.gui.GuiKeyBindingList$KeyEntry.setSelected" | 
                        "net.minecraft.client.gui.GuiKeyBindingList$KeyEntry.mousePressed" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stairs.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stairs.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stairs.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Stairs.writeStructureToNBT" | 
                        "net.minecraft.block.BlockBarrier.getAmbientOcclusionLightValue" | 
                        "net.minecraft.block.BlockBarrier.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockBarrier.getRenderType" | 
                        "net.minecraft.block.BlockBarrier.isOpaqueCube" | 
                        "net.minecraft.client.renderer.texture.TextureCompass.updateCompass" | 
                        "net.minecraft.client.renderer.texture.TextureCompass.updateAnimation" | 
                        "net.minecraft.client.gui.GuiYesNoCallback.confirmClicked" | 
                        "net.minecraft.block.BlockRedSandstone$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockRedSandstone$EnumType.getName" | 
                        "net.minecraft.block.BlockRedSandstone$EnumType.toString" | 
                        "net.minecraft.block.BlockRedSandstone$EnumType.getUnlocalizedName" | 
                        "net.optifine.config.GlVersion.getMinor" | 
                        "net.optifine.config.GlVersion.toInt" | 
                        "net.optifine.config.GlVersion.getMajor" | 
                        "net.optifine.config.GlVersion.toString" | 
                        "net.optifine.config.GlVersion.getRelease" | 
                        "net.optifine.expr.IParameters.getParameterTypes" | 
                        "net.minecraft.client.renderer.entity.RenderManager.setEntityRenderMap" | 
                        "net.minecraft.client.renderer.entity.RenderManager.getSkinMap" | 
                        "net.minecraft.client.renderer.entity.RenderManager.set" | 
                        "net.minecraft.client.renderer.entity.RenderManager.renderEntityStatic" | 
                        "net.minecraft.client.renderer.entity.RenderManager.setDebugBoundingBox" | 
                        "net.minecraft.client.renderer.entity.RenderManager.renderEntitySimple" | 
                        "net.minecraft.client.renderer.entity.RenderManager.setRenderOutlines" | 
                        "net.minecraft.client.renderer.entity.RenderManager.isRenderShadow" | 
                        "net.minecraft.client.renderer.entity.RenderManager.getEntityRenderMap" | 
                        "net.minecraft.client.renderer.entity.RenderManager.getDistanceToCamera" | 
                        "net.minecraft.client.renderer.entity.RenderManager.renderWitherSkull" | 
                        "net.minecraft.client.renderer.entity.RenderManager.setRenderPosition" | 
                        "net.minecraft.client.renderer.entity.RenderManager.renderEntityWithPosYaw" | 
                        "net.minecraft.client.renderer.entity.RenderManager.getEntityRenderObject" | 
                        "net.minecraft.client.renderer.entity.RenderManager.cacheActiveRenderInfo" | 
                        "net.minecraft.client.renderer.entity.RenderManager.getFontRenderer" | 
                        "net.minecraft.client.renderer.entity.RenderManager.isDebugBoundingBox" | 
                        "net.minecraft.client.renderer.entity.RenderManager.getEntityClassRenderObject" | 
                        "net.minecraft.client.renderer.entity.RenderManager.renderDebugBoundingBox" | 
                        "net.minecraft.client.renderer.entity.RenderManager.doRenderEntity" | 
                        "net.minecraft.client.renderer.entity.RenderManager.setRenderShadow" | 
                        "net.minecraft.client.renderer.entity.RenderManager.shouldRender" | 
                        "net.minecraft.client.renderer.entity.RenderManager.setPlayerViewY" | 
                        "net.minecraft.client.renderer.vertex.VertexFormatElement$EnumUsage.getDisplayName" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel$MyWeighedRandomItem.toString" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel$MyWeighedRandomItem.compareTo" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel$MyWeighedRandomItem.getCountQuads" | 
                        "net.minecraft.entity.monster.EntityGhast$AIFireballAttack.updateTask" | 
                        "net.minecraft.entity.monster.EntityGhast$AIFireballAttack.resetTask" | 
                        "net.minecraft.entity.monster.EntityGhast$AIFireballAttack.shouldExecute" | 
                        "net.minecraft.entity.monster.EntityGhast$AIFireballAttack.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIPanic.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIPanic.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIPanic.continueExecuting" | 
                        "net.minecraft.client.renderer.entity.RenderFireball.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderFireball.getEntityTexture" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.leafSize" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.validTreeLocation" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.generateTrunk" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.getGreatestDistance" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.checkBlockLine" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.generateLeafNode" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.leafNodeNeedsBase" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.generateLeafNodeBases" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.layerSize" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.func_175937_a" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.generateLeafNodeList" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.generateLeaves" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.generate" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.func_181631_a" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.func_175904_e" | 
                        "net.minecraft.world.gen.feature.WorldGenBigTree.func_175938_b" | 
                        "net.minecraft.world.gen.feature.WorldGenForest.generate" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Hall.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Hall.func_180779_c" | 
                        "net.optifine.reflect.FieldLocatorType.getField" | 
                        "org.cef.callback.CefFileDialogCallback_N.N_Cancel" | 
                        "org.cef.callback.CefFileDialogCallback_N.Cancel" | 
                        "org.cef.callback.CefFileDialogCallback_N.N_Continue" | 
                        "org.cef.callback.CefFileDialogCallback_N.finalize" | 
                        "org.cef.callback.CefFileDialogCallback_N.Continue" | 
                        "net.minecraft.client.gui.inventory.GuiEditSign.updateScreen" | 
                        "net.minecraft.client.gui.inventory.GuiEditSign.actionPerformed" | 
                        "net.minecraft.client.gui.inventory.GuiEditSign.initGui" | 
                        "net.minecraft.client.gui.inventory.GuiEditSign.drawScreen" | 
                        "net.minecraft.client.gui.inventory.GuiEditSign.onGuiClosed" | 
                        "net.minecraft.client.gui.inventory.GuiEditSign.keyTyped" | 
                        "net.minecraft.network.login.INetHandlerLoginClient.handleEncryptionRequest" | 
                        "net.minecraft.network.login.INetHandlerLoginClient.handleDisconnect" | 
                        "net.minecraft.network.login.INetHandlerLoginClient.handleLoginSuccess" | 
                        "net.minecraft.network.login.INetHandlerLoginClient.handleEnableCompression" | 
                        "org.cef.callback.CefPrintDialogCallback_N.cancel" | 
                        "org.cef.callback.CefPrintDialogCallback_N.N_Cancel" | 
                        "org.cef.callback.CefPrintDialogCallback_N.N_Continue" | 
                        "org.cef.callback.CefPrintDialogCallback_N.finalize" | 
                        "org.cef.callback.CefPrintDialogCallback_N.Continue" | 
                        "net.optifine.gui.GuiPerformanceSettingsOF.actionPerformed" | 
                        "net.optifine.gui.GuiPerformanceSettingsOF.initGui" | 
                        "net.optifine.gui.GuiPerformanceSettingsOF.drawScreen" | 
                        "org.cef.handler.CefLifeSpanHandlerAdapter.doClose" | 
                        "org.cef.handler.CefLifeSpanHandlerAdapter.onAfterParentChanged" | 
                        "org.cef.handler.CefLifeSpanHandlerAdapter.onBeforeClose" | 
                        "org.cef.handler.CefLifeSpanHandlerAdapter.onBeforePopup" | 
                        "org.cef.handler.CefLifeSpanHandlerAdapter.onAfterCreated" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.drawEntry" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.func_148308_f" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.func_148309_e" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.func_148307_h" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.setSelected" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.func_183019_a" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.func_148314_g" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.mousePressed" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.mouseReleased" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.func_148311_a" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.func_148312_b" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.func_148310_d" | 
                        "net.minecraft.client.resources.ResourcePackListEntry.func_148313_c" | 
                        "net.minecraft.block.BlockTallGrass.getMetaFromState" | 
                        "net.minecraft.block.BlockTallGrass.grow" | 
                        "net.minecraft.block.BlockTallGrass.colorMultiplier" | 
                        "net.minecraft.block.BlockTallGrass.getOffsetType" | 
                        "net.minecraft.block.BlockTallGrass.quantityDroppedWithBonus" | 
                        "net.minecraft.block.BlockTallGrass.canBlockStay" | 
                        "net.minecraft.block.BlockTallGrass.getSubBlocks" | 
                        "net.minecraft.block.BlockTallGrass.getBlockColor" | 
                        "net.minecraft.block.BlockTallGrass.getRenderColor" | 
                        "net.minecraft.block.BlockTallGrass.createBlockState" | 
                        "net.minecraft.block.BlockTallGrass.getDamageValue" | 
                        "net.minecraft.block.BlockTallGrass.harvestBlock" | 
                        "net.minecraft.block.BlockTallGrass.getStateFromMeta" | 
                        "net.minecraft.block.BlockTallGrass.isReplaceable" | 
                        "net.minecraft.block.BlockTallGrass.canUseBonemeal" | 
                        "net.minecraft.block.BlockTallGrass.getItemDropped" | 
                        "net.minecraft.block.BlockTallGrass.canGrow" | 
                        "net.minecraft.world.gen.MapGenRavine.func_180707_a" | 
                        "net.minecraft.world.gen.MapGenRavine.recursiveGenerate" | 
                        "net.optifine.expr.IExpressionFloatArray.eval" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel.isAmbientOcclusion" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel.getItemCameraTransforms" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel.getGeneralQuads" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel.isGui3d" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel.isBuiltInRenderer" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel.getFaceQuads" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel.getParticleTexture" | 
                        "net.minecraft.block.BlockLiquid.getMetaFromState" | 
                        "net.minecraft.block.BlockLiquid.isPassable" | 
                        "net.minecraft.block.BlockLiquid.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockLiquid.isBlockSolid" | 
                        "net.minecraft.block.BlockLiquid.getRenderType" | 
                        "net.minecraft.block.BlockLiquid.getFlowVector" | 
                        "net.minecraft.block.BlockLiquid.getEffectiveFlowDecay" | 
                        "net.minecraft.block.BlockLiquid.quantityDropped" | 
                        "net.minecraft.block.BlockLiquid.getStateFromMeta" | 
                        "net.minecraft.block.BlockLiquid.getBlockLayer" | 
                        "net.minecraft.block.BlockLiquid.randomDisplayTick" | 
                        "net.minecraft.block.BlockLiquid.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockLiquid.shouldRenderSides" | 
                        "net.minecraft.block.BlockLiquid.colorMultiplier" | 
                        "net.minecraft.block.BlockLiquid.isFullCube" | 
                        "net.minecraft.block.BlockLiquid.onBlockAdded" | 
                        "net.minecraft.block.BlockLiquid.canCollideCheck" | 
                        "net.minecraft.block.BlockLiquid.tickRate" | 
                        "net.minecraft.block.BlockLiquid.getMixedBrightnessForBlock" | 
                        "net.minecraft.block.BlockLiquid.getLevel" | 
                        "net.minecraft.block.BlockLiquid.triggerMixEffects" | 
                        "net.minecraft.block.BlockLiquid.createBlockState" | 
                        "net.minecraft.block.BlockLiquid.checkForMixing" | 
                        "net.minecraft.block.BlockLiquid.isOpaqueCube" | 
                        "net.minecraft.block.BlockLiquid.getItemDropped" | 
                        "net.minecraft.block.BlockLiquid.modifyAcceleration" | 
                        "net.minecraft.block.BlockLiquid.shouldSideBeRendered" | 
                        "net.minecraft.world.WorldManager.playAuxSFX" | 
                        "net.minecraft.world.WorldManager.broadcastSound" | 
                        "net.minecraft.world.WorldManager.markBlockForUpdate" | 
                        "net.minecraft.world.WorldManager.sendBlockBreakProgress" | 
                        "net.minecraft.world.WorldManager.playSound" | 
                        "net.minecraft.world.WorldManager.playSoundToNearExcept" | 
                        "net.minecraft.world.WorldManager.playRecord" | 
                        "net.minecraft.world.WorldManager.notifyLightSet" | 
                        "net.minecraft.world.WorldManager.onEntityAdded" | 
                        "net.minecraft.world.WorldManager.onEntityRemoved" | 
                        "net.minecraft.world.WorldManager.spawnParticle" | 
                        "net.minecraft.world.WorldManager.markBlockRangeForRenderUpdate" | 
                        "net.minecraft.client.renderer.entity.RenderCaveSpider.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderCaveSpider.getEntityTexture" | 
                        "net.optifine.http.HttpPipelineConnection.setSocket" | 
                        "net.optifine.http.HttpPipelineConnection.addRequest" | 
                        "net.optifine.http.HttpPipelineConnection.getProxy" | 
                        "net.optifine.http.HttpPipelineConnection.hasActiveRequests" | 
                        "net.optifine.http.HttpPipelineConnection.getNextRequestSend" | 
                        "net.optifine.http.HttpPipelineConnection.checkTimeout" | 
                        "net.optifine.http.HttpPipelineConnection.onActivity" | 
                        "net.optifine.http.HttpPipelineConnection.getInputStream" | 
                        "net.optifine.http.HttpPipelineConnection.onResponseReceived" | 
                        "net.optifine.http.HttpPipelineConnection.checkResponseHeader" | 
                        "net.optifine.http.HttpPipelineConnection.onExceptionSend" | 
                        "net.optifine.http.HttpPipelineConnection.getCountRequests" | 
                        "net.optifine.http.HttpPipelineConnection.terminateRequests" | 
                        "net.optifine.http.HttpPipelineConnection.onRequestSent" | 
                        "net.optifine.http.HttpPipelineConnection.split" | 
                        "net.optifine.http.HttpPipelineConnection.getPort" | 
                        "net.optifine.http.HttpPipelineConnection.onExceptionReceive" | 
                        "net.optifine.http.HttpPipelineConnection.isClosed" | 
                        "net.optifine.http.HttpPipelineConnection.getOutputStream" | 
                        "net.optifine.http.HttpPipelineConnection.terminate" | 
                        "net.optifine.http.HttpPipelineConnection.getHost" | 
                        "net.optifine.http.HttpPipelineConnection.getNextRequest" | 
                        "net.optifine.http.HttpPipelineConnection.normalizeUrl" | 
                        "net.optifine.http.HttpPipelineConnection.getNextRequestReceive" | 
                        "net.minecraft.client.particle.EntityEnchantmentTableParticleFX.getBrightnessForRender" | 
                        "net.minecraft.client.particle.EntityEnchantmentTableParticleFX.getBrightness" | 
                        "net.minecraft.client.particle.EntityEnchantmentTableParticleFX.onUpdate" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.getModifiersByOperation" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.getAttribute" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.getAttributeValue" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.removeAllModifiers" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.hasModifier" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.getModifier" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.func_111122_c" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.setBaseValue" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.getBaseValue" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.removeModifier" | 
                        "net.minecraft.entity.ai.attributes.IAttributeInstance.applyModifier" | 
                        "net.minecraft.client.renderer.ChestRenderer.renderChestBrightness" | 
                        "net.minecraft.client.gui.inventory.GuiInventory.updateScreen" | 
                        "net.minecraft.client.gui.inventory.GuiInventory.actionPerformed" | 
                        "net.minecraft.client.gui.inventory.GuiInventory.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiInventory.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiInventory.initGui" | 
                        "net.minecraft.client.gui.inventory.GuiInventory.drawScreen" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic$WeightedRandomMinecart.toNBT" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$RoomCrossing.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$RoomCrossing.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$RoomCrossing.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$RoomCrossing.writeStructureToNBT" | 
                        "net.minecraft.client.renderer.entity.RenderSilverfish.getDeathMaxRotation" | 
                        "net.minecraft.client.renderer.entity.RenderSilverfish.getEntityTexture" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.mouseReleased" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.setDragX" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.getValue" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.setDragging" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.setDragY" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.formatDouble3Places" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.setValue" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.mouseClicked" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.getDragX" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.draw" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.getDragY" | 
                        "slice.legacy.clickgui.setting.settings.SliderButton.isDragging" | 
                        "net.minecraft.block.BlockDoublePlant$EnumBlockHalf.getName" | 
                        "net.minecraft.block.BlockDoublePlant$EnumBlockHalf.toString" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$JunglePyramid$Stones.selectBlocks" | 
                        "net.minecraft.entity.monster.EntitySpider$GroupData.func_111104_a" | 
                        "net.minecraft.world.gen.structure.MapGenScatteredFeature.getScatteredFeatureSpawnList" | 
                        "net.minecraft.world.gen.structure.MapGenScatteredFeature.getStructureStart" | 
                        "net.minecraft.world.gen.structure.MapGenScatteredFeature.func_175798_a" | 
                        "net.minecraft.world.gen.structure.MapGenScatteredFeature.canSpawnStructureAtCoords" | 
                        "net.minecraft.world.gen.structure.MapGenScatteredFeature.getStructureName" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsBlock.func_148210_b" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsBlock.drawListHeader" | 
                        "net.minecraft.client.gui.achievement.GuiStats$StatsBlock.drawSlot" | 
                        "net.minecraft.nbt.NBTTagByteArray.read" | 
                        "net.minecraft.nbt.NBTTagByteArray.hashCode" | 
                        "net.minecraft.nbt.NBTTagByteArray.equals" | 
                        "net.minecraft.nbt.NBTTagByteArray.getByteArray" | 
                        "net.minecraft.nbt.NBTTagByteArray.toString" | 
                        "net.minecraft.nbt.NBTTagByteArray.getId" | 
                        "net.minecraft.nbt.NBTTagByteArray.copy" | 
                        "net.minecraft.nbt.NBTTagByteArray.write" | 
                        "net.minecraft.world.gen.layer.GenLayerEdge.getIntsSpecial" | 
                        "net.minecraft.world.gen.layer.GenLayerEdge.getIntsHeatIce" | 
                        "net.minecraft.world.gen.layer.GenLayerEdge.getIntsCoolWarm" | 
                        "net.minecraft.world.gen.layer.GenLayerEdge.getInts" | 
                        "net.optifine.entity.model.ModelAdapterSquid.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterSquid.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterSquid.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterSquid.getModelRendererNames" | 
                        "net.minecraft.network.ServerStatusResponse$MinecraftProtocolVersionIdentifier.getName" | 
                        "net.minecraft.network.ServerStatusResponse$MinecraftProtocolVersionIdentifier.getProtocol" | 
                        "net.optifine.util.LinkedList$Node.setNext" | 
                        "net.optifine.util.LinkedList$Node.getItem" | 
                        "net.optifine.util.LinkedList$Node.toString" | 
                        "net.optifine.util.LinkedList$Node.setParent" | 
                        "net.optifine.util.LinkedList$Node.getNext" | 
                        "net.optifine.util.LinkedList$Node.setPrev" | 
                        "net.optifine.util.LinkedList$Node.getPrev" | 
                        "net.minecraft.client.renderer.entity.layers.LayerHeldBlock.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerHeldBlock.shouldCombineTextures" | 
                        "net.minecraft.client.particle.EntitySpellParticleFX$WitchFactory.getEntityFX" | 
                        "net.minecraft.client.particle.EntitySpellParticleFX$MobFactory.getEntityFX" | 
                        "net.minecraft.client.model.ModelSpider.setRotationAngles" | 
                        "net.minecraft.client.model.ModelSpider.render" | 
                        "net.minecraft.client.LoadingScreenRenderer.displayLoadingString" | 
                        "net.minecraft.client.LoadingScreenRenderer.displayString" | 
                        "net.minecraft.client.LoadingScreenRenderer.setDoneWorking" | 
                        "net.minecraft.client.LoadingScreenRenderer.setLoadingProgress" | 
                        "net.minecraft.client.LoadingScreenRenderer.displaySavingString" | 
                        "net.minecraft.client.LoadingScreenRenderer.resetProgressAndMessage" | 
                        "net.minecraft.world.gen.feature.WorldGenShrub.generate" | 
                        "net.minecraft.command.CommandXP.getAllUsernames" | 
                        "net.minecraft.command.CommandXP.isUsernameIndex" | 
                        "net.minecraft.command.CommandXP.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandXP.getCommandUsage" | 
                        "net.minecraft.command.CommandXP.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandXP.processCommand" | 
                        "net.minecraft.command.CommandXP.getCommandName" | 
                        "net.minecraft.event.HoverEvent$Action.shouldAllowInChat" | 
                        "net.minecraft.event.HoverEvent$Action.getCanonicalName" | 
                        "net.minecraft.client.gui.GuiHopper.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.GuiHopper.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.entity.projectile.EntityFireball.getCollisionBorderSize" | 
                        "net.minecraft.entity.projectile.EntityFireball.writeEntityToNBT" | 
                        "net.minecraft.entity.projectile.EntityFireball.canBeCollidedWith" | 
                        "net.minecraft.entity.projectile.EntityFireball.attackEntityFrom" | 
                        "net.minecraft.entity.projectile.EntityFireball.getBrightnessForRender" | 
                        "net.minecraft.entity.projectile.EntityFireball.onImpact" | 
                        "net.minecraft.entity.projectile.EntityFireball.readEntityFromNBT" | 
                        "net.minecraft.entity.projectile.EntityFireball.entityInit" | 
                        "net.minecraft.entity.projectile.EntityFireball.getBrightness" | 
                        "net.minecraft.entity.projectile.EntityFireball.isInRangeToRenderDist" | 
                        "net.minecraft.entity.projectile.EntityFireball.getMotionFactor" | 
                        "net.minecraft.entity.projectile.EntityFireball.onUpdate" | 
                        "net.minecraft.world.WorldProvider.getDimensionId" | 
                        "net.minecraft.world.WorldProvider.doesWaterVaporize" | 
                        "net.minecraft.world.WorldProvider.getDimensionName" | 
                        "net.minecraft.world.WorldProvider.getVoidFogYFactor" | 
                        "net.minecraft.world.WorldProvider.createChunkGenerator" | 
                        "net.minecraft.world.WorldProvider.doesXZShowFog" | 
                        "net.minecraft.world.WorldProvider.getLightBrightnessTable" | 
                        "net.minecraft.world.WorldProvider.getMoonPhase" | 
                        "net.minecraft.world.WorldProvider.getHasNoSky" | 
                        "net.minecraft.world.WorldProvider.canCoordinateBeSpawn" | 
                        "net.minecraft.world.WorldProvider.registerWorldChunkManager" | 
                        "net.minecraft.world.WorldProvider.registerWorld" | 
                        "net.minecraft.world.WorldProvider.calcSunriseSunsetColors" | 
                        "net.minecraft.world.WorldProvider.calculateCelestialAngle" | 
                        "net.minecraft.world.WorldProvider.getWorldChunkManager" | 
                        "net.minecraft.world.WorldProvider.getCloudHeight" | 
                        "net.minecraft.world.WorldProvider.getAverageGroundLevel" | 
                        "net.minecraft.world.WorldProvider.isSkyColored" | 
                        "net.minecraft.world.WorldProvider.canRespawnHere" | 
                        "net.minecraft.world.WorldProvider.isSurfaceWorld" | 
                        "net.minecraft.world.WorldProvider.getInternalNameSuffix" | 
                        "net.minecraft.world.WorldProvider.getFogColor" | 
                        "net.minecraft.world.WorldProvider.getSpawnCoordinate" | 
                        "net.minecraft.world.WorldProvider.generateLightBrightnessTable" | 
                        "net.minecraft.world.WorldProvider.getWorldBorder" | 
                        "net.minecraft.client.gui.GuiResourcePackAvailable.getListHeader" | 
                        "net.minecraft.client.particle.EntityBreakingFX$Factory.getEntityFX" | 
                        "net.minecraft.client.gui.GuiScreenBook$NextPageButton.drawButton" | 
                        "net.minecraft.world.storage.SaveFormatComparator.requiresConversion" | 
                        "net.minecraft.world.storage.SaveFormatComparator.getSizeOnDisk" | 
                        "net.minecraft.world.storage.SaveFormatComparator.getDisplayName" | 
                        "net.minecraft.world.storage.SaveFormatComparator.getEnumGameType" | 
                        "net.minecraft.world.storage.SaveFormatComparator.compareTo" | 
                        "net.minecraft.world.storage.SaveFormatComparator.isHardcoreModeEnabled" | 
                        "net.minecraft.world.storage.SaveFormatComparator.getLastTimePlayed" | 
                        "net.minecraft.world.storage.SaveFormatComparator.getFileName" | 
                        "net.minecraft.world.storage.SaveFormatComparator.getCheatsEnabled" | 
                        "net.minecraft.client.settings.KeyBinding.isPressed" | 
                        "net.minecraft.client.settings.KeyBinding.getKeyDescription" | 
                        "net.minecraft.client.settings.KeyBinding.compareTo" | 
                        "net.minecraft.client.settings.KeyBinding.getKeyCodeDefault" | 
                        "net.minecraft.client.settings.KeyBinding.unpressKey" | 
                        "net.minecraft.client.settings.KeyBinding.setKeyCode" | 
                        "net.minecraft.client.settings.KeyBinding.isKeyDown" | 
                        "net.minecraft.client.settings.KeyBinding.getKeyCategory" | 
                        "net.minecraft.client.settings.KeyBinding.getKeyCode" | 
                        "net.minecraft.client.particle.EntityPortalFX.getBrightnessForRender" | 
                        "net.minecraft.client.particle.EntityPortalFX.getBrightness" | 
                        "net.minecraft.client.particle.EntityPortalFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityPortalFX.onUpdate" | 
                        "slice.event.manager.sender.EventSender.getEvent" | 
                        "slice.event.manager.sender.EventSender.getMethodParameterType" | 
                        "slice.event.manager.sender.EventSender.hasAnnotation" | 
                        "slice.event.manager.sender.EventSender.getObject" | 
                        "slice.event.manager.sender.EventSender.runEvent" | 
                        "slice.event.manager.sender.EventSender.getMethod" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam.func_178670_b" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam.getSpectatorName" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam.func_178662_A_" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam.func_178663_a" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam.func_178661_a" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam.func_178669_a" | 
                        "net.minecraft.client.particle.EntityFootStepFX$Factory.getEntityFX" | 
                        "net.minecraft.util.CombatTracker.func_94542_g" | 
                        "net.minecraft.util.CombatTracker.func_94548_b" | 
                        "net.minecraft.util.CombatTracker.func_94544_f" | 
                        "net.minecraft.util.CombatTracker.func_180134_f" | 
                        "net.minecraft.util.CombatTracker.getFighter" | 
                        "net.minecraft.util.CombatTracker.func_94545_a" | 
                        "net.minecraft.util.CombatTracker.reset" | 
                        "net.minecraft.util.CombatTracker.func_94550_c" | 
                        "net.minecraft.util.CombatTracker.trackDamage" | 
                        "net.minecraft.util.CombatTracker.getDeathMessage" | 
                        "net.optifine.player.CapeImageBuffer.isElytraOfCape" | 
                        "net.optifine.player.CapeImageBuffer.parseUserSkin" | 
                        "net.optifine.player.CapeImageBuffer.cleanup" | 
                        "net.optifine.player.CapeImageBuffer.skinAvailable" | 
                        "net.minecraft.item.crafting.RecipeRepairItem.getRecipeOutput" | 
                        "net.minecraft.item.crafting.RecipeRepairItem.getRemainingItems" | 
                        "net.minecraft.item.crafting.RecipeRepairItem.getCraftingResult" | 
                        "net.minecraft.item.crafting.RecipeRepairItem.getRecipeSize" | 
                        "net.minecraft.item.crafting.RecipeRepairItem.matches" | 
                        "net.minecraft.client.gui.GuiResourcePackList.getListHeader" | 
                        "net.minecraft.client.gui.GuiResourcePackList.getSize" | 
                        "net.minecraft.client.gui.GuiResourcePackList.drawListHeader" | 
                        "net.minecraft.client.gui.GuiResourcePackList.getListWidth" | 
                        "net.minecraft.client.gui.GuiResourcePackList.getScrollBarX" | 
                        "net.minecraft.client.gui.GuiResourcePackList.getList" | 
                        "net.minecraft.client.gui.GuiResourcePackList.getListEntry" | 
                        "net.minecraft.block.BlockRedstoneWire.getMetaFromState" | 
                        "net.minecraft.block.BlockRedstoneWire.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockRedstoneWire.getAttachPosition" | 
                        "net.minecraft.block.BlockRedstoneWire.getItem" | 
                        "net.minecraft.block.BlockRedstoneWire.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockRedstoneWire.getActualState" | 
                        "net.minecraft.block.BlockRedstoneWire.notifyWireNeighborsOfStateChange" | 
                        "net.minecraft.block.BlockRedstoneWire.getStateFromMeta" | 
                        "net.minecraft.block.BlockRedstoneWire.updateSurroundingRedstone" | 
                        "net.minecraft.block.BlockRedstoneWire.breakBlock" | 
                        "net.minecraft.block.BlockRedstoneWire.func_176339_d" | 
                        "net.minecraft.block.BlockRedstoneWire.getBlockLayer" | 
                        "net.minecraft.block.BlockRedstoneWire.randomDisplayTick" | 
                        "net.minecraft.block.BlockRedstoneWire.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockRedstoneWire.colorMultiplier" | 
                        "net.minecraft.block.BlockRedstoneWire.calculateCurrentChanges" | 
                        "net.minecraft.block.BlockRedstoneWire.isFullCube" | 
                        "net.minecraft.block.BlockRedstoneWire.onBlockAdded" | 
                        "net.minecraft.block.BlockRedstoneWire.getMaxCurrentStrength" | 
                        "net.minecraft.block.BlockRedstoneWire.getWeakPower" | 
                        "net.minecraft.block.BlockRedstoneWire.createBlockState" | 
                        "net.minecraft.block.BlockRedstoneWire.getStrongPower" | 
                        "net.minecraft.block.BlockRedstoneWire.canProvidePower" | 
                        "net.minecraft.block.BlockRedstoneWire.isOpaqueCube" | 
                        "net.minecraft.block.BlockRedstoneWire.getItemDropped" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.getItemCount" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.scroll" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.selectItem" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.renderItem" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.mouseEvent" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.getScrollbarPosition" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.ym" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.xm" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.width" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.renderBackground" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.getMaxPosition" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.renderList" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.render" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.getScroll" | 
                        "net.minecraft.realms.RealmsScrolledSelectionList.isSelectedItem" | 
                        "net.minecraft.client.particle.EntitySplashFX$Factory.getEntityFX" | 
                        "net.minecraft.client.model.ModelGuardian.setRotationAngles" | 
                        "net.minecraft.client.model.ModelGuardian.func_178706_a" | 
                        "net.minecraft.client.model.ModelGuardian.render" | 
                        "net.optifine.model.ModelSprite.render" | 
                        "net.minecraft.world.WorldProviderSurface.getInternalNameSuffix" | 
                        "net.minecraft.world.WorldProviderSurface.getDimensionName" | 
                        "net.minecraft.client.model.ModelDragon.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelDragon.render" | 
                        "net.minecraft.client.model.ModelDragon.updateRotations" | 
                        "net.minecraft.client.audio.MovingSoundMinecart.update" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Well.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Well.buildComponent" | 
                        "slice.notification.Notification.getSeconds" | 
                        "slice.notification.Notification.getTitle" | 
                        "slice.notification.Notification.setSeconds" | 
                        "slice.notification.Notification.isRan" | 
                        "slice.notification.Notification.getMessage" | 
                        "slice.notification.Notification.setTitle" | 
                        "slice.notification.Notification.setMessage" | 
                        "slice.notification.Notification.setTimer" | 
                        "slice.notification.Notification.getTimer" | 
                        "slice.notification.Notification.setRan" | 
                        "net.minecraft.command.CommandSpreadPlayers$Position.func_111099_a" | 
                        "net.minecraft.command.CommandSpreadPlayers$Position.func_111098_b" | 
                        "net.minecraft.command.CommandSpreadPlayers$Position.func_111095_a" | 
                        "net.minecraft.command.CommandSpreadPlayers$Position.func_111094_b" | 
                        "net.minecraft.command.CommandSpreadPlayers$Position.func_111096_b" | 
                        "net.minecraft.command.CommandSpreadPlayers$Position.func_111097_a" | 
                        "net.minecraft.command.CommandSpreadPlayers$Position.func_111092_a" | 
                        "net.minecraft.command.CommandSpreadPlayers$Position.func_111093_a" | 
                        "net.minecraft.block.BlockReed.getMetaFromState" | 
                        "net.minecraft.block.BlockReed.getBlockLayer" | 
                        "net.minecraft.block.BlockReed.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockReed.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockReed.colorMultiplier" | 
                        "net.minecraft.block.BlockReed.isFullCube" | 
                        "net.minecraft.block.BlockReed.getItem" | 
                        "net.minecraft.block.BlockReed.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockReed.canBlockStay" | 
                        "net.minecraft.block.BlockReed.createBlockState" | 
                        "net.minecraft.block.BlockReed.getStateFromMeta" | 
                        "net.minecraft.block.BlockReed.updateTick" | 
                        "net.minecraft.block.BlockReed.isOpaqueCube" | 
                        "net.minecraft.block.BlockReed.getItemDropped" | 
                        "net.minecraft.block.BlockReed.checkForDrop" | 
                        "net.minecraft.client.particle.EntityParticleEmitter.renderParticle" | 
                        "net.minecraft.client.particle.EntityParticleEmitter.getFXLayer" | 
                        "net.minecraft.client.particle.EntityParticleEmitter.onUpdate" | 
                        "net.minecraft.enchantment.EnchantmentThorns.canApply" | 
                        "net.minecraft.enchantment.EnchantmentThorns.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentThorns.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentThorns.onUserHurt" | 
                        "net.minecraft.enchantment.EnchantmentThorns.getMaxLevel" | 
                        "net.optifine.expr.Token.getType" | 
                        "net.optifine.expr.Token.getText" | 
                        "net.optifine.expr.Token.toString" | 
                        "net.minecraft.block.BlockEventData.getBlock" | 
                        "net.minecraft.block.BlockEventData.getPosition" | 
                        "net.minecraft.block.BlockEventData.getEventParameter" | 
                        "net.minecraft.block.BlockEventData.equals" | 
                        "net.minecraft.block.BlockEventData.toString" | 
                        "net.minecraft.block.BlockEventData.getEventID" | 
                        "net.minecraft.client.gui.achievement.GuiAchievement.clearAchievements" | 
                        "net.minecraft.client.gui.achievement.GuiAchievement.displayAchievement" | 
                        "net.minecraft.client.gui.achievement.GuiAchievement.displayUnformattedAchievement" | 
                        "net.minecraft.client.gui.achievement.GuiAchievement.updateAchievementWindow" | 
                        "net.minecraft.client.gui.achievement.GuiAchievement.updateAchievementWindowScale" | 
                        "org.cef.callback.CefURLRequestClient.getAuthCredentials" | 
                        "org.cef.callback.CefURLRequestClient.onRequestComplete" | 
                        "org.cef.callback.CefURLRequestClient.onDownloadData" | 
                        "org.cef.callback.CefURLRequestClient.onUploadProgress" | 
                        "org.cef.callback.CefURLRequestClient.onDownloadProgress" | 
                        "net.minecraft.dispenser.PositionImpl.getX" | 
                        "net.minecraft.dispenser.PositionImpl.getY" | 
                        "net.minecraft.dispenser.PositionImpl.getZ" | 
                        "slice.notification.NotificationManager.setCurrentNotification" | 
                        "slice.notification.NotificationManager.getCurrentNotification" | 
                        "slice.notification.NotificationManager.getNotifications" | 
                        "slice.notification.NotificationManager.queueNotification" | 
                        "slice.notification.NotificationManager.setNotifications" | 
                        "slice.notification.NotificationManager.onUpdate" | 
                        "net.minecraft.entity.monster.EntitySlime$AISlimeAttack.updateTask" | 
                        "net.minecraft.entity.monster.EntitySlime$AISlimeAttack.shouldExecute" | 
                        "net.minecraft.entity.monster.EntitySlime$AISlimeAttack.startExecuting" | 
                        "net.minecraft.entity.monster.EntitySlime$AISlimeAttack.continueExecuting" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderItemOverlays" | 
                        "net.minecraft.client.renderer.entity.RenderItem.registerBlock" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderItemModelTransform" | 
                        "net.minecraft.client.renderer.entity.RenderItem.isThereOneNegativeScale" | 
                        "net.minecraft.client.renderer.entity.RenderItem.registerItem" | 
                        "net.minecraft.client.renderer.entity.RenderItem.getItemModelMesher" | 
                        "net.minecraft.client.renderer.entity.RenderItem.putQuadNormal" | 
                        "net.minecraft.client.renderer.entity.RenderItem.onResourceManagerReload" | 
                        "net.minecraft.client.renderer.entity.RenderItem.draw" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderItemIntoGUI" | 
                        "net.minecraft.client.renderer.entity.RenderItem.registerItems" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderItem" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderModel" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderQuads" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderItemAndEffectIntoGUI" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderEffect" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderItemModelForEntity" | 
                        "net.minecraft.client.renderer.entity.RenderItem.preTransform" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderQuad" | 
                        "net.minecraft.client.renderer.entity.RenderItem.isNotRenderingEffectsInGUI" | 
                        "net.minecraft.client.renderer.entity.RenderItem.shouldRenderItemIn3D" | 
                        "net.minecraft.client.renderer.entity.RenderItem.renderItemOverlayIntoGUI" | 
                        "net.minecraft.client.renderer.entity.RenderItem.setupGuiTransform" | 
                        "net.minecraft.command.CommandGameMode.isUsernameIndex" | 
                        "net.minecraft.command.CommandGameMode.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandGameMode.getCommandUsage" | 
                        "net.minecraft.command.CommandGameMode.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandGameMode.processCommand" | 
                        "net.minecraft.command.CommandGameMode.getCommandName" | 
                        "net.minecraft.command.CommandGameMode.getListOfPlayerUsernames" | 
                        "net.minecraft.command.CommandGameMode.getGameModeFromCommand" | 
                        "net.optifine.Mipmaps.averageColor" | 
                        "net.minecraft.world.biome.BiomeGenForest.decorate" | 
                        "net.minecraft.world.biome.BiomeGenForest.createMutatedBiome" | 
                        "net.minecraft.world.biome.BiomeGenForest.genBigTreeChance" | 
                        "net.minecraft.world.biome.BiomeGenForest.getGrassColorAtPos" | 
                        "net.minecraft.world.biome.BiomeGenForest.pickRandomFlower" | 
                        "net.minecraft.world.biome.BiomeGenForest.func_150557_a" | 
                        "net.minecraft.client.renderer.block.model.BlockFaceUV.setUvs" | 
                        "net.minecraft.client.renderer.block.model.BlockFaceUV.func_178347_d" | 
                        "net.minecraft.client.renderer.block.model.BlockFaceUV.func_178345_c" | 
                        "net.minecraft.client.renderer.block.model.BlockFaceUV.func_178346_b" | 
                        "net.minecraft.client.renderer.block.model.BlockFaceUV.func_178348_a" | 
                        "net.minecraft.world.storage.MapData$MapInfo.getPacket" | 
                        "net.minecraft.world.storage.MapData$MapInfo.update" | 
                        "net.minecraft.client.renderer.ItemMeshDefinition.getModelLocation" | 
                        "org.cef.browser.CefRequestContext_N.setNativeRef" | 
                        "org.cef.browser.CefRequestContext_N.getNativeRef" | 
                        "org.cef.browser.CefRequestContext_N.N_IsGlobal" | 
                        "org.cef.browser.CefRequestContext_N.isGlobal" | 
                        "org.cef.browser.CefRequestContext_N.N_CefRequestContext_DTOR" | 
                        "org.cef.browser.CefRequestContext_N.dispose" | 
                        "org.cef.browser.CefRequestContext_N.getHandler" | 
                        "net.minecraft.world.gen.feature.WorldGenTrees.generate" | 
                        "net.minecraft.world.gen.feature.WorldGenTrees.func_181652_a" | 
                        "net.minecraft.world.gen.feature.WorldGenTrees.func_181651_a" | 
                        "net.minecraft.world.gen.feature.WorldGenTrees.func_181650_b" | 
                        "com.sliceclient.script.SliceScript.onShutdown" | 
                        "com.sliceclient.script.SliceScript.onStartup" | 
                        "net.minecraft.client.particle.EntityAuraFX$HappyVillagerFactory.getEntityFX" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityBannerRenderer.renderTileEntityAt" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityBannerRenderer.func_178463_a" | 
                        "net.optifine.entity.model.anim.IRenderResolver.getParameter" | 
                        "net.minecraft.entity.projectile.EntityPotion.writeEntityToNBT" | 
                        "net.minecraft.entity.projectile.EntityPotion.getVelocity" | 
                        "net.minecraft.entity.projectile.EntityPotion.onImpact" | 
                        "net.minecraft.entity.projectile.EntityPotion.readEntityFromNBT" | 
                        "net.minecraft.entity.projectile.EntityPotion.getGravityVelocity" | 
                        "net.minecraft.entity.projectile.EntityPotion.getPotionDamage" | 
                        "net.minecraft.entity.projectile.EntityPotion.getInaccuracy" | 
                        "net.minecraft.entity.projectile.EntityPotion.setPotionDamage" | 
                        "net.minecraft.util.MovementInputFromOptions.updatePlayerMoveState" | 
                        "net.optifine.shaders.config.ShaderOptionSwitch.getValueText" | 
                        "net.optifine.shaders.config.ShaderOptionSwitch.matchesLine" | 
                        "net.optifine.shaders.config.ShaderOptionSwitch.isUsedInLine" | 
                        "net.optifine.shaders.config.ShaderOptionSwitch.getValueColor" | 
                        "net.optifine.shaders.config.ShaderOptionSwitch.checkUsed" | 
                        "net.optifine.shaders.config.ShaderOptionSwitch.getSourceLine" | 
                        "net.minecraft.client.gui.GuiStreamIndicator.func_152440_b" | 
                        "net.minecraft.client.gui.GuiStreamIndicator.func_152438_c" | 
                        "net.minecraft.client.gui.GuiStreamIndicator.render" | 
                        "net.minecraft.client.gui.GuiStreamIndicator.updateStreamAlpha" | 
                        "net.minecraft.realms.RealmsScreen.drawCenteredString" | 
                        "net.minecraft.realms.RealmsScreen.mouseDragged" | 
                        "net.minecraft.realms.RealmsScreen.getProxy" | 
                        "net.minecraft.realms.RealmsScreen.fontSplit" | 
                        "net.minecraft.realms.RealmsScreen.newEditBox" | 
                        "net.minecraft.realms.RealmsScreen.buttonsClear" | 
                        "net.minecraft.realms.RealmsScreen.buttonsAdd" | 
                        "net.minecraft.realms.RealmsScreen.drawString" | 
                        "net.minecraft.realms.RealmsScreen.keyboardEvent" | 
                        "net.minecraft.realms.RealmsScreen.mouseReleased" | 
                        "net.minecraft.realms.RealmsScreen.mouseEvent" | 
                        "net.minecraft.realms.RealmsScreen.isPauseScreen" | 
                        "net.minecraft.realms.RealmsScreen.render" | 
                        "net.minecraft.realms.RealmsScreen.fontLineHeight" | 
                        "net.minecraft.realms.RealmsScreen.height" | 
                        "net.minecraft.realms.RealmsScreen.init" | 
                        "net.minecraft.realms.RealmsScreen.keyPressed" | 
                        "net.minecraft.realms.RealmsScreen.renderTooltip" | 
                        "net.minecraft.realms.RealmsScreen.buttons" | 
                        "net.minecraft.realms.RealmsScreen.buttonClicked" | 
                        "net.minecraft.realms.RealmsScreen.tick" | 
                        "net.minecraft.realms.RealmsScreen.buttonsRemove" | 
                        "net.minecraft.realms.RealmsScreen.fillGradient" | 
                        "net.minecraft.realms.RealmsScreen.fontDrawShadow" | 
                        "net.minecraft.realms.RealmsScreen.removed" | 
                        "net.minecraft.realms.RealmsScreen.confirmResult" | 
                        "net.minecraft.realms.RealmsScreen.fontWidth" | 
                        "net.minecraft.realms.RealmsScreen.mouseClicked" | 
                        "net.minecraft.realms.RealmsScreen.width" | 
                        "net.minecraft.realms.RealmsScreen.getLevelStorageSource" | 
                        "net.minecraft.realms.RealmsScreen.renderBackground" | 
                        "net.minecraft.block.BlockPistonExtension.getMetaFromState" | 
                        "net.minecraft.block.BlockPistonExtension.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockPistonExtension.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockPistonExtension.onBlockHarvested" | 
                        "net.minecraft.block.BlockPistonExtension.canPlaceBlockOnSide" | 
                        "net.minecraft.block.BlockPistonExtension.applyHeadBounds" | 
                        "net.minecraft.block.BlockPistonExtension.isFullCube" | 
                        "net.minecraft.block.BlockPistonExtension.getItem" | 
                        "net.minecraft.block.BlockPistonExtension.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockPistonExtension.createBlockState" | 
                        "net.minecraft.block.BlockPistonExtension.quantityDropped" | 
                        "net.minecraft.block.BlockPistonExtension.addCollisionBoxesToList" | 
                        "net.minecraft.block.BlockPistonExtension.applyCoreBounds" | 
                        "net.minecraft.block.BlockPistonExtension.getStateFromMeta" | 
                        "net.minecraft.block.BlockPistonExtension.breakBlock" | 
                        "net.minecraft.block.BlockPistonExtension.isOpaqueCube" | 
                        "net.minecraft.block.BlockPistonExtension.shouldSideBeRendered" | 
                        "net.minecraft.block.BlockSandStone.getMetaFromState" | 
                        "net.minecraft.block.BlockSandStone.damageDropped" | 
                        "net.minecraft.block.BlockSandStone.getMapColor" | 
                        "net.minecraft.block.BlockSandStone.createBlockState" | 
                        "net.minecraft.block.BlockSandStone.getStateFromMeta" | 
                        "net.minecraft.block.BlockSandStone.getSubBlocks" | 
                        "net.minecraft.world.gen.feature.WorldGenMelon.generate" | 
                        "net.minecraft.entity.item.EntityXPOrb.handleWaterMovement" | 
                        "net.minecraft.entity.item.EntityXPOrb.getXpValue" | 
                        "net.minecraft.entity.item.EntityXPOrb.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityXPOrb.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityXPOrb.entityInit" | 
                        "net.minecraft.entity.item.EntityXPOrb.dealFireDamage" | 
                        "net.minecraft.entity.item.EntityXPOrb.canAttackWithItem" | 
                        "net.minecraft.entity.item.EntityXPOrb.getTextureByXP" | 
                        "net.minecraft.entity.item.EntityXPOrb.canTriggerWalking" | 
                        "net.minecraft.entity.item.EntityXPOrb.attackEntityFrom" | 
                        "net.minecraft.entity.item.EntityXPOrb.getBrightnessForRender" | 
                        "net.minecraft.entity.item.EntityXPOrb.onCollideWithPlayer" | 
                        "net.minecraft.entity.item.EntityXPOrb.onUpdate" | 
                        "net.optifine.entity.model.ModelAdapterMooshroom.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterMooshroom.makeEntityRender" | 
                        "net.minecraft.block.BlockLilyPad.getMetaFromState" | 
                        "net.minecraft.block.BlockLilyPad.getRenderColor" | 
                        "net.minecraft.block.BlockLilyPad.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockLilyPad.colorMultiplier" | 
                        "net.minecraft.block.BlockLilyPad.canPlaceBlockOn" | 
                        "net.minecraft.block.BlockLilyPad.addCollisionBoxesToList" | 
                        "net.minecraft.block.BlockLilyPad.canBlockStay" | 
                        "net.minecraft.block.BlockLilyPad.getBlockColor" | 
                        "net.minecraft.inventory.ContainerBrewingStand$Ingredient.isItemValid" | 
                        "net.minecraft.inventory.ContainerBrewingStand$Ingredient.getSlotStackLimit" | 
                        "net.minecraft.block.BlockBreakable.isOpaqueCube" | 
                        "net.minecraft.block.BlockBreakable.shouldSideBeRendered" | 
                        "net.minecraft.world.biome.BiomeGenEnd.getSkyColorByTemp" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setDragX" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setDragY" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setY" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setOpen" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setX" | 
                        "slice.legacy.clickgui.pane.DropdownPane.getWidth" | 
                        "slice.legacy.clickgui.pane.DropdownPane.isDragging" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setModuleButtons" | 
                        "slice.legacy.clickgui.pane.DropdownPane.mouseReleased" | 
                        "slice.legacy.clickgui.pane.DropdownPane.getHeight" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setCategory" | 
                        "slice.legacy.clickgui.pane.DropdownPane.getModuleButtons" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setOpenHeight" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setDragging" | 
                        "slice.legacy.clickgui.pane.DropdownPane.getCategory" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setWidth" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setHeight" | 
                        "slice.legacy.clickgui.pane.DropdownPane.getOpenHeight" | 
                        "slice.legacy.clickgui.pane.DropdownPane.getX" | 
                        "slice.legacy.clickgui.pane.DropdownPane.getOpenModule" | 
                        "slice.legacy.clickgui.pane.DropdownPane.isOpen" | 
                        "slice.legacy.clickgui.pane.DropdownPane.getY" | 
                        "slice.legacy.clickgui.pane.DropdownPane.mouseClicked" | 
                        "slice.legacy.clickgui.pane.DropdownPane.drawPane" | 
                        "slice.legacy.clickgui.pane.DropdownPane.setOpenModule" | 
                        "slice.legacy.clickgui.pane.DropdownPane.getDragX" | 
                        "slice.legacy.clickgui.pane.DropdownPane.getDragY" | 
                        "net.minecraft.world.gen.NoiseGeneratorImproved.func_76309_a" | 
                        "net.minecraft.world.gen.NoiseGeneratorImproved.populateNoiseArray" | 
                        "net.minecraft.world.gen.NoiseGeneratorImproved.lerp" | 
                        "net.minecraft.world.gen.NoiseGeneratorImproved.grad" | 
                        "net.optifine.gui.GuiQualitySettingsOF.actionPerformed" | 
                        "net.optifine.gui.GuiQualitySettingsOF.initGui" | 
                        "net.optifine.gui.GuiQualitySettingsOF.drawScreen" | 
                        "net.minecraft.village.VillageSiege.spawnZombie" | 
                        "net.minecraft.village.VillageSiege.func_179867_a" | 
                        "net.minecraft.village.VillageSiege.func_75529_b" | 
                        "net.minecraft.village.VillageSiege.tick" | 
                        "net.minecraft.client.gui.inventory.GuiCrafting.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiCrafting.drawGuiContainerBackgroundLayer" | 
                        "net.optifine.http.HttpResponse.getHeaders" | 
                        "net.optifine.http.HttpResponse.getBody" | 
                        "net.optifine.http.HttpResponse.getStatusLine" | 
                        "net.optifine.http.HttpResponse.getStatus" | 
                        "net.optifine.http.HttpResponse.getHeader" | 
                        "net.minecraft.block.BlockCake.getMetaFromState" | 
                        "net.minecraft.block.BlockCake.getBlockLayer" | 
                        "net.minecraft.block.BlockCake.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockCake.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockCake.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockCake.onBlockActivated" | 
                        "net.minecraft.block.BlockCake.isFullCube" | 
                        "net.minecraft.block.BlockCake.getItem" | 
                        "net.minecraft.block.BlockCake.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockCake.getSelectedBoundingBox" | 
                        "net.minecraft.block.BlockCake.canBlockStay" | 
                        "net.minecraft.block.BlockCake.eatCake" | 
                        "net.minecraft.block.BlockCake.hasComparatorInputOverride" | 
                        "net.minecraft.block.BlockCake.getComparatorInputOverride" | 
                        "net.minecraft.block.BlockCake.createBlockState" | 
                        "net.minecraft.block.BlockCake.quantityDropped" | 
                        "net.minecraft.block.BlockCake.onBlockClicked" | 
                        "net.minecraft.block.BlockCake.getStateFromMeta" | 
                        "net.minecraft.block.BlockCake.isOpaqueCube" | 
                        "net.minecraft.block.BlockCake.getItemDropped" | 
                        "net.minecraft.block.BlockCake.setBlockBoundsForItemRender" | 
                        "net.minecraft.block.BlockCarrot.getSeed" | 
                        "net.minecraft.block.BlockCarrot.getCrop" | 
                        "net.minecraft.world.gen.layer.GenLayerSmooth.getInts" | 
                        "net.minecraft.client.model.ModelSlime.render" | 
                        "net.minecraft.pathfinding.PathNavigateSwimmer.pathFollow" | 
                        "net.minecraft.pathfinding.PathNavigateSwimmer.isDirectPathBetweenPoints" | 
                        "net.minecraft.pathfinding.PathNavigateSwimmer.canNavigate" | 
                        "net.minecraft.pathfinding.PathNavigateSwimmer.getEntityPosition" | 
                        "net.minecraft.pathfinding.PathNavigateSwimmer.removeSunnyPath" | 
                        "net.minecraft.pathfinding.PathNavigateSwimmer.getPathFinder" | 
                        "net.minecraft.inventory.ISidedInventory.getSlotsForFace" | 
                        "net.minecraft.inventory.ISidedInventory.canExtractItem" | 
                        "net.minecraft.inventory.ISidedInventory.canInsertItem" | 
                        "net.minecraft.client.particle.EntitySpellParticleFX$InstantFactory.getEntityFX" | 
                        "net.minecraft.world.gen.layer.GenLayerAddMushroomIsland.getInts" | 
                        "net.minecraft.entity.ai.EntityAIOcelotAttack.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIOcelotAttack.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIOcelotAttack.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIOcelotAttack.continueExecuting" | 
                        "net.minecraft.entity.ai.attributes.RangedAttribute.clampValue" | 
                        "net.minecraft.entity.ai.attributes.RangedAttribute.setDescription" | 
                        "net.minecraft.entity.ai.attributes.RangedAttribute.getDescription" | 
                        "net.optifine.reflect.ReflectorClass.isInstance" | 
                        "net.optifine.reflect.ReflectorClass.resolve" | 
                        "net.optifine.reflect.ReflectorClass.getTargetClass" | 
                        "net.optifine.reflect.ReflectorClass.exists" | 
                        "net.optifine.reflect.ReflectorClass.makeField" | 
                        "net.optifine.reflect.ReflectorClass.getTargetClassName" | 
                        "net.optifine.reflect.ReflectorClass.makeMethod" | 
                        "net.minecraft.world.gen.feature.WorldGenSwamp.func_181647_a" | 
                        "net.minecraft.world.gen.feature.WorldGenSwamp.generate" | 
                        "slice.cef.ViewNoGui.init" | 
                        "slice.cef.ViewNoGui.setCefRenderer" | 
                        "slice.cef.ViewNoGui.getPressedKeyMap" | 
                        "slice.cef.ViewNoGui.getPage" | 
                        "slice.cef.ViewNoGui.destroy" | 
                        "slice.cef.ViewNoGui.draw" | 
                        "slice.cef.ViewNoGui.getCefBrowser" | 
                        "slice.cef.ViewNoGui.keyModifiers" | 
                        "slice.cef.ViewNoGui.mouseModifiers" | 
                        "slice.cef.ViewNoGui.onResize" | 
                        "slice.cef.ViewNoGui.getCefRenderer" | 
                        "slice.cef.ViewNoGui.setInit" | 
                        "slice.cef.ViewNoGui.setCefBrowser" | 
                        "slice.cef.ViewNoGui.setPressedKeyMap" | 
                        "slice.cef.ViewNoGui.isInit" | 
                        "slice.cef.ViewNoGui.setPage" | 
                        "com.sliceclient.anticheat.event.AntiCheatEvent.call" | 
                        "com.sliceclient.anticheat.event.AntiCheatEvent.getPlayer" | 
                        "net.minecraft.tileentity.TileEntityBanner$EnumBannerPattern.hasCraftingStack" | 
                        "net.minecraft.tileentity.TileEntityBanner$EnumBannerPattern.getPatternName" | 
                        "net.minecraft.tileentity.TileEntityBanner$EnumBannerPattern.getCraftingStack" | 
                        "net.minecraft.tileentity.TileEntityBanner$EnumBannerPattern.getCraftingLayers" | 
                        "net.minecraft.tileentity.TileEntityBanner$EnumBannerPattern.hasValidCrafting" | 
                        "net.minecraft.tileentity.TileEntityBanner$EnumBannerPattern.getPatternID" | 
                        "net.minecraft.client.renderer.chunk.ListChunkFactory.makeRenderChunk" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.getAverageGroundLevel" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.fillWithBlocks" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.setBlockState" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.func_175846_a" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.getNextComponentNN" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.getNextComponentPP" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.func_175847_a" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.replaceAirAndLiquidDownwards" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.func_180779_c" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.spawnVillagers" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Village.writeStructureToNBT" | 
                        "net.optifine.shaders.uniform.ShaderUniform3f.getValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform3f.onProgramSet" | 
                        "net.optifine.shaders.uniform.ShaderUniform3f.setValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform3f.resetValue" | 
                        "net.minecraft.client.gui.inventory.GuiBeacon$Button.func_146140_b" | 
                        "net.minecraft.client.gui.inventory.GuiBeacon$Button.drawButton" | 
                        "net.minecraft.client.gui.inventory.GuiBeacon$Button.func_146141_c" | 
                        "net.minecraft.world.gen.MapGenCavesHell.func_180705_a" | 
                        "net.minecraft.world.gen.MapGenCavesHell.func_180704_a" | 
                        "net.minecraft.world.gen.MapGenCavesHell.recursiveGenerate" | 
                        "net.minecraft.client.gui.GuiResourcePackSelected.getListHeader" | 
                        "org.cef.handler.CefJSDialogHandlerAdapter.onDialogClosed" | 
                        "org.cef.handler.CefJSDialogHandlerAdapter.onBeforeUnloadDialog" | 
                        "org.cef.handler.CefJSDialogHandlerAdapter.onJSDialog" | 
                        "org.cef.handler.CefJSDialogHandlerAdapter.onResetDialogState" | 
                        "net.minecraft.client.gui.GuiListExtended$IGuiListEntry.mouseReleased" | 
                        "net.minecraft.client.gui.GuiListExtended$IGuiListEntry.drawEntry" | 
                        "net.minecraft.client.gui.GuiListExtended$IGuiListEntry.setSelected" | 
                        "net.minecraft.client.gui.GuiListExtended$IGuiListEntry.mousePressed" | 
                        "net.optifine.render.VboRegion.expandVbo" | 
                        "net.optifine.render.VboRegion.bindBuffer" | 
                        "net.optifine.render.VboRegion.unbindBuffer" | 
                        "net.optifine.render.VboRegion.toBytes" | 
                        "net.optifine.render.VboRegion.finishDraw" | 
                        "net.optifine.render.VboRegion.copyVboData" | 
                        "net.optifine.render.VboRegion.getPositionTop" | 
                        "net.optifine.render.VboRegion.checkRanges" | 
                        "net.optifine.render.VboRegion.deleteGlBuffers" | 
                        "net.optifine.render.VboRegion.drawArrays" | 
                        "net.optifine.render.VboRegion.compactRanges" | 
                        "net.optifine.render.VboRegion.checkVboSize" | 
                        "net.optifine.render.VboRegion.bufferData" | 
                        "net.optifine.render.VboRegion.toVertex" | 
                        "net.minecraft.entity.ai.EntityAIArrowAttack.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIArrowAttack.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIArrowAttack.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIArrowAttack.continueExecuting" | 
                        "net.minecraft.client.renderer.entity.RenderFallingBlock.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderFallingBlock.getEntityTexture" | 
                        "net.minecraft.client.stream.IngestServerTester$IngestTestListener.func_152907_a" | 
                        "net.minecraft.entity.item.EntityTNTPrimed.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityTNTPrimed.canBeCollidedWith" | 
                        "net.minecraft.entity.item.EntityTNTPrimed.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityTNTPrimed.entityInit" | 
                        "net.minecraft.entity.item.EntityTNTPrimed.explode" | 
                        "net.minecraft.entity.item.EntityTNTPrimed.getTntPlacedBy" | 
                        "net.minecraft.entity.item.EntityTNTPrimed.canTriggerWalking" | 
                        "net.minecraft.entity.item.EntityTNTPrimed.getEyeHeight" | 
                        "net.minecraft.entity.item.EntityTNTPrimed.onUpdate" | 
                        "net.minecraft.client.resources.GrassColorReloadListener.onResourceManagerReload" | 
                        "net.minecraft.client.resources.IResourceManagerReloadListener.onResourceManagerReload" | 
                        "net.minecraft.block.BlockGlowstone.getMapColor" | 
                        "net.minecraft.block.BlockGlowstone.quantityDropped" | 
                        "net.minecraft.block.BlockGlowstone.quantityDroppedWithBonus" | 
                        "net.minecraft.block.BlockGlowstone.getItemDropped" | 
                        "net.minecraft.client.gui.ScaledResolution.getScaledHeight" | 
                        "net.minecraft.client.gui.ScaledResolution.getScaledWidth_double" | 
                        "net.minecraft.client.gui.ScaledResolution.getScaleFactor" | 
                        "net.minecraft.client.gui.ScaledResolution.getScaledHeight_double" | 
                        "net.minecraft.client.gui.ScaledResolution.getScaledWidth" | 
                        "net.minecraft.stats.StatFileWriter.readStat" | 
                        "net.minecraft.stats.StatFileWriter.unlockAchievement" | 
                        "net.minecraft.stats.StatFileWriter.func_150870_b" | 
                        "net.minecraft.stats.StatFileWriter.func_150872_a" | 
                        "net.minecraft.stats.StatFileWriter.canUnlockAchievement" | 
                        "net.minecraft.stats.StatFileWriter.func_150874_c" | 
                        "net.minecraft.stats.StatFileWriter.hasAchievementUnlocked" | 
                        "net.minecraft.stats.StatFileWriter.increaseStat" | 
                        "net.minecraft.block.BlockDoublePlant.getMetaFromState" | 
                        "net.minecraft.block.BlockDoublePlant.grow" | 
                        "net.minecraft.block.BlockDoublePlant.damageDropped" | 
                        "net.minecraft.block.BlockDoublePlant.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockDoublePlant.onBlockHarvested" | 
                        "net.minecraft.block.BlockDoublePlant.getVariant" | 
                        "net.minecraft.block.BlockDoublePlant.colorMultiplier" | 
                        "net.minecraft.block.BlockDoublePlant.getOffsetType" | 
                        "net.minecraft.block.BlockDoublePlant.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockDoublePlant.getActualState" | 
                        "net.minecraft.block.BlockDoublePlant.canBlockStay" | 
                        "net.minecraft.block.BlockDoublePlant.getSubBlocks" | 
                        "net.minecraft.block.BlockDoublePlant.placeAt" | 
                        "net.minecraft.block.BlockDoublePlant.createBlockState" | 
                        "net.minecraft.block.BlockDoublePlant.getDamageValue" | 
                        "net.minecraft.block.BlockDoublePlant.checkAndDropBlock" | 
                        "net.minecraft.block.BlockDoublePlant.harvestBlock" | 
                        "net.minecraft.block.BlockDoublePlant.onBlockPlacedBy" | 
                        "net.minecraft.block.BlockDoublePlant.getStateFromMeta" | 
                        "net.minecraft.block.BlockDoublePlant.isReplaceable" | 
                        "net.minecraft.block.BlockDoublePlant.onHarvest" | 
                        "net.minecraft.block.BlockDoublePlant.canUseBonemeal" | 
                        "net.minecraft.block.BlockDoublePlant.getItemDropped" | 
                        "net.minecraft.block.BlockDoublePlant.canGrow" | 
                        "net.minecraft.client.model.ModelOcelot.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelOcelot.setRotationAngles" | 
                        "net.minecraft.client.model.ModelOcelot.render" | 
                        "net.minecraft.world.gen.structure.StructureStart.readFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStart.generateStructure" | 
                        "net.minecraft.world.gen.structure.StructureStart.isSizeableStructure" | 
                        "net.minecraft.world.gen.structure.StructureStart.updateBoundingBox" | 
                        "net.minecraft.world.gen.structure.StructureStart.getChunkPosZ" | 
                        "net.minecraft.world.gen.structure.StructureStart.getBoundingBox" | 
                        "net.minecraft.world.gen.structure.StructureStart.getChunkPosX" | 
                        "net.minecraft.world.gen.structure.StructureStart.writeStructureComponentsToNBT" | 
                        "net.minecraft.world.gen.structure.StructureStart.markAvailableHeight" | 
                        "net.minecraft.world.gen.structure.StructureStart.readStructureComponentsFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStart.getComponents" | 
                        "net.minecraft.world.gen.structure.StructureStart.setRandomHeight" | 
                        "net.minecraft.world.gen.structure.StructureStart.func_175788_a" | 
                        "net.minecraft.world.gen.structure.StructureStart.func_175787_b" | 
                        "net.minecraft.world.gen.structure.StructureStart.writeToNBT" | 
                        "net.optifine.shaders.uniform.ShaderUniform4i.getValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform4i.onProgramSet" | 
                        "net.optifine.shaders.uniform.ShaderUniform4i.setValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform4i.resetValue" | 
                        "net.minecraft.pathfinding.PathNavigateGround.getAvoidsWater" | 
                        "net.minecraft.pathfinding.PathNavigateGround.isDirectPathBetweenPoints" | 
                        "net.minecraft.pathfinding.PathNavigateGround.getPathablePosY" | 
                        "net.minecraft.pathfinding.PathNavigateGround.isPositionClear" | 
                        "net.minecraft.pathfinding.PathNavigateGround.isSafeToStandAt" | 
                        "net.minecraft.pathfinding.PathNavigateGround.removeSunnyPath" | 
                        "net.minecraft.pathfinding.PathNavigateGround.getPathFinder" | 
                        "net.minecraft.pathfinding.PathNavigateGround.setEnterDoors" | 
                        "net.minecraft.pathfinding.PathNavigateGround.getCanSwim" | 
                        "net.minecraft.pathfinding.PathNavigateGround.setCanSwim" | 
                        "net.minecraft.pathfinding.PathNavigateGround.getEnterDoors" | 
                        "net.minecraft.pathfinding.PathNavigateGround.canNavigate" | 
                        "net.minecraft.pathfinding.PathNavigateGround.getEntityPosition" | 
                        "net.minecraft.pathfinding.PathNavigateGround.setAvoidSun" | 
                        "net.minecraft.pathfinding.PathNavigateGround.setAvoidsWater" | 
                        "net.minecraft.pathfinding.PathNavigateGround.setBreakDoors" | 
                        "net.minecraft.world.gen.feature.WorldGenCactus.generate" | 
                        "net.optifine.shaders.uniform.ShaderUniform4f.getValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform4f.onProgramSet" | 
                        "net.optifine.shaders.uniform.ShaderUniform4f.setValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform4f.resetValue" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetSelectionText" | 
                        "org.cef.callback.CefContextMenuParams_N.getLinkUrl" | 
                        "org.cef.callback.CefContextMenuParams_N.getYCoord" | 
                        "org.cef.callback.CefContextMenuParams_N.getTypeFlags" | 
                        "org.cef.callback.CefContextMenuParams_N.N_HasImageContents" | 
                        "org.cef.callback.CefContextMenuParams_N.getMediaType" | 
                        "org.cef.callback.CefContextMenuParams_N.getPageUrl" | 
                        "org.cef.callback.CefContextMenuParams_N.getXCoord" | 
                        "org.cef.callback.CefContextMenuParams_N.isEditable" | 
                        "org.cef.callback.CefContextMenuParams_N.N_IsEditable" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetTypeFlags" | 
                        "org.cef.callback.CefContextMenuParams_N.getDictionarySuggestions" | 
                        "org.cef.callback.CefContextMenuParams_N.N_IsSpellCheckEnabled" | 
                        "org.cef.callback.CefContextMenuParams_N.getUnfilteredLinkUrl" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetMediaStateFlags" | 
                        "org.cef.callback.CefContextMenuParams_N.getMediaStateFlags" | 
                        "org.cef.callback.CefContextMenuParams_N.hasImageContents" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetFrameCharset" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetUnfilteredLinkUrl" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetXCoord" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetSourceUrl" | 
                        "org.cef.callback.CefContextMenuParams_N.getMisspelledWord" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetPageUrl" | 
                        "org.cef.callback.CefContextMenuParams_N.isSpellCheckEnabled" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetFrameUrl" | 
                        "org.cef.callback.CefContextMenuParams_N.getSourceUrl" | 
                        "org.cef.callback.CefContextMenuParams_N.getFrameCharset" | 
                        "org.cef.callback.CefContextMenuParams_N.getFrameUrl" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetYCoord" | 
                        "org.cef.callback.CefContextMenuParams_N.getEditStateFlags" | 
                        "org.cef.callback.CefContextMenuParams_N.getSelectionText" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetEditStateFlags" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetMediaType" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetLinkUrl" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetDictionarySuggestions" | 
                        "org.cef.callback.CefContextMenuParams_N.N_GetMisspelledWord" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$NetherStalkRoom.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$NetherStalkRoom.buildComponent" | 
                        "net.minecraft.client.gui.GuiMemoryErrorScreen.actionPerformed" | 
                        "net.minecraft.client.gui.GuiMemoryErrorScreen.initGui" | 
                        "net.minecraft.client.gui.GuiMemoryErrorScreen.drawScreen" | 
                        "net.minecraft.client.gui.GuiMemoryErrorScreen.keyTyped" | 
                        "net.minecraft.command.server.CommandEmote.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandEmote.getCommandUsage" | 
                        "net.minecraft.command.server.CommandEmote.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandEmote.processCommand" | 
                        "net.minecraft.command.server.CommandEmote.getCommandName" | 
                        "net.optifine.shaders.Program.getName" | 
                        "net.optifine.shaders.Program.resetConfiguration" | 
                        "net.optifine.shaders.Program.setDrawBufSettings" | 
                        "net.optifine.shaders.Program.getIndex" | 
                        "net.optifine.shaders.Program.getAlphaState" | 
                        "net.optifine.shaders.Program.getBuffersFlip" | 
                        "net.optifine.shaders.Program.getId" | 
                        "net.optifine.shaders.Program.resetProperties" | 
                        "net.optifine.shaders.Program.getProgramBackup" | 
                        "net.optifine.shaders.Program.getDrawBuffers" | 
                        "net.optifine.shaders.Program.setBlendState" | 
                        "net.optifine.shaders.Program.setRef" | 
                        "net.optifine.shaders.Program.getRef" | 
                        "net.optifine.shaders.Program.setId" | 
                        "net.optifine.shaders.Program.setRenderScale" | 
                        "net.optifine.shaders.Program.getBlendState" | 
                        "net.optifine.shaders.Program.getDrawBufSettings" | 
                        "net.optifine.shaders.Program.setDrawBuffers" | 
                        "net.optifine.shaders.Program.setCompositeMipmapSetting" | 
                        "net.optifine.shaders.Program.setAlphaState" | 
                        "net.optifine.shaders.Program.getToggleColorTextures" | 
                        "net.optifine.shaders.Program.getCompositeMipmapSetting" | 
                        "net.optifine.shaders.Program.getRealProgramName" | 
                        "net.optifine.shaders.Program.copyFrom" | 
                        "net.optifine.shaders.Program.resetId" | 
                        "net.optifine.shaders.Program.getCountInstances" | 
                        "net.optifine.shaders.Program.getDrawBuffersBuffer" | 
                        "net.optifine.shaders.Program.toString" | 
                        "net.optifine.shaders.Program.setCountInstances" | 
                        "net.optifine.shaders.Program.getRenderScale" | 
                        "net.optifine.shaders.Program.getProgramStage" | 
                        "net.minecraft.block.BlockPrismarine.getMetaFromState" | 
                        "net.minecraft.block.BlockPrismarine.damageDropped" | 
                        "net.minecraft.block.BlockPrismarine.getLocalizedName" | 
                        "net.minecraft.block.BlockPrismarine.getMapColor" | 
                        "net.minecraft.block.BlockPrismarine.createBlockState" | 
                        "net.minecraft.block.BlockPrismarine.getStateFromMeta" | 
                        "net.minecraft.block.BlockPrismarine.getSubBlocks" | 
                        "net.optifine.shaders.config.ShaderProfile.addOptionValues" | 
                        "net.optifine.shaders.config.ShaderProfile.getValue" | 
                        "net.optifine.shaders.config.ShaderProfile.getName" | 
                        "net.optifine.shaders.config.ShaderProfile.isProgramDisabled" | 
                        "net.optifine.shaders.config.ShaderProfile.addDisabledPrograms" | 
                        "net.optifine.shaders.config.ShaderProfile.getDisabledPrograms" | 
                        "net.optifine.shaders.config.ShaderProfile.removeDisabledProgram" | 
                        "net.optifine.shaders.config.ShaderProfile.applyOptionValues" | 
                        "net.optifine.shaders.config.ShaderProfile.addOptionValue" | 
                        "net.optifine.shaders.config.ShaderProfile.getOptions" | 
                        "net.optifine.shaders.config.ShaderProfile.addDisabledProgram" | 
                        "net.minecraft.potion.Potion.getName" | 
                        "net.minecraft.potion.Potion.getStatusIconIndex" | 
                        "net.minecraft.potion.Potion.affectEntity" | 
                        "net.minecraft.potion.Potion.getAttributeModifierMap" | 
                        "net.minecraft.potion.Potion.getAttributeModifierAmount" | 
                        "net.minecraft.potion.Potion.setPotionName" | 
                        "net.minecraft.potion.Potion.applyAttributesModifiersToEntity" | 
                        "net.minecraft.potion.Potion.isReady" | 
                        "net.minecraft.potion.Potion.isInstant" | 
                        "net.minecraft.potion.Potion.setEffectiveness" | 
                        "net.minecraft.potion.Potion.getId" | 
                        "net.minecraft.potion.Potion.isBadEffect" | 
                        "net.minecraft.potion.Potion.isUsable" | 
                        "net.minecraft.potion.Potion.registerPotionAttributeModifier" | 
                        "net.minecraft.potion.Potion.getEffectiveness" | 
                        "net.minecraft.potion.Potion.getLiquidColor" | 
                        "net.minecraft.potion.Potion.performEffect" | 
                        "net.minecraft.potion.Potion.removeAttributesModifiersFromEntity" | 
                        "net.minecraft.potion.Potion.hasStatusIcon" | 
                        "net.minecraft.potion.Potion.setIconIndex" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.getCenter" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.func_175896_b" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.offset" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.intersectsWith" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.getYSize" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.toNBTTagIntArray" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.getZSize" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.toString" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.isVecInside" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.getXSize" | 
                        "net.minecraft.world.gen.structure.StructureBoundingBox.expandTo" | 
                        "slice.legacy.clickgui.setting.settings.ModeButton.setModeValue" | 
                        "slice.legacy.clickgui.setting.settings.ModeButton.mouseClicked" | 
                        "slice.legacy.clickgui.setting.settings.ModeButton.draw" | 
                        "slice.legacy.clickgui.setting.settings.ModeButton.getModeValue" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.set" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.setData" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.setExtSkylightValue" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.setBlocklightArray" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.isEmpty" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.getExtSkylightValue" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.getBlocklightArray" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.getSkylightArray" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.getExtBlocklightValue" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.getNeedsRandomTick" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.setSkylightArray" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.get" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.getYLocation" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.getBlockByExtId" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.removeInvalidBlocks" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.getExtBlockMetadata" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.setExtBlocklightValue" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.getData" | 
                        "net.minecraft.world.chunk.storage.ExtendedBlockStorage.getBlockRefCount" | 
                        "net.minecraft.client.renderer.entity.RenderSpider.getDeathMaxRotation" | 
                        "net.minecraft.client.renderer.entity.RenderSpider.getEntityTexture" | 
                        "net.minecraft.entity.ai.EntityAIAttackOnCollide.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIAttackOnCollide.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIAttackOnCollide.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIAttackOnCollide.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIAttackOnCollide.func_179512_a" | 
                        "net.minecraft.entity.ai.EntityAIAttackOnCollide.continueExecuting" | 
                        "net.minecraft.command.CommandClearInventory.isUsernameIndex" | 
                        "net.minecraft.command.CommandClearInventory.func_147209_d" | 
                        "net.minecraft.command.CommandClearInventory.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandClearInventory.getCommandUsage" | 
                        "net.minecraft.command.CommandClearInventory.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandClearInventory.processCommand" | 
                        "net.minecraft.command.CommandClearInventory.getCommandName" | 
                        "net.minecraft.entity.item.EntityPainting.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityPainting.setPositionAndRotation2" | 
                        "net.minecraft.entity.item.EntityPainting.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityPainting.setLocationAndAngles" | 
                        "net.minecraft.entity.item.EntityPainting.getHeightPixels" | 
                        "net.minecraft.entity.item.EntityPainting.getWidthPixels" | 
                        "net.minecraft.entity.item.EntityPainting.onBroken" | 
                        "net.optifine.shaders.uniform.ShaderUniform1f.getValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform1f.onProgramSet" | 
                        "net.optifine.shaders.uniform.ShaderUniform1f.setValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform1f.resetValue" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam$TeamSelectionObject.getSpectatorName" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam$TeamSelectionObject.func_178662_A_" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam$TeamSelectionObject.func_178663_a" | 
                        "net.minecraft.client.gui.spectator.categories.TeleportToTeam$TeamSelectionObject.func_178661_a" | 
                        "net.minecraft.entity.ai.EntityAIOwnerHurtByTarget.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIOwnerHurtByTarget.startExecuting" | 
                        "net.minecraft.world.ILockableContainer.setLockCode" | 
                        "net.minecraft.world.ILockableContainer.isLocked" | 
                        "net.minecraft.world.ILockableContainer.getLockCode" | 
                        "net.minecraft.client.model.ModelEnderCrystal.render" | 
                        "net.minecraft.block.material.MaterialPortal.blocksLight" | 
                        "net.minecraft.block.material.MaterialPortal.isSolid" | 
                        "net.minecraft.block.material.MaterialPortal.blocksMovement" | 
                        "net.minecraft.block.BlockRailBase.getBlockLayer" | 
                        "net.minecraft.block.BlockRailBase.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockRailBase.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockRailBase.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockRailBase.isFullCube" | 
                        "net.minecraft.block.BlockRailBase.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockRailBase.onBlockAdded" | 
                        "net.minecraft.block.BlockRailBase.func_176564_a" | 
                        "net.minecraft.block.BlockRailBase.getMobilityFlag" | 
                        "net.minecraft.block.BlockRailBase.onNeighborChangedInternal" | 
                        "net.minecraft.block.BlockRailBase.getShapeProperty" | 
                        "net.minecraft.block.BlockRailBase.breakBlock" | 
                        "net.minecraft.block.BlockRailBase.collisionRayTrace" | 
                        "net.minecraft.block.BlockRailBase.isOpaqueCube" | 
                        "net.optifine.model.QuadBounds.getMaxX" | 
                        "net.optifine.model.QuadBounds.getMaxY" | 
                        "net.optifine.model.QuadBounds.isFullQuad" | 
                        "net.optifine.model.QuadBounds.getMinZ" | 
                        "net.optifine.model.QuadBounds.getMaxZ" | 
                        "net.optifine.model.QuadBounds.getMinX" | 
                        "net.optifine.model.QuadBounds.getMinY" | 
                        "net.optifine.model.QuadBounds.isFaceQuad" | 
                        "org.cef.network.CefPostDataElement.isReadOnly" | 
                        "org.cef.network.CefPostDataElement.getType" | 
                        "org.cef.network.CefPostDataElement.setToFile" | 
                        "org.cef.network.CefPostDataElement.setToBytes" | 
                        "org.cef.network.CefPostDataElement.finalize" | 
                        "org.cef.network.CefPostDataElement.toString" | 
                        "org.cef.network.CefPostDataElement.dispose" | 
                        "org.cef.network.CefPostDataElement.setToEmpty" | 
                        "org.cef.network.CefPostDataElement.getFile" | 
                        "org.cef.network.CefPostDataElement.getBytes" | 
                        "org.cef.network.CefPostDataElement.getBytesCount" | 
                        "net.minecraft.enchantment.EnchantmentProtection.getName" | 
                        "net.minecraft.enchantment.EnchantmentProtection.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentProtection.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentProtection.calcModifierDamage" | 
                        "net.minecraft.enchantment.EnchantmentProtection.getMaxLevel" | 
                        "net.minecraft.enchantment.EnchantmentProtection.canApplyTogether" | 
                        "net.minecraft.client.renderer.entity.RenderPainting.renderPainting" | 
                        "net.minecraft.client.renderer.entity.RenderPainting.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderPainting.setLightmap" | 
                        "net.minecraft.client.renderer.entity.RenderPainting.getEntityTexture" | 
                        "net.minecraft.item.ItemFishFood$FishType.getUncookedHealAmount" | 
                        "net.minecraft.item.ItemFishFood$FishType.getMetadata" | 
                        "net.minecraft.item.ItemFishFood$FishType.getCookedSaturationModifier" | 
                        "net.minecraft.item.ItemFishFood$FishType.getCookedHealAmount" | 
                        "net.minecraft.item.ItemFishFood$FishType.canCook" | 
                        "net.minecraft.item.ItemFishFood$FishType.getUncookedSaturationModifier" | 
                        "net.minecraft.item.ItemFishFood$FishType.getUnlocalizedName" | 
                        "net.minecraft.client.renderer.block.statemap.DefaultStateMapper.getModelResourceLocation" | 
                        "net.minecraft.client.renderer.entity.RenderArrow.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderArrow.getEntityTexture" | 
                        "net.optifine.entity.model.IEntityRenderer.setLocationTextureCustom" | 
                        "net.optifine.entity.model.IEntityRenderer.setEntityClass" | 
                        "net.optifine.entity.model.IEntityRenderer.getLocationTextureCustom" | 
                        "net.optifine.entity.model.IEntityRenderer.getEntityClass" | 
                        "net.minecraft.nbt.NBTTagIntArray.read" | 
                        "net.minecraft.nbt.NBTTagIntArray.hashCode" | 
                        "net.minecraft.nbt.NBTTagIntArray.equals" | 
                        "net.minecraft.nbt.NBTTagIntArray.toString" | 
                        "net.minecraft.nbt.NBTTagIntArray.getId" | 
                        "net.minecraft.nbt.NBTTagIntArray.copy" | 
                        "net.minecraft.nbt.NBTTagIntArray.write" | 
                        "net.minecraft.nbt.NBTTagIntArray.getIntArray" | 
                        "net.optifine.shaders.uniform.CustomUniforms.resetCache" | 
                        "net.optifine.shaders.uniform.CustomUniforms.update" | 
                        "net.optifine.shaders.uniform.CustomUniforms.reset" | 
                        "net.optifine.shaders.uniform.CustomUniforms.setProgram" | 
                        "net.minecraft.client.gui.inventory.GuiScreenHorseInventory.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiScreenHorseInventory.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiScreenHorseInventory.drawScreen" | 
                        "net.optifine.shaders.uniform.ShaderUniform2f.getValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform2f.onProgramSet" | 
                        "net.optifine.shaders.uniform.ShaderUniform2f.setValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform2f.resetValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform2i.getValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform2i.onProgramSet" | 
                        "net.optifine.shaders.uniform.ShaderUniform2i.setValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform2i.resetValue" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.setY" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.setX" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.setPre" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.isPre" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.setLastZ" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.setLastY" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.setLastX" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.setZ" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.setOnGround" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.setYaw" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.getLastY" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.getYaw" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.getLastX" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.getX" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.getY" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.getLastZ" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.getPitch" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.getZ" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.setPitch" | 
                        "com.sliceclient.anticheat.event.events.PlayerAntiCheatUpdateEvent.isOnGround" | 
                        "org.cef.handler.CefRenderHandler.startDragging" | 
                        "org.cef.handler.CefRenderHandler.onPopupSize" | 
                        "org.cef.handler.CefRenderHandler.getScreenPoint" | 
                        "org.cef.handler.CefRenderHandler.onPaint" | 
                        "org.cef.handler.CefRenderHandler.onPopupShow" | 
                        "org.cef.handler.CefRenderHandler.onCursorChange" | 
                        "org.cef.handler.CefRenderHandler.updateDragCursor" | 
                        "org.cef.handler.CefRenderHandler.getScreenInfo" | 
                        "org.cef.handler.CefRenderHandler.getViewRect" | 
                        "net.minecraft.command.CommandEffect.getAllUsernames" | 
                        "net.minecraft.command.CommandEffect.isUsernameIndex" | 
                        "net.minecraft.command.CommandEffect.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandEffect.getCommandUsage" | 
                        "net.minecraft.command.CommandEffect.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandEffect.processCommand" | 
                        "net.minecraft.command.CommandEffect.getCommandName" | 
                        "net.minecraft.util.IChatComponent.getFormattedText" | 
                        "net.minecraft.util.IChatComponent.getUnformattedText" | 
                        "net.minecraft.util.IChatComponent.appendSibling" | 
                        "net.minecraft.util.IChatComponent.createCopy" | 
                        "net.minecraft.util.IChatComponent.getChatStyle" | 
                        "net.minecraft.util.IChatComponent.getSiblings" | 
                        "net.minecraft.util.IChatComponent.appendText" | 
                        "net.minecraft.util.IChatComponent.setChatStyle" | 
                        "net.minecraft.util.IChatComponent.getUnformattedTextForChat" | 
                        "org.cef.handler.CefScreenInfo.Set" | 
                        "net.optifine.shaders.uniform.ShaderUniform1i.getValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform1i.onProgramSet" | 
                        "net.optifine.shaders.uniform.ShaderUniform1i.setValue" | 
                        "net.optifine.shaders.uniform.ShaderUniform1i.resetValue" | 
                        "org.cef.network.CefResponse.getMimeType" | 
                        "org.cef.network.CefResponse.setHeaderMap" | 
                        "org.cef.network.CefResponse.setMimeType" | 
                        "org.cef.network.CefResponse.setHeaderByName" | 
                        "org.cef.network.CefResponse.getStatus" | 
                        "org.cef.network.CefResponse.setStatusText" | 
                        "org.cef.network.CefResponse.setStatus" | 
                        "org.cef.network.CefResponse.getHeaderMap" | 
                        "org.cef.network.CefResponse.getError" | 
                        "org.cef.network.CefResponse.isReadOnly" | 
                        "org.cef.network.CefResponse.setError" | 
                        "org.cef.network.CefResponse.getHeaderByName" | 
                        "org.cef.network.CefResponse.finalize" | 
                        "org.cef.network.CefResponse.toString" | 
                        "org.cef.network.CefResponse.dispose" | 
                        "org.cef.network.CefResponse.getStatusText" | 
                        "net.minecraft.item.crafting.RecipesBanners.addRecipes" | 
                        "net.minecraft.network.status.INetHandlerStatusServer.processPing" | 
                        "net.minecraft.network.status.INetHandlerStatusServer.processServerQuery" | 
                        "net.minecraft.client.particle.EntityNoteFX$Factory.getEntityFX" | 
                        "net.minecraft.client.gui.GuiPlayerTabOverlay$PlayerComparator.compare" | 
                        "net.minecraft.client.renderer.entity.layers.LayerWolfCollar.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerWolfCollar.shouldCombineTextures" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$DoubleXYRoom.addComponentParts" | 
                        "net.minecraft.command.server.CommandWhitelist.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandWhitelist.getCommandUsage" | 
                        "net.minecraft.command.server.CommandWhitelist.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandWhitelist.processCommand" | 
                        "net.minecraft.command.server.CommandWhitelist.getCommandName" | 
                        "net.optifine.entity.model.ModelAdapterRabbit.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterRabbit.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterRabbit.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterRabbit.getModelRendererNames" | 
                        "net.minecraft.client.renderer.WorldRenderer$State.getVertexFormat" | 
                        "net.minecraft.client.renderer.WorldRenderer$State.getRawBuffer" | 
                        "net.minecraft.client.renderer.WorldRenderer$State.getVertexCount" | 
                        "net.minecraft.entity.monster.EntitySpider$AISpiderAttack.func_179512_a" | 
                        "net.minecraft.entity.monster.EntitySpider$AISpiderAttack.continueExecuting" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSlimeGel.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSlimeGel.shouldCombineTextures" | 
                        "net.minecraft.inventory.ContainerChest.onContainerClosed" | 
                        "net.minecraft.inventory.ContainerChest.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerChest.getLowerChestInventory" | 
                        "net.minecraft.inventory.ContainerChest.canInteractWith" | 
                        "net.minecraft.client.gui.GuiMerchant$MerchantButton.drawButton" | 
                        "net.minecraft.world.gen.feature.WorldGenGlowStone1.generate" | 
                        "net.optifine.util.LockCounter.unlock" | 
                        "net.optifine.util.LockCounter.isLocked" | 
                        "net.optifine.util.LockCounter.lock" | 
                        "net.optifine.util.LockCounter.toString" | 
                        "net.optifine.util.LockCounter.getLockCount" | 
                        "net.minecraft.client.resources.data.TextureMetadataSection.getTextureBlur" | 
                        "net.minecraft.client.resources.data.TextureMetadataSection.getTextureClamp" | 
                        "net.minecraft.client.resources.data.TextureMetadataSection.getListMipmaps" | 
                        "net.minecraft.world.gen.feature.WorldGenGlowStone2.generate" | 
                        "org.cef.handler.CefWindowHandlerAdapter.onMouseEvent" | 
                        "org.cef.handler.CefWindowHandlerAdapter.getRect" | 
                        "net.minecraft.command.server.CommandSetBlock.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandSetBlock.getCommandUsage" | 
                        "net.minecraft.command.server.CommandSetBlock.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandSetBlock.processCommand" | 
                        "net.minecraft.command.server.CommandSetBlock.getCommandName" | 
                        "net.minecraft.world.DifficultyInstance.getAdditionalDifficulty" | 
                        "net.minecraft.world.DifficultyInstance.getClampedAdditionalDifficulty" | 
                        "net.minecraft.world.DifficultyInstance.calculateAdditionalDifficulty" | 
                        "net.minecraft.server.management.ItemInWorldManager.isCreative" | 
                        "net.minecraft.server.management.ItemInWorldManager.blockRemoving" | 
                        "net.minecraft.server.management.ItemInWorldManager.getGameType" | 
                        "net.minecraft.server.management.ItemInWorldManager.initializeGameType" | 
                        "net.minecraft.server.management.ItemInWorldManager.survivalOrAdventure" | 
                        "net.minecraft.server.management.ItemInWorldManager.removeBlock" | 
                        "net.minecraft.server.management.ItemInWorldManager.updateBlockRemoving" | 
                        "net.minecraft.server.management.ItemInWorldManager.activateBlockOrUseItem" | 
                        "net.minecraft.server.management.ItemInWorldManager.tryUseItem" | 
                        "net.minecraft.server.management.ItemInWorldManager.setGameType" | 
                        "net.minecraft.server.management.ItemInWorldManager.onBlockClicked" | 
                        "net.minecraft.server.management.ItemInWorldManager.tryHarvestBlock" | 
                        "net.minecraft.server.management.ItemInWorldManager.setWorld" | 
                        "net.minecraft.server.management.ItemInWorldManager.cancelDestroyingBlock" | 
                        "net.optifine.shaders.config.ExpressionShaderOptionSwitch.eval" | 
                        "net.optifine.shaders.config.ExpressionShaderOptionSwitch.getExpressionType" | 
                        "net.optifine.shaders.config.ExpressionShaderOptionSwitch.toString" | 
                        "org.cef.handler.CefRequestHandler.onQuotaRequest" | 
                        "org.cef.handler.CefRequestHandler.getAuthCredentials" | 
                        "org.cef.handler.CefRequestHandler.onCertificateError" | 
                        "org.cef.handler.CefRequestHandler.onRenderProcessTerminated" | 
                        "org.cef.handler.CefRequestHandler.onBeforeBrowse" | 
                        "org.cef.handler.CefRequestHandler.onOpenURLFromTab" | 
                        "org.cef.handler.CefRequestHandler.getResourceRequestHandler" | 
                        "net.minecraft.enchantment.EnchantmentArrowInfinite.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentArrowInfinite.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentArrowInfinite.getMaxLevel" | 
                        "net.minecraft.client.audio.SoundEventAccessor.getWeight" | 
                        "net.minecraft.client.audio.SoundEventAccessor.cloneEntry" | 
                        "net.minecraft.entity.passive.EntityRabbit$AIRaidFarm.updateTask" | 
                        "net.minecraft.entity.passive.EntityRabbit$AIRaidFarm.resetTask" | 
                        "net.minecraft.entity.passive.EntityRabbit$AIRaidFarm.shouldMoveTo" | 
                        "net.minecraft.entity.passive.EntityRabbit$AIRaidFarm.shouldExecute" | 
                        "net.minecraft.entity.passive.EntityRabbit$AIRaidFarm.startExecuting" | 
                        "net.minecraft.entity.passive.EntityRabbit$AIRaidFarm.continueExecuting" | 
                        "net.minecraft.block.BlockStairs$EnumHalf.getName" | 
                        "net.minecraft.block.BlockStairs$EnumHalf.toString" | 
                        "net.minecraft.client.gui.GuiFlatPresets$ListSlot.elementClicked" | 
                        "net.minecraft.client.gui.GuiFlatPresets$ListSlot.getSize" | 
                        "net.minecraft.client.gui.GuiFlatPresets$ListSlot.drawSlot" | 
                        "net.minecraft.client.gui.GuiFlatPresets$ListSlot.drawBackground" | 
                        "net.minecraft.client.gui.GuiFlatPresets$ListSlot.func_148173_e" | 
                        "net.minecraft.client.gui.GuiFlatPresets$ListSlot.isSelected" | 
                        "net.minecraft.client.gui.GuiFlatPresets$ListSlot.func_178054_a" | 
                        "net.minecraft.client.gui.GuiFlatPresets$ListSlot.func_148171_c" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Throne.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Throne.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Throne.writeStructureToNBT" | 
                        "net.minecraft.block.Block$SoundType.getBreakSound" | 
                        "net.minecraft.block.Block$SoundType.getStepSound" | 
                        "net.minecraft.block.Block$SoundType.getVolume" | 
                        "net.minecraft.block.Block$SoundType.getPlaceSound" | 
                        "net.minecraft.block.Block$SoundType.getFrequency" | 
                        "net.minecraft.block.BlockLeaves.getBlockLayer" | 
                        "net.minecraft.block.BlockLeaves.randomDisplayTick" | 
                        "net.minecraft.block.BlockLeaves.colorMultiplier" | 
                        "net.minecraft.block.BlockLeaves.getSaplingDropChance" | 
                        "net.minecraft.block.BlockLeaves.destroy" | 
                        "net.minecraft.block.BlockLeaves.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockLeaves.getBlockColor" | 
                        "net.minecraft.block.BlockLeaves.getRenderColor" | 
                        "net.minecraft.block.BlockLeaves.getWoodType" | 
                        "net.minecraft.block.BlockLeaves.quantityDropped" | 
                        "net.minecraft.block.BlockLeaves.setGraphicsLevel" | 
                        "net.minecraft.block.BlockLeaves.dropApple" | 
                        "net.minecraft.block.BlockLeaves.isVisuallyOpaque" | 
                        "net.minecraft.block.BlockLeaves.updateTick" | 
                        "net.minecraft.block.BlockLeaves.breakBlock" | 
                        "net.minecraft.block.BlockLeaves.isOpaqueCube" | 
                        "net.minecraft.block.BlockLeaves.getItemDropped" | 
                        "net.minecraft.block.BlockNetherWart.getMetaFromState" | 
                        "net.minecraft.block.BlockNetherWart.createBlockState" | 
                        "net.minecraft.block.BlockNetherWart.quantityDropped" | 
                        "net.minecraft.block.BlockNetherWart.canPlaceBlockOn" | 
                        "net.minecraft.block.BlockNetherWart.getItem" | 
                        "net.minecraft.block.BlockNetherWart.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockNetherWart.getStateFromMeta" | 
                        "net.minecraft.block.BlockNetherWart.updateTick" | 
                        "net.minecraft.block.BlockNetherWart.getItemDropped" | 
                        "net.minecraft.block.BlockNetherWart.canBlockStay" | 
                        "net.minecraft.command.server.CommandStop.getCommandUsage" | 
                        "net.minecraft.command.server.CommandStop.processCommand" | 
                        "net.minecraft.command.server.CommandStop.getCommandName" | 
                        "net.optifine.entity.model.ModelAdapterPigZombie.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterPigZombie.makeEntityRender" | 
                        "net.minecraft.command.CommandShowSeed.canCommandSenderUseCommand" | 
                        "net.minecraft.command.CommandShowSeed.getCommandUsage" | 
                        "net.minecraft.command.CommandShowSeed.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandShowSeed.processCommand" | 
                        "net.minecraft.command.CommandShowSeed.getCommandName" | 
                        "net.minecraft.world.ChunkCoordIntPair.getZEnd" | 
                        "net.minecraft.world.ChunkCoordIntPair.getZStart" | 
                        "net.minecraft.world.ChunkCoordIntPair.getCenterBlock" | 
                        "net.minecraft.world.ChunkCoordIntPair.getBlock" | 
                        "net.minecraft.world.ChunkCoordIntPair.getCenterXPos" | 
                        "net.minecraft.world.ChunkCoordIntPair.getXStart" | 
                        "net.minecraft.world.ChunkCoordIntPair.hashCode" | 
                        "net.minecraft.world.ChunkCoordIntPair.equals" | 
                        "net.minecraft.world.ChunkCoordIntPair.toString" | 
                        "net.minecraft.world.ChunkCoordIntPair.getCenterZPosition" | 
                        "net.minecraft.world.ChunkCoordIntPair.getXEnd" | 
                        "net.minecraft.util.EnchantmentNameParts.reseedRandomGenerator" | 
                        "net.minecraft.util.EnchantmentNameParts.generateNewRandomName" | 
                        "net.minecraft.block.material.MaterialLogic.blocksLight" | 
                        "net.minecraft.block.material.MaterialLogic.isSolid" | 
                        "net.minecraft.block.material.MaterialLogic.blocksMovement" | 
                        "net.minecraft.entity.player.EntityPlayer$EnumChatVisibility.getChatVisibility" | 
                        "net.minecraft.entity.player.EntityPlayer$EnumChatVisibility.getResourceKey" | 
                        "net.minecraft.command.CommandClone.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandClone.getCommandUsage" | 
                        "net.minecraft.command.CommandClone.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandClone.processCommand" | 
                        "net.minecraft.command.CommandClone.getCommandName" | 
                        "net.minecraft.client.gui.stream.GuiStreamOptions.actionPerformed" | 
                        "net.minecraft.client.gui.stream.GuiStreamOptions.initGui" | 
                        "net.minecraft.client.gui.stream.GuiStreamOptions.drawScreen" | 
                        "net.minecraft.world.biome.BiomeGenSavanna.decorate" | 
                        "net.minecraft.world.biome.BiomeGenSavanna.createMutatedBiome" | 
                        "net.minecraft.world.biome.BiomeGenSavanna.genBigTreeChance" | 
                        "net.minecraft.client.gui.GuiOptionSlider.mouseReleased" | 
                        "net.minecraft.client.gui.GuiOptionSlider.mouseDragged" | 
                        "net.minecraft.client.gui.GuiOptionSlider.getHoverState" | 
                        "net.minecraft.client.gui.GuiOptionSlider.mousePressed" | 
                        "net.minecraft.nbt.NBTTagString.read" | 
                        "net.minecraft.nbt.NBTTagString.hashCode" | 
                        "net.minecraft.nbt.NBTTagString.equals" | 
                        "net.minecraft.nbt.NBTTagString.toString" | 
                        "net.minecraft.nbt.NBTTagString.getId" | 
                        "net.minecraft.nbt.NBTTagString.copy" | 
                        "net.minecraft.nbt.NBTTagString.getString" | 
                        "net.minecraft.nbt.NBTTagString.write" | 
                        "net.minecraft.nbt.NBTTagString.hasNoTags" | 
                        "net.minecraft.util.LazyLoadBase.getValue" | 
                        "net.minecraft.util.LazyLoadBase.load" | 
                        "org.cef.misc.BoolRef.set" | 
                        "org.cef.misc.BoolRef.get" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Straight.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Straight.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Straight.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Straight.writeStructureToNBT" | 
                        "net.minecraft.entity.item.EntityEnderPearl.onImpact" | 
                        "net.minecraft.entity.item.EntityEnderPearl.onUpdate" | 
                        "net.minecraft.potion.PotionHealthBoost.removeAttributesModifiersFromEntity" | 
                        "net.minecraft.client.gui.GuiOptions.actionPerformed" | 
                        "net.minecraft.client.gui.GuiOptions.confirmClicked" | 
                        "net.minecraft.client.gui.GuiOptions.initGui" | 
                        "net.minecraft.client.gui.GuiOptions.drawScreen" | 
                        "net.minecraft.client.gui.GuiOptions.func_175355_a" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Prison.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Prison.buildComponent" | 
                        "net.minecraft.util.ClassInheritanceMultiMap.add" | 
                        "net.minecraft.util.ClassInheritanceMultiMap.iterator" | 
                        "net.minecraft.util.ClassInheritanceMultiMap.contains" | 
                        "net.minecraft.util.ClassInheritanceMultiMap.size" | 
                        "net.minecraft.util.ClassInheritanceMultiMap.addForClass" | 
                        "net.minecraft.util.ClassInheritanceMultiMap.getByClass" | 
                        "net.minecraft.util.ClassInheritanceMultiMap.createLookup" | 
                        "net.minecraft.util.ClassInheritanceMultiMap.isEmpty" | 
                        "net.minecraft.util.ClassInheritanceMultiMap.remove" | 
                        "net.minecraft.util.ClassInheritanceMultiMap.initializeClassLookup" | 
                        "net.minecraft.world.chunk.storage.RegionFile$ChunkBuffer.close" | 
                        "net.minecraft.client.audio.MovingSound.isDonePlaying" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator.func_178397_a" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator.makeItemModel" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator.func_178396_a" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator.func_178395_a" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator.func_178394_a" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator.func_178393_a" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator.func_178391_a" | 
                        "net.minecraft.world.storage.IThreadedFileIO.writeNextIO" | 
                        "net.minecraft.world.IBlockAccess.extendedLevelsInChunkCache" | 
                        "net.minecraft.world.IBlockAccess.getBiomeGenForCoords" | 
                        "net.minecraft.world.IBlockAccess.getTileEntity" | 
                        "net.minecraft.world.IBlockAccess.getCombinedLight" | 
                        "net.minecraft.world.IBlockAccess.isAirBlock" | 
                        "net.minecraft.world.IBlockAccess.getStrongPower" | 
                        "net.minecraft.world.IBlockAccess.getBlockState" | 
                        "net.minecraft.world.IBlockAccess.getWorldType" | 
                        "net.minecraft.client.particle.EntityHugeExplodeFX$Factory.getEntityFX" | 
                        "net.minecraft.client.resources.model.IBakedModel.isAmbientOcclusion" | 
                        "net.minecraft.client.resources.model.IBakedModel.getItemCameraTransforms" | 
                        "net.minecraft.client.resources.model.IBakedModel.getGeneralQuads" | 
                        "net.minecraft.client.resources.model.IBakedModel.isGui3d" | 
                        "net.minecraft.client.resources.model.IBakedModel.isBuiltInRenderer" | 
                        "net.minecraft.client.resources.model.IBakedModel.getFaceQuads" | 
                        "net.minecraft.client.resources.model.IBakedModel.getParticleTexture" | 
                        "slice.event.events.EventEntityRender.setPartialTicks" | 
                        "slice.event.events.EventEntityRender.setPre" | 
                        "slice.event.events.EventEntityRender.isPre" | 
                        "slice.event.events.EventEntityRender.getPartialTicks" | 
                        "slice.event.events.EventEntityRender.getEntity" | 
                        "slice.event.events.EventEntityRender.setEntity" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiButtonEntry.func_178940_a" | 
                        "net.optifine.entity.model.ModelAdapterBanner.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterBanner.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterBanner.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterBanner.getModelRendererNames" | 
                        "net.minecraft.client.gui.MapItemRenderer$Instance.updateMapTexture" | 
                        "net.minecraft.client.gui.MapItemRenderer$Instance.render" | 
                        "net.minecraft.item.crafting.RecipesIngots.addRecipes" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel$Builder.addFaceQuad" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel$Builder.addGeneralBreakingFours" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel$Builder.setTexture" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel$Builder.makeBakedModel" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel$Builder.addFaceBreakingFours" | 
                        "net.minecraft.client.resources.model.SimpleBakedModel$Builder.addGeneralQuad" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel$Builder.add" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel$Builder.build" | 
                        "net.minecraft.client.resources.model.WeightedBakedModel$Builder.first" | 
                        "net.minecraft.client.gui.GuiControls.mouseReleased" | 
                        "net.minecraft.client.gui.GuiControls.actionPerformed" | 
                        "net.minecraft.client.gui.GuiControls.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiControls.mouseClicked" | 
                        "net.minecraft.client.gui.GuiControls.initGui" | 
                        "net.minecraft.client.gui.GuiControls.drawScreen" | 
                        "net.minecraft.client.gui.GuiControls.keyTyped" | 
                        "net.minecraft.client.particle.EntityDropParticleFX$LavaFactory.getEntityFX" | 
                        "org.cef.callback.CefDownloadItemCallback_N.resume" | 
                        "org.cef.callback.CefDownloadItemCallback_N.cancel" | 
                        "org.cef.callback.CefDownloadItemCallback_N.N_Resume" | 
                        "org.cef.callback.CefDownloadItemCallback_N.N_Cancel" | 
                        "org.cef.callback.CefDownloadItemCallback_N.N_Pause" | 
                        "org.cef.callback.CefDownloadItemCallback_N.N_Dispose" | 
                        "org.cef.callback.CefDownloadItemCallback_N.finalize" | 
                        "org.cef.callback.CefDownloadItemCallback_N.pause" | 
                        "net.minecraft.nbt.NBTSizeTracker.read" | 
                        "net.minecraft.client.renderer.texture.Stitcher.addSprite" | 
                        "net.minecraft.client.renderer.texture.Stitcher.getCurrentHeight" | 
                        "net.minecraft.client.renderer.texture.Stitcher.doStitch" | 
                        "net.minecraft.client.renderer.texture.Stitcher.allocateSlot" | 
                        "net.minecraft.client.renderer.texture.Stitcher.getCurrentWidth" | 
                        "net.minecraft.client.renderer.texture.Stitcher.getStichSlots" | 
                        "net.minecraft.client.renderer.texture.Stitcher.expandAndAllocateSlot" | 
                        "org.cef.callback.CefContextMenuParams.getMisspelledWord" | 
                        "org.cef.callback.CefContextMenuParams.isSpellCheckEnabled" | 
                        "org.cef.callback.CefContextMenuParams.getLinkUrl" | 
                        "org.cef.callback.CefContextMenuParams.getYCoord" | 
                        "org.cef.callback.CefContextMenuParams.getTypeFlags" | 
                        "org.cef.callback.CefContextMenuParams.getMediaType" | 
                        "org.cef.callback.CefContextMenuParams.getPageUrl" | 
                        "org.cef.callback.CefContextMenuParams.getSourceUrl" | 
                        "org.cef.callback.CefContextMenuParams.getFrameCharset" | 
                        "org.cef.callback.CefContextMenuParams.getXCoord" | 
                        "org.cef.callback.CefContextMenuParams.isEditable" | 
                        "org.cef.callback.CefContextMenuParams.getFrameUrl" | 
                        "org.cef.callback.CefContextMenuParams.getDictionarySuggestions" | 
                        "org.cef.callback.CefContextMenuParams.getEditStateFlags" | 
                        "org.cef.callback.CefContextMenuParams.getSelectionText" | 
                        "org.cef.callback.CefContextMenuParams.getUnfilteredLinkUrl" | 
                        "org.cef.callback.CefContextMenuParams.getMediaStateFlags" | 
                        "org.cef.callback.CefContextMenuParams.hasImageContents" | 
                        "net.minecraft.client.gui.inventory.CreativeCrafting.sendProgressBarUpdate" | 
                        "net.minecraft.client.gui.inventory.CreativeCrafting.sendAllWindowProperties" | 
                        "net.minecraft.client.gui.inventory.CreativeCrafting.sendSlotContents" | 
                        "net.minecraft.client.gui.inventory.CreativeCrafting.updateCraftingInventory" | 
                        "net.minecraft.client.renderer.tileentity.RenderEnderCrystal.doRender" | 
                        "net.minecraft.client.renderer.tileentity.RenderEnderCrystal.getEntityTexture" | 
                        "net.minecraft.pathfinding.PathNavigate.tryMoveToXYZ" | 
                        "net.minecraft.pathfinding.PathNavigate.getPathSearchRange" | 
                        "net.minecraft.pathfinding.PathNavigate.getPathToEntityLiving" | 
                        "net.minecraft.pathfinding.PathNavigate.isDirectPathBetweenPoints" | 
                        "net.minecraft.pathfinding.PathNavigate.isInLiquid" | 
                        "net.minecraft.pathfinding.PathNavigate.setPath" | 
                        "net.minecraft.pathfinding.PathNavigate.clearPathEntity" | 
                        "net.minecraft.pathfinding.PathNavigate.getPathToXYZ" | 
                        "net.minecraft.pathfinding.PathNavigate.removeSunnyPath" | 
                        "net.minecraft.pathfinding.PathNavigate.tryMoveToEntityLiving" | 
                        "net.minecraft.pathfinding.PathNavigate.getPathFinder" | 
                        "net.minecraft.pathfinding.PathNavigate.getPathToPos" | 
                        "net.minecraft.pathfinding.PathNavigate.noPath" | 
                        "net.minecraft.pathfinding.PathNavigate.setSpeed" | 
                        "net.minecraft.pathfinding.PathNavigate.checkForStuck" | 
                        "net.minecraft.pathfinding.PathNavigate.pathFollow" | 
                        "net.minecraft.pathfinding.PathNavigate.getPath" | 
                        "net.minecraft.pathfinding.PathNavigate.onUpdateNavigation" | 
                        "net.minecraft.pathfinding.PathNavigate.canNavigate" | 
                        "net.minecraft.pathfinding.PathNavigate.setHeightRequirement" | 
                        "net.minecraft.pathfinding.PathNavigate.getEntityPosition" | 
                        "net.minecraft.command.server.CommandSetDefaultSpawnpoint.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandSetDefaultSpawnpoint.getCommandUsage" | 
                        "net.minecraft.command.server.CommandSetDefaultSpawnpoint.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandSetDefaultSpawnpoint.processCommand" | 
                        "net.minecraft.command.server.CommandSetDefaultSpawnpoint.getCommandName" | 
                        "net.minecraft.block.BlockVine.getMetaFromState" | 
                        "net.minecraft.block.BlockVine.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockVine.getActualState" | 
                        "net.minecraft.block.BlockVine.recheckGrownSides" | 
                        "net.minecraft.block.BlockVine.canPlaceOn" | 
                        "net.minecraft.block.BlockVine.quantityDropped" | 
                        "net.minecraft.block.BlockVine.getStateFromMeta" | 
                        "net.minecraft.block.BlockVine.isReplaceable" | 
                        "net.minecraft.block.BlockVine.updateTick" | 
                        "net.minecraft.block.BlockVine.setBlockBoundsForItemRender" | 
                        "net.minecraft.block.BlockVine.getBlockLayer" | 
                        "net.minecraft.block.BlockVine.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockVine.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockVine.canPlaceBlockOnSide" | 
                        "net.minecraft.block.BlockVine.colorMultiplier" | 
                        "net.minecraft.block.BlockVine.isFullCube" | 
                        "net.minecraft.block.BlockVine.getBlockColor" | 
                        "net.minecraft.block.BlockVine.getRenderColor" | 
                        "net.minecraft.block.BlockVine.createBlockState" | 
                        "net.minecraft.block.BlockVine.harvestBlock" | 
                        "net.minecraft.block.BlockVine.isOpaqueCube" | 
                        "net.minecraft.block.BlockVine.getItemDropped" | 
                        "net.minecraft.block.BlockVine.onBlockPlaced" | 
                        "net.minecraft.entity.ai.EntityAINearestAttackableTarget$Sorter.compare" | 
                        "net.optifine.entity.model.ModelAdapterPig.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterPig.makeEntityRender" | 
                        "org.cef.CefSettings$ColorType.clone" | 
                        "org.cef.CefSettings$ColorType.getColor" | 
                        "net.optifine.entity.model.ModelAdapterCow.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterCow.makeEntityRender" | 
                        "net.minecraft.block.BlockRail.getMetaFromState" | 
                        "net.minecraft.block.BlockRail.createBlockState" | 
                        "net.minecraft.block.BlockRail.onNeighborChangedInternal" | 
                        "net.minecraft.block.BlockRail.getShapeProperty" | 
                        "net.minecraft.block.BlockRail.getStateFromMeta" | 
                        "net.minecraft.client.util.JsonException$Entry.func_151373_a" | 
                        "net.minecraft.client.util.JsonException$Entry.func_151372_b" | 
                        "net.minecraft.client.util.JsonException$Entry.toString" | 
                        "net.minecraft.world.chunk.IChunkProvider.getPossibleCreatures" | 
                        "net.minecraft.world.chunk.IChunkProvider.canSave" | 
                        "net.minecraft.world.chunk.IChunkProvider.unloadQueuedChunks" | 
                        "net.minecraft.world.chunk.IChunkProvider.saveChunks" | 
                        "net.minecraft.world.chunk.IChunkProvider.populate" | 
                        "net.minecraft.world.chunk.IChunkProvider.provideChunk" | 
                        "net.minecraft.world.chunk.IChunkProvider.populateChunk" | 
                        "net.minecraft.world.chunk.IChunkProvider.getStrongholdGen" | 
                        "net.minecraft.world.chunk.IChunkProvider.saveExtraData" | 
                        "net.minecraft.world.chunk.IChunkProvider.recreateStructures" | 
                        "net.minecraft.world.chunk.IChunkProvider.chunkExists" | 
                        "net.minecraft.world.chunk.IChunkProvider.getLoadedChunkCount" | 
                        "net.minecraft.world.chunk.IChunkProvider.makeString" | 
                        "net.minecraft.item.crafting.RecipesMapCloning.getRecipeOutput" | 
                        "net.minecraft.item.crafting.RecipesMapCloning.getRemainingItems" | 
                        "net.minecraft.item.crafting.RecipesMapCloning.getCraftingResult" | 
                        "net.minecraft.item.crafting.RecipesMapCloning.getRecipeSize" | 
                        "net.minecraft.item.crafting.RecipesMapCloning.matches" | 
                        "net.optifine.http.HttpPipelineReceiver.readResponse" | 
                        "net.optifine.http.HttpPipelineReceiver.readFull" | 
                        "net.optifine.http.HttpPipelineReceiver.readContentChunked" | 
                        "net.optifine.http.HttpPipelineReceiver.run" | 
                        "net.optifine.http.HttpPipelineReceiver.readLine" | 
                        "net.minecraft.client.model.ModelQuadruped.setRotationAngles" | 
                        "net.minecraft.client.model.ModelQuadruped.render" | 
                        "org.cef.callback.CefDragData.isFragment" | 
                        "org.cef.callback.CefDragData.getLinkURL" | 
                        "org.cef.callback.CefDragData.getFragmentHtml" | 
                        "org.cef.callback.CefDragData.isReadOnly" | 
                        "org.cef.callback.CefDragData.setFragmentBaseURL" | 
                        "org.cef.callback.CefDragData.getFileName" | 
                        "org.cef.callback.CefDragData.getLinkMetadata" | 
                        "org.cef.callback.CefDragData.setLinkURL" | 
                        "org.cef.callback.CefDragData.setLinkMetadata" | 
                        "org.cef.callback.CefDragData.isLink" | 
                        "org.cef.callback.CefDragData.getFileContents" | 
                        "org.cef.callback.CefDragData.resetFileContents" | 
                        "org.cef.callback.CefDragData.isFile" | 
                        "org.cef.callback.CefDragData.getFragmentBaseURL" | 
                        "org.cef.callback.CefDragData.setLinkTitle" | 
                        "org.cef.callback.CefDragData.getFragmentText" | 
                        "org.cef.callback.CefDragData.setFragmentText" | 
                        "org.cef.callback.CefDragData.getLinkTitle" | 
                        "org.cef.callback.CefDragData.getFileNames" | 
                        "org.cef.callback.CefDragData.clone" | 
                        "org.cef.callback.CefDragData.finalize" | 
                        "org.cef.callback.CefDragData.toString" | 
                        "org.cef.callback.CefDragData.dispose" | 
                        "org.cef.callback.CefDragData.setFragmentHtml" | 
                        "org.cef.callback.CefDragData.addFile" | 
                        "net.minecraft.client.audio.ISound$AttenuationType.getTypeInt" | 
                        "net.optifine.entity.model.ModelAdapterSlime.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterSlime.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterSlime.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterSlime.getModelRendererNames" | 
                        "slice.command.data.CommandInfo.aliases" | 
                        "slice.command.data.CommandInfo.name" | 
                        "slice.command.data.CommandInfo.description" | 
                        "net.optifine.RandomTileEntity.getMaxHealth" | 
                        "net.optifine.RandomTileEntity.getName" | 
                        "net.optifine.RandomTileEntity.getSpawnBiome" | 
                        "net.optifine.RandomTileEntity.getTileEntity" | 
                        "net.optifine.RandomTileEntity.setTileEntity" | 
                        "net.optifine.RandomTileEntity.getId" | 
                        "net.optifine.RandomTileEntity.getSpawnPosition" | 
                        "net.optifine.RandomTileEntity.getHealth" | 
                        "net.minecraft.client.renderer.entity.RenderCreeper.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderCreeper.getColorMultiplier" | 
                        "net.minecraft.client.renderer.entity.RenderCreeper.getEntityTexture" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.getTintIndex" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.getMidX" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.hasTintIndex" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.getMidY" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.isFullFaceQuad" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.getVertexDataSingle" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.getMidZ" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.getFace" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.getVertexData" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.isFullQuad" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.getSprite" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.getQuadBounds" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.getQuadEmissive" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.toString" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.pipe" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.fixVertexData" | 
                        "net.minecraft.client.renderer.block.model.BakedQuad.isFaceQuad" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$RightTurn.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$RightTurn.buildComponent" | 
                        "net.minecraft.entity.projectile.EntityLargeFireball.writeEntityToNBT" | 
                        "net.minecraft.entity.projectile.EntityLargeFireball.onImpact" | 
                        "net.minecraft.entity.projectile.EntityLargeFireball.readEntityFromNBT" | 
                        "net.optifine.shaders.config.PropertyDefaultTrueFalse.isTrue" | 
                        "net.optifine.shaders.config.PropertyDefaultTrueFalse.isDefault" | 
                        "net.optifine.shaders.config.PropertyDefaultTrueFalse.getUserValue" | 
                        "net.optifine.shaders.config.PropertyDefaultTrueFalse.isFalse" | 
                        "slice.gui.hud.legacy.TargetHUD.mouseReleased" | 
                        "slice.gui.hud.legacy.TargetHUD.mouseClicked" | 
                        "slice.gui.hud.legacy.TargetHUD.getMc" | 
                        "slice.gui.hud.legacy.TargetHUD.draw" | 
                        "slice.gui.hud.legacy.TargetHUD.setMc" | 
                        "net.minecraft.inventory.ContainerDispenser.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerDispenser.canInteractWith" | 
                        "net.minecraft.client.gui.GuiEnchantment.updateScreen" | 
                        "net.minecraft.client.gui.GuiEnchantment.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.GuiEnchantment.mouseClicked" | 
                        "net.minecraft.client.gui.GuiEnchantment.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.client.gui.GuiEnchantment.func_147068_g" | 
                        "net.minecraft.client.gui.GuiEnchantment.drawScreen" | 
                        "net.minecraft.client.gui.inventory.GuiBeacon$CancelButton.drawButtonForegroundLayer" | 
                        "viamcp.gui.GuiProtocolSelector$SlotList.elementClicked" | 
                        "viamcp.gui.GuiProtocolSelector$SlotList.getSize" | 
                        "viamcp.gui.GuiProtocolSelector$SlotList.drawSlot" | 
                        "viamcp.gui.GuiProtocolSelector$SlotList.drawBackground" | 
                        "viamcp.gui.GuiProtocolSelector$SlotList.isSelected" | 
                        "net.minecraft.block.BlockWoodSlab.getVariantProperty" | 
                        "net.minecraft.block.BlockWoodSlab.getMetaFromState" | 
                        "net.minecraft.block.BlockWoodSlab.damageDropped" | 
                        "net.minecraft.block.BlockWoodSlab.getMapColor" | 
                        "net.minecraft.block.BlockWoodSlab.getVariant" | 
                        "net.minecraft.block.BlockWoodSlab.createBlockState" | 
                        "net.minecraft.block.BlockWoodSlab.getItem" | 
                        "net.minecraft.block.BlockWoodSlab.getStateFromMeta" | 
                        "net.minecraft.block.BlockWoodSlab.getItemDropped" | 
                        "net.minecraft.block.BlockWoodSlab.getUnlocalizedName" | 
                        "net.minecraft.block.BlockWoodSlab.getSubBlocks" | 
                        "org.cef.handler.CefDownloadHandler.onBeforeDownload" | 
                        "org.cef.handler.CefDownloadHandler.onDownloadUpdated" | 
                        "net.minecraft.block.BlockCrops.getMetaFromState" | 
                        "net.minecraft.block.BlockCrops.getSeed" | 
                        "net.minecraft.block.BlockCrops.grow" | 
                        "net.minecraft.block.BlockCrops.getItem" | 
                        "net.minecraft.block.BlockCrops.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockCrops.canBlockStay" | 
                        "net.minecraft.block.BlockCrops.createBlockState" | 
                        "net.minecraft.block.BlockCrops.canPlaceBlockOn" | 
                        "net.minecraft.block.BlockCrops.getCrop" | 
                        "net.minecraft.block.BlockCrops.getStateFromMeta" | 
                        "net.minecraft.block.BlockCrops.updateTick" | 
                        "net.minecraft.block.BlockCrops.canUseBonemeal" | 
                        "net.minecraft.block.BlockCrops.getItemDropped" | 
                        "net.minecraft.block.BlockCrops.canGrow" | 
                        "net.optifine.CustomPanoramaProperties.getBlur2" | 
                        "net.optifine.CustomPanoramaProperties.getBlur1" | 
                        "net.optifine.CustomPanoramaProperties.getOverlay1Bottom" | 
                        "net.optifine.CustomPanoramaProperties.getBlur3" | 
                        "net.optifine.CustomPanoramaProperties.getOverlay2Bottom" | 
                        "net.optifine.CustomPanoramaProperties.getWeight" | 
                        "net.optifine.CustomPanoramaProperties.getOverlay1Top" | 
                        "net.optifine.CustomPanoramaProperties.toString" | 
                        "net.optifine.CustomPanoramaProperties.getOverlay2Top" | 
                        "net.optifine.CustomPanoramaProperties.getPanoramaLocations" | 
                        "org.cef.network.CefRequest$TransitionFlags.getValue" | 
                        "net.minecraft.entity.monster.EntitySlime$SlimeMoveHelper.setSpeed" | 
                        "net.minecraft.entity.monster.EntitySlime$SlimeMoveHelper.func_179920_a" | 
                        "net.minecraft.entity.monster.EntitySlime$SlimeMoveHelper.onUpdateMoveHelper" | 
                        "net.minecraft.command.CommandHelp.getSortedPossibleCommands" | 
                        "net.minecraft.command.CommandHelp.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandHelp.getCommandUsage" | 
                        "net.minecraft.command.CommandHelp.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandHelp.processCommand" | 
                        "net.minecraft.command.CommandHelp.getCommandName" | 
                        "net.minecraft.command.CommandHelp.getCommands" | 
                        "net.minecraft.command.CommandHelp.getCommandAliases" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$House4Garden.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$House4Garden.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$House4Garden.writeStructureToNBT" | 
                        "net.optifine.entity.model.ModelAdapterSign.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterSign.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterSign.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterSign.getModelRendererNames" | 
                        "net.minecraft.client.renderer.entity.RenderPig.getEntityTexture" | 
                        "net.minecraft.client.renderer.entity.RenderWitch.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderWitch.transformHeldFull3DItemLayer" | 
                        "net.minecraft.client.renderer.entity.RenderWitch.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderWitch.getEntityTexture" | 
                        "net.minecraft.client.renderer.entity.RenderCow.getEntityTexture" | 
                        "net.minecraft.block.BlockHay.getMetaFromState" | 
                        "net.minecraft.block.BlockHay.createStackedBlock" | 
                        "net.minecraft.block.BlockHay.createBlockState" | 
                        "net.minecraft.block.BlockHay.getStateFromMeta" | 
                        "net.minecraft.block.BlockHay.onBlockPlaced" | 
                        "net.minecraft.world.biome.BiomeGenSwamp.genTerrainBlocks" | 
                        "net.minecraft.world.biome.BiomeGenSwamp.genBigTreeChance" | 
                        "net.minecraft.world.biome.BiomeGenSwamp.getGrassColorAtPos" | 
                        "net.minecraft.world.biome.BiomeGenSwamp.pickRandomFlower" | 
                        "net.minecraft.world.biome.BiomeGenSwamp.getFoliageColorAtPos" | 
                        "net.minecraft.util.CombatEntry.getDamageAmount" | 
                        "net.minecraft.util.CombatEntry.func_94562_g" | 
                        "net.minecraft.util.CombatEntry.func_94563_c" | 
                        "net.minecraft.util.CombatEntry.getDamageSrcDisplayName" | 
                        "net.minecraft.util.CombatEntry.isLivingDamageSrc" | 
                        "net.minecraft.util.CombatEntry.getDamageSrc" | 
                        "net.optifine.CustomColors$IColorizer.getColor" | 
                        "net.optifine.CustomColors$IColorizer.isColorConstant" | 
                        "net.minecraft.block.BlockPlanks.getMetaFromState" | 
                        "net.minecraft.block.BlockPlanks.damageDropped" | 
                        "net.minecraft.block.BlockPlanks.getMapColor" | 
                        "net.minecraft.block.BlockPlanks.createBlockState" | 
                        "net.minecraft.block.BlockPlanks.getStateFromMeta" | 
                        "net.minecraft.block.BlockPlanks.getSubBlocks" | 
                        "net.minecraft.inventory.ContainerFurnace.detectAndSendChanges" | 
                        "net.minecraft.inventory.ContainerFurnace.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerFurnace.canInteractWith" | 
                        "net.minecraft.inventory.ContainerFurnace.onCraftGuiOpened" | 
                        "net.minecraft.inventory.ContainerFurnace.updateProgressBar" | 
                        "net.minecraft.client.renderer.entity.RenderBlaze.getEntityTexture" | 
                        "net.optifine.gui.TooltipProviderEnumShaderOptions.isRenderBorder" | 
                        "net.optifine.gui.TooltipProviderEnumShaderOptions.getTooltipLines" | 
                        "net.optifine.gui.TooltipProviderEnumShaderOptions.getTooltipBounds" | 
                        "net.minecraft.nbt.NBTTagInt.getByte" | 
                        "net.minecraft.nbt.NBTTagInt.read" | 
                        "net.minecraft.nbt.NBTTagInt.getShort" | 
                        "net.minecraft.nbt.NBTTagInt.getDouble" | 
                        "net.minecraft.nbt.NBTTagInt.getId" | 
                        "net.minecraft.nbt.NBTTagInt.getFloat" | 
                        "net.minecraft.nbt.NBTTagInt.getLong" | 
                        "net.minecraft.nbt.NBTTagInt.getInt" | 
                        "net.minecraft.nbt.NBTTagInt.hashCode" | 
                        "net.minecraft.nbt.NBTTagInt.equals" | 
                        "net.minecraft.nbt.NBTTagInt.toString" | 
                        "net.minecraft.nbt.NBTTagInt.copy" | 
                        "net.minecraft.nbt.NBTTagInt.write" | 
                        "net.optifine.entity.model.ModelAdapterQuadruped.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterQuadruped.getModelRendererNames" | 
                        "net.minecraft.inventory.IInvBasic.onInventoryChanged" | 
                        "net.minecraft.command.server.CommandSaveOn.getCommandUsage" | 
                        "net.minecraft.command.server.CommandSaveOn.processCommand" | 
                        "net.minecraft.command.server.CommandSaveOn.getCommandName" | 
                        "org.cef.callback.CefSchemeRegistrar_N.N_AddCustomScheme" | 
                        "org.cef.callback.CefSchemeRegistrar_N.addCustomScheme" | 
                        "net.minecraft.realms.RealmsButton.msg" | 
                        "net.minecraft.realms.RealmsButton.getProxy" | 
                        "net.minecraft.realms.RealmsButton.active" | 
                        "net.minecraft.realms.RealmsButton.getWidth" | 
                        "net.minecraft.realms.RealmsButton.clicked" | 
                        "net.minecraft.realms.RealmsButton.getYImage" | 
                        "net.minecraft.realms.RealmsButton.getHeight" | 
                        "net.minecraft.realms.RealmsButton.y" | 
                        "net.minecraft.realms.RealmsButton.renderBg" | 
                        "net.minecraft.realms.RealmsButton.id" | 
                        "net.minecraft.realms.RealmsButton.blit" | 
                        "net.minecraft.realms.RealmsButton.render" | 
                        "net.minecraft.realms.RealmsButton.released" | 
                        "net.minecraft.client.model.ModelHorse.setBoxRotation" | 
                        "net.minecraft.client.model.ModelHorse.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelHorse.updateHorseRotation" | 
                        "net.minecraft.client.model.ModelHorse.render" | 
                        "net.minecraft.util.IRegistry.getObject" | 
                        "net.minecraft.util.IRegistry.putObject" | 
                        "org.cef.callback.CefQueryCallback_N.N_Success" | 
                        "org.cef.callback.CefQueryCallback_N.failure" | 
                        "org.cef.callback.CefQueryCallback_N.success" | 
                        "org.cef.callback.CefQueryCallback_N.N_Failure" | 
                        "org.cef.callback.CefQueryCallback_N.finalize" | 
                        "net.minecraft.client.gui.GuiOptionsRowList.getSize" | 
                        "net.minecraft.client.gui.GuiOptionsRowList.getListWidth" | 
                        "net.minecraft.client.gui.GuiOptionsRowList.getScrollBarX" | 
                        "net.minecraft.client.gui.GuiOptionsRowList.getListEntry" | 
                        "net.minecraft.client.gui.GuiOptionsRowList.func_148182_a" | 
                        "net.minecraft.inventory.InventoryCrafting.decrStackSize" | 
                        "net.minecraft.inventory.InventoryCrafting.openInventory" | 
                        "net.minecraft.inventory.InventoryCrafting.setField" | 
                        "net.minecraft.inventory.InventoryCrafting.getName" | 
                        "net.minecraft.inventory.InventoryCrafting.markDirty" | 
                        "net.minecraft.inventory.InventoryCrafting.clear" | 
                        "net.minecraft.inventory.InventoryCrafting.getField" | 
                        "net.minecraft.inventory.InventoryCrafting.getStackInRowAndColumn" | 
                        "net.minecraft.inventory.InventoryCrafting.getStackInSlot" | 
                        "net.minecraft.inventory.InventoryCrafting.getWidth" | 
                        "net.minecraft.inventory.InventoryCrafting.setInventorySlotContents" | 
                        "net.minecraft.inventory.InventoryCrafting.closeInventory" | 
                        "net.minecraft.inventory.InventoryCrafting.getInventoryStackLimit" | 
                        "net.minecraft.inventory.InventoryCrafting.getHeight" | 
                        "net.minecraft.inventory.InventoryCrafting.getSizeInventory" | 
                        "net.minecraft.inventory.InventoryCrafting.getDisplayName" | 
                        "net.minecraft.inventory.InventoryCrafting.isUseableByPlayer" | 
                        "net.minecraft.inventory.InventoryCrafting.hasCustomName" | 
                        "net.minecraft.inventory.InventoryCrafting.removeStackFromSlot" | 
                        "net.minecraft.inventory.InventoryCrafting.getFieldCount" | 
                        "net.minecraft.inventory.InventoryCrafting.isItemValidForSlot" | 
                        "net.minecraft.world.gen.feature.WorldGenIceSpike.generate" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Crossing.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Crossing.buildComponent" | 
                        "net.minecraft.client.renderer.block.statemap.BlockStateMapper.registerBuiltInBlocks" | 
                        "net.minecraft.client.renderer.block.statemap.BlockStateMapper.registerBlockStateMapper" | 
                        "net.minecraft.client.renderer.block.statemap.BlockStateMapper.putAllStateModelLocations" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.deleteGlResources" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.makeCompileTaskChunk" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getRenderChunkOffset16" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.multModelviewMatrix" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.setRenderChunkNeighbour" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getRenderChunkNeighbour" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.setNeedsUpdate" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.isNeedsUpdate" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.initModelviewMatrix" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.createRegionRenderCache" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.fixBlockLayer" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.resortTransparency" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.postRenderOverlay" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.setPosition" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.setCompiledChunk" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.isChunkRegionEmpty" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.stopCompileTask" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.isPlayerUpdate" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.finishCompileTask" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getCompiledChunk" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.isBoundingBoxInFrustum" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.makeCompileTaskTransparency" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getLockCompileTask" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.setFrameIndex" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.postRenderOverlays" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.updateRenderChunkNeighboursValid" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.rebuildChunk" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getRenderInfo" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getPosition" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.isWorldPlayerUpdate" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getPositionOffset16" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getBoundingBoxParent" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getChunk" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.makeChunkCacheOF" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.toString" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getBlockPosOffset16" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.preRenderBlocks" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.getVertexBufferByLayer" | 
                        "net.minecraft.client.renderer.chunk.RenderChunk.postRenderBlocks" | 
                        "net.minecraft.client.renderer.DestroyBlockProgress.getCreationCloudUpdateTick" | 
                        "net.minecraft.client.renderer.DestroyBlockProgress.setCloudUpdateTick" | 
                        "net.minecraft.client.renderer.DestroyBlockProgress.getPosition" | 
                        "net.minecraft.client.renderer.DestroyBlockProgress.setPartialBlockDamage" | 
                        "net.minecraft.client.renderer.DestroyBlockProgress.getPartialBlockDamage" | 
                        "net.minecraft.scoreboard.IScoreObjectiveCriteria$EnumRenderType.func_178796_a" | 
                        "slice.event.events.EventClientBrand.setBrand" | 
                        "slice.event.events.EventClientBrand.getBrand" | 
                        "net.minecraft.block.BlockDoor$EnumHingePosition.getName" | 
                        "net.minecraft.block.BlockDoor$EnumHingePosition.toString" | 
                        "net.minecraft.block.BlockStone.getMetaFromState" | 
                        "net.minecraft.block.BlockStone.damageDropped" | 
                        "net.minecraft.block.BlockStone.getLocalizedName" | 
                        "net.minecraft.block.BlockStone.getMapColor" | 
                        "net.minecraft.block.BlockStone.createBlockState" | 
                        "net.minecraft.block.BlockStone.getStateFromMeta" | 
                        "net.minecraft.block.BlockStone.getItemDropped" | 
                        "net.minecraft.block.BlockStone.getSubBlocks" | 
                        "net.minecraft.entity.ai.EntityAIRestrictSun.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIRestrictSun.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIRestrictSun.startExecuting" | 
                        "net.optifine.util.CompactArrayList.add" | 
                        "net.optifine.util.CompactArrayList.contains" | 
                        "net.optifine.util.CompactArrayList.set" | 
                        "net.optifine.util.CompactArrayList.size" | 
                        "net.optifine.util.CompactArrayList.compact" | 
                        "net.optifine.util.CompactArrayList.getCountValid" | 
                        "net.optifine.util.CompactArrayList.get" | 
                        "net.optifine.util.CompactArrayList.clear" | 
                        "net.optifine.util.CompactArrayList.isEmpty" | 
                        "net.optifine.util.CompactArrayList.remove" | 
                        "org.cef.handler.CefWindowHandler.onMouseEvent" | 
                        "org.cef.handler.CefWindowHandler.getRect" | 
                        "net.minecraft.command.server.CommandSummon.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandSummon.getCommandUsage" | 
                        "net.minecraft.command.server.CommandSummon.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandSummon.processCommand" | 
                        "net.minecraft.command.server.CommandSummon.getCommandName" | 
                        "net.optifine.entity.model.ModelAdapterIronGolem.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterIronGolem.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterIronGolem.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterIronGolem.getModelRendererNames" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.decrStackSize" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.getHasStack" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.getItemStackLimit" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.onSlotChanged" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.isHere" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.isItemValid" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.getStack" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.onPickupFromSlot" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.getSlotStackLimit" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.getSlotTexture" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$CreativeSlot.putStack" | 
                        "net.minecraft.client.renderer.culling.ICamera.isBoundingBoxInFrustum" | 
                        "net.minecraft.client.renderer.culling.ICamera.setPosition" | 
                        "net.minecraft.world.IWorldNameable.getName" | 
                        "net.minecraft.world.IWorldNameable.getDisplayName" | 
                        "net.minecraft.world.IWorldNameable.hasCustomName" | 
                        "net.minecraft.block.BlockDoubleWoodSlab.isDouble" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.applyDrag" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.entityInit" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.interactFirst" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.getMaximumSpeed" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.func_180460_a" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.isMinecartPowered" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.setMinecartPowered" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.killMinecart" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.getMinecartType" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.onUpdate" | 
                        "net.minecraft.entity.item.EntityMinecartFurnace.getDefaultDisplayTile" | 
                        "net.optifine.shaders.DefaultTexture.loadTexture" | 
                        "net.minecraft.client.gui.stream.GuiStreamUnavailable$Reason.func_152559_b" | 
                        "net.minecraft.client.gui.stream.GuiStreamUnavailable$Reason.func_152561_a" | 
                        "net.minecraft.util.AxisAlignedBB.calculateIntercept" | 
                        "net.minecraft.util.AxisAlignedBB.offset" | 
                        "net.minecraft.util.AxisAlignedBB.intersectsWith" | 
                        "net.minecraft.util.AxisAlignedBB.hasNaN" | 
                        "net.minecraft.util.AxisAlignedBB.contract" | 
                        "net.minecraft.util.AxisAlignedBB.calculateXOffset" | 
                        "net.minecraft.util.AxisAlignedBB.calculateZOffset" | 
                        "net.minecraft.util.AxisAlignedBB.union" | 
                        "net.minecraft.util.AxisAlignedBB.calculateYOffset" | 
                        "net.minecraft.util.AxisAlignedBB.getAverageEdgeLength" | 
                        "net.minecraft.util.AxisAlignedBB.isVecInXZ" | 
                        "net.minecraft.util.AxisAlignedBB.isVecInXY" | 
                        "net.minecraft.util.AxisAlignedBB.isVecInYZ" | 
                        "net.minecraft.util.AxisAlignedBB.expand" | 
                        "net.minecraft.util.AxisAlignedBB.toString" | 
                        "net.minecraft.util.AxisAlignedBB.isVecInside" | 
                        "net.minecraft.util.AxisAlignedBB.addCoord" | 
                        "net.optifine.entity.model.ModelAdapterLeadKnot.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterLeadKnot.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterLeadKnot.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterLeadKnot.getModelRendererNames" | 
                        "org.cef.callback.CefBeforeDownloadCallback.Continue" | 
                        "net.optifine.util.LongSupplier.getAsLong" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeAddPattern.getRecipeOutput" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeAddPattern.getRemainingItems" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeAddPattern.getCraftingResult" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeAddPattern.getRecipeSize" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeAddPattern.func_179533_c" | 
                        "net.minecraft.item.crafting.RecipesBanners$RecipeAddPattern.matches" | 
                        "net.minecraft.client.model.ModelBiped.setModelAttributes" | 
                        "net.minecraft.client.model.ModelBiped.postRenderArm" | 
                        "net.minecraft.client.model.ModelBiped.setRotationAngles" | 
                        "net.minecraft.client.model.ModelBiped.render" | 
                        "net.minecraft.client.model.ModelBiped.setInvisible" | 
                        "net.minecraft.entity.ai.EntityAISwimming.updateTask" | 
                        "net.minecraft.entity.ai.EntityAISwimming.shouldExecute" | 
                        "net.minecraft.entity.EntityMinecartCommandBlock.writeEntityToNBT" | 
                        "net.minecraft.entity.EntityMinecartCommandBlock.readEntityFromNBT" | 
                        "net.minecraft.entity.EntityMinecartCommandBlock.getCommandBlockLogic" | 
                        "net.minecraft.entity.EntityMinecartCommandBlock.entityInit" | 
                        "net.minecraft.entity.EntityMinecartCommandBlock.interactFirst" | 
                        "net.minecraft.entity.EntityMinecartCommandBlock.getMinecartType" | 
                        "net.minecraft.entity.EntityMinecartCommandBlock.onDataWatcherUpdate" | 
                        "net.minecraft.entity.EntityMinecartCommandBlock.onActivatorRailPass" | 
                        "net.minecraft.entity.EntityMinecartCommandBlock.getDefaultDisplayTile" | 
                        "net.optifine.shaders.config.ShaderOption.getNameText" | 
                        "net.optifine.shaders.config.ShaderOption.getValueText" | 
                        "net.optifine.shaders.config.ShaderOption.getName" | 
                        "net.optifine.shaders.config.ShaderOption.setDescription" | 
                        "net.optifine.shaders.config.ShaderOption.getDescription" | 
                        "net.optifine.shaders.config.ShaderOption.getPaths" | 
                        "net.optifine.shaders.config.ShaderOption.getValueColor" | 
                        "net.optifine.shaders.config.ShaderOption.isChanged" | 
                        "net.optifine.shaders.config.ShaderOption.setIndexNormalized" | 
                        "net.optifine.shaders.config.ShaderOption.getSourceLine" | 
                        "net.optifine.shaders.config.ShaderOption.getIndexNormalized" | 
                        "net.optifine.shaders.config.ShaderOption.setVisible" | 
                        "net.optifine.shaders.config.ShaderOption.matchesLine" | 
                        "net.optifine.shaders.config.ShaderOption.isUsedInLine" | 
                        "net.optifine.shaders.config.ShaderOption.getValueDefault" | 
                        "net.optifine.shaders.config.ShaderOption.getValues" | 
                        "net.optifine.shaders.config.ShaderOption.checkUsed" | 
                        "net.optifine.shaders.config.ShaderOption.isVisible" | 
                        "net.optifine.shaders.config.ShaderOption.resetValue" | 
                        "net.optifine.shaders.config.ShaderOption.prevValue" | 
                        "net.optifine.shaders.config.ShaderOption.getValue" | 
                        "net.optifine.shaders.config.ShaderOption.isValidValue" | 
                        "net.optifine.shaders.config.ShaderOption.setEnabled" | 
                        "net.optifine.shaders.config.ShaderOption.setValue" | 
                        "net.optifine.shaders.config.ShaderOption.isEnabled" | 
                        "net.optifine.shaders.config.ShaderOption.getDescriptionText" | 
                        "net.optifine.shaders.config.ShaderOption.addPaths" | 
                        "net.optifine.shaders.config.ShaderOption.toString" | 
                        "net.optifine.shaders.config.ShaderOption.nextValue" | 
                        "net.minecraft.command.CommandServerKick.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandServerKick.getCommandUsage" | 
                        "net.minecraft.command.CommandServerKick.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandServerKick.processCommand" | 
                        "net.minecraft.command.CommandServerKick.getCommandName" | 
                        "net.minecraft.enchantment.EnchantmentArrowFire.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentArrowFire.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentArrowFire.getMaxLevel" | 
                        "net.optifine.entity.model.anim.ModelResolver.getExpression" | 
                        "net.optifine.entity.model.anim.ModelResolver.getModelVariable" | 
                        "net.optifine.entity.model.anim.ModelResolver.setThisModelRenderer" | 
                        "net.optifine.entity.model.anim.ModelResolver.setPartModelRenderer" | 
                        "net.optifine.entity.model.anim.ModelResolver.getModelRenderer" | 
                        "net.minecraft.block.BlockDaylightDetector.updatePower" | 
                        "net.minecraft.block.BlockDaylightDetector.getMetaFromState" | 
                        "net.minecraft.block.BlockDaylightDetector.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockDaylightDetector.onBlockActivated" | 
                        "net.minecraft.block.BlockDaylightDetector.isFullCube" | 
                        "net.minecraft.block.BlockDaylightDetector.getItem" | 
                        "net.minecraft.block.BlockDaylightDetector.getRenderType" | 
                        "net.minecraft.block.BlockDaylightDetector.getSubBlocks" | 
                        "net.minecraft.block.BlockDaylightDetector.getWeakPower" | 
                        "net.minecraft.block.BlockDaylightDetector.createBlockState" | 
                        "net.minecraft.block.BlockDaylightDetector.createNewTileEntity" | 
                        "net.minecraft.block.BlockDaylightDetector.getStateFromMeta" | 
                        "net.minecraft.block.BlockDaylightDetector.canProvidePower" | 
                        "net.minecraft.block.BlockDaylightDetector.isOpaqueCube" | 
                        "net.minecraft.block.BlockDaylightDetector.getItemDropped" | 
                        "net.minecraft.block.BlockHardenedClay.getMapColor" | 
                        "net.minecraft.client.particle.EntityLavaFX.getBrightnessForRender" | 
                        "net.minecraft.client.particle.EntityLavaFX.getBrightness" | 
                        "net.minecraft.client.particle.EntityLavaFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityLavaFX.onUpdate" | 
                        "net.minecraft.block.BlockGlass.getBlockLayer" | 
                        "net.minecraft.block.BlockGlass.canSilkHarvest" | 
                        "net.minecraft.block.BlockGlass.quantityDropped" | 
                        "net.minecraft.block.BlockGlass.isFullCube" | 
                        "net.optifine.entity.model.ModelAdapter.makeModel" | 
                        "net.optifine.entity.model.ModelAdapter.getEntityClass" | 
                        "net.optifine.entity.model.ModelAdapter.getAliases" | 
                        "net.optifine.entity.model.ModelAdapter.getName" | 
                        "net.optifine.entity.model.ModelAdapter.getModelRenderers" | 
                        "net.optifine.entity.model.ModelAdapter.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapter.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapter.getShadowSize" | 
                        "net.optifine.entity.model.ModelAdapter.getModelRendererNames" | 
                        "net.minecraft.client.gui.GuiRenameWorld.updateScreen" | 
                        "net.minecraft.client.gui.GuiRenameWorld.actionPerformed" | 
                        "net.minecraft.client.gui.GuiRenameWorld.mouseClicked" | 
                        "net.minecraft.client.gui.GuiRenameWorld.initGui" | 
                        "net.minecraft.client.gui.GuiRenameWorld.drawScreen" | 
                        "net.minecraft.client.gui.GuiRenameWorld.onGuiClosed" | 
                        "net.minecraft.client.gui.GuiRenameWorld.keyTyped" | 
                        "org.cef.handler.CefFocusHandlerAdapter.onSetFocus" | 
                        "org.cef.handler.CefFocusHandlerAdapter.onTakeFocus" | 
                        "org.cef.handler.CefFocusHandlerAdapter.onGotFocus" | 
                        "slice.gui.alt.GuiAlt.actionPerformed" | 
                        "slice.gui.alt.GuiAlt.initGui" | 
                        "slice.gui.alt.GuiAlt.drawScreen" | 
                        "slice.gui.alt.GuiAlt.keyTyped" | 
                        "net.minecraft.util.ChatStyle.setChatHoverEvent" | 
                        "net.minecraft.util.ChatStyle.getBold" | 
                        "net.minecraft.util.ChatStyle.setUnderlined" | 
                        "net.minecraft.util.ChatStyle.setBold" | 
                        "net.minecraft.util.ChatStyle.hashCode" | 
                        "net.minecraft.util.ChatStyle.createShallowCopy" | 
                        "net.minecraft.util.ChatStyle.getObfuscated" | 
                        "net.minecraft.util.ChatStyle.getUnderlined" | 
                        "net.minecraft.util.ChatStyle.getParent" | 
                        "net.minecraft.util.ChatStyle.getChatHoverEvent" | 
                        "net.minecraft.util.ChatStyle.getFormattingCode" | 
                        "net.minecraft.util.ChatStyle.isEmpty" | 
                        "net.minecraft.util.ChatStyle.getColor" | 
                        "net.minecraft.util.ChatStyle.setStrikethrough" | 
                        "net.minecraft.util.ChatStyle.setParentStyle" | 
                        "net.minecraft.util.ChatStyle.createDeepCopy" | 
                        "net.minecraft.util.ChatStyle.getItalic" | 
                        "net.minecraft.util.ChatStyle.setColor" | 
                        "net.minecraft.util.ChatStyle.getStrikethrough" | 
                        "net.minecraft.util.ChatStyle.equals" | 
                        "net.minecraft.util.ChatStyle.setChatClickEvent" | 
                        "net.minecraft.util.ChatStyle.setObfuscated" | 
                        "net.minecraft.util.ChatStyle.toString" | 
                        "net.minecraft.util.ChatStyle.getInsertion" | 
                        "net.minecraft.util.ChatStyle.setInsertion" | 
                        "net.minecraft.util.ChatStyle.setItalic" | 
                        "net.minecraft.util.ChatStyle.getChatClickEvent" | 
                        "net.minecraft.server.management.LowerStringMap.size" | 
                        "net.minecraft.server.management.LowerStringMap.entrySet" | 
                        "net.minecraft.server.management.LowerStringMap.containsKey" | 
                        "net.minecraft.server.management.LowerStringMap.get" | 
                        "net.minecraft.server.management.LowerStringMap.values" | 
                        "net.minecraft.server.management.LowerStringMap.putAll" | 
                        "net.minecraft.server.management.LowerStringMap.clear" | 
                        "net.minecraft.server.management.LowerStringMap.isEmpty" | 
                        "net.minecraft.server.management.LowerStringMap.keySet" | 
                        "net.minecraft.server.management.LowerStringMap.remove" | 
                        "net.minecraft.server.management.LowerStringMap.put" | 
                        "net.minecraft.server.management.LowerStringMap.containsValue" | 
                        "net.minecraft.client.particle.EntityDropParticleFX$WaterFactory.getEntityFX" | 
                        "net.minecraft.util.DamageSource.getDamageType" | 
                        "net.minecraft.util.DamageSource.setMagicDamage" | 
                        "net.minecraft.util.DamageSource.setDifficultyScaled" | 
                        "net.minecraft.util.DamageSource.canHarmInCreative" | 
                        "net.minecraft.util.DamageSource.isProjectile" | 
                        "net.minecraft.util.DamageSource.setProjectile" | 
                        "net.minecraft.util.DamageSource.getHungerDamage" | 
                        "net.minecraft.util.DamageSource.getSourceOfDamage" | 
                        "net.minecraft.util.DamageSource.setDamageBypassesArmor" | 
                        "net.minecraft.util.DamageSource.setDamageIsAbsolute" | 
                        "net.minecraft.util.DamageSource.isCreativePlayer" | 
                        "net.minecraft.util.DamageSource.setDamageAllowedInCreativeMode" | 
                        "net.minecraft.util.DamageSource.isMagicDamage" | 
                        "net.minecraft.util.DamageSource.isFireDamage" | 
                        "net.minecraft.util.DamageSource.isExplosion" | 
                        "net.minecraft.util.DamageSource.isUnblockable" | 
                        "net.minecraft.util.DamageSource.getEntity" | 
                        "net.minecraft.util.DamageSource.getDeathMessage" | 
                        "net.minecraft.util.DamageSource.setFireDamage" | 
                        "net.minecraft.util.DamageSource.isDifficultyScaled" | 
                        "net.minecraft.util.DamageSource.isDamageAbsolute" | 
                        "net.minecraft.util.DamageSource.setExplosion" | 
                        "net.minecraft.world.gen.structure.MapGenNetherBridge.getStructureStart" | 
                        "net.minecraft.world.gen.structure.MapGenNetherBridge.getSpawnList" | 
                        "net.minecraft.world.gen.structure.MapGenNetherBridge.canSpawnStructureAtCoords" | 
                        "net.minecraft.world.gen.structure.MapGenNetherBridge.getStructureName" | 
                        "net.minecraft.block.BlockStaticLiquid.updateLiquid" | 
                        "net.minecraft.block.BlockStaticLiquid.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockStaticLiquid.getCanBlockBurn" | 
                        "net.minecraft.block.BlockStaticLiquid.updateTick" | 
                        "net.minecraft.block.BlockStaticLiquid.isSurroundingBlockFlammable" | 
                        "net.minecraft.client.model.ModelArmorStand.postRenderArm" | 
                        "net.minecraft.client.model.ModelArmorStand.setRotationAngles" | 
                        "net.minecraft.client.model.ModelArmorStand.render" | 
                        "net.minecraft.client.renderer.chunk.VboChunkFactory.makeRenderChunk" | 
                        "net.optifine.config.IParserInt.parse" | 
                        "net.optifine.shaders.config.RenderScale.getOffsetY" | 
                        "net.optifine.shaders.config.RenderScale.getScale" | 
                        "net.optifine.shaders.config.RenderScale.toString" | 
                        "net.optifine.shaders.config.RenderScale.getOffsetX" | 
                        "net.minecraft.world.border.IBorderListener.onDamageAmountChanged" | 
                        "net.minecraft.world.border.IBorderListener.onWarningDistanceChanged" | 
                        "net.minecraft.world.border.IBorderListener.onSizeChanged" | 
                        "net.minecraft.world.border.IBorderListener.onCenterChanged" | 
                        "net.minecraft.world.border.IBorderListener.onTransitionStarted" | 
                        "net.minecraft.world.border.IBorderListener.onDamageBufferChanged" | 
                        "net.minecraft.world.border.IBorderListener.onWarningTimeChanged" | 
                        "net.minecraft.client.particle.EntityCrit2FX$Factory.getEntityFX" | 
                        "net.minecraft.client.audio.SoundRegistry.registerSound" | 
                        "net.minecraft.client.audio.SoundRegistry.clearMap" | 
                        "net.minecraft.client.audio.SoundRegistry.createUnderlyingMap" | 
                        "org.cef.lwjgl.CefRendererLwjgl.onPopupSize" | 
                        "org.cef.lwjgl.CefRendererLwjgl.onPaint" | 
                        "org.cef.lwjgl.CefRendererLwjgl.getPopupRectInWebView" | 
                        "org.cef.lwjgl.CefRendererLwjgl.destroy" | 
                        "org.cef.lwjgl.CefRendererLwjgl.finalize" | 
                        "org.cef.lwjgl.CefRendererLwjgl.onPopupClosed" | 
                        "org.cef.lwjgl.CefRendererLwjgl.initialize" | 
                        "org.cef.lwjgl.CefRendererLwjgl.lambda$onPopupClosed$0" | 
                        "org.cef.lwjgl.CefRendererLwjgl.render" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.setName" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.decrStackSize" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.setField" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.brewPotions" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.getName" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.getSlotsForFace" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.createContainer" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.update" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.func_174902_m" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.setInventorySlotContents" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.closeInventory" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.canBrew" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.canExtractItem" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.getInventoryStackLimit" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.hasCustomName" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.writeToNBT" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.getGuiID" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.isItemValidForSlot" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.openInventory" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.clear" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.getField" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.getPotionResult" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.getStackInSlot" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.getSizeInventory" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.isUseableByPlayer" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.removeStackFromSlot" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.getFieldCount" | 
                        "net.minecraft.tileentity.TileEntityBrewingStand.canInsertItem" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Entrance.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Entrance.buildComponent" | 
                        "net.minecraft.world.gen.NoiseGeneratorSimplex.func_151606_a" | 
                        "net.minecraft.world.gen.NoiseGeneratorSimplex.func_151605_a" | 
                        "net.optifine.reflect.ReflectorFields.getReflectorField" | 
                        "net.optifine.reflect.ReflectorFields.getReflectorClass" | 
                        "net.optifine.reflect.ReflectorFields.getFieldType" | 
                        "net.optifine.reflect.ReflectorFields.getFieldCount" | 
                        "net.minecraft.potion.PotionAbsorption.applyAttributesModifiersToEntity" | 
                        "net.minecraft.potion.PotionAbsorption.removeAttributesModifiersFromEntity" | 
                        "net.minecraft.entity.ai.EntityAIOwnerHurtTarget.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIOwnerHurtTarget.startExecuting" | 
                        "net.optifine.gui.GuiOtherSettingsOF.actionPerformed" | 
                        "net.optifine.gui.GuiOtherSettingsOF.confirmClicked" | 
                        "net.optifine.gui.GuiOtherSettingsOF.initGui" | 
                        "net.optifine.gui.GuiOtherSettingsOF.drawScreen" | 
                        "net.minecraft.client.renderer.entity.RenderSnowMan.getMainModel" | 
                        "net.minecraft.client.renderer.entity.RenderSnowMan.getEntityTexture" | 
                        "net.minecraft.client.gui.GuiSelectWorld$List.elementClicked" | 
                        "net.minecraft.client.gui.GuiSelectWorld$List.getSize" | 
                        "net.minecraft.client.gui.GuiSelectWorld$List.drawSlot" | 
                        "net.minecraft.client.gui.GuiSelectWorld$List.getContentHeight" | 
                        "net.minecraft.client.gui.GuiSelectWorld$List.drawBackground" | 
                        "net.minecraft.client.gui.GuiSelectWorld$List.isSelected" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Room.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Room.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Room.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Room.func_181138_a" | 
                        "net.minecraft.world.gen.structure.StructureMineshaftPieces$Room.writeStructureToNBT" | 
                        "net.minecraft.scoreboard.Team.formatString" | 
                        "net.minecraft.scoreboard.Team.getRegisteredName" | 
                        "net.minecraft.scoreboard.Team.getNameTagVisibility" | 
                        "net.minecraft.scoreboard.Team.getSeeFriendlyInvisiblesEnabled" | 
                        "net.minecraft.scoreboard.Team.getAllowFriendlyFire" | 
                        "net.minecraft.scoreboard.Team.getMembershipCollection" | 
                        "net.minecraft.scoreboard.Team.getDeathMessageVisibility" | 
                        "net.minecraft.scoreboard.Team.isSameTeam" | 
                        "net.minecraft.client.renderer.entity.Render.bindTexture" | 
                        "net.minecraft.client.renderer.entity.Render.renderEntityOnFire" | 
                        "net.minecraft.client.renderer.entity.Render.setEntityClass" | 
                        "net.minecraft.client.renderer.entity.Render.renderName" | 
                        "net.minecraft.client.renderer.entity.Render.bindEntityTexture" | 
                        "net.minecraft.client.renderer.entity.Render.getRenderManager" | 
                        "net.minecraft.client.renderer.entity.Render.canRenderName" | 
                        "net.minecraft.client.renderer.entity.Render.getWorldFromRenderManager" | 
                        "net.minecraft.client.renderer.entity.Render.getFontRendererFromRenderManager" | 
                        "net.minecraft.client.renderer.entity.Render.getEntityTexture" | 
                        "net.minecraft.client.renderer.entity.Render.renderShadow" | 
                        "net.minecraft.client.renderer.entity.Render.setLocationTextureCustom" | 
                        "net.minecraft.client.renderer.entity.Render.renderMultipass" | 
                        "net.minecraft.client.renderer.entity.Render.doRenderShadowAndFire" | 
                        "net.minecraft.client.renderer.entity.Render.getLocationTextureCustom" | 
                        "net.minecraft.client.renderer.entity.Render.getEntityClass" | 
                        "net.minecraft.client.renderer.entity.Render.renderLivingLabel" | 
                        "net.minecraft.client.renderer.entity.Render.renderShadowBlock" | 
                        "net.minecraft.client.renderer.entity.Render.doRender" | 
                        "net.minecraft.client.renderer.entity.Render.isMultipass" | 
                        "net.minecraft.client.renderer.entity.Render.shouldRender" | 
                        "net.minecraft.client.renderer.entity.Render.renderOffsetLivingLabel" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.setAnimatedSprites" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.setLayerUsed" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.isLayerStarted" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.isLayerEmpty" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.getAnimatedSprites" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.setLayerStarted" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.isEmpty" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.isVisible" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.getTileEntities" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.setVisibility" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.getState" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.addTileEntity" | 
                        "net.minecraft.client.renderer.chunk.CompiledChunk.setState" | 
                        "net.minecraft.block.BlockStoneBrick$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockStoneBrick$EnumType.getName" | 
                        "net.minecraft.block.BlockStoneBrick$EnumType.toString" | 
                        "net.minecraft.block.BlockStoneBrick$EnumType.getUnlocalizedName" | 
                        "net.minecraft.client.renderer.BlockFluidRenderer.getFluidHeight" | 
                        "net.minecraft.client.renderer.BlockFluidRenderer.initAtlasSprites" | 
                        "net.minecraft.client.renderer.BlockFluidRenderer.renderFluid" | 
                        "net.minecraft.client.renderer.entity.RenderXPOrb.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderXPOrb.getEntityTexture" | 
                        "net.minecraft.block.BlockHalfWoodSlab.isDouble" | 
                        "net.optifine.player.PlayerConfigurationReceiver.fileDownloadFinished" | 
                        "net.minecraft.tileentity.TileEntityBeacon$BeamSegment.getHeight" | 
                        "net.minecraft.tileentity.TileEntityBeacon$BeamSegment.getColors" | 
                        "net.minecraft.tileentity.TileEntityBeacon$BeamSegment.incrementHeight" | 
                        "net.minecraft.client.renderer.texture.IIconCreator.registerSprites" | 
                        "net.minecraft.command.CommandParticle.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandParticle.getCommandUsage" | 
                        "net.minecraft.command.CommandParticle.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandParticle.processCommand" | 
                        "net.minecraft.command.CommandParticle.getCommandName" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.getMouseY" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.elementClicked" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.getSize" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.getScrollBarX" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.getMouseX" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.drawSlot" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.getContentHeight" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.drawBackground" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.isSelected" | 
                        "net.minecraft.client.gui.GuiSlotRealmsProxy.getWidth" | 
                        "net.optifine.entity.model.anim.RenderEntityParameterFloat.getName" | 
                        "net.optifine.entity.model.anim.RenderEntityParameterFloat.eval" | 
                        "net.optifine.entity.model.anim.RenderEntityParameterFloat.getExpressionType" | 
                        "net.minecraft.entity.ai.EntityAIRestrictOpenDoor.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIRestrictOpenDoor.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIRestrictOpenDoor.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIRestrictOpenDoor.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIRestrictOpenDoor.continueExecuting" | 
                        "net.minecraft.inventory.ContainerMerchant.onContainerClosed" | 
                        "net.minecraft.inventory.ContainerMerchant.detectAndSendChanges" | 
                        "net.minecraft.inventory.ContainerMerchant.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerMerchant.onCraftMatrixChanged" | 
                        "net.minecraft.inventory.ContainerMerchant.setCurrentRecipeIndex" | 
                        "net.minecraft.inventory.ContainerMerchant.getMerchantInventory" | 
                        "net.minecraft.inventory.ContainerMerchant.canInteractWith" | 
                        "net.minecraft.inventory.ContainerMerchant.onCraftGuiOpened" | 
                        "net.minecraft.inventory.ContainerMerchant.updateProgressBar" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor3.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor3.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor2.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor2.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor2.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor2.writeStructureToNBT" | 
                        "net.minecraft.entity.projectile.EntityFishHook.writeEntityToNBT" | 
                        "net.minecraft.entity.projectile.EntityFishHook.setPositionAndRotation2" | 
                        "net.minecraft.entity.projectile.EntityFishHook.readEntityFromNBT" | 
                        "net.minecraft.entity.projectile.EntityFishHook.entityInit" | 
                        "net.minecraft.entity.projectile.EntityFishHook.isInRangeToRenderDist" | 
                        "net.minecraft.entity.projectile.EntityFishHook.handleHookRetraction" | 
                        "net.minecraft.entity.projectile.EntityFishHook.setVelocity" | 
                        "net.minecraft.entity.projectile.EntityFishHook.getFishingResult" | 
                        "net.minecraft.entity.projectile.EntityFishHook.onUpdate" | 
                        "net.minecraft.entity.projectile.EntityFishHook.handleHookCasting" | 
                        "net.minecraft.entity.projectile.EntityFishHook.setDead" | 
                        "net.minecraft.network.rcon.RConConsoleSource.getEntityWorld" | 
                        "net.minecraft.network.rcon.RConConsoleSource.canCommandSenderUseCommand" | 
                        "net.minecraft.network.rcon.RConConsoleSource.getCommandSenderEntity" | 
                        "net.minecraft.network.rcon.RConConsoleSource.getName" | 
                        "net.minecraft.network.rcon.RConConsoleSource.getPosition" | 
                        "net.minecraft.network.rcon.RConConsoleSource.getPositionVector" | 
                        "net.minecraft.network.rcon.RConConsoleSource.getDisplayName" | 
                        "net.minecraft.network.rcon.RConConsoleSource.addChatMessage" | 
                        "net.minecraft.network.rcon.RConConsoleSource.sendCommandFeedback" | 
                        "net.minecraft.network.rcon.RConConsoleSource.setCommandStat" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer.getDrawMode" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer.bindBuffer" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer.getVboRange" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer.unbindBuffer" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer.deleteGlBuffers" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer.setVboRegion" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer.drawArrays" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer.bufferData" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer.getVboRegion" | 
                        "net.minecraft.client.renderer.vertex.VertexBuffer.setDrawMode" | 
                        "net.optifine.DynamicLight.getChunkPos" | 
                        "net.optifine.DynamicLight.getOffsetY" | 
                        "net.optifine.DynamicLight.getLastLightLevel" | 
                        "net.optifine.DynamicLight.updateLitChunks" | 
                        "net.optifine.DynamicLight.isUnderwater" | 
                        "net.optifine.DynamicLight.update" | 
                        "net.optifine.DynamicLight.getLastPosZ" | 
                        "net.optifine.DynamicLight.toString" | 
                        "net.optifine.DynamicLight.getLastPosY" | 
                        "net.optifine.DynamicLight.getLastPosX" | 
                        "net.optifine.DynamicLight.getEntity" | 
                        "net.optifine.DynamicLight.updateChunkLight" | 
                        "net.optifine.player.PlayerItemsLayer.doRenderLayer" | 
                        "net.optifine.player.PlayerItemsLayer.renderEquippedItems" | 
                        "net.optifine.player.PlayerItemsLayer.shouldCombineTextures" | 
                        "net.minecraft.client.gui.GuiYesNo.updateScreen" | 
                        "net.minecraft.client.gui.GuiYesNo.actionPerformed" | 
                        "net.minecraft.client.gui.GuiYesNo.setButtonDelay" | 
                        "net.minecraft.client.gui.GuiYesNo.initGui" | 
                        "net.minecraft.client.gui.GuiYesNo.drawScreen" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets$ListPreset.elementClicked" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets$ListPreset.getSize" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets$ListPreset.drawSlot" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets$ListPreset.func_178051_a" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets$ListPreset.drawBackground" | 
                        "net.minecraft.client.gui.GuiScreenCustomizePresets$ListPreset.isSelected" | 
                        "net.minecraft.scoreboard.IScoreObjectiveCriteria.getName" | 
                        "net.minecraft.scoreboard.IScoreObjectiveCriteria.isReadOnly" | 
                        "net.minecraft.scoreboard.IScoreObjectiveCriteria.getRenderType" | 
                        "net.minecraft.scoreboard.IScoreObjectiveCriteria.setScore" | 
                        "net.optifine.config.RangeInt.getMin" | 
                        "net.optifine.config.RangeInt.getMax" | 
                        "net.optifine.config.RangeInt.toString" | 
                        "net.optifine.config.RangeInt.isInRange" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor5.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor5.buildComponent" | 
                        "net.minecraft.tileentity.TileEntityChest.decrStackSize" | 
                        "net.minecraft.tileentity.TileEntityChest.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityChest.setField" | 
                        "net.minecraft.tileentity.TileEntityChest.getName" | 
                        "net.minecraft.tileentity.TileEntityChest.setCustomName" | 
                        "net.minecraft.tileentity.TileEntityChest.createContainer" | 
                        "net.minecraft.tileentity.TileEntityChest.update" | 
                        "net.minecraft.tileentity.TileEntityChest.updateContainingBlockInfo" | 
                        "net.minecraft.tileentity.TileEntityChest.setInventorySlotContents" | 
                        "net.minecraft.tileentity.TileEntityChest.closeInventory" | 
                        "net.minecraft.tileentity.TileEntityChest.getInventoryStackLimit" | 
                        "net.minecraft.tileentity.TileEntityChest.checkForAdjacentChests" | 
                        "net.minecraft.tileentity.TileEntityChest.getAdjacentChest" | 
                        "net.minecraft.tileentity.TileEntityChest.hasCustomName" | 
                        "net.minecraft.tileentity.TileEntityChest.writeToNBT" | 
                        "net.minecraft.tileentity.TileEntityChest.getChestType" | 
                        "net.minecraft.tileentity.TileEntityChest.getGuiID" | 
                        "net.minecraft.tileentity.TileEntityChest.isItemValidForSlot" | 
                        "net.minecraft.tileentity.TileEntityChest.openInventory" | 
                        "net.minecraft.tileentity.TileEntityChest.receiveClientEvent" | 
                        "net.minecraft.tileentity.TileEntityChest.clear" | 
                        "net.minecraft.tileentity.TileEntityChest.getField" | 
                        "net.minecraft.tileentity.TileEntityChest.invalidate" | 
                        "net.minecraft.tileentity.TileEntityChest.getStackInSlot" | 
                        "net.minecraft.tileentity.TileEntityChest.getSizeInventory" | 
                        "net.minecraft.tileentity.TileEntityChest.isUseableByPlayer" | 
                        "net.minecraft.tileentity.TileEntityChest.func_174910_a" | 
                        "net.minecraft.tileentity.TileEntityChest.removeStackFromSlot" | 
                        "net.minecraft.tileentity.TileEntityChest.getFieldCount" | 
                        "net.minecraft.tileentity.TileEntityChest.isChestAt" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor4.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Corridor4.buildComponent" | 
                        "net.optifine.config.NbtTagValue.matchesValue" | 
                        "net.optifine.config.NbtTagValue.matchesBase" | 
                        "net.optifine.config.NbtTagValue.matchesCompound" | 
                        "net.optifine.config.NbtTagValue.toString" | 
                        "net.optifine.config.NbtTagValue.matches" | 
                        "net.optifine.config.NbtTagValue.matchesRegex" | 
                        "net.optifine.config.NbtTagValue.matchesAnyChild" | 
                        "net.optifine.config.NbtTagValue.matchesPattern" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.getPossibleCreatures" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.canSave" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.unloadQueuedChunks" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.saveChunks" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.populate" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.replaceBlocksForBiome" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.provideChunk" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.populateChunk" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.getStrongholdGen" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.saveExtraData" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.recreateStructures" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.func_147423_a" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.chunkExists" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.getLoadedChunkCount" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.makeString" | 
                        "net.minecraft.world.gen.ChunkProviderGenerate.setBlocksInChunk" | 
                        "com.sliceclient.anticheat.check.Check.getName" | 
                        "com.sliceclient.anticheat.check.Check.debug" | 
                        "com.sliceclient.anticheat.check.Check.flag" | 
                        "com.sliceclient.anticheat.check.Check.getInfo" | 
                        "com.sliceclient.anticheat.check.Check.getType" | 
                        "com.sliceclient.anticheat.check.Check.getUser" | 
                        "com.sliceclient.anticheat.check.Check.setUser" | 
                        "com.sliceclient.anticheat.check.Check.getDescription" | 
                        "net.minecraft.client.model.ModelSnowMan.setRotationAngles" | 
                        "net.minecraft.client.model.ModelSnowMan.render" | 
                        "net.minecraft.world.gen.feature.WorldGenerator.generate" | 
                        "net.minecraft.world.gen.feature.WorldGenerator.setBlockAndNotifyAdequately" | 
                        "net.minecraft.world.gen.feature.WorldGenerator.func_175904_e" | 
                        "net.optifine.util.IteratorCache$IteratorReusable.setList" | 
                        "net.optifine.CustomItemsComparator.compare" | 
                        "slice.command.commands.CommandConfig.handle" | 
                        "net.optifine.entity.model.ModelAdapterEnderChest.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterEnderChest.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterEnderChest.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterEnderChest.getModelRendererNames" | 
                        "net.minecraft.item.crafting.RecipesDyes.addRecipes" | 
                        "net.minecraft.client.particle.EntityBreakingFX$SnowballFactory.getEntityFX" | 
                        "slice.setting.settings.ModeValue.getValue" | 
                        "slice.setting.settings.ModeValue.cycleBackwards" | 
                        "slice.setting.settings.ModeValue.getIndex" | 
                        "slice.setting.settings.ModeValue.getValues" | 
                        "slice.setting.settings.ModeValue.setValues" | 
                        "slice.setting.settings.ModeValue.setIndex" | 
                        "slice.setting.settings.ModeValue.setValue" | 
                        "slice.setting.settings.ModeValue.cycle" | 
                        "net.minecraft.block.BlockSponge.getMetaFromState" | 
                        "net.minecraft.block.BlockSponge.randomDisplayTick" | 
                        "net.minecraft.block.BlockSponge.damageDropped" | 
                        "net.minecraft.block.BlockSponge.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockSponge.getLocalizedName" | 
                        "net.minecraft.block.BlockSponge.createBlockState" | 
                        "net.minecraft.block.BlockSponge.tryAbsorb" | 
                        "net.minecraft.block.BlockSponge.getStateFromMeta" | 
                        "net.minecraft.block.BlockSponge.onBlockAdded" | 
                        "net.minecraft.block.BlockSponge.absorb" | 
                        "net.minecraft.block.BlockSponge.getSubBlocks" | 
                        "net.minecraft.stats.StatBasic.registerStat" | 
                        "net.optifine.shaders.config.ShaderMacro.getValue" | 
                        "net.optifine.shaders.config.ShaderMacro.getName" | 
                        "net.optifine.shaders.config.ShaderMacro.getSourceLine" | 
                        "net.optifine.shaders.config.ShaderMacro.toString" | 
                        "slice.gui.hud.legacy.SessionHUD.mouseReleased" | 
                        "slice.gui.hud.legacy.SessionHUD.mouseClicked" | 
                        "slice.gui.hud.legacy.SessionHUD.draw" | 
                        "net.minecraft.client.resources.FoliageColorReloadListener.onResourceManagerReload" | 
                        "net.minecraft.nbt.NBTTagEnd.read" | 
                        "net.minecraft.nbt.NBTTagEnd.toString" | 
                        "net.minecraft.nbt.NBTTagEnd.getId" | 
                        "net.minecraft.nbt.NBTTagEnd.copy" | 
                        "net.minecraft.nbt.NBTTagEnd.write" | 
                        "net.minecraft.world.gen.feature.WorldGenTaiga2.generate" | 
                        "net.minecraft.world.gen.feature.WorldGenTaiga1.generate" | 
                        "net.optifine.entity.model.ModelAdapterEnderCrystal.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterEnderCrystal.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterEnderCrystal.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterEnderCrystal.getModelRendererNames" | 
                        "net.minecraft.util.FrameTimer.getLastIndex" | 
                        "net.minecraft.util.FrameTimer.getIndex" | 
                        "net.minecraft.util.FrameTimer.getFrames" | 
                        "net.minecraft.util.FrameTimer.addFrame" | 
                        "net.minecraft.util.FrameTimer.parseIndex" | 
                        "net.minecraft.util.FrameTimer.getLagometerValue" | 
                        "net.minecraft.entity.item.EntityItemFrame.getCollisionBorderSize" | 
                        "net.minecraft.entity.item.EntityItemFrame.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityItemFrame.removeFrameFromMap" | 
                        "net.minecraft.entity.item.EntityItemFrame.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityItemFrame.entityInit" | 
                        "net.minecraft.entity.item.EntityItemFrame.interactFirst" | 
                        "net.minecraft.entity.item.EntityItemFrame.isInRangeToRenderDist" | 
                        "net.minecraft.entity.item.EntityItemFrame.func_174866_q" | 
                        "net.minecraft.entity.item.EntityItemFrame.getRotation" | 
                        "net.minecraft.entity.item.EntityItemFrame.setDisplayedItem" | 
                        "net.minecraft.entity.item.EntityItemFrame.getWidthPixels" | 
                        "net.minecraft.entity.item.EntityItemFrame.dropItemOrSelf" | 
                        "net.minecraft.entity.item.EntityItemFrame.setDisplayedItemWithUpdate" | 
                        "net.minecraft.entity.item.EntityItemFrame.attackEntityFrom" | 
                        "net.minecraft.entity.item.EntityItemFrame.func_174865_a" | 
                        "net.minecraft.entity.item.EntityItemFrame.getDisplayedItem" | 
                        "net.minecraft.entity.item.EntityItemFrame.getHeightPixels" | 
                        "net.minecraft.entity.item.EntityItemFrame.setItemRotation" | 
                        "net.minecraft.entity.item.EntityItemFrame.onBroken" | 
                        "net.minecraft.network.play.server.S20PacketEntityProperties$Snapshot.func_151408_c" | 
                        "net.minecraft.network.play.server.S20PacketEntityProperties$Snapshot.func_151409_a" | 
                        "net.minecraft.network.play.server.S20PacketEntityProperties$Snapshot.func_151410_b" | 
                        "net.minecraft.block.BlockBrewingStand.getMetaFromState" | 
                        "net.minecraft.block.BlockBrewingStand.getBlockLayer" | 
                        "net.minecraft.block.BlockBrewingStand.randomDisplayTick" | 
                        "net.minecraft.block.BlockBrewingStand.onBlockActivated" | 
                        "net.minecraft.block.BlockBrewingStand.isFullCube" | 
                        "net.minecraft.block.BlockBrewingStand.getItem" | 
                        "net.minecraft.block.BlockBrewingStand.getRenderType" | 
                        "net.minecraft.block.BlockBrewingStand.hasComparatorInputOverride" | 
                        "net.minecraft.block.BlockBrewingStand.getLocalizedName" | 
                        "net.minecraft.block.BlockBrewingStand.getComparatorInputOverride" | 
                        "net.minecraft.block.BlockBrewingStand.createBlockState" | 
                        "net.minecraft.block.BlockBrewingStand.createNewTileEntity" | 
                        "net.minecraft.block.BlockBrewingStand.addCollisionBoxesToList" | 
                        "net.minecraft.block.BlockBrewingStand.onBlockPlacedBy" | 
                        "net.minecraft.block.BlockBrewingStand.getStateFromMeta" | 
                        "net.minecraft.block.BlockBrewingStand.breakBlock" | 
                        "net.minecraft.block.BlockBrewingStand.isOpaqueCube" | 
                        "net.minecraft.block.BlockBrewingStand.getItemDropped" | 
                        "net.minecraft.block.BlockBrewingStand.setBlockBoundsForItemRender" | 
                        "net.minecraft.client.player.inventory.LocalBlockIntercommunication.getName" | 
                        "net.minecraft.client.player.inventory.LocalBlockIntercommunication.getDisplayName" | 
                        "net.minecraft.client.player.inventory.LocalBlockIntercommunication.hasCustomName" | 
                        "net.minecraft.client.player.inventory.LocalBlockIntercommunication.createContainer" | 
                        "net.minecraft.client.player.inventory.LocalBlockIntercommunication.getGuiID" | 
                        "net.minecraft.item.crafting.RecipeBookCloning.getRecipeOutput" | 
                        "net.minecraft.item.crafting.RecipeBookCloning.getRemainingItems" | 
                        "net.minecraft.item.crafting.RecipeBookCloning.getCraftingResult" | 
                        "net.minecraft.item.crafting.RecipeBookCloning.getRecipeSize" | 
                        "net.minecraft.item.crafting.RecipeBookCloning.matches" | 
                        "net.minecraft.network.login.INetHandlerLoginServer.processEncryptionResponse" | 
                        "net.minecraft.network.login.INetHandlerLoginServer.processLoginStart" | 
                        "slice.event.events.EventGuiRender.setPartialTicks" | 
                        "slice.event.events.EventGuiRender.getHeight" | 
                        "slice.event.events.EventGuiRender.setSr" | 
                        "slice.event.events.EventGuiRender.getPartialTicks" | 
                        "slice.event.events.EventGuiRender.getWidth" | 
                        "slice.event.events.EventGuiRender.setWidth" | 
                        "slice.event.events.EventGuiRender.setHeight" | 
                        "slice.event.events.EventGuiRender.getSr" | 
                        "net.minecraft.client.renderer.EnumFaceDirection.getVertexInformation" | 
                        "net.optifine.shaders.CustomTextureLocation.getTarget" | 
                        "net.optifine.shaders.CustomTextureLocation.deleteTexture" | 
                        "net.optifine.shaders.CustomTextureLocation.toString" | 
                        "net.optifine.shaders.CustomTextureLocation.getTextureId" | 
                        "net.optifine.shaders.CustomTextureLocation.getTexture" | 
                        "net.optifine.shaders.CustomTextureLocation.getTextureUnit" | 
                        "net.minecraft.client.renderer.entity.layers.LayerCreeperCharge.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerCreeperCharge.shouldCombineTextures" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.drawHoveringText" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.renderToolTip" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.confirmClicked" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.handleKeyboardInput" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154321_a" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.drawWorldBackground" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.keyTyped" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.mouseReleased" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.updateScreen" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.actionPerformed" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154319_c" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.drawDefaultBackground" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.drawScreen" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.drawCreativeTabHoveringText" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.drawGradientRect" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.drawTexturedModalRect" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.doesGuiPauseGame" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.mouseClickMove" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.initGui" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.onGuiClosed" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154324_i" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154329_h" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.mouseClicked" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154327_a" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154322_b" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154326_c" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154323_a" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154328_b" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154320_j" | 
                        "net.minecraft.client.gui.GuiScreenRealmsProxy.func_154325_a" | 
                        "net.optifine.http.HttpRequest.getPort" | 
                        "net.optifine.http.HttpRequest.getHeaders" | 
                        "net.optifine.http.HttpRequest.getProxy" | 
                        "net.optifine.http.HttpRequest.getBody" | 
                        "net.optifine.http.HttpRequest.setRedirects" | 
                        "net.optifine.http.HttpRequest.getMethod" | 
                        "net.optifine.http.HttpRequest.getFile" | 
                        "net.optifine.http.HttpRequest.getHost" | 
                        "net.optifine.http.HttpRequest.getHttp" | 
                        "net.optifine.http.HttpRequest.getRedirects" | 
                        "net.optifine.entity.model.ModelAdapterMagmaCube.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterMagmaCube.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterMagmaCube.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterMagmaCube.getModelRendererNames" | 
                        "net.minecraft.entity.passive.EntityVillager$ListEnchantedBookForEmeralds.modifyMerchantRecipeList" | 
                        "org.cef.CefClient.onCertificateError" | 
                        "org.cef.CefClient.removeDialogHandler" | 
                        "org.cef.CefClient.removeLoadHandler" | 
                        "org.cef.CefClient.addDragHandler" | 
                        "org.cef.CefClient.doClose" | 
                        "org.cef.CefClient.removePrintHandler" | 
                        "org.cef.CefClient.getAllBrowser" | 
                        "org.cef.CefClient.removeJSDialogHandler" | 
                        "org.cef.CefClient.getScreenPoint" | 
                        "org.cef.CefClient.onAfterParentChanged" | 
                        "org.cef.CefClient.getPdfPaperSize" | 
                        "org.cef.CefClient.removeContextMenuHandler" | 
                        "org.cef.CefClient.onJSDialog" | 
                        "org.cef.CefClient.isPartOf" | 
                        "org.cef.CefClient.onGotFocus" | 
                        "org.cef.CefClient.onLoadError" | 
                        "org.cef.CefClient.onAfterCreated" | 
                        "org.cef.CefClient.getJSDialogHandler" | 
                        "org.cef.CefClient.getContextMenuHandler" | 
                        "org.cef.CefClient.getBrowser" | 
                        "org.cef.CefClient.addRequestHandler" | 
                        "org.cef.CefClient.addDisplayHandler" | 
                        "org.cef.CefClient.onRenderProcessTerminated" | 
                        "org.cef.CefClient.onPreKeyEvent" | 
                        "org.cef.CefClient.onPrintReset" | 
                        "org.cef.CefClient.onConsoleMessage" | 
                        "org.cef.CefClient.onDownloadUpdated" | 
                        "org.cef.CefClient.onPrintStart" | 
                        "org.cef.CefClient.addJSDialogHandler" | 
                        "org.cef.CefClient.onContextMenuCommand" | 
                        "org.cef.CefClient.onTakeFocus" | 
                        "org.cef.CefClient.getDownloadHandler" | 
                        "org.cef.CefClient.getKeyboardHandler" | 
                        "org.cef.CefClient.onPrintJob" | 
                        "org.cef.CefClient.onOpenURLFromTab" | 
                        "org.cef.CefClient.addLifeSpanHandler" | 
                        "org.cef.CefClient.getLifeSpanHandler" | 
                        "org.cef.CefClient.onFileDialog" | 
                        "org.cef.CefClient.onBeforeUnloadDialog" | 
                        "org.cef.CefClient.onPrintSettings" | 
                        "org.cef.CefClient.createBrowser" | 
                        "org.cef.CefClient.getScreenInfo" | 
                        "org.cef.CefClient.getWindowHandler" | 
                        "org.cef.CefClient.addDialogHandler" | 
                        "org.cef.CefClient.removeMessageRouter" | 
                        "org.cef.CefClient.onCursorChange" | 
                        "org.cef.CefClient.onBeforePopup" | 
                        "org.cef.CefClient.removeDownloadHandler" | 
                        "org.cef.CefClient.removeKeyboardHandler" | 
                        "org.cef.CefClient.addMessageRouter" | 
                        "org.cef.CefClient.addPrintHandler" | 
                        "org.cef.CefClient.onLoadEnd" | 
                        "org.cef.CefClient.onLoadingStateChange" | 
                        "org.cef.CefClient.onSetFocus" | 
                        "org.cef.CefClient.onPrintDialog" | 
                        "org.cef.CefClient.removeDragHandler" | 
                        "org.cef.CefClient.onQuotaRequest" | 
                        "org.cef.CefClient.addContextMenuHandler" | 
                        "org.cef.CefClient.getRenderHandler" | 
                        "org.cef.CefClient.removeRequestHandler" | 
                        "org.cef.CefClient.onTooltip" | 
                        "org.cef.CefClient.addFocusHandler" | 
                        "org.cef.CefClient.removeLifeSpanHandler" | 
                        "org.cef.CefClient.startDragging" | 
                        "org.cef.CefClient.onPaint" | 
                        "org.cef.CefClient.onBeforeContextMenu" | 
                        "org.cef.CefClient.onTitleChange" | 
                        "org.cef.CefClient.onLoadStart" | 
                        "org.cef.CefClient.getDragHandler" | 
                        "org.cef.CefClient.getDisplayHandler" | 
                        "org.cef.CefClient.onDialogClosed" | 
                        "org.cef.CefClient.dispose" | 
                        "org.cef.CefClient.cleanupBrowser" | 
                        "org.cef.CefClient.getViewRect" | 
                        "org.cef.CefClient.onPopupSize" | 
                        "org.cef.CefClient.onPopupShow" | 
                        "org.cef.CefClient.getPrintHandler" | 
                        "org.cef.CefClient.addKeyboardHandler" | 
                        "org.cef.CefClient.addDownloadHandler" | 
                        "org.cef.CefClient.updateDragCursor" | 
                        "org.cef.CefClient.onBeforeBrowse" | 
                        "org.cef.CefClient.removeFocusHandler" | 
                        "org.cef.CefClient.onDragEnter" | 
                        "org.cef.CefClient.onAddressChange" | 
                        "org.cef.CefClient.onResetDialogState" | 
                        "org.cef.CefClient.onContextMenuDismissed" | 
                        "org.cef.CefClient.getResourceRequestHandler" | 
                        "org.cef.CefClient.getRect" | 
                        "org.cef.CefClient.getLoadHandler" | 
                        "org.cef.CefClient.addLoadHandler" | 
                        "org.cef.CefClient.onBeforeClose" | 
                        "org.cef.CefClient.onBeforeDownload" | 
                        "org.cef.CefClient.getRequestHandler" | 
                        "org.cef.CefClient.onKeyEvent" | 
                        "org.cef.CefClient.getAuthCredentials" | 
                        "org.cef.CefClient.getFocusHandler" | 
                        "org.cef.CefClient.onMouseEvent" | 
                        "org.cef.CefClient.removeDisplayHandler" | 
                        "org.cef.CefClient.getDialogHandler" | 
                        "org.cef.CefClient.onStatusMessage" | 
                        "net.minecraft.client.renderer.entity.layers.LayerBipedArmor.initArmor" | 
                        "net.minecraft.client.renderer.entity.layers.LayerBipedArmor.setModelPartVisible" | 
                        "net.minecraft.client.renderer.entity.layers.LayerBipedArmor.setModelVisible" | 
                        "net.minecraft.client.model.PositionTextureVertex.setTexturePosition" | 
                        "net.minecraft.block.BlockHugeMushroom.getMetaFromState" | 
                        "net.minecraft.block.BlockHugeMushroom.getMapColor" | 
                        "net.minecraft.block.BlockHugeMushroom.createBlockState" | 
                        "net.minecraft.block.BlockHugeMushroom.quantityDropped" | 
                        "net.minecraft.block.BlockHugeMushroom.getItem" | 
                        "net.minecraft.block.BlockHugeMushroom.getStateFromMeta" | 
                        "net.minecraft.block.BlockHugeMushroom.getItemDropped" | 
                        "net.minecraft.block.BlockHugeMushroom.onBlockPlaced" | 
                        "net.minecraft.block.BlockJukebox$TileEntityJukebox.readFromNBT" | 
                        "net.minecraft.block.BlockJukebox$TileEntityJukebox.setRecord" | 
                        "net.minecraft.block.BlockJukebox$TileEntityJukebox.getRecord" | 
                        "net.minecraft.block.BlockJukebox$TileEntityJukebox.writeToNBT" | 
                        "net.minecraft.entity.ai.EntityAIFollowOwner.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIFollowOwner.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIFollowOwner.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIFollowOwner.func_181065_a" | 
                        "net.minecraft.entity.ai.EntityAIFollowOwner.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIFollowOwner.continueExecuting" | 
                        "net.minecraft.world.gen.feature.WorldGenPumpkin.generate" | 
                        "net.minecraft.client.particle.EntityCloudFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityCloudFX.onUpdate" | 
                        "net.minecraft.enchantment.EnchantmentHelper.hasEnchantment" | 
                        "net.minecraft.item.EnumDyeColor.getMetadata" | 
                        "net.minecraft.item.EnumDyeColor.getName" | 
                        "net.minecraft.item.EnumDyeColor.getMapColor" | 
                        "net.minecraft.item.EnumDyeColor.getDyeDamage" | 
                        "net.minecraft.item.EnumDyeColor.toString" | 
                        "net.minecraft.item.EnumDyeColor.getUnlocalizedName" | 
                        "net.minecraft.client.renderer.entity.RenderDragon.drawRechargeRay" | 
                        "net.minecraft.client.renderer.entity.RenderDragon.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderDragon.rotateCorpse" | 
                        "net.minecraft.client.renderer.entity.RenderDragon.renderModel" | 
                        "net.minecraft.client.renderer.entity.RenderDragon.getEntityTexture" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityItemStackRenderer.renderByItem" | 
                        "net.optifine.config.ItemLocator.getObject" | 
                        "net.minecraft.client.audio.SoundCategory.getCategoryId" | 
                        "net.minecraft.client.audio.SoundCategory.getCategoryName" | 
                        "org.cef.handler.CefKeyboardHandler.onKeyEvent" | 
                        "org.cef.handler.CefKeyboardHandler.onPreKeyEvent" | 
                        "net.minecraft.command.CommandWeather.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandWeather.getCommandUsage" | 
                        "net.minecraft.command.CommandWeather.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandWeather.processCommand" | 
                        "net.minecraft.command.CommandWeather.getCommandName" | 
                        "org.cef.CefBrowserCustom.onPopupSize" | 
                        "org.cef.CefBrowserCustom.getWindowHandle" | 
                        "org.cef.CefBrowserCustom.mouseScrolled" | 
                        "org.cef.CefBrowserCustom.onPopupShow" | 
                        "org.cef.CefBrowserCustom.updateDragCursor" | 
                        "org.cef.CefBrowserCustom.createBrowserIfRequired" | 
                        "org.cef.CefBrowserCustom.lambda$mouseScrolled$1" | 
                        "org.cef.CefBrowserCustom.keyTyped" | 
                        "org.cef.CefBrowserCustom.createDevToolsBrowser" | 
                        "org.cef.CefBrowserCustom.mcefUpdate" | 
                        "org.cef.CefBrowserCustom.getRenderHandler" | 
                        "org.cef.CefBrowserCustom.mouseMoved" | 
                        "org.cef.CefBrowserCustom.close" | 
                        "org.cef.CefBrowserCustom.mouseInteracted" | 
                        "org.cef.CefBrowserCustom.startDragging" | 
                        "org.cef.CefBrowserCustom.getScreenPoint" | 
                        "org.cef.CefBrowserCustom.onPaint" | 
                        "org.cef.CefBrowserCustom.keyEventByKeyCode" | 
                        "org.cef.CefBrowserCustom.lambda$wasResized_$0" | 
                        "org.cef.CefBrowserCustom.notifyAfterParentChanged" | 
                        "org.cef.CefBrowserCustom.getScreenInfo" | 
                        "org.cef.CefBrowserCustom.lambda$keyEventByKeyCode$3" | 
                        "org.cef.CefBrowserCustom.wasResized_" | 
                        "org.cef.CefBrowserCustom.createImmediately" | 
                        "org.cef.CefBrowserCustom.onCursorChange" | 
                        "org.cef.CefBrowserCustom.finalize" | 
                        "org.cef.CefBrowserCustom.getUIComponent" | 
                        "org.cef.CefBrowserCustom.createScreenshot" | 
                        "org.cef.CefBrowserCustom.getViewRect" | 
                        "org.cef.CefBrowserCustom.lambda$keyTyped$2" | 
                        "org.cef.callback.CefPdfPrintCallback.onPdfPrintFinished" | 
                        "org.cef.callback.CefCallback.cancel" | 
                        "org.cef.callback.CefCallback.Continue" | 
                        "net.minecraft.entity.ai.EntityAIPlay.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIPlay.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIPlay.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIPlay.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIPlay.continueExecuting" | 
                        "net.minecraft.client.particle.EntityBreakingFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityBreakingFX.getFXLayer" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.readFromNBT" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.getSpawnerPosition" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.getEntityNameToSpawn" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.resetTimer" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.setDelayToMin" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.getPrevMobRotation" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.isActivated" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.setEntityName" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.func_180612_a" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.getSpawnerWorld" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.updateSpawner" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.getRandomEntity" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.spawnNewEntity" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.func_98267_a" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.getMobRotation" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.setRandomEntity" | 
                        "net.minecraft.tileentity.MobSpawnerBaseLogic.writeToNBT" | 
                        "net.minecraft.command.server.CommandBanPlayer.canCommandSenderUseCommand" | 
                        "net.minecraft.command.server.CommandBanPlayer.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandBanPlayer.getCommandUsage" | 
                        "net.minecraft.command.server.CommandBanPlayer.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandBanPlayer.processCommand" | 
                        "net.minecraft.command.server.CommandBanPlayer.getCommandName" | 
                        "net.minecraft.client.gui.GuiLabel.setCentered" | 
                        "net.minecraft.client.gui.GuiLabel.drawLabel" | 
                        "net.minecraft.client.gui.GuiLabel.func_175202_a" | 
                        "net.minecraft.client.gui.GuiLabel.drawLabelBackground" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Path.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Path.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Path.buildComponent" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Path.writeStructureToNBT" | 
                        "net.minecraft.client.renderer.entity.layers.LayerCape.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerCape.shouldCombineTextures" | 
                        "org.cef.callback.CefJSDialogCallback.Continue" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getSizeOnDisk" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setSaveVersion" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getNBTTagCompound" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setWorldTotalTime" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getPlayerNBTTagCompound" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getRainTime" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.isInitialized" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setRaining" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setSpawn" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setDifficulty" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setAllowCommands" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setWorldTime" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getWorldName" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setWorldName" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getWorldTime" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setDifficultyLocked" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getSaveVersion" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.cloneNBTCompound" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setServerInitialized" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.isMapFeaturesEnabled" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getTerrainType" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getThunderTime" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getSpawnY" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getSpawnZ" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.isHardcoreModeEnabled" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setSpawnX" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getSpawnX" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setSpawnZ" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setSpawnY" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getSeed" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getWorldTotalTime" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getGameType" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.isDifficultyLocked" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getLastTimePlayed" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getGameRulesInstance" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setRainTime" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.isThundering" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.areCommandsAllowed" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setTerrainType" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setThundering" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.isRaining" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.getDifficulty" | 
                        "net.minecraft.world.storage.DerivedWorldInfo.setThunderTime" | 
                        "net.minecraft.nbt.NBTBase.read" | 
                        "net.minecraft.nbt.NBTBase.hashCode" | 
                        "net.minecraft.nbt.NBTBase.equals" | 
                        "net.minecraft.nbt.NBTBase.toString" | 
                        "net.minecraft.nbt.NBTBase.getId" | 
                        "net.minecraft.nbt.NBTBase.copy" | 
                        "net.minecraft.nbt.NBTBase.getString" | 
                        "net.minecraft.nbt.NBTBase.write" | 
                        "net.minecraft.nbt.NBTBase.hasNoTags" | 
                        "net.minecraft.client.gui.GuiIngameMenu.updateScreen" | 
                        "net.minecraft.client.gui.GuiIngameMenu.actionPerformed" | 
                        "net.minecraft.client.gui.GuiIngameMenu.initGui" | 
                        "net.minecraft.client.gui.GuiIngameMenu.drawScreen" | 
                        "slice.gui.alt.field.GuiPasswordField.drawTextBox" | 
                        "slice.gui.alt.field.GuiPasswordField.textboxKeyTyped" | 
                        "slice.gui.alt.field.GuiPasswordField.mouseClicked" | 
                        "slice.gui.alt.field.GuiPasswordField.text" | 
                        "net.minecraft.client.model.ModelCreeper.setRotationAngles" | 
                        "net.minecraft.client.model.ModelCreeper.render" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry.func_183027_f" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry.hashCode" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry.equals" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry.getResourcePackName" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry.toString" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry.getResourcePack" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry.bindTexturePackIcon" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry.updateResourcePack" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry.getTexturePackDescription" | 
                        "net.minecraft.client.resources.ResourcePackRepository$Entry.closeResourcePack" | 
                        "net.optifine.entity.model.ModelAdapterChicken.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterChicken.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterChicken.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterChicken.getModelRendererNames" | 
                        "org.cef.callback.CefCookieVisitor.visit" | 
                        "net.minecraft.command.CommandGameRule.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandGameRule.getCommandUsage" | 
                        "net.minecraft.command.CommandGameRule.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandGameRule.processCommand" | 
                        "net.minecraft.command.CommandGameRule.getCommandName" | 
                        "net.minecraft.command.CommandGameRule.getGameRules" | 
                        "org.cef.network.CefCookieManager.visitUrlCookies" | 
                        "org.cef.network.CefCookieManager.flushStore" | 
                        "org.cef.network.CefCookieManager.visitAllCookies" | 
                        "org.cef.network.CefCookieManager.deleteCookies" | 
                        "org.cef.network.CefCookieManager.finalize" | 
                        "org.cef.network.CefCookieManager.dispose" | 
                        "org.cef.network.CefCookieManager.setCookie" | 
                        "net.minecraft.block.BlockLog.breakBlock" | 
                        "net.minecraft.block.BlockLog.onBlockPlaced" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$FitSimpleRoomTopHelper.func_175969_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$FitSimpleRoomTopHelper.func_175968_a" | 
                        "org.cef.handler.CefResourceRequestHandlerAdapter.getResourceHandler" | 
                        "org.cef.handler.CefResourceRequestHandlerAdapter.onResourceResponse" | 
                        "org.cef.handler.CefResourceRequestHandlerAdapter.getCookieAccessFilter" | 
                        "org.cef.handler.CefResourceRequestHandlerAdapter.onResourceRedirect" | 
                        "org.cef.handler.CefResourceRequestHandlerAdapter.onBeforeResourceLoad" | 
                        "org.cef.handler.CefResourceRequestHandlerAdapter.onResourceLoadComplete" | 
                        "org.cef.handler.CefResourceRequestHandlerAdapter.onProtocolExecution" | 
                        "net.minecraft.client.renderer.RegionRenderCacheBuilder.getWorldRendererByLayerId" | 
                        "net.minecraft.client.renderer.RegionRenderCacheBuilder.getWorldRendererByLayer" | 
                        "net.minecraft.block.BlockMelon.quantityDropped" | 
                        "net.minecraft.block.BlockMelon.quantityDroppedWithBonus" | 
                        "net.minecraft.block.BlockMelon.getItemDropped" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument$StartMonument.readFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument$StartMonument.generateStructure" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument$StartMonument.func_175788_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument$StartMonument.func_175787_b" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument$StartMonument.writeToNBT" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonument$StartMonument.func_175789_b" | 
                        "net.optifine.entity.model.ModelAdapterOcelot.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterOcelot.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterOcelot.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterOcelot.getModelRendererNames" | 
                        "net.minecraft.command.CommandFill.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandFill.getCommandUsage" | 
                        "net.minecraft.command.CommandFill.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandFill.processCommand" | 
                        "net.minecraft.command.CommandFill.getCommandName" | 
                        "net.optifine.RandomEntity.getMaxHealth" | 
                        "net.optifine.RandomEntity.getName" | 
                        "net.optifine.RandomEntity.getSpawnBiome" | 
                        "net.optifine.RandomEntity.getId" | 
                        "net.optifine.RandomEntity.getSpawnPosition" | 
                        "net.optifine.RandomEntity.getEntity" | 
                        "net.optifine.RandomEntity.getHealth" | 
                        "net.optifine.RandomEntity.setEntity" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource.requiresConversion" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource.levelExists" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource.getName" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource.isNewLevelIdAcceptable" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource.convertLevel" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource.deleteLevel" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource.isConvertible" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource.renameLevel" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource.getLevelList" | 
                        "net.minecraft.realms.RealmsAnvilLevelStorageSource.clearAll" | 
                        "net.optifine.entity.model.CustomModelRenderer.isAttach" | 
                        "net.optifine.entity.model.CustomModelRenderer.getModelPart" | 
                        "net.optifine.entity.model.CustomModelRenderer.getModelUpdater" | 
                        "net.optifine.entity.model.CustomModelRenderer.getModelRenderer" | 
                        "net.minecraft.client.gui.GuiButtonLanguage.drawButton" | 
                        "net.minecraft.item.crafting.ShapedRecipes.getRecipeOutput" | 
                        "net.minecraft.item.crafting.ShapedRecipes.getRemainingItems" | 
                        "net.minecraft.item.crafting.ShapedRecipes.getCraftingResult" | 
                        "net.minecraft.item.crafting.ShapedRecipes.getRecipeSize" | 
                        "net.minecraft.item.crafting.ShapedRecipes.checkMatch" | 
                        "net.minecraft.item.crafting.ShapedRecipes.matches" | 
                        "org.cef.browser.CefBrowserCustom.onPopupSize" | 
                        "org.cef.browser.CefBrowserCustom.getWindowHandle" | 
                        "org.cef.browser.CefBrowserCustom.mouseScrolled" | 
                        "org.cef.browser.CefBrowserCustom.onPopupShow" | 
                        "org.cef.browser.CefBrowserCustom.updateDragCursor" | 
                        "org.cef.browser.CefBrowserCustom.createBrowserIfRequired" | 
                        "org.cef.browser.CefBrowserCustom.keyTyped" | 
                        "org.cef.browser.CefBrowserCustom.createDevToolsBrowser" | 
                        "org.cef.browser.CefBrowserCustom.mcefUpdate" | 
                        "org.cef.browser.CefBrowserCustom.getRenderHandler" | 
                        "org.cef.browser.CefBrowserCustom.mouseMoved" | 
                        "org.cef.browser.CefBrowserCustom.close" | 
                        "org.cef.browser.CefBrowserCustom.mouseInteracted" | 
                        "org.cef.browser.CefBrowserCustom.startDragging" | 
                        "org.cef.browser.CefBrowserCustom.getScreenPoint" | 
                        "org.cef.browser.CefBrowserCustom.onPaint" | 
                        "org.cef.browser.CefBrowserCustom.keyEventByKeyCode" | 
                        "org.cef.browser.CefBrowserCustom.notifyAfterParentChanged" | 
                        "org.cef.browser.CefBrowserCustom.getScreenInfo" | 
                        "org.cef.browser.CefBrowserCustom.wasResized_" | 
                        "org.cef.browser.CefBrowserCustom.createImmediately" | 
                        "org.cef.browser.CefBrowserCustom.onCursorChange" | 
                        "org.cef.browser.CefBrowserCustom.lambda$onPopupShow$0" | 
                        "org.cef.browser.CefBrowserCustom.finalize" | 
                        "org.cef.browser.CefBrowserCustom.getUIComponent" | 
                        "org.cef.browser.CefBrowserCustom.createScreenshot" | 
                        "org.cef.browser.CefBrowserCustom.getViewRect" | 
                        "net.minecraft.world.biome.BiomeGenHills.decorate" | 
                        "net.minecraft.world.biome.BiomeGenHills.createMutatedBiome" | 
                        "net.minecraft.world.biome.BiomeGenHills.genTerrainBlocks" | 
                        "net.minecraft.world.biome.BiomeGenHills.genBigTreeChance" | 
                        "net.minecraft.world.biome.BiomeGenHills.mutateHills" | 
                        "net.minecraft.nbt.NBTTagDouble.getByte" | 
                        "net.minecraft.nbt.NBTTagDouble.read" | 
                        "net.minecraft.nbt.NBTTagDouble.getShort" | 
                        "net.minecraft.nbt.NBTTagDouble.getDouble" | 
                        "net.minecraft.nbt.NBTTagDouble.getId" | 
                        "net.minecraft.nbt.NBTTagDouble.getFloat" | 
                        "net.minecraft.nbt.NBTTagDouble.getLong" | 
                        "net.minecraft.nbt.NBTTagDouble.getInt" | 
                        "net.minecraft.nbt.NBTTagDouble.hashCode" | 
                        "net.minecraft.nbt.NBTTagDouble.equals" | 
                        "net.minecraft.nbt.NBTTagDouble.toString" | 
                        "net.minecraft.nbt.NBTTagDouble.copy" | 
                        "net.minecraft.nbt.NBTTagDouble.write" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$EntryRoom.addComponentParts" | 
                        "net.minecraft.client.gui.GuiCreateWorld.recreateFromExistingWorld" | 
                        "net.minecraft.client.gui.GuiCreateWorld.initGui" | 
                        "net.minecraft.client.gui.GuiCreateWorld.onGuiClosed" | 
                        "net.minecraft.client.gui.GuiCreateWorld.updateDisplayState" | 
                        "net.minecraft.client.gui.GuiCreateWorld.canSelectCurWorldType" | 
                        "net.minecraft.client.gui.GuiCreateWorld.keyTyped" | 
                        "net.minecraft.client.gui.GuiCreateWorld.updateScreen" | 
                        "net.minecraft.client.gui.GuiCreateWorld.actionPerformed" | 
                        "net.minecraft.client.gui.GuiCreateWorld.showMoreWorldOptions" | 
                        "net.minecraft.client.gui.GuiCreateWorld.mouseClicked" | 
                        "net.minecraft.client.gui.GuiCreateWorld.toggleMoreWorldOptions" | 
                        "net.minecraft.client.gui.GuiCreateWorld.drawScreen" | 
                        "net.minecraft.client.gui.GuiCreateWorld.calcSaveDirName" | 
                        "net.minecraft.block.BlockStoneSlab.getVariantProperty" | 
                        "net.minecraft.block.BlockStoneSlab.getMetaFromState" | 
                        "net.minecraft.block.BlockStoneSlab.damageDropped" | 
                        "net.minecraft.block.BlockStoneSlab.getMapColor" | 
                        "net.minecraft.block.BlockStoneSlab.getVariant" | 
                        "net.minecraft.block.BlockStoneSlab.createBlockState" | 
                        "net.minecraft.block.BlockStoneSlab.getItem" | 
                        "net.minecraft.block.BlockStoneSlab.getStateFromMeta" | 
                        "net.minecraft.block.BlockStoneSlab.getItemDropped" | 
                        "net.minecraft.block.BlockStoneSlab.getUnlocalizedName" | 
                        "net.minecraft.block.BlockStoneSlab.getSubBlocks" | 
                        "net.minecraft.entity.ai.EntityAIMoveTowardsTarget.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIMoveTowardsTarget.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIMoveTowardsTarget.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIMoveTowardsTarget.continueExecuting" | 
                        "net.optifine.entity.model.anim.ModelVariableType.setFloat" | 
                        "net.optifine.entity.model.anim.ModelVariableType.getName" | 
                        "net.optifine.entity.model.anim.ModelVariableType.getFloat" | 
                        "net.optifine.shaders.gui.GuiButtonDownloadShaders.drawButton" | 
                        "net.minecraft.block.BlockHalfStoneSlabNew.isDouble" | 
                        "net.optifine.shaders.SVertexBuilder.calcNormal" | 
                        "net.optifine.shaders.SVertexBuilder.pushEntity" | 
                        "net.optifine.shaders.SVertexBuilder.popEntity" | 
                        "net.optifine.texture.TextureType.getId" | 
                        "org.cef.handler.CefMessageRouterHandler.onQueryCanceled" | 
                        "org.cef.handler.CefMessageRouterHandler.onQuery" | 
                        "net.minecraft.block.BlockPotato.getSeed" | 
                        "net.minecraft.block.BlockPotato.getCrop" | 
                        "net.minecraft.block.BlockPotato.dropBlockAsItemWithChance" | 
                        "net.minecraft.client.particle.EntityFX.writeEntityToNBT" | 
                        "net.minecraft.client.particle.EntityFX.multiplyVelocity" | 
                        "net.minecraft.client.particle.EntityFX.readEntityFromNBT" | 
                        "net.minecraft.client.particle.EntityFX.entityInit" | 
                        "net.minecraft.client.particle.EntityFX.canAttackWithItem" | 
                        "net.minecraft.client.particle.EntityFX.getGreenColorF" | 
                        "net.minecraft.client.particle.EntityFX.canTriggerWalking" | 
                        "net.minecraft.client.particle.EntityFX.getBlueColorF" | 
                        "net.minecraft.client.particle.EntityFX.nextTextureIndexX" | 
                        "net.minecraft.client.particle.EntityFX.setParticleTextureIndex" | 
                        "net.minecraft.client.particle.EntityFX.getRedColorF" | 
                        "net.minecraft.client.particle.EntityFX.getAlpha" | 
                        "net.minecraft.client.particle.EntityFX.setAlphaF" | 
                        "net.minecraft.client.particle.EntityFX.setParticleIcon" | 
                        "net.minecraft.client.particle.EntityFX.multipleParticleScaleBy" | 
                        "net.minecraft.client.particle.EntityFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityFX.getFXLayer" | 
                        "net.minecraft.client.particle.EntityFX.toString" | 
                        "net.minecraft.client.particle.EntityFX.onUpdate" | 
                        "net.minecraft.client.particle.EntityFX.setRBGColorF" | 
                        "net.minecraft.client.particle.EntityCrit2FX$MagicFactory.getEntityFX" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityMetadata" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSetSlot" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleDestroyEntities" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleWindowItems" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleScoreboardObjective" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleTeams" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSpawnObject" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleParticles" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleDisconnect" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleUpdateScore" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleTabComplete" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityHeadLook" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleCamera" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEffect" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handlePlayerListHeaderFooter" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSpawnPosition" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleWindowProperty" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleResourcePack" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleJoinGame" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSpawnMob" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityVelocity" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleUpdateHealth" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleMaps" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityStatus" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleBlockBreakAnim" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleRemoveEntityEffect" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityNBT" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleRespawn" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSetCompressionLevel" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSoundEffect" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityEffect" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleMapChunkBulk" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleCloseWindow" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleUseBed" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityProperties" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleUpdateTileEntity" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleChunkData" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handlePlayerAbilities" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleConfirmTransaction" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleBlockAction" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityTeleport" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleAnimation" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSpawnExperienceOrb" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handlePlayerPosLook" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleChat" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleStatistics" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleUpdateSign" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSetExperience" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleHeldItemChange" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSpawnGlobalEntity" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSignEditorOpen" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityEquipment" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleDisplayScoreboard" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleMultiBlockChange" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleBlockChange" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleExplosion" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityMovement" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleServerDifficulty" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleTimeUpdate" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSpawnPainting" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleWorldBorder" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleKeepAlive" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleCustomPayload" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleEntityAttach" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handlePlayerListItem" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleCombatEvent" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleChangeGameState" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleTitle" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleSpawnPlayer" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleCollectItem" | 
                        "net.minecraft.network.play.INetHandlerPlayClient.handleOpenWindow" | 
                        "net.minecraft.entity.monster.EntityGuardian$GuardianMoveHelper.onUpdateMoveHelper" | 
                        "net.optifine.shaders.gui.GuiButtonEnumShaderOption.getEnumShaderOption" | 
                        "net.optifine.shaders.gui.GuiButtonEnumShaderOption.updateButtonText" | 
                        "net.minecraft.entity.player.PlayerCapabilities.writeCapabilitiesToNBT" | 
                        "net.minecraft.entity.player.PlayerCapabilities.getWalkSpeed" | 
                        "net.minecraft.entity.player.PlayerCapabilities.getFlySpeed" | 
                        "net.minecraft.entity.player.PlayerCapabilities.readCapabilitiesFromNBT" | 
                        "net.minecraft.entity.player.PlayerCapabilities.setFlySpeed" | 
                        "net.minecraft.entity.player.PlayerCapabilities.setPlayerWalkSpeed" | 
                        "net.minecraft.client.particle.IParticleFactory.getEntityFX" | 
                        "net.minecraft.tileentity.TileEntityBanner.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityBanner.getColorList" | 
                        "net.minecraft.tileentity.TileEntityBanner.setItemValues" | 
                        "net.minecraft.tileentity.TileEntityBanner.getDescriptionPacket" | 
                        "net.minecraft.tileentity.TileEntityBanner.getPatternResourceLocation" | 
                        "net.minecraft.tileentity.TileEntityBanner.getPatternList" | 
                        "net.minecraft.tileentity.TileEntityBanner.initializeBannerData" | 
                        "net.minecraft.tileentity.TileEntityBanner.writeToNBT" | 
                        "net.minecraft.client.gui.ServerListEntryLanScan.mouseReleased" | 
                        "net.minecraft.client.gui.ServerListEntryLanScan.drawEntry" | 
                        "net.minecraft.client.gui.ServerListEntryLanScan.setSelected" | 
                        "net.minecraft.client.gui.ServerListEntryLanScan.mousePressed" | 
                        "net.minecraft.client.renderer.entity.RenderVillager.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderVillager.getMainModel" | 
                        "net.minecraft.client.renderer.entity.RenderVillager.getEntityTexture" | 
                        "net.minecraft.entity.projectile.EntityArrow.getDamage" | 
                        "net.minecraft.entity.projectile.EntityArrow.writeEntityToNBT" | 
                        "net.minecraft.entity.projectile.EntityArrow.readEntityFromNBT" | 
                        "net.minecraft.entity.projectile.EntityArrow.entityInit" | 
                        "net.minecraft.entity.projectile.EntityArrow.canAttackWithItem" | 
                        "net.minecraft.entity.projectile.EntityArrow.canTriggerWalking" | 
                        "net.minecraft.entity.projectile.EntityArrow.setDamage" | 
                        "net.minecraft.entity.projectile.EntityArrow.getEyeHeight" | 
                        "net.minecraft.entity.projectile.EntityArrow.getIsCritical" | 
                        "net.minecraft.entity.projectile.EntityArrow.setPositionAndRotation2" | 
                        "net.minecraft.entity.projectile.EntityArrow.setIsCritical" | 
                        "net.minecraft.entity.projectile.EntityArrow.setThrowableHeading" | 
                        "net.minecraft.entity.projectile.EntityArrow.setVelocity" | 
                        "net.minecraft.entity.projectile.EntityArrow.setKnockbackStrength" | 
                        "net.minecraft.entity.projectile.EntityArrow.onCollideWithPlayer" | 
                        "net.minecraft.entity.projectile.EntityArrow.onUpdate" | 
                        "net.optifine.shaders.CustomTexture.getTarget" | 
                        "net.optifine.shaders.CustomTexture.getPath" | 
                        "net.optifine.shaders.CustomTexture.deleteTexture" | 
                        "net.optifine.shaders.CustomTexture.toString" | 
                        "net.optifine.shaders.CustomTexture.getTextureId" | 
                        "net.optifine.shaders.CustomTexture.getTexture" | 
                        "net.optifine.shaders.CustomTexture.getTextureUnit" | 
                        "net.minecraft.world.biome.BiomeColorHelper$ColorResolver.getColorAtPos" | 
                        "net.minecraft.pathfinding.PathNavigateClimber.getPathToPos" | 
                        "net.minecraft.pathfinding.PathNavigateClimber.getPathToEntityLiving" | 
                        "net.minecraft.pathfinding.PathNavigateClimber.onUpdateNavigation" | 
                        "net.minecraft.pathfinding.PathNavigateClimber.tryMoveToEntityLiving" | 
                        "slice.event.manager.sender.EventPacketSender.getEvent" | 
                        "slice.event.manager.sender.EventPacketSender.getMethodParameterType" | 
                        "slice.event.manager.sender.EventPacketSender.hasAnnotation" | 
                        "slice.event.manager.sender.EventPacketSender.getObject" | 
                        "slice.event.manager.sender.EventPacketSender.getEventPacket" | 
                        "slice.event.manager.sender.EventPacketSender.runEvent" | 
                        "slice.event.manager.sender.EventPacketSender.getMethod" | 
                        "net.minecraft.creativetab.CreativeTabs.getTabIndex" | 
                        "net.minecraft.creativetab.CreativeTabs.addEnchantmentBooksToList" | 
                        "net.minecraft.creativetab.CreativeTabs.setBackgroundImageName" | 
                        "net.minecraft.creativetab.CreativeTabs.getTabLabel" | 
                        "net.minecraft.creativetab.CreativeTabs.getTranslatedTabLabel" | 
                        "net.minecraft.creativetab.CreativeTabs.shouldHidePlayerInventory" | 
                        "net.minecraft.creativetab.CreativeTabs.hasRelevantEnchantmentType" | 
                        "net.minecraft.creativetab.CreativeTabs.setNoScrollbar" | 
                        "net.minecraft.creativetab.CreativeTabs.setNoTitle" | 
                        "net.minecraft.creativetab.CreativeTabs.getBackgroundImageName" | 
                        "net.minecraft.creativetab.CreativeTabs.setRelevantEnchantmentTypes" | 
                        "net.minecraft.creativetab.CreativeTabs.getIconItemStack" | 
                        "net.minecraft.creativetab.CreativeTabs.getIconItemDamage" | 
                        "net.minecraft.creativetab.CreativeTabs.displayAllReleventItems" | 
                        "net.minecraft.creativetab.CreativeTabs.isTabInFirstRow" | 
                        "net.minecraft.creativetab.CreativeTabs.getTabIconItem" | 
                        "net.minecraft.creativetab.CreativeTabs.drawInForegroundOfTab" | 
                        "net.minecraft.creativetab.CreativeTabs.getRelevantEnchantmentTypes" | 
                        "net.minecraft.creativetab.CreativeTabs.getTabColumn" | 
                        "org.cef.browser.CefFrame_N.getName" | 
                        "org.cef.browser.CefFrame_N.cut" | 
                        "org.cef.browser.CefFrame_N.N_Cut" | 
                        "org.cef.browser.CefFrame_N.N_Dispose" | 
                        "org.cef.browser.CefFrame_N.paste" | 
                        "org.cef.browser.CefFrame_N.redo" | 
                        "org.cef.browser.CefFrame_N.N_Copy" | 
                        "org.cef.browser.CefFrame_N.undo" | 
                        "org.cef.browser.CefFrame_N.N_GetURL" | 
                        "org.cef.browser.CefFrame_N.N_Redo" | 
                        "org.cef.browser.CefFrame_N.N_GetName" | 
                        "org.cef.browser.CefFrame_N.N_Paste" | 
                        "org.cef.browser.CefFrame_N.N_IsValid" | 
                        "org.cef.browser.CefFrame_N.getIdentifier" | 
                        "org.cef.browser.CefFrame_N.copy" | 
                        "org.cef.browser.CefFrame_N.N_GetIdentifier" | 
                        "org.cef.browser.CefFrame_N.getParent" | 
                        "org.cef.browser.CefFrame_N.N_IsMain" | 
                        "org.cef.browser.CefFrame_N.isMain" | 
                        "org.cef.browser.CefFrame_N.isValid" | 
                        "org.cef.browser.CefFrame_N.N_Undo" | 
                        "org.cef.browser.CefFrame_N.N_GetParent" | 
                        "org.cef.browser.CefFrame_N.isFocused" | 
                        "org.cef.browser.CefFrame_N.N_ExecuteJavaScript" | 
                        "org.cef.browser.CefFrame_N.getURL" | 
                        "org.cef.browser.CefFrame_N.executeJavaScript" | 
                        "org.cef.browser.CefFrame_N.finalize" | 
                        "org.cef.browser.CefFrame_N.dispose" | 
                        "org.cef.browser.CefFrame_N.N_IsFocused" | 
                        "net.minecraft.client.resources.IResource.getResourceLocation" | 
                        "net.minecraft.client.resources.IResource.getMetadata" | 
                        "net.minecraft.client.resources.IResource.getResourcePackName" | 
                        "net.minecraft.client.resources.IResource.hasMetadata" | 
                        "net.minecraft.client.resources.IResource.getInputStream" | 
                        "net.minecraft.potion.PotionAttackDamage.getAttributeModifierAmount" | 
                        "net.minecraft.village.Village.getVillageRadius" | 
                        "net.minecraft.village.Village.getCenter" | 
                        "net.minecraft.village.Village.getDoorInfo" | 
                        "net.minecraft.village.Village.setReputationForPlayer" | 
                        "net.minecraft.village.Village.getTicksSinceLastDoorAdding" | 
                        "net.minecraft.village.Village.func_179861_a" | 
                        "net.minecraft.village.Village.func_179862_a" | 
                        "net.minecraft.village.Village.isWoodDoor" | 
                        "net.minecraft.village.Village.addOrRenewAgressor" | 
                        "net.minecraft.village.Village.findNearestVillageAggressor" | 
                        "net.minecraft.village.Village.getNearestTargetPlayer" | 
                        "net.minecraft.village.Village.isMatingSeason" | 
                        "net.minecraft.village.Village.updateVillageRadiusAndCenter" | 
                        "net.minecraft.village.Village.addVillageDoorInfo" | 
                        "net.minecraft.village.Village.getNumVillageDoors" | 
                        "net.minecraft.village.Village.readVillageDataFromNBT" | 
                        "net.minecraft.village.Village.writeVillageDataToNBT" | 
                        "net.minecraft.village.Village.setDefaultPlayerReputation" | 
                        "net.minecraft.village.Village.getReputationForPlayer" | 
                        "net.minecraft.village.Village.updateNumIronGolems" | 
                        "net.minecraft.village.Village.getNumVillagers" | 
                        "net.minecraft.village.Village.removeDeadAndOutOfRangeDoors" | 
                        "net.minecraft.village.Village.getNearestDoor" | 
                        "net.minecraft.village.Village.isAnnihilated" | 
                        "net.minecraft.village.Village.getExistedDoor" | 
                        "net.minecraft.village.Village.tick" | 
                        "net.minecraft.village.Village.removeDeadAndOldAgressors" | 
                        "net.minecraft.village.Village.isPlayerReputationTooLow" | 
                        "net.minecraft.village.Village.updateNumVillagers" | 
                        "net.minecraft.village.Village.func_179866_a" | 
                        "net.minecraft.village.Village.setWorld" | 
                        "net.minecraft.village.Village.endMatingSeason" | 
                        "net.minecraft.village.Village.getVillageDoorInfoList" | 
                        "net.minecraft.world.gen.feature.WorldGenBlockBlob.generate" | 
                        "net.minecraft.client.gui.GuiSnooper$List.elementClicked" | 
                        "net.minecraft.client.gui.GuiSnooper$List.getSize" | 
                        "net.minecraft.client.gui.GuiSnooper$List.getScrollBarX" | 
                        "net.minecraft.client.gui.GuiSnooper$List.drawSlot" | 
                        "net.minecraft.client.gui.GuiSnooper$List.drawBackground" | 
                        "net.minecraft.client.gui.GuiSnooper$List.isSelected" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$XYDoubleRoomFitHelper.func_175969_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$XYDoubleRoomFitHelper.func_175968_a" | 
                        "net.optifine.entity.model.ModelAdapterEndermite.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterEndermite.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterEndermite.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterEndermite.getModelRendererNames" | 
                        "net.minecraft.client.particle.EntitySpellParticleFX.setBaseSpellTextureIndex" | 
                        "net.minecraft.client.particle.EntitySpellParticleFX.renderParticle" | 
                        "net.minecraft.client.particle.EntitySpellParticleFX.onUpdate" | 
                        "net.minecraft.event.ClickEvent$Action.shouldAllowInChat" | 
                        "net.minecraft.event.ClickEvent$Action.getCanonicalName" | 
                        "net.minecraft.client.renderer.entity.RenderEntityItem.func_177078_a" | 
                        "net.minecraft.client.renderer.entity.RenderEntityItem.func_177077_a" | 
                        "net.minecraft.client.renderer.entity.RenderEntityItem.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderEntityItem.getEntityTexture" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$YZDoubleRoomFitHelper.func_175969_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$YZDoubleRoomFitHelper.func_175968_a" | 
                        "org.cef.network.CefURLRequest_N.cancel" | 
                        "org.cef.network.CefURLRequest_N.N_Cancel" | 
                        "org.cef.network.CefURLRequest_N.N_GetRequestStatus" | 
                        "org.cef.network.CefURLRequest_N.getRequest" | 
                        "org.cef.network.CefURLRequest_N.getResponse" | 
                        "org.cef.network.CefURLRequest_N.N_Dispose" | 
                        "org.cef.network.CefURLRequest_N.getClient" | 
                        "org.cef.network.CefURLRequest_N.setNativeRef" | 
                        "org.cef.network.CefURLRequest_N.getNativeRef" | 
                        "org.cef.network.CefURLRequest_N.getRequestStatus" | 
                        "org.cef.network.CefURLRequest_N.N_GetResponse" | 
                        "org.cef.network.CefURLRequest_N.N_GetRequestError" | 
                        "org.cef.network.CefURLRequest_N.dispose" | 
                        "org.cef.network.CefURLRequest_N.N_Create" | 
                        "org.cef.network.CefURLRequest_N.getRequestError" | 
                        "net.minecraft.client.renderer.culling.ClippingHelper.isBoxInFrustum" | 
                        "net.minecraft.client.renderer.culling.ClippingHelper.dot" | 
                        "net.minecraft.client.renderer.culling.ClippingHelper.isBoxInFrustumFully" | 
                        "net.minecraft.entity.ai.EntityAITradePlayer.resetTask" | 
                        "net.minecraft.entity.ai.EntityAITradePlayer.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAITradePlayer.startExecuting" | 
                        "net.minecraft.client.particle.EntityFirework$StarterFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityFirework$StarterFX.createShaped" | 
                        "net.minecraft.client.particle.EntityFirework$StarterFX.createBurst" | 
                        "net.minecraft.client.particle.EntityFirework$StarterFX.getFXLayer" | 
                        "net.minecraft.client.particle.EntityFirework$StarterFX.createParticle" | 
                        "net.minecraft.client.particle.EntityFirework$StarterFX.onUpdate" | 
                        "net.minecraft.client.particle.EntityFirework$StarterFX.func_92037_i" | 
                        "net.minecraft.client.particle.EntityFirework$StarterFX.createBall" | 
                        "net.minecraft.client.renderer.entity.RenderRabbit.getEntityTexture" | 
                        "net.minecraft.client.renderer.entity.RenderLeashKnot.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderLeashKnot.getEntityTexture" | 
                        "net.minecraft.world.pathfinder.SwimNodeProcessor.getSafePoint" | 
                        "net.minecraft.world.pathfinder.SwimNodeProcessor.func_176186_b" | 
                        "net.minecraft.world.pathfinder.SwimNodeProcessor.initProcessor" | 
                        "net.minecraft.world.pathfinder.SwimNodeProcessor.getPathPointTo" | 
                        "net.minecraft.world.pathfinder.SwimNodeProcessor.findPathOptions" | 
                        "net.minecraft.world.pathfinder.SwimNodeProcessor.postProcess" | 
                        "net.minecraft.world.pathfinder.SwimNodeProcessor.getPathPointToCoords" | 
                        "net.minecraft.world.border.WorldBorder.getListeners" | 
                        "net.minecraft.world.border.WorldBorder.maxZ" | 
                        "net.minecraft.world.border.WorldBorder.maxX" | 
                        "net.minecraft.world.border.WorldBorder.getClosestDistance" | 
                        "net.minecraft.world.border.WorldBorder.getTimeUntilTarget" | 
                        "net.minecraft.world.border.WorldBorder.getStatus" | 
                        "net.minecraft.world.border.WorldBorder.setSize" | 
                        "net.minecraft.world.border.WorldBorder.setWarningTime" | 
                        "net.minecraft.world.border.WorldBorder.getCenterZ" | 
                        "net.minecraft.world.border.WorldBorder.getCenterX" | 
                        "net.minecraft.world.border.WorldBorder.addListener" | 
                        "net.minecraft.world.border.WorldBorder.setDamageAmount" | 
                        "net.minecraft.world.border.WorldBorder.getDamageAmount" | 
                        "net.minecraft.world.border.WorldBorder.getDamageBuffer" | 
                        "net.minecraft.world.border.WorldBorder.getResizeSpeed" | 
                        "net.minecraft.world.border.WorldBorder.setCenter" | 
                        "net.minecraft.world.border.WorldBorder.getTargetSize" | 
                        "net.minecraft.world.border.WorldBorder.getDiameter" | 
                        "net.minecraft.world.border.WorldBorder.setWarningDistance" | 
                        "net.minecraft.world.border.WorldBorder.contains" | 
                        "net.minecraft.world.border.WorldBorder.getSize" | 
                        "net.minecraft.world.border.WorldBorder.getWarningDistance" | 
                        "net.minecraft.world.border.WorldBorder.minX" | 
                        "net.minecraft.world.border.WorldBorder.setTransition" | 
                        "net.minecraft.world.border.WorldBorder.getWarningTime" | 
                        "net.minecraft.world.border.WorldBorder.minZ" | 
                        "net.minecraft.world.border.WorldBorder.setDamageBuffer" | 
                        "net.optifine.shaders.config.EnumShaderOption.getResourceKey" | 
                        "net.optifine.shaders.config.EnumShaderOption.getValueDefault" | 
                        "net.optifine.shaders.config.EnumShaderOption.getPropertyKey" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSpiderEyes.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSpiderEyes.shouldCombineTextures" | 
                        "net.minecraft.client.renderer.entity.RenderGiantZombie.transformHeldFull3DItemLayer" | 
                        "net.minecraft.client.renderer.entity.RenderGiantZombie.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderGiantZombie.getEntityTexture" | 
                        "net.optifine.reflect.FieldLocatorName.getDeclaredField" | 
                        "net.optifine.reflect.FieldLocatorName.getField" | 
                        "net.minecraft.client.renderer.chunk.IRenderChunkFactory.makeRenderChunk" | 
                        "net.minecraft.client.network.LanServerDetector$LanServer.getServerMotd" | 
                        "net.minecraft.client.network.LanServerDetector$LanServer.getServerIpPort" | 
                        "net.minecraft.client.network.LanServerDetector$LanServer.updateLastSeen" | 
                        "slice.gui.hud.legacy.arraylist.ArrayListHUD.draw" | 
                        "net.minecraft.entity.EntityHanging.moveEntity" | 
                        "net.minecraft.entity.EntityHanging.hitByEntity" | 
                        "net.minecraft.entity.EntityHanging.onValidSurface" | 
                        "net.minecraft.entity.EntityHanging.writeEntityToNBT" | 
                        "net.minecraft.entity.EntityHanging.readEntityFromNBT" | 
                        "net.minecraft.entity.EntityHanging.entityInit" | 
                        "net.minecraft.entity.EntityHanging.getHangingPosition" | 
                        "net.minecraft.entity.EntityHanging.shouldSetPosAfterLoading" | 
                        "net.minecraft.entity.EntityHanging.updateBoundingBox" | 
                        "net.minecraft.entity.EntityHanging.setPosition" | 
                        "net.minecraft.entity.EntityHanging.getWidthPixels" | 
                        "net.minecraft.entity.EntityHanging.canBeCollidedWith" | 
                        "net.minecraft.entity.EntityHanging.attackEntityFrom" | 
                        "net.minecraft.entity.EntityHanging.getHorizontalFacing" | 
                        "net.minecraft.entity.EntityHanging.getHeightPixels" | 
                        "net.minecraft.entity.EntityHanging.func_174858_a" | 
                        "net.minecraft.entity.EntityHanging.onUpdate" | 
                        "net.minecraft.entity.EntityHanging.addVelocity" | 
                        "net.minecraft.entity.EntityHanging.onBroken" | 
                        "net.minecraft.entity.EntityHanging.updateFacingWithBoundingBox" | 
                        "net.optifine.BlockDir.getFacing2" | 
                        "net.optifine.BlockDir.getOffsetY" | 
                        "net.optifine.BlockDir.getFacing1" | 
                        "net.optifine.BlockDir.getOffsetZ" | 
                        "net.optifine.BlockDir.offset" | 
                        "net.optifine.BlockDir.getOffsetX" | 
                        "net.optifine.BlockDir.isDouble" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiResponder.onTick" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiResponder.func_175319_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiResponder.func_175321_a" | 
                        "net.minecraft.util.EnumChatFormatting.getColorIndex" | 
                        "net.minecraft.util.EnumChatFormatting.isColor" | 
                        "net.minecraft.util.EnumChatFormatting.getFriendlyName" | 
                        "net.minecraft.util.EnumChatFormatting.toString" | 
                        "net.minecraft.util.EnumChatFormatting.isFancyStyling" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.setStreaming" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.setSoundEntryName" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.getSoundEntryWeight" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.setSoundEntryVolume" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.isStreaming" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.getSoundEntryPitch" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.setSoundEntryType" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.setSoundEntryWeight" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.getSoundEntryType" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.getSoundEntryVolume" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.setSoundEntryPitch" | 
                        "net.minecraft.client.audio.SoundList$SoundEntry.getSoundEntryName" | 
                        "net.optifine.gui.TooltipProviderShaderOptions.splitDescription" | 
                        "net.optifine.gui.TooltipProviderShaderOptions.getTooltipLines" | 
                        "net.optifine.gui.TooltipProviderShaderOptions.makeTooltipLines" | 
                        "slice.event.events.EventUpdate.setY" | 
                        "slice.event.events.EventUpdate.setX" | 
                        "slice.event.events.EventUpdate.setPre" | 
                        "slice.event.events.EventUpdate.isPre" | 
                        "slice.event.events.EventUpdate.setZ" | 
                        "slice.event.events.EventUpdate.setOnGround" | 
                        "slice.event.events.EventUpdate.setYaw" | 
                        "slice.event.events.EventUpdate.getYaw" | 
                        "slice.event.events.EventUpdate.getX" | 
                        "slice.event.events.EventUpdate.getY" | 
                        "slice.event.events.EventUpdate.getPitch" | 
                        "slice.event.events.EventUpdate.getZ" | 
                        "slice.event.events.EventUpdate.setPitch" | 
                        "slice.event.events.EventUpdate.isOnGround" | 
                        "net.minecraft.crash.CrashReportCategory$Entry.getValue" | 
                        "net.minecraft.crash.CrashReportCategory$Entry.getKey" | 
                        "net.minecraft.realms.RealmsVertexFormatElement.getIndex" | 
                        "net.minecraft.realms.RealmsVertexFormatElement.hashCode" | 
                        "net.minecraft.realms.RealmsVertexFormatElement.equals" | 
                        "net.minecraft.realms.RealmsVertexFormatElement.getByteSize" | 
                        "net.minecraft.realms.RealmsVertexFormatElement.isPosition" | 
                        "net.minecraft.realms.RealmsVertexFormatElement.toString" | 
                        "net.minecraft.realms.RealmsVertexFormatElement.getCount" | 
                        "net.minecraft.realms.RealmsVertexFormatElement.getVertexFormatElement" | 
                        "org.cef.ccbluex.Page.getUrl" | 
                        "org.cef.ccbluex.Page.setUrl" | 
                        "net.minecraft.client.renderer.IImageBuffer.parseUserSkin" | 
                        "net.minecraft.client.renderer.IImageBuffer.skinAvailable" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$PieceWeight.func_78823_a" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$PieceWeight.func_78822_a" | 
                        "net.minecraft.client.particle.EntityCritFX$Factory.getEntityFX" | 
                        "net.minecraft.world.biome.BiomeGenDesert.decorate" | 
                        "net.optifine.entity.model.anim.ModelVariableUpdater.update" | 
                        "net.optifine.entity.model.anim.ModelVariableUpdater.initialize" | 
                        "net.minecraft.client.particle.EntityAuraFX.onUpdate" | 
                        "net.minecraft.world.gen.feature.WorldGenReed.generate" | 
                        "net.minecraft.block.BlockQuartz.getMetaFromState" | 
                        "net.minecraft.block.BlockQuartz.damageDropped" | 
                        "net.minecraft.block.BlockQuartz.createStackedBlock" | 
                        "net.minecraft.block.BlockQuartz.getMapColor" | 
                        "net.minecraft.block.BlockQuartz.createBlockState" | 
                        "net.minecraft.block.BlockQuartz.getStateFromMeta" | 
                        "net.minecraft.block.BlockQuartz.getSubBlocks" | 
                        "net.minecraft.block.BlockQuartz.onBlockPlaced" | 
                        "net.minecraft.block.BlockSlime.getBlockLayer" | 
                        "net.minecraft.block.BlockSlime.onLanded" | 
                        "net.minecraft.block.BlockSlime.onFallenUpon" | 
                        "net.minecraft.block.BlockSlime.onEntityCollidedWithBlock" | 
                        "net.optifine.texture.PixelType.getId" | 
                        "net.minecraft.entity.passive.EntityRabbit$AIEvilAttack.func_179512_a" | 
                        "net.minecraft.entity.ai.EntityAIDefendVillage.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIDefendVillage.startExecuting" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderRightArm" | 
                        "net.minecraft.client.renderer.ItemRenderer.updateEquippedItem" | 
                        "net.minecraft.client.renderer.ItemRenderer.setLightMapFromPlayer" | 
                        "net.minecraft.client.renderer.ItemRenderer.transformFirstPersonItem" | 
                        "net.minecraft.client.renderer.ItemRenderer.doBlockTransformations" | 
                        "net.minecraft.client.renderer.ItemRenderer.rotateWithPlayerRotations" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderItemMap" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderOverlays" | 
                        "net.minecraft.client.renderer.ItemRenderer.doItemUsedTransformations" | 
                        "net.minecraft.client.renderer.ItemRenderer.custom" | 
                        "net.minecraft.client.renderer.ItemRenderer.rotateArroundXAndY" | 
                        "net.minecraft.client.renderer.ItemRenderer.getMapAngleFromPitch" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderPlayerArms" | 
                        "net.minecraft.client.renderer.ItemRenderer.resetEquippedProgress" | 
                        "net.minecraft.client.renderer.ItemRenderer.push" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderItem" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderLeftArm" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderItemInFirstPerson" | 
                        "net.minecraft.client.renderer.ItemRenderer.performDrinking" | 
                        "net.minecraft.client.renderer.ItemRenderer.doBowTransformations" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderBlockInHand" | 
                        "net.minecraft.client.renderer.ItemRenderer.resetEquippedProgress2" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderPlayerArm" | 
                        "net.minecraft.client.renderer.ItemRenderer.spin" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderFireInFirstPerson" | 
                        "net.minecraft.client.renderer.ItemRenderer.isBlockTranslucent" | 
                        "net.minecraft.client.renderer.ItemRenderer.renderWaterOverlayTexture" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$Penthouse.addComponentParts" | 
                        "net.minecraft.tileentity.TileEntityLockable.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityLockable.setLockCode" | 
                        "net.minecraft.tileentity.TileEntityLockable.getDisplayName" | 
                        "net.minecraft.tileentity.TileEntityLockable.isLocked" | 
                        "net.minecraft.tileentity.TileEntityLockable.writeToNBT" | 
                        "net.minecraft.tileentity.TileEntityLockable.getLockCode" | 
                        "net.minecraft.world.biome.BiomeGenBase$Height.attenuate" | 
                        "net.minecraft.block.material.MaterialTransparent.blocksLight" | 
                        "net.minecraft.block.material.MaterialTransparent.isSolid" | 
                        "net.minecraft.block.material.MaterialTransparent.blocksMovement" | 
                        "net.minecraft.client.particle.EntityExplodeFX$Factory.getEntityFX" | 
                        "net.minecraft.client.gui.GuiSlider$FormatHelper.getText" | 
                        "net.minecraft.block.BlockFire.getMetaFromState" | 
                        "net.minecraft.block.BlockFire.canNeighborCatchFire" | 
                        "net.minecraft.block.BlockFire.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockFire.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockFire.getEncouragement" | 
                        "net.minecraft.block.BlockFire.getActualState" | 
                        "net.minecraft.block.BlockFire.isCollidable" | 
                        "net.minecraft.block.BlockFire.quantityDropped" | 
                        "net.minecraft.block.BlockFire.requiresUpdates" | 
                        "net.minecraft.block.BlockFire.getStateFromMeta" | 
                        "net.minecraft.block.BlockFire.updateTick" | 
                        "net.minecraft.block.BlockFire.canCatchFire" | 
                        "net.minecraft.block.BlockFire.getBlockLayer" | 
                        "net.minecraft.block.BlockFire.randomDisplayTick" | 
                        "net.minecraft.block.BlockFire.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockFire.getMapColor" | 
                        "net.minecraft.block.BlockFire.isFullCube" | 
                        "net.minecraft.block.BlockFire.canDie" | 
                        "net.minecraft.block.BlockFire.onBlockAdded" | 
                        "net.minecraft.block.BlockFire.tickRate" | 
                        "net.minecraft.block.BlockFire.catchOnFire" | 
                        "net.minecraft.block.BlockFire.getNeighborEncouragement" | 
                        "net.minecraft.block.BlockFire.createBlockState" | 
                        "net.minecraft.block.BlockFire.setFireInfo" | 
                        "net.minecraft.block.BlockFire.getFlammability" | 
                        "net.minecraft.block.BlockFire.isOpaqueCube" | 
                        "net.minecraft.client.resources.model.ModelResourceLocation.getVariant" | 
                        "net.minecraft.client.resources.model.ModelResourceLocation.hashCode" | 
                        "net.minecraft.client.resources.model.ModelResourceLocation.equals" | 
                        "net.minecraft.client.resources.model.ModelResourceLocation.toString" | 
                        "org.cef.network.CefRequest$TransitionType.getValue" | 
                        "org.cef.network.CefRequest$TransitionType.isRedirect" | 
                        "org.cef.network.CefRequest$TransitionType.isSet" | 
                        "org.cef.network.CefRequest$TransitionType.getSource" | 
                        "org.cef.network.CefRequest$TransitionType.addQualifiers" | 
                        "org.cef.network.CefRequest$TransitionType.removeQualifier" | 
                        "org.cef.network.CefRequest$TransitionType.addQualifier" | 
                        "org.cef.network.CefRequest$TransitionType.getQualifiers" | 
                        "net.optifine.reflect.FieldLocatorActionKeyF3.getFieldRenderChunksMany" | 
                        "net.optifine.reflect.FieldLocatorActionKeyF3.getField" | 
                        "net.minecraft.client.particle.MobAppearance.renderParticle" | 
                        "net.minecraft.client.particle.MobAppearance.getFXLayer" | 
                        "net.minecraft.client.particle.MobAppearance.onUpdate" | 
                        "net.minecraftforge.client.model.ISmartItemModel.handleItemState" | 
                        "net.minecraft.client.model.ModelBat.setRotationAngles" | 
                        "net.minecraft.client.model.ModelBat.render" | 
                        "com.sliceclient.anticheat.check.checks.movement.fly.FlyA.onPlayerUpdate" | 
                        "net.minecraft.inventory.SlotMerchantResult.decrStackSize" | 
                        "net.minecraft.inventory.SlotMerchantResult.doTrade" | 
                        "net.minecraft.inventory.SlotMerchantResult.isItemValid" | 
                        "net.minecraft.inventory.SlotMerchantResult.onPickupFromSlot" | 
                        "net.minecraft.inventory.SlotMerchantResult.onCrafting" | 
                        "org.cef.callback.CefDownloadItemCallback.resume" | 
                        "org.cef.callback.CefDownloadItemCallback.cancel" | 
                        "org.cef.callback.CefDownloadItemCallback.pause" | 
                        "net.minecraft.client.renderer.entity.RenderEndermite.getDeathMaxRotation" | 
                        "net.minecraft.client.renderer.entity.RenderEndermite.getEntityTexture" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.renderToolTip" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.getSelectedTabIndex" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.updateActivePotionEffects" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.renderCreativeInventoryHoveringText" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.handleMouseClick" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.initGui" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.onGuiClosed" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.keyTyped" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.mouseReleased" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.updateScreen" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.actionPerformed" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.handleMouseInput" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.func_147049_a" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.setCurrentCreativeTab" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.mouseClicked" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.drawScreen" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.needsScrollBars" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.func_147051_a" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative.updateCreativeSearch" | 
                        "net.minecraft.client.model.ModelBox.makeTexturedQuad" | 
                        "net.minecraft.client.model.ModelBox.render" | 
                        "net.minecraft.client.model.ModelBox.setBoxName" | 
                        "slice.legacy.clickgui.module.ModuleButton.getModule" | 
                        "slice.legacy.clickgui.module.ModuleButton.setY" | 
                        "slice.legacy.clickgui.module.ModuleButton.setOpen" | 
                        "slice.legacy.clickgui.module.ModuleButton.setX" | 
                        "slice.legacy.clickgui.module.ModuleButton.setPane" | 
                        "slice.legacy.clickgui.module.ModuleButton.getWidth" | 
                        "slice.legacy.clickgui.module.ModuleButton.setWidth" | 
                        "slice.legacy.clickgui.module.ModuleButton.setHeight" | 
                        "slice.legacy.clickgui.module.ModuleButton.mouseReleased" | 
                        "slice.legacy.clickgui.module.ModuleButton.getX" | 
                        "slice.legacy.clickgui.module.ModuleButton.getHeight" | 
                        "slice.legacy.clickgui.module.ModuleButton.isOpen" | 
                        "slice.legacy.clickgui.module.ModuleButton.getY" | 
                        "slice.legacy.clickgui.module.ModuleButton.mouseClicked" | 
                        "slice.legacy.clickgui.module.ModuleButton.setModule" | 
                        "slice.legacy.clickgui.module.ModuleButton.getPane" | 
                        "slice.legacy.clickgui.module.ModuleButton.drawButton" | 
                        "net.minecraft.block.BlockRailBase$Rail.countAdjacentRails" | 
                        "net.minecraft.block.BlockRailBase$Rail.func_150651_b" | 
                        "net.minecraft.block.BlockRailBase$Rail.func_150653_a" | 
                        "net.minecraft.block.BlockRailBase$Rail.findRailAt" | 
                        "net.minecraft.block.BlockRailBase$Rail.func_180364_a" | 
                        "net.minecraft.block.BlockRailBase$Rail.func_180361_d" | 
                        "net.minecraft.block.BlockRailBase$Rail.func_150645_c" | 
                        "net.minecraft.block.BlockRailBase$Rail.func_180363_c" | 
                        "net.minecraft.block.BlockRailBase$Rail.getBlockState" | 
                        "net.minecraft.block.BlockRailBase$Rail.func_180360_a" | 
                        "net.minecraft.block.BlockRailBase$Rail.func_150649_b" | 
                        "net.minecraft.block.BlockRailBase$Rail.hasRailAt" | 
                        "net.minecraft.command.IAdminCommand.notifyOperators" | 
                        "org.cef.handler.CefPrintHandler.onPrintDialog" | 
                        "org.cef.handler.CefPrintHandler.onPrintReset" | 
                        "org.cef.handler.CefPrintHandler.getPdfPaperSize" | 
                        "org.cef.handler.CefPrintHandler.onPrintSettings" | 
                        "org.cef.handler.CefPrintHandler.onPrintJob" | 
                        "org.cef.handler.CefPrintHandler.onPrintStart" | 
                        "net.minecraft.entity.item.EntityFallingBlock.getBlock" | 
                        "net.minecraft.entity.item.EntityFallingBlock.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityFallingBlock.canBeCollidedWith" | 
                        "net.minecraft.entity.item.EntityFallingBlock.setHurtEntities" | 
                        "net.minecraft.entity.item.EntityFallingBlock.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityFallingBlock.fall" | 
                        "net.minecraft.entity.item.EntityFallingBlock.entityInit" | 
                        "net.minecraft.entity.item.EntityFallingBlock.addEntityCrashInfo" | 
                        "net.minecraft.entity.item.EntityFallingBlock.canTriggerWalking" | 
                        "net.minecraft.entity.item.EntityFallingBlock.getWorldObj" | 
                        "net.minecraft.entity.item.EntityFallingBlock.canRenderOnFire" | 
                        "net.minecraft.entity.item.EntityFallingBlock.onUpdate" | 
                        "net.minecraft.block.BlockBookshelf.quantityDropped" | 
                        "net.minecraft.block.BlockBookshelf.getItemDropped" | 
                        "net.minecraft.client.renderer.texture.TextureClock.updateAnimation" | 
                        "net.minecraft.block.Block.isPassable" | 
                        "net.minecraft.block.Block.disableStats" | 
                        "net.minecraft.block.Block.getOffsetType" | 
                        "net.minecraft.block.Block.getItem" | 
                        "net.minecraft.block.Block.isNormalCube" | 
                        "net.minecraft.block.Block.getUnlocalizedName" | 
                        "net.minecraft.block.Block.getLocalizedName" | 
                        "net.minecraft.block.Block.requiresUpdates" | 
                        "net.minecraft.block.Block.isReplaceable" | 
                        "net.minecraft.block.Block.setBlockBoundsForItemRender" | 
                        "net.minecraft.block.Block.setStepSound" | 
                        "net.minecraft.block.Block.hasTileEntity" | 
                        "net.minecraft.block.Block.onNeighborBlockChange" | 
                        "net.minecraft.block.Block.createStackedBlock" | 
                        "net.minecraft.block.Block.getMapColor" | 
                        "net.minecraft.block.Block.onBlockHarvested" | 
                        "net.minecraft.block.Block.canPlaceBlockOnSide" | 
                        "net.minecraft.block.Block.canDropFromExplosion" | 
                        "net.minecraft.block.Block.fillWithRain" | 
                        "net.minecraft.block.Block.getMixedBrightnessForBlock" | 
                        "net.minecraft.block.Block.getMaterial" | 
                        "net.minecraft.block.Block.canSpawnInBlock" | 
                        "net.minecraft.block.Block.onBlockDestroyedByExplosion" | 
                        "net.minecraft.block.Block.getWeakPower" | 
                        "net.minecraft.block.Block.getMobilityFlag" | 
                        "net.minecraft.block.Block.isVecInsideYZBounds" | 
                        "net.minecraft.block.Block.getStrongPower" | 
                        "net.minecraft.block.Block.getItemDropped" | 
                        "net.minecraft.block.Block.damageDropped" | 
                        "net.minecraft.block.Block.onLanded" | 
                        "net.minecraft.block.Block.getCollisionBoundingBox" | 
                        "net.minecraft.block.Block.setCreativeTab" | 
                        "net.minecraft.block.Block.onBlockActivated" | 
                        "net.minecraft.block.Block.getAmbientOcclusionLightValue" | 
                        "net.minecraft.block.Block.setResistance" | 
                        "net.minecraft.block.Block.getBlockBoundsMinY" | 
                        "net.minecraft.block.Block.getBlockBoundsMinX" | 
                        "net.minecraft.block.Block.getActualState" | 
                        "net.minecraft.block.Block.getLightOpacity" | 
                        "net.minecraft.block.Block.canReplace" | 
                        "net.minecraft.block.Block.getBlockBoundsMinZ" | 
                        "net.minecraft.block.Block.hasComparatorInputOverride" | 
                        "net.minecraft.block.Block.setBlockBounds" | 
                        "net.minecraft.block.Block.onBlockEventReceived" | 
                        "net.minecraft.block.Block.getDamageValue" | 
                        "net.minecraft.block.Block.updateTick" | 
                        "net.minecraft.block.Block.getBlockLayer" | 
                        "net.minecraft.block.Block.randomDisplayTick" | 
                        "net.minecraft.block.Block.getPlayerRelativeBlockHardness" | 
                        "net.minecraft.block.Block.getStateForEntityRender" | 
                        "net.minecraft.block.Block.canCollideCheck" | 
                        "net.minecraft.block.Block.tickRate" | 
                        "net.minecraft.block.Block.onBlockDestroyedByPlayer" | 
                        "net.minecraft.block.Block.getRenderColor" | 
                        "net.minecraft.block.Block.onBlockPlacedBy" | 
                        "net.minecraft.block.Block.toString" | 
                        "net.minecraft.block.Block.onBlockPlaced" | 
                        "net.minecraft.block.Block.getMetaFromState" | 
                        "net.minecraft.block.Block.setDefaultState" | 
                        "net.minecraft.block.Block.onFallenUpon" | 
                        "net.minecraft.block.Block.isBlockSolid" | 
                        "net.minecraft.block.Block.getRenderType" | 
                        "net.minecraft.block.Block.getCreativeTabToDisplayOn" | 
                        "net.minecraft.block.Block.isFullBlock" | 
                        "net.minecraft.block.Block.getBlockBoundsMaxZ" | 
                        "net.minecraft.block.Block.getStateFromMeta" | 
                        "net.minecraft.block.Block.setLightOpacity" | 
                        "net.minecraft.block.Block.getBlockBoundsMaxX" | 
                        "net.minecraft.block.Block.getBlockBoundsMaxY" | 
                        "net.minecraft.block.Block.isTranslucent" | 
                        "net.minecraft.block.Block.setTickRandomly" | 
                        "net.minecraft.block.Block.isVecInsideXYBounds" | 
                        "net.minecraft.block.Block.canSilkHarvest" | 
                        "net.minecraft.block.Block.setBlockUnbreakable" | 
                        "net.minecraft.block.Block.getExplosionResistance" | 
                        "net.minecraft.block.Block.getEnableStats" | 
                        "net.minecraft.block.Block.isFullCube" | 
                        "net.minecraft.block.Block.getSelectedBoundingBox" | 
                        "net.minecraft.block.Block.onBlockAdded" | 
                        "net.minecraft.block.Block.getBlockColor" | 
                        "net.minecraft.block.Block.dropBlockAsItem" | 
                        "net.minecraft.block.Block.getUseNeighborBrightness" | 
                        "net.minecraft.block.Block.harvestBlock" | 
                        "net.minecraft.block.Block.isVisuallyOpaque" | 
                        "net.minecraft.block.Block.setUnlocalizedName" | 
                        "net.minecraft.block.Block.getLightValue" | 
                        "net.minecraft.block.Block.getBlockState" | 
                        "net.minecraft.block.Block.isOpaqueCube" | 
                        "net.minecraft.block.Block.modifyAcceleration" | 
                        "net.minecraft.block.Block.getDefaultState" | 
                        "net.minecraft.block.Block.setHardness" | 
                        "net.minecraft.block.Block.getTickRandomly" | 
                        "net.minecraft.block.Block.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.Block.getBlockHardness" | 
                        "net.minecraft.block.Block.canPlaceBlockAt" | 
                        "net.minecraft.block.Block.getSubBlocks" | 
                        "net.minecraft.block.Block.isCollidable" | 
                        "net.minecraft.block.Block.quantityDropped" | 
                        "net.minecraft.block.Block.isFlowerPot" | 
                        "net.minecraft.block.Block.breakBlock" | 
                        "net.minecraft.block.Block.collisionRayTrace" | 
                        "net.minecraft.block.Block.isAssociatedBlock" | 
                        "net.minecraft.block.Block.randomTick" | 
                        "net.minecraft.block.Block.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.Block.colorMultiplier" | 
                        "net.minecraft.block.Block.quantityDroppedWithBonus" | 
                        "net.minecraft.block.Block.setLightLevel" | 
                        "net.minecraft.block.Block.dropXpOnBlockBreak" | 
                        "net.minecraft.block.Block.getComparatorInputOverride" | 
                        "net.minecraft.block.Block.createBlockState" | 
                        "net.minecraft.block.Block.onEntityCollidedWithBlock" | 
                        "net.minecraft.block.Block.onBlockClicked" | 
                        "net.minecraft.block.Block.addCollisionBoxesToList" | 
                        "net.minecraft.block.Block.canProvidePower" | 
                        "net.minecraft.block.Block.isBlockNormalCube" | 
                        "net.minecraft.block.Block.shouldSideBeRendered" | 
                        "net.minecraft.block.Block.isVecInsideXZBounds" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.drawGuiContainerForegroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.doesGuiPauseGame" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.mouseClickMove" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.drawGuiContainerBackgroundLayer" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.handleMouseClick" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.initGui" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.getSlotAtPosition" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.onGuiClosed" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.keyTyped" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.drawItemStack" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.mouseReleased" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.updateScreen" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.drawSlot" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.mouseClicked" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.isPointInRegion" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.drawScreen" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.isMouseOverSlot" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.checkHotbarKeys" | 
                        "net.minecraft.client.gui.inventory.GuiContainer.updateDragSplitting" | 
                        "net.minecraft.client.particle.EntityFirework$SparkFX.getBrightnessForRender" | 
                        "net.minecraft.client.particle.EntityFirework$SparkFX.getCollisionBoundingBox" | 
                        "net.minecraft.client.particle.EntityFirework$SparkFX.canBePushed" | 
                        "net.minecraft.client.particle.EntityFirework$SparkFX.getBrightness" | 
                        "net.minecraft.client.particle.EntityFirework$SparkFX.setColour" | 
                        "net.minecraft.client.particle.EntityFirework$SparkFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityFirework$SparkFX.setTwinkle" | 
                        "net.minecraft.client.particle.EntityFirework$SparkFX.setTrail" | 
                        "net.minecraft.client.particle.EntityFirework$SparkFX.onUpdate" | 
                        "net.minecraft.client.particle.EntityFirework$SparkFX.setFadeColour" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$Piece.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$Piece.func_181655_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$Piece.func_175821_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$Piece.func_175819_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$Piece.func_175818_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$Piece.writeStructureToNBT" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$Piece.func_175817_a" | 
                        "net.minecraft.world.chunk.storage.IChunkLoader.chunkTick" | 
                        "net.minecraft.world.chunk.storage.IChunkLoader.saveExtraChunkData" | 
                        "net.minecraft.world.chunk.storage.IChunkLoader.loadChunk" | 
                        "net.minecraft.world.chunk.storage.IChunkLoader.saveChunk" | 
                        "net.minecraft.world.chunk.storage.IChunkLoader.saveExtraData" | 
                        "org.cef.browser.scheme.SchemeResponseData.getDataArray" | 
                        "org.cef.browser.scheme.SchemeResponseData.setAmountRead" | 
                        "org.cef.browser.scheme.SchemeResponseData.getBytesToRead" | 
                        "net.minecraft.client.model.ModelMagmaCube.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelMagmaCube.render" | 
                        "net.minecraft.block.BlockFlower$EnumFlowerColor.getBlock" | 
                        "net.minecraft.entity.ai.EntityAIBreakDoor.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIBreakDoor.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIBreakDoor.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIBreakDoor.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIBreakDoor.continueExecuting" | 
                        "net.minecraft.client.model.ModelArmorStandArmor.setRotationAngles" | 
                        "slice.event.events.EventHandleChat.getChatVisibility" | 
                        "slice.event.events.EventHandleChat.setChatVisibility" | 
                        "slice.event.events.EventHandleChat.setS02PacketChat" | 
                        "slice.event.events.EventHandleChat.getS02PacketChat" | 
                        "org.cef.browser.CefBrowserWindow.getWindowHandle" | 
                        "org.cef.callback.CefCallback_N.cancel" | 
                        "org.cef.callback.CefCallback_N.N_Cancel" | 
                        "org.cef.callback.CefCallback_N.N_Continue" | 
                        "org.cef.callback.CefCallback_N.finalize" | 
                        "org.cef.callback.CefCallback_N.Continue" | 
                        "slice.command.commands.CommandJS.init" | 
                        "slice.command.commands.CommandJS.handle" | 
                        "net.minecraft.inventory.SlotCrafting.decrStackSize" | 
                        "net.minecraft.inventory.SlotCrafting.isItemValid" | 
                        "net.minecraft.inventory.SlotCrafting.onPickupFromSlot" | 
                        "net.minecraft.inventory.SlotCrafting.onCrafting" | 
                        "net.minecraft.client.gui.achievement.GuiStats.drawStatsScreen" | 
                        "net.minecraft.client.gui.achievement.GuiStats.actionPerformed" | 
                        "net.minecraft.client.gui.achievement.GuiStats.handleMouseInput" | 
                        "net.minecraft.client.gui.achievement.GuiStats.func_175366_f" | 
                        "net.minecraft.client.gui.achievement.GuiStats.drawScreen" | 
                        "net.minecraft.client.gui.achievement.GuiStats.doesGuiPauseGame" | 
                        "net.minecraft.client.gui.achievement.GuiStats.drawSprite" | 
                        "net.minecraft.client.gui.achievement.GuiStats.initGui" | 
                        "net.minecraft.client.gui.achievement.GuiStats.createButtons" | 
                        "net.minecraft.client.gui.achievement.GuiStats.drawButtonBackground" | 
                        "net.minecraft.client.gui.achievement.GuiStats.doneLoading" | 
                        "slice.event.events.EventSafeWalk.isSafeWalk" | 
                        "slice.event.events.EventSafeWalk.setSafeWalk" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$DoubleYRoom.addComponentParts" | 
                        "net.minecraft.client.renderer.entity.layers.LayerIronGolemFlower.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerIronGolemFlower.shouldCombineTextures" | 
                        "net.minecraft.client.particle.EntityDropParticleFX.getBrightnessForRender" | 
                        "net.minecraft.client.particle.EntityDropParticleFX.getBrightness" | 
                        "net.minecraft.client.particle.EntityDropParticleFX.onUpdate" | 
                        "net.minecraft.util.EnumParticleTypes.hasArguments" | 
                        "net.minecraft.util.EnumParticleTypes.getParticleName" | 
                        "net.minecraft.util.EnumParticleTypes.getParticleID" | 
                        "net.minecraft.util.EnumParticleTypes.getShouldIgnoreRange" | 
                        "net.minecraft.util.EnumParticleTypes.getArgumentCount" | 
                        "net.minecraft.item.crafting.RecipeFireworks.getRecipeOutput" | 
                        "net.minecraft.item.crafting.RecipeFireworks.getRemainingItems" | 
                        "net.minecraft.item.crafting.RecipeFireworks.getCraftingResult" | 
                        "net.minecraft.item.crafting.RecipeFireworks.getRecipeSize" | 
                        "net.minecraft.item.crafting.RecipeFireworks.matches" | 
                        "net.minecraft.client.model.ModelZombie.setRotationAngles" | 
                        "net.minecraft.world.chunk.ChunkPrimer.getBlockState" | 
                        "net.minecraft.world.chunk.ChunkPrimer.setBlockState" | 
                        "net.minecraft.block.BlockStairs$EnumShape.getName" | 
                        "net.minecraft.block.BlockStairs$EnumShape.toString" | 
                        "net.minecraft.client.multiplayer.WorldClient.getRenderDistanceChunks" | 
                        "net.minecraft.client.multiplayer.WorldClient.onEntityRemoved" | 
                        "net.minecraft.client.multiplayer.WorldClient.doPreChunk" | 
                        "net.minecraft.client.multiplayer.WorldClient.setWorldTime" | 
                        "net.minecraft.client.multiplayer.WorldClient.createChunkProvider" | 
                        "net.minecraft.client.multiplayer.WorldClient.addWorldInfoToCrashReport" | 
                        "net.minecraft.client.multiplayer.WorldClient.spawnEntityInWorld" | 
                        "net.minecraft.client.multiplayer.WorldClient.isPlayerUpdate" | 
                        "net.minecraft.client.multiplayer.WorldClient.playSound" | 
                        "net.minecraft.client.multiplayer.WorldClient.invalidateRegionAndSetBlock" | 
                        "net.minecraft.client.multiplayer.WorldClient.playSoundAtPos" | 
                        "net.minecraft.client.multiplayer.WorldClient.makeFireworks" | 
                        "net.minecraft.client.multiplayer.WorldClient.removeAllEntities" | 
                        "net.minecraft.client.multiplayer.WorldClient.sendQuittingDisconnectingPacket" | 
                        "net.minecraft.client.multiplayer.WorldClient.getCombinedLight" | 
                        "net.minecraft.client.multiplayer.WorldClient.setWorldScoreboard" | 
                        "net.minecraft.client.multiplayer.WorldClient.updateWeather" | 
                        "net.minecraft.client.multiplayer.WorldClient.tick" | 
                        "net.minecraft.client.multiplayer.WorldClient.isPlayerActing" | 
                        "net.minecraft.client.multiplayer.WorldClient.setBlockState" | 
                        "net.minecraft.client.multiplayer.WorldClient.removeEntity" | 
                        "net.minecraft.client.multiplayer.WorldClient.updateBlocks" | 
                        "net.minecraft.client.multiplayer.WorldClient.removeEntityFromWorld" | 
                        "net.minecraft.client.multiplayer.WorldClient.invalidateBlockReceiveRegion" | 
                        "net.minecraft.client.multiplayer.WorldClient.doVoidFogParticles" | 
                        "net.minecraft.client.multiplayer.WorldClient.addEntityToWorld" | 
                        "net.minecraft.client.multiplayer.WorldClient.getEntityByID" | 
                        "net.minecraft.client.multiplayer.WorldClient.onEntityAdded" | 
                        "net.optifine.entity.model.anim.RenderResolverEntity.getParameter" | 
                        "net.minecraft.command.ICommandManager.getPossibleCommands" | 
                        "net.minecraft.command.ICommandManager.getTabCompletionOptions" | 
                        "net.minecraft.command.ICommandManager.executeCommand" | 
                        "net.minecraft.command.ICommandManager.getCommands" | 
                        "net.minecraft.client.gui.GuiSlot.getSlotIndexFromScreenCoords" | 
                        "net.minecraft.client.gui.GuiSlot.bindAmountScrolled" | 
                        "net.minecraft.client.gui.GuiSlot.scrollBy" | 
                        "net.minecraft.client.gui.GuiSlot.getContentHeight" | 
                        "net.minecraft.client.gui.GuiSlot.func_178040_a" | 
                        "net.minecraft.client.gui.GuiSlot.isMouseYWithinSlotBounds" | 
                        "net.minecraft.client.gui.GuiSlot.getSlotHeight" | 
                        "net.minecraft.client.gui.GuiSlot.overlayBackground" | 
                        "net.minecraft.client.gui.GuiSlot.drawSelectionBox" | 
                        "net.minecraft.client.gui.GuiSlot.actionPerformed" | 
                        "net.minecraft.client.gui.GuiSlot.getListWidth" | 
                        "net.minecraft.client.gui.GuiSlot.drawSlot" | 
                        "net.minecraft.client.gui.GuiSlot.func_148132_a" | 
                        "net.minecraft.client.gui.GuiSlot.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiSlot.drawBackground" | 
                        "net.minecraft.client.gui.GuiSlot.getEnabled" | 
                        "net.minecraft.client.gui.GuiSlot.isSelected" | 
                        "net.minecraft.client.gui.GuiSlot.setDimensions" | 
                        "net.minecraft.client.gui.GuiSlot.drawScreen" | 
                        "net.minecraft.client.gui.GuiSlot.setSlotXBoundsFromLeft" | 
                        "net.minecraft.client.gui.GuiSlot.drawContainerBackground" | 
                        "net.minecraft.client.gui.GuiSlot.elementClicked" | 
                        "net.minecraft.client.gui.GuiSlot.drawListHeader" | 
                        "net.minecraft.client.gui.GuiSlot.getScrollBarX" | 
                        "net.minecraft.client.gui.GuiSlot.setHasListHeader" | 
                        "net.minecraft.client.gui.GuiSlot.func_148135_f" | 
                        "net.minecraft.client.gui.GuiSlot.getAmountScrolled" | 
                        "net.minecraft.client.gui.GuiSlot.setEnabled" | 
                        "net.minecraft.client.gui.GuiSlot.getSize" | 
                        "net.minecraft.client.gui.GuiSlot.func_148142_b" | 
                        "net.minecraft.client.gui.GuiSlot.setShowSelectionBox" | 
                        "net.minecraft.client.gui.GuiSlot.registerScrollButtons" | 
                        "net.minecraft.world.gen.layer.GenLayerIsland.getInts" | 
                        "net.minecraft.client.particle.EntityFirework$Factory.getEntityFX" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArrow.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerArrow.shouldCombineTextures" | 
                        "net.optifine.expr.IExpression.getExpressionType" | 
                        "org.cef.handler.CefPrintHandlerAdapter.onPrintDialog" | 
                        "org.cef.handler.CefPrintHandlerAdapter.onPrintReset" | 
                        "org.cef.handler.CefPrintHandlerAdapter.getPdfPaperSize" | 
                        "org.cef.handler.CefPrintHandlerAdapter.onPrintSettings" | 
                        "org.cef.handler.CefPrintHandlerAdapter.onPrintJob" | 
                        "org.cef.handler.CefPrintHandlerAdapter.onPrintStart" | 
                        "net.minecraft.block.BlockPistonMoving.getMetaFromState" | 
                        "net.minecraft.block.BlockPistonMoving.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockPistonMoving.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockPistonMoving.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockPistonMoving.onBlockActivated" | 
                        "net.minecraft.block.BlockPistonMoving.canPlaceBlockOnSide" | 
                        "net.minecraft.block.BlockPistonMoving.isFullCube" | 
                        "net.minecraft.block.BlockPistonMoving.getItem" | 
                        "net.minecraft.block.BlockPistonMoving.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockPistonMoving.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockPistonMoving.getBoundingBox" | 
                        "net.minecraft.block.BlockPistonMoving.onBlockDestroyedByPlayer" | 
                        "net.minecraft.block.BlockPistonMoving.createBlockState" | 
                        "net.minecraft.block.BlockPistonMoving.createNewTileEntity" | 
                        "net.minecraft.block.BlockPistonMoving.getTileEntity" | 
                        "net.minecraft.block.BlockPistonMoving.getStateFromMeta" | 
                        "net.minecraft.block.BlockPistonMoving.breakBlock" | 
                        "net.minecraft.block.BlockPistonMoving.collisionRayTrace" | 
                        "net.minecraft.block.BlockPistonMoving.isOpaqueCube" | 
                        "net.minecraft.block.BlockPistonMoving.getItemDropped" | 
                        "slice.event.events.EventSwitchAccount.setUsername" | 
                        "slice.event.events.EventSwitchAccount.setLastSession" | 
                        "slice.event.events.EventSwitchAccount.getUuid" | 
                        "slice.event.events.EventSwitchAccount.setSession" | 
                        "slice.event.events.EventSwitchAccount.setUuid" | 
                        "slice.event.events.EventSwitchAccount.getSession" | 
                        "slice.event.events.EventSwitchAccount.getLastSession" | 
                        "slice.event.events.EventSwitchAccount.getUsername" | 
                        "net.minecraft.client.model.ModelSkeleton.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelSkeleton.setRotationAngles" | 
                        "net.optifine.util.CacheLocal.resetCache" | 
                        "net.optifine.util.CacheLocal.setLast" | 
                        "net.optifine.util.CacheLocal.setOffset" | 
                        "net.optifine.util.CacheLocal.get" | 
                        "net.minecraft.enchantment.EnchantmentKnockback.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentKnockback.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentKnockback.getMaxLevel" | 
                        "net.minecraft.enchantment.EnchantmentDurability.canApply" | 
                        "net.minecraft.enchantment.EnchantmentDurability.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentDurability.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentDurability.getMaxLevel" | 
                        "net.minecraft.block.BlockDropper.getBehavior" | 
                        "net.minecraft.block.BlockDropper.dispense" | 
                        "net.minecraft.block.BlockDropper.createNewTileEntity" | 
                        "net.minecraft.block.material.MapColor.getMapColor" | 
                        "net.minecraft.client.gui.GuiScreenWorking.displayLoadingString" | 
                        "net.minecraft.client.gui.GuiScreenWorking.setDoneWorking" | 
                        "net.minecraft.client.gui.GuiScreenWorking.setLoadingProgress" | 
                        "net.minecraft.client.gui.GuiScreenWorking.displaySavingString" | 
                        "net.minecraft.client.gui.GuiScreenWorking.resetProgressAndMessage" | 
                        "net.minecraft.client.gui.GuiScreenWorking.drawScreen" | 
                        "net.minecraft.client.gui.GuiVideoSettings.actionPerformed" | 
                        "net.minecraft.client.gui.GuiVideoSettings.actionPerformedRightClick" | 
                        "net.minecraft.client.gui.GuiVideoSettings.initGui" | 
                        "net.minecraft.client.gui.GuiVideoSettings.drawScreen" | 
                        "net.minecraft.tileentity.TileEntityEnderChest.receiveClientEvent" | 
                        "net.minecraft.tileentity.TileEntityEnderChest.closeChest" | 
                        "net.minecraft.tileentity.TileEntityEnderChest.update" | 
                        "net.minecraft.tileentity.TileEntityEnderChest.invalidate" | 
                        "net.minecraft.tileentity.TileEntityEnderChest.openChest" | 
                        "net.minecraft.tileentity.TileEntityEnderChest.canBeUsed" | 
                        "net.minecraft.item.crafting.RecipesWeapons.addRecipes" | 
                        "net.minecraft.client.renderer.entity.layers.LayerHeldItem.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerHeldItem.shouldCombineTextures" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher.renderTileEntityAt" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher.getSpecialRendererByClass" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher.cacheActiveRenderInfo" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher.renderTileEntity" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher.getFontRenderer" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher.drawBatch" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher.preDrawBatch" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher.setWorld" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher.getSpecialRenderer" | 
                        "net.optifine.LightMapPack.updateLightmap" | 
                        "net.optifine.LightMapPack.blend" | 
                        "net.minecraft.world.storage.IPlayerFileData.readPlayerData" | 
                        "net.minecraft.world.storage.IPlayerFileData.writePlayerData" | 
                        "net.minecraft.world.storage.IPlayerFileData.getAvailablePlayerDat" | 
                        "net.minecraft.client.model.ModelWolf.setLivingAnimations" | 
                        "net.minecraft.client.model.ModelWolf.setRotationAngles" | 
                        "net.minecraft.client.model.ModelWolf.render" | 
                        "viamcp.protocols.ProtocolInfo.getName" | 
                        "viamcp.protocols.ProtocolInfo.getReleaseDate" | 
                        "viamcp.protocols.ProtocolInfo.getDescription" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.getPossibleCreatures" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.canSave" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.unloadQueuedChunks" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.saveChunks" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.populate" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.provideChunk" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.populateChunk" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.getStrongholdGen" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.saveExtraData" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.recreateStructures" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.chunkExists" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.getLoadedChunkCount" | 
                        "net.minecraft.world.gen.ChunkProviderDebug.makeString" | 
                        "net.minecraft.client.particle.EntityFishWakeFX$Factory.getEntityFX" | 
                        "net.minecraft.entity.passive.EntityVillager$ListEnchantedItemForEmeralds.modifyMerchantRecipeList" | 
                        "net.minecraft.client.gui.GuiFlatPresets.func_146426_g" | 
                        "net.minecraft.client.gui.GuiFlatPresets.func_146430_p" | 
                        "net.minecraft.client.gui.GuiFlatPresets.initGui" | 
                        "net.minecraft.client.gui.GuiFlatPresets.onGuiClosed" | 
                        "net.minecraft.client.gui.GuiFlatPresets.keyTyped" | 
                        "net.minecraft.client.gui.GuiFlatPresets.updateScreen" | 
                        "net.minecraft.client.gui.GuiFlatPresets.actionPerformed" | 
                        "net.minecraft.client.gui.GuiFlatPresets.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiFlatPresets.mouseClicked" | 
                        "net.minecraft.client.gui.GuiFlatPresets.drawScreen" | 
                        "net.minecraft.entity.projectile.EntityWitherSkull.canBeCollidedWith" | 
                        "net.minecraft.entity.projectile.EntityWitherSkull.attackEntityFrom" | 
                        "net.minecraft.entity.projectile.EntityWitherSkull.onImpact" | 
                        "net.minecraft.entity.projectile.EntityWitherSkull.getExplosionResistance" | 
                        "net.minecraft.entity.projectile.EntityWitherSkull.entityInit" | 
                        "net.minecraft.entity.projectile.EntityWitherSkull.setInvulnerable" | 
                        "net.minecraft.entity.projectile.EntityWitherSkull.getMotionFactor" | 
                        "net.minecraft.entity.projectile.EntityWitherSkull.isBurning" | 
                        "net.minecraft.entity.projectile.EntityWitherSkull.isInvulnerable" | 
                        "net.optifine.entity.model.ModelAdapterHeadSkeleton.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterHeadSkeleton.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterHeadSkeleton.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterHeadSkeleton.getModelRendererNames" | 
                        "net.minecraft.dispenser.BehaviorDefaultDispenseItem.dispenseStack" | 
                        "net.minecraft.dispenser.BehaviorDefaultDispenseItem.dispense" | 
                        "net.minecraft.dispenser.BehaviorDefaultDispenseItem.func_82488_a" | 
                        "net.minecraft.dispenser.BehaviorDefaultDispenseItem.playDispenseSound" | 
                        "net.minecraft.dispenser.BehaviorDefaultDispenseItem.spawnDispenseParticles" | 
                        "net.minecraft.inventory.ContainerWorkbench.onContainerClosed" | 
                        "net.minecraft.inventory.ContainerWorkbench.canMergeSlot" | 
                        "net.minecraft.inventory.ContainerWorkbench.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerWorkbench.onCraftMatrixChanged" | 
                        "net.minecraft.inventory.ContainerWorkbench.canInteractWith" | 
                        "net.minecraft.world.IWorldAccess.playAuxSFX" | 
                        "net.minecraft.world.IWorldAccess.broadcastSound" | 
                        "net.minecraft.world.IWorldAccess.markBlockForUpdate" | 
                        "net.minecraft.world.IWorldAccess.sendBlockBreakProgress" | 
                        "net.minecraft.world.IWorldAccess.playSound" | 
                        "net.minecraft.world.IWorldAccess.playSoundToNearExcept" | 
                        "net.minecraft.world.IWorldAccess.playRecord" | 
                        "net.minecraft.world.IWorldAccess.notifyLightSet" | 
                        "net.minecraft.world.IWorldAccess.onEntityAdded" | 
                        "net.minecraft.world.IWorldAccess.onEntityRemoved" | 
                        "net.minecraft.world.IWorldAccess.spawnParticle" | 
                        "net.minecraft.world.IWorldAccess.markBlockRangeForRenderUpdate" | 
                        "net.minecraft.client.particle.EntityBlockDustFX$Factory.getEntityFX" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Field1.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Field1.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Field1.func_151559_a" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Field1.writeStructureToNBT" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Field2.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Field2.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Field2.func_151560_a" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$Field2.writeStructureToNBT" | 
                        "net.minecraft.command.CommandExecuteAt.isUsernameIndex" | 
                        "net.minecraft.command.CommandExecuteAt.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandExecuteAt.getCommandUsage" | 
                        "net.minecraft.command.CommandExecuteAt.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandExecuteAt.processCommand" | 
                        "net.minecraft.command.CommandExecuteAt.getCommandName" | 
                        "net.minecraft.command.server.CommandBanIp.canCommandSenderUseCommand" | 
                        "net.minecraft.command.server.CommandBanIp.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandBanIp.getCommandUsage" | 
                        "net.minecraft.command.server.CommandBanIp.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandBanIp.processCommand" | 
                        "net.minecraft.command.server.CommandBanIp.getCommandName" | 
                        "net.minecraft.command.server.CommandBanIp.func_147210_a" | 
                        "slice.script.manager.ScriptManager.getScripts" | 
                        "slice.script.manager.ScriptManager.load" | 
                        "slice.script.manager.ScriptManager.callEvent" | 
                        "slice.script.manager.ScriptManager.getModuleManager" | 
                        "slice.script.manager.ScriptManager.getJarScript" | 
                        "slice.script.manager.ScriptManager.getFontManager" | 
                        "slice.script.manager.ScriptManager.getJarScripts" | 
                        "slice.script.manager.ScriptManager.getScript" | 
                        "slice.script.manager.ScriptManager.getScriptDataDir" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityBeaconRenderer.renderTileEntityAt" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityBeaconRenderer.forceTileEntityRender" | 
                        "net.optifine.override.ChunkCacheOF.getPositionIndex" | 
                        "net.optifine.override.ChunkCacheOF.getCombinedLightRaw" | 
                        "net.optifine.override.ChunkCacheOF.renderFinish" | 
                        "net.optifine.override.ChunkCacheOF.getBiomeGenForCoords" | 
                        "net.optifine.override.ChunkCacheOF.getCombinedLight" | 
                        "net.optifine.override.ChunkCacheOF.getWorldType" | 
                        "net.optifine.override.ChunkCacheOF.isSideSolid" | 
                        "net.optifine.override.ChunkCacheOF.extendedLevelsInChunkCache" | 
                        "net.optifine.override.ChunkCacheOF.getTileEntity" | 
                        "net.optifine.override.ChunkCacheOF.isAirBlock" | 
                        "net.optifine.override.ChunkCacheOF.renderStart" | 
                        "net.optifine.override.ChunkCacheOF.getStrongPower" | 
                        "net.optifine.override.ChunkCacheOF.getBlockState" | 
                        "net.minecraft.command.CommandEntityData.isUsernameIndex" | 
                        "net.minecraft.command.CommandEntityData.getCommandUsage" | 
                        "net.minecraft.command.CommandEntityData.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandEntityData.processCommand" | 
                        "net.minecraft.command.CommandEntityData.getCommandName" | 
                        "net.minecraft.entity.IProjectile.setThrowableHeading" | 
                        "net.minecraftforge.client.model.pipeline.IVertexConsumer.setQuadOrientation" | 
                        "net.minecraftforge.client.model.pipeline.IVertexConsumer.setQuadTint" | 
                        "net.minecraftforge.client.model.pipeline.IVertexConsumer.getVertexFormat" | 
                        "net.minecraftforge.client.model.pipeline.IVertexConsumer.setQuadColored" | 
                        "net.minecraftforge.client.model.pipeline.IVertexConsumer.put" | 
                        "net.optifine.shaders.config.Property.getValue" | 
                        "net.optifine.shaders.config.Property.getUserValue" | 
                        "net.optifine.shaders.config.Property.saveTo" | 
                        "net.optifine.shaders.config.Property.getPropertyValue" | 
                        "net.optifine.shaders.config.Property.setPropertyValue" | 
                        "net.optifine.shaders.config.Property.setValue" | 
                        "net.optifine.shaders.config.Property.getUserName" | 
                        "net.optifine.shaders.config.Property.toString" | 
                        "net.optifine.shaders.config.Property.nextValue" | 
                        "net.optifine.shaders.config.Property.loadFrom" | 
                        "net.optifine.shaders.config.Property.resetValue" | 
                        "net.optifine.shaders.config.Property.getPropertyName" | 
                        "net.minecraft.entity.ai.EntityAITarget.resetTask" | 
                        "net.minecraft.entity.ai.EntityAITarget.getTargetDistance" | 
                        "net.minecraft.entity.ai.EntityAITarget.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAITarget.canEasilyReach" | 
                        "net.minecraft.entity.ai.EntityAITarget.continueExecuting" | 
                        "net.minecraft.command.server.CommandListPlayers.getCommandUsage" | 
                        "net.minecraft.command.server.CommandListPlayers.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandListPlayers.processCommand" | 
                        "net.minecraft.command.server.CommandListPlayers.getCommandName" | 
                        "net.minecraft.util.MouseHelper.ungrabMouseCursor" | 
                        "net.minecraft.util.MouseHelper.mouseXYChange" | 
                        "net.minecraft.util.MouseHelper.grabMouseCursor" | 
                        "net.minecraft.client.renderer.WorldVertexBufferUploader.draw" | 
                        "slice.command.commands.CommandPlugins.handle" | 
                        "slice.command.commands.CommandPlugins.onPacketReceive" | 
                        "slice.command.commands.CommandPlugins.onUpdate" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.elementClicked" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.getScrollBarX" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.getContentHeight" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.func_178043_a" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.func_178042_f" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.func_178044_e" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.drawSelectionBox" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.func_178045_g" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.getSize" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.drawSlot" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.drawBackground" | 
                        "net.minecraft.client.gui.GuiClickableScrolledSelectionListProxy.isSelected" | 
                        "net.minecraft.client.gui.GuiLockIconButton.func_175230_c" | 
                        "net.minecraft.client.gui.GuiLockIconButton.func_175229_b" | 
                        "net.minecraft.client.gui.GuiLockIconButton.drawButton" | 
                        "org.cef.browser.CefBrowser.canGoBack" | 
                        "org.cef.browser.CefBrowser.getFrame" | 
                        "org.cef.browser.CefBrowser.runFileDialog" | 
                        "org.cef.browser.CefBrowser.getFrameCount" | 
                        "org.cef.browser.CefBrowser.doClose" | 
                        "org.cef.browser.CefBrowser.goBack" | 
                        "org.cef.browser.CefBrowser.reload" | 
                        "org.cef.browser.CefBrowser.getRenderHandler" | 
                        "org.cef.browser.CefBrowser.replaceMisspelling" | 
                        "org.cef.browser.CefBrowser.find" | 
                        "org.cef.browser.CefBrowser.getIdentifier" | 
                        "org.cef.browser.CefBrowser.setZoomLevel" | 
                        "org.cef.browser.CefBrowser.close" | 
                        "org.cef.browser.CefBrowser.viewSource" | 
                        "org.cef.browser.CefBrowser.setWindowVisibility" | 
                        "org.cef.browser.CefBrowser.printToPDF" | 
                        "org.cef.browser.CefBrowser.hasDocument" | 
                        "org.cef.browser.CefBrowser.onBeforeClose" | 
                        "org.cef.browser.CefBrowser.getZoomLevel" | 
                        "org.cef.browser.CefBrowser.startDownload" | 
                        "org.cef.browser.CefBrowser.isPopup" | 
                        "org.cef.browser.CefBrowser.getText" | 
                        "org.cef.browser.CefBrowser.getDevTools" | 
                        "org.cef.browser.CefBrowser.setFocus" | 
                        "org.cef.browser.CefBrowser.getMainFrame" | 
                        "org.cef.browser.CefBrowser.getClient" | 
                        "org.cef.browser.CefBrowser.getFocusedFrame" | 
                        "org.cef.browser.CefBrowser.setCloseAllowed" | 
                        "org.cef.browser.CefBrowser.canGoForward" | 
                        "org.cef.browser.CefBrowser.isLoading" | 
                        "org.cef.browser.CefBrowser.getURL" | 
                        "org.cef.browser.CefBrowser.getWindowHandler" | 
                        "org.cef.browser.CefBrowser.print" | 
                        "org.cef.browser.CefBrowser.executeJavaScript" | 
                        "org.cef.browser.CefBrowser.getSource" | 
                        "org.cef.browser.CefBrowser.createImmediately" | 
                        "org.cef.browser.CefBrowser.reloadIgnoreCache" | 
                        "org.cef.browser.CefBrowser.stopFinding" | 
                        "org.cef.browser.CefBrowser.loadRequest" | 
                        "org.cef.browser.CefBrowser.getFrameNames" | 
                        "org.cef.browser.CefBrowser.loadURL" | 
                        "org.cef.browser.CefBrowser.goForward" | 
                        "org.cef.browser.CefBrowser.stopLoad" | 
                        "org.cef.browser.CefBrowser.getUIComponent" | 
                        "org.cef.browser.CefBrowser.createScreenshot" | 
                        "org.cef.browser.CefBrowser.getFrameIdentifiers" | 
                        "com.sliceclient.script.classloader.ScriptLoader.reload" | 
                        "com.sliceclient.script.classloader.ScriptLoader.load" | 
                        "com.sliceclient.script.classloader.ScriptLoader.setFile" | 
                        "com.sliceclient.script.classloader.ScriptLoader.setDescription" | 
                        "com.sliceclient.script.classloader.ScriptLoader.getFile" | 
                        "com.sliceclient.script.classloader.ScriptLoader.getScript" | 
                        "com.sliceclient.script.classloader.ScriptLoader.getDescription" | 
                        "com.sliceclient.script.classloader.ScriptLoader.setScript" | 
                        "slice.gui.alt.manager.AltManager.onTick" | 
                        "slice.gui.alt.manager.AltManager.drawBackground" | 
                        "slice.gui.alt.manager.AltManager.format3Places" | 
                        "slice.gui.alt.manager.AltManager.drawScreen" | 
                        "org.cef.handler.CefAppHandler.onRegisterCustomSchemes" | 
                        "org.cef.handler.CefAppHandler.onScheduleMessagePumpWork" | 
                        "org.cef.handler.CefAppHandler.onContextInitialized" | 
                        "org.cef.handler.CefAppHandler.onBeforeCommandLineProcessing" | 
                        "org.cef.handler.CefAppHandler.stateHasChanged" | 
                        "org.cef.handler.CefAppHandler.onBeforeTerminate" | 
                        "net.minecraft.client.audio.PositionedSound.getVolume" | 
                        "net.minecraft.client.audio.PositionedSound.getSoundLocation" | 
                        "net.minecraft.client.audio.PositionedSound.getPitch" | 
                        "net.minecraft.client.audio.PositionedSound.getRepeatDelay" | 
                        "net.minecraft.client.audio.PositionedSound.getYPosF" | 
                        "net.minecraft.client.audio.PositionedSound.getXPosF" | 
                        "net.minecraft.client.audio.PositionedSound.canRepeat" | 
                        "net.minecraft.client.audio.PositionedSound.getZPosF" | 
                        "net.minecraft.client.audio.PositionedSound.getAttenuationType" | 
                        "net.minecraft.client.renderer.entity.RenderWolf.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderWolf.handleRotationFloat" | 
                        "net.minecraft.client.renderer.entity.RenderWolf.getEntityTexture" | 
                        "net.minecraft.client.model.ModelSkeletonHead.setRotationAngles" | 
                        "net.minecraft.client.model.ModelSkeletonHead.render" | 
                        "net.minecraft.client.particle.EntityPortalFX$Factory.getEntityFX" | 
                        "net.optifine.shaders.uniform.ShaderParameterFloat.getIndexNames1" | 
                        "net.optifine.shaders.uniform.ShaderParameterFloat.getIndexNames2" | 
                        "net.optifine.shaders.uniform.ShaderParameterFloat.getName" | 
                        "net.optifine.shaders.uniform.ShaderParameterFloat.eval" | 
                        "net.optifine.shaders.uniform.ShaderParameterFloat.getUniform" | 
                        "net.minecraft.nbt.JsonToNBT$Any.parse" | 
                        "net.optifine.CustomColorFader.getColor" | 
                        "net.minecraft.client.renderer.entity.RenderFish.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderFish.getEntityTexture" | 
                        "net.minecraft.entity.Entity.resetHeight" | 
                        "net.minecraft.entity.Entity.performHurtAnimation" | 
                        "net.minecraft.entity.Entity.isLiquidPresentInAABB" | 
                        "net.minecraft.entity.Entity.setEntityBoundingBox" | 
                        "net.minecraft.entity.Entity.entityInit" | 
                        "net.minecraft.entity.Entity.addToPlayerScore" | 
                        "net.minecraft.entity.Entity.spawnRunningParticles" | 
                        "net.minecraft.entity.Entity.applyEntityCollision" | 
                        "net.minecraft.entity.Entity.getRotationYawHead" | 
                        "net.minecraft.entity.Entity.isSprinting" | 
                        "net.minecraft.entity.Entity.getYOffset" | 
                        "net.minecraft.entity.Entity.createRunningParticles" | 
                        "net.minecraft.entity.Entity.getCustomNameTag" | 
                        "net.minecraft.entity.Entity.setInvisible" | 
                        "net.minecraft.entity.Entity.copyLocationAndAnglesFrom" | 
                        "net.minecraft.entity.Entity.setAngles" | 
                        "net.minecraft.entity.Entity.attackEntityFrom" | 
                        "net.minecraft.entity.Entity.setCurrentItemOrArmor" | 
                        "net.minecraft.entity.Entity.replaceItemInInventory" | 
                        "net.minecraft.entity.Entity.getDistanceSq" | 
                        "net.minecraft.entity.Entity.hasCustomName" | 
                        "net.minecraft.entity.Entity.isInsideOfMaterial" | 
                        "net.minecraft.entity.Entity.getHorizontalFacing" | 
                        "net.minecraft.entity.Entity.dropItemWithOffset" | 
                        "net.minecraft.entity.Entity.newDoubleNBTList" | 
                        "net.minecraft.entity.Entity.hitByEntity" | 
                        "net.minecraft.entity.Entity.getCollisionBorderSize" | 
                        "net.minecraft.entity.Entity.isWet" | 
                        "net.minecraft.entity.Entity.onKillEntity" | 
                        "net.minecraft.entity.Entity.dealFireDamage" | 
                        "net.minecraft.entity.Entity.shouldSetPosAfterLoading" | 
                        "net.minecraft.entity.Entity.onDataWatcherUpdate" | 
                        "net.minecraft.entity.Entity.setRotation" | 
                        "net.minecraft.entity.Entity.canRenderOnFire" | 
                        "net.minecraft.entity.Entity.updateRiderPosition" | 
                        "net.minecraft.entity.Entity.setPositionAndRotation2" | 
                        "net.minecraft.entity.Entity.getBrightnessForRender" | 
                        "net.minecraft.entity.Entity.getDisplayName" | 
                        "net.minecraft.entity.Entity.isSneaking" | 
                        "net.minecraft.entity.Entity.getSplashSound" | 
                        "net.minecraft.entity.Entity.getMaxFallHeight" | 
                        "net.minecraft.entity.Entity.getEntityBoundingBox" | 
                        "net.minecraft.entity.Entity.sendCommandFeedback" | 
                        "net.minecraft.entity.Entity.onEntityUpdate" | 
                        "net.minecraft.entity.Entity.readFromNBT" | 
                        "net.minecraft.entity.Entity.isInvisible" | 
                        "net.minecraft.entity.Entity.setOnFireFromLava" | 
                        "net.minecraft.entity.Entity.getCollisionBox" | 
                        "net.minecraft.entity.Entity.getCollisionBoundingBox" | 
                        "net.minecraft.entity.Entity.readEntityFromNBT" | 
                        "net.minecraft.entity.Entity.isEating" | 
                        "net.minecraft.entity.Entity.addChatMessage" | 
                        "net.minecraft.entity.Entity.func_181014_aG" | 
                        "net.minecraft.entity.Entity.setOutsideBorder" | 
                        "net.minecraft.entity.Entity.getEyeHeight" | 
                        "net.minecraft.entity.Entity.setAlwaysRenderNameTag" | 
                        "net.minecraft.entity.Entity.travelToDimension" | 
                        "net.minecraft.entity.Entity.getDistanceToEntity" | 
                        "net.minecraft.entity.Entity.getPositionEyes" | 
                        "net.minecraft.entity.Entity.fall" | 
                        "net.minecraft.entity.Entity.addEntityCrashInfo" | 
                        "net.minecraft.entity.Entity.playSound" | 
                        "net.minecraft.entity.Entity.setSneaking" | 
                        "net.minecraft.entity.Entity.setPositionAndUpdate" | 
                        "net.minecraft.entity.Entity.getHoverEvent" | 
                        "net.minecraft.entity.Entity.getEntityId" | 
                        "net.minecraft.entity.Entity.playStepSound" | 
                        "net.minecraft.entity.Entity.getInventory" | 
                        "net.minecraft.entity.Entity.getAlwaysRenderNameTagForRender" | 
                        "net.minecraft.entity.Entity.writeToNBT" | 
                        "net.minecraft.entity.Entity.setCommandStat" | 
                        "net.minecraft.entity.Entity.copyDataFromOld" | 
                        "net.minecraft.entity.Entity.getDistance" | 
                        "net.minecraft.entity.Entity.setCustomNameTag" | 
                        "net.minecraft.entity.Entity.writeEntityToNBT" | 
                        "net.minecraft.entity.Entity.entityDropItem" | 
                        "net.minecraft.entity.Entity.interactFirst" | 
                        "net.minecraft.entity.Entity.getCommandStats" | 
                        "net.minecraft.entity.Entity.canTriggerWalking" | 
                        "net.minecraft.entity.Entity.isPushedByWater" | 
                        "net.minecraft.entity.Entity.onStruckByLightning" | 
                        "net.minecraft.entity.Entity.kill" | 
                        "net.minecraft.entity.Entity.isEntityEqual" | 
                        "net.minecraft.entity.Entity.isImmuneToFire" | 
                        "net.minecraft.entity.Entity.doBlockCollisions" | 
                        "net.minecraft.entity.Entity.getUniqueID" | 
                        "net.minecraft.entity.Entity.setPositionAndRotation" | 
                        "net.minecraft.entity.Entity.canBeCollidedWith" | 
                        "net.minecraft.entity.Entity.clientUpdateEntityNBT" | 
                        "net.minecraft.entity.Entity.equals" | 
                        "net.minecraft.entity.Entity.toString" | 
                        "net.minecraft.entity.Entity.setBeenAttacked" | 
                        "net.minecraft.entity.Entity.interactAt" | 
                        "net.minecraft.entity.Entity.isSilent" | 
                        "net.minecraft.entity.Entity.onUpdate" | 
                        "net.minecraft.entity.Entity.doesEntityNotTriggerPressurePlate" | 
                        "net.minecraft.entity.Entity.getDistanceSqToEntity" | 
                        "net.minecraft.entity.Entity.moveEntity" | 
                        "net.minecraft.entity.Entity.handleWaterMovement" | 
                        "net.minecraft.entity.Entity.getName" | 
                        "net.minecraft.entity.Entity.setLocationAndAngles" | 
                        "net.minecraft.entity.Entity.getNBTTagCompound" | 
                        "net.minecraft.entity.Entity.canAttackWithItem" | 
                        "net.minecraft.entity.Entity.setAir" | 
                        "net.minecraft.entity.Entity.setInWeb" | 
                        "net.minecraft.entity.Entity.getTeleportDirection" | 
                        "net.minecraft.entity.Entity.isInRangeToRender3d" | 
                        "net.minecraft.entity.Entity.isOutsideBorder" | 
                        "net.minecraft.entity.Entity.setPosition" | 
                        "net.minecraft.entity.Entity.isEntityAlive" | 
                        "net.minecraft.entity.Entity.dropItem" | 
                        "net.minecraft.entity.Entity.extinguish" | 
                        "net.minecraft.entity.Entity.preparePlayerToSpawn" | 
                        "net.minecraft.entity.Entity.getAlwaysRenderNameTag" | 
                        "net.minecraft.entity.Entity.updateRidden" | 
                        "net.minecraft.entity.Entity.setVelocity" | 
                        "net.minecraft.entity.Entity.getLook" | 
                        "net.minecraft.entity.Entity.verifyExplosion" | 
                        "net.minecraft.entity.Entity.getLookVec" | 
                        "net.minecraft.entity.Entity.isBurning" | 
                        "net.minecraft.entity.Entity.getAir" | 
                        "net.minecraft.entity.Entity.getFlag" | 
                        "net.minecraft.entity.Entity.getExplosionResistance" | 
                        "net.minecraft.entity.Entity.setFlag" | 
                        "net.minecraft.entity.Entity.getBrightness" | 
                        "net.minecraft.entity.Entity.isOffsetPositionInLiquid" | 
                        "net.minecraft.entity.Entity.moveToBlockPosAndAngles" | 
                        "net.minecraft.entity.Entity.setEntityId" | 
                        "net.minecraft.entity.Entity.updateFallState" | 
                        "net.minecraft.entity.Entity.isEntityInsideOpaqueBlock" | 
                        "net.minecraft.entity.Entity.getMaxInPortalTime" | 
                        "net.minecraft.entity.Entity.onKillCommand" | 
                        "net.minecraft.entity.Entity.setDead" | 
                        "net.minecraft.entity.Entity.handleStatusUpdate" | 
                        "net.minecraft.entity.Entity.getPositionVector" | 
                        "net.minecraft.entity.Entity.pushOutOfBlocks" | 
                        "net.minecraft.entity.Entity.getSwimSound" | 
                        "net.minecraft.entity.Entity.setCommandStats" | 
                        "net.minecraft.entity.Entity.setSprinting" | 
                        "net.minecraft.entity.Entity.setWorld" | 
                        "net.minecraft.entity.Entity.addVelocity" | 
                        "net.minecraft.entity.Entity.setEating" | 
                        "net.minecraft.entity.Entity.getPortalCooldown" | 
                        "net.minecraft.entity.Entity.isInvisibleToPlayer" | 
                        "net.minecraft.entity.Entity.onChunkLoad" | 
                        "net.minecraft.entity.Entity.resetPositionToBB" | 
                        "net.minecraft.entity.Entity.mountEntity" | 
                        "net.minecraft.entity.Entity.applyEnchantments" | 
                        "net.minecraft.entity.Entity.getVectorForRotation" | 
                        "net.minecraft.entity.Entity.setPortal" | 
                        "net.minecraft.entity.Entity.setSize" | 
                        "net.minecraft.entity.Entity.isRiding" | 
                        "net.minecraft.entity.Entity.setSilent" | 
                        "net.minecraft.entity.Entity.getDataWatcher" | 
                        "net.minecraft.entity.Entity.newFloatNBTList" | 
                        "net.minecraft.entity.Entity.hashCode" | 
                        "net.minecraft.entity.Entity.writeToNBTOptional" | 
                        "net.minecraft.entity.Entity.getParts" | 
                        "net.minecraft.entity.Entity.canCommandSenderUseCommand" | 
                        "net.minecraft.entity.Entity.isInWater" | 
                        "net.minecraft.entity.Entity.isInLava" | 
                        "net.minecraft.entity.Entity.getMountedYOffset" | 
                        "net.minecraft.entity.Entity.isInRangeToRenderDist" | 
                        "net.minecraft.entity.Entity.isImmuneToExplosions" | 
                        "net.minecraft.entity.Entity.setRenderYawOffset" | 
                        "net.minecraft.entity.Entity.rayTrace" | 
                        "net.minecraft.entity.Entity.moveFlying" | 
                        "net.minecraft.entity.Entity.getEntityWorld" | 
                        "net.minecraft.entity.Entity.getEntityString" | 
                        "net.minecraft.entity.Entity.setFire" | 
                        "net.minecraft.entity.Entity.getCommandSenderEntity" | 
                        "net.minecraft.entity.Entity.getPosition" | 
                        "net.minecraft.entity.Entity.writeMountToNBT" | 
                        "net.minecraft.entity.Entity.isSpectatedByPlayer" | 
                        "net.minecraft.entity.Entity.canBePushed" | 
                        "net.minecraft.entity.Entity.getDistanceSqToCenter" | 
                        "net.minecraft.entity.Entity.onCollideWithPlayer" | 
                        "net.minecraft.entity.Entity.setRotationYawHead" | 
                        "net.minecraft.entity.Entity.isEntityInvulnerable" | 
                        "slice.gui.hud.legacy.PlayerOnScreen.mouseReleased" | 
                        "slice.gui.hud.legacy.PlayerOnScreen.mouseClicked" | 
                        "slice.gui.hud.legacy.PlayerOnScreen.draw" | 
                        "net.minecraft.village.MerchantRecipe.getToolUses" | 
                        "net.minecraft.village.MerchantRecipe.incrementToolUses" | 
                        "net.minecraft.village.MerchantRecipe.getSecondItemToBuy" | 
                        "net.minecraft.village.MerchantRecipe.getItemToSell" | 
                        "net.minecraft.village.MerchantRecipe.hasSecondItemToBuy" | 
                        "net.minecraft.village.MerchantRecipe.increaseMaxTradeUses" | 
                        "net.minecraft.village.MerchantRecipe.getItemToBuy" | 
                        "net.minecraft.village.MerchantRecipe.getRewardsExp" | 
                        "net.minecraft.village.MerchantRecipe.compensateToolUses" | 
                        "net.minecraft.village.MerchantRecipe.readFromTags" | 
                        "net.minecraft.village.MerchantRecipe.isRecipeDisabled" | 
                        "net.minecraft.village.MerchantRecipe.writeToTags" | 
                        "net.minecraft.village.MerchantRecipe.getMaxTradeUses" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.setPlayerCapabilities" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.isRidingHorse" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.sendPacketDropItem" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.onStoppedUsingItem" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.isHittingPosition" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.getBlockReachDistance" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.setGameType" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.onPlayerDamageBlock" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.getIsHittingBlock" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.isSpectatorMode" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.syncCurrentPlayItem" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.onPlayerRightClick" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.gameIsSurvivalOrAdventure" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.isPlayerRightClickingOnEntity" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.resetBlockRemoving" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.extendedReach" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.sendEnchantPacket" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.sendSlotPacket" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.sendUseItem" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.windowClick" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.getCurrentGameType" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.clickBlock" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.isSpectator" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.shouldDrawHUD" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.flipPlayer" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.isInCreativeMode" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.isNotCreative" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.func_178892_a" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.onPlayerDestroyBlock" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.attackEntity" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.interactWithEntitySendPacket" | 
                        "net.minecraft.client.multiplayer.PlayerControllerMP.updateController" | 
                        "net.minecraft.client.gui.GuiSleepMP.actionPerformed" | 
                        "net.minecraft.client.gui.GuiSleepMP.wakeFromSleep" | 
                        "net.minecraft.client.gui.GuiSleepMP.initGui" | 
                        "net.minecraft.client.gui.GuiSleepMP.keyTyped" | 
                        "net.minecraft.scoreboard.ScoreHealthCriteria.isReadOnly" | 
                        "net.minecraft.scoreboard.ScoreHealthCriteria.getRenderType" | 
                        "net.minecraft.scoreboard.ScoreHealthCriteria.setScore" | 
                        "net.minecraft.client.renderer.VertexBufferUploader.setVertexBuffer" | 
                        "net.minecraft.client.renderer.VertexBufferUploader.draw" | 
                        "net.optifine.entity.model.ModelAdapterMinecartMobSpawner.makeEntityRender" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$End.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$End.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$End.writeStructureToNBT" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu$MoveMenuObject.getSpectatorName" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu$MoveMenuObject.func_178662_A_" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu$MoveMenuObject.func_178663_a" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu$MoveMenuObject.func_178661_a" | 
                        "net.minecraft.client.model.ModelBanner.renderBanner" | 
                        "net.minecraft.client.renderer.block.statemap.StateMapperBase.putStateModelLocations" | 
                        "net.minecraft.client.renderer.block.statemap.StateMapperBase.getModelResourceLocation" | 
                        "net.minecraft.client.renderer.block.statemap.StateMapperBase.getPropertyString" | 
                        "net.minecraft.client.shader.ShaderLoader$ShaderType.getShaderExtension" | 
                        "net.minecraft.client.shader.ShaderLoader$ShaderType.getShaderName" | 
                        "net.minecraft.client.shader.ShaderLoader$ShaderType.getLoadedShaders" | 
                        "net.minecraft.client.shader.ShaderLoader$ShaderType.getShaderMode" | 
                        "slice.gui.main.MainMenu.onTick" | 
                        "slice.gui.main.MainMenu.drawBackground" | 
                        "slice.gui.main.MainMenu.mouseClicked" | 
                        "slice.gui.main.MainMenu.format3Places" | 
                        "slice.gui.main.MainMenu.lambda$initGui$2" | 
                        "slice.gui.main.MainMenu.initGui" | 
                        "slice.gui.main.MainMenu.drawScreen" | 
                        "slice.gui.main.MainMenu.lambda$initGui$3" | 
                        "slice.gui.main.MainMenu.lambda$initGui$0" | 
                        "slice.gui.main.MainMenu.lambda$initGui$1" | 
                        "slice.gui.main.MainMenu.keyTyped" | 
                        "net.optifine.entity.model.anim.IModelResolver.getModelVariable" | 
                        "net.optifine.entity.model.anim.IModelResolver.getModelRenderer" | 
                        "net.minecraft.block.BlockNetherrack.getMapColor" | 
                        "net.minecraft.client.shader.ShaderLoader.deleteShader" | 
                        "net.minecraft.client.shader.ShaderLoader.attachShader" | 
                        "net.minecraft.client.shader.ShaderLoader.getShaderFilename" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.decrStackSize" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.setField" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.applyDrag" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.getName" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.markDirty" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.setInventorySlotContents" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.travelToDimension" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.closeInventory" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.getLockCode" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.getInventoryStackLimit" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.isLocked" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.isItemValidForSlot" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.openInventory" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.setLockCode" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.interactFirst" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.clear" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.getField" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.getStackInSlot" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.setDead" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.killMinecart" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.isUseableByPlayer" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.removeStackFromSlot" | 
                        "net.minecraft.entity.item.EntityMinecartContainer.getFieldCount" | 
                        "net.minecraft.world.storage.MapStorage.loadIdCounts" | 
                        "net.minecraft.world.storage.MapStorage.setData" | 
                        "net.minecraft.world.storage.MapStorage.saveData" | 
                        "net.minecraft.world.storage.MapStorage.loadData" | 
                        "net.minecraft.world.storage.MapStorage.saveAllData" | 
                        "net.minecraft.world.storage.MapStorage.getUniqueDataId" | 
                        "net.minecraft.block.BlockPistonBase.getMetaFromState" | 
                        "net.minecraft.block.BlockPistonBase.checkForMove" | 
                        "net.minecraft.block.BlockPistonBase.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockPistonBase.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockPistonBase.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockPistonBase.isFullCube" | 
                        "net.minecraft.block.BlockPistonBase.onBlockAdded" | 
                        "net.minecraft.block.BlockPistonBase.getStateForEntityRender" | 
                        "net.minecraft.block.BlockPistonBase.shouldBeExtended" | 
                        "net.minecraft.block.BlockPistonBase.onBlockEventReceived" | 
                        "net.minecraft.block.BlockPistonBase.createBlockState" | 
                        "net.minecraft.block.BlockPistonBase.addCollisionBoxesToList" | 
                        "net.minecraft.block.BlockPistonBase.onBlockPlacedBy" | 
                        "net.minecraft.block.BlockPistonBase.doMove" | 
                        "net.minecraft.block.BlockPistonBase.getStateFromMeta" | 
                        "net.minecraft.block.BlockPistonBase.isOpaqueCube" | 
                        "net.minecraft.block.BlockPistonBase.setBlockBoundsForItemRender" | 
                        "net.minecraft.block.BlockPistonBase.onBlockPlaced" | 
                        "net.minecraft.client.renderer.entity.RenderOcelot.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderOcelot.getEntityTexture" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator$Span.func_178385_b" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator$Span.func_178384_c" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator$Span.func_178381_d" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator$Span.func_178382_a" | 
                        "net.minecraft.client.renderer.block.model.ItemModelGenerator$Span.func_178383_a" | 
                        "net.minecraft.client.model.ModelRenderer.checkResetDisplayList" | 
                        "net.minecraft.client.model.ModelRenderer.postRender" | 
                        "net.minecraft.client.model.ModelRenderer.getTextureLocation" | 
                        "net.minecraft.client.model.ModelRenderer.getChild" | 
                        "net.minecraft.client.model.ModelRenderer.setTextureOffset" | 
                        "net.minecraft.client.model.ModelRenderer.getId" | 
                        "net.minecraft.client.model.ModelRenderer.getDisplayList" | 
                        "net.minecraft.client.model.ModelRenderer.getChildDeep" | 
                        "net.minecraft.client.model.ModelRenderer.setTextureSize" | 
                        "net.minecraft.client.model.ModelRenderer.renderWithRotation" | 
                        "net.minecraft.client.model.ModelRenderer.addSprite" | 
                        "net.minecraft.client.model.ModelRenderer.setModelUpdater" | 
                        "net.minecraft.client.model.ModelRenderer.compileDisplayList" | 
                        "net.minecraft.client.model.ModelRenderer.getCompiled" | 
                        "net.minecraft.client.model.ModelRenderer.setId" | 
                        "net.minecraft.client.model.ModelRenderer.toString" | 
                        "net.minecraft.client.model.ModelRenderer.setRotationPoint" | 
                        "net.minecraft.client.model.ModelRenderer.setTextureLocation" | 
                        "net.minecraft.client.model.ModelRenderer.render" | 
                        "net.minecraft.client.model.ModelRenderer.addChild" | 
                        "net.minecraft.client.model.ModelRenderer.addBox" | 
                        "org.cef.browser.ICefRenderer.onPopupSize" | 
                        "org.cef.browser.ICefRenderer.onPaint" | 
                        "org.cef.browser.ICefRenderer.destroy" | 
                        "org.cef.browser.ICefRenderer.onPopupClosed" | 
                        "org.cef.browser.ICefRenderer.render" | 
                        "net.minecraft.client.gui.GuiSnooper.actionPerformed" | 
                        "net.minecraft.client.gui.GuiSnooper.handleMouseInput" | 
                        "net.minecraft.client.gui.GuiSnooper.initGui" | 
                        "net.minecraft.client.gui.GuiSnooper.drawScreen" | 
                        "net.minecraft.util.IntHashMap.lookup" | 
                        "net.minecraft.util.IntHashMap.removeEntry" | 
                        "net.minecraft.util.IntHashMap.grow" | 
                        "net.minecraft.util.IntHashMap.containsItem" | 
                        "net.minecraft.util.IntHashMap.insert" | 
                        "net.minecraft.util.IntHashMap.addKey" | 
                        "net.minecraft.util.IntHashMap.lookupEntry" | 
                        "net.minecraft.util.IntHashMap.removeObject" | 
                        "net.minecraft.util.IntHashMap.copyTo" | 
                        "net.minecraft.util.IntHashMap.clearMap" | 
                        "net.minecraft.world.WorldSettings.getWorldName" | 
                        "net.minecraft.world.WorldSettings.setWorldName" | 
                        "net.minecraft.world.WorldSettings.isBonusChestEnabled" | 
                        "net.minecraft.world.WorldSettings.getSeed" | 
                        "net.minecraft.world.WorldSettings.enableBonusChest" | 
                        "net.minecraft.world.WorldSettings.isMapFeaturesEnabled" | 
                        "net.minecraft.world.WorldSettings.getGameType" | 
                        "net.minecraft.world.WorldSettings.getTerrainType" | 
                        "net.minecraft.world.WorldSettings.areCommandsAllowed" | 
                        "net.minecraft.world.WorldSettings.getHardcoreEnabled" | 
                        "net.minecraft.world.WorldSettings.enableCommands" | 
                        "net.minecraft.block.BlockGravel.getMapColor" | 
                        "net.minecraft.block.BlockGravel.getItemDropped" | 
                        "net.minecraft.util.EnumWorldBlockLayer.toString" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld$Details.elementClicked" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld$Details.getSize" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld$Details.getScrollBarX" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld$Details.drawSlot" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld$Details.func_148224_c" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld$Details.drawBackground" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld$Details.func_148225_a" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld$Details.isSelected" | 
                        "net.minecraft.client.gui.GuiCreateFlatWorld$Details.func_148226_e" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$PieceWeight.canSpawnMoreStructuresOfType" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$PieceWeight.canSpawnMoreStructures" | 
                        "net.minecraft.client.renderer.culling.ClippingHelperImpl.init" | 
                        "net.minecraft.client.renderer.culling.ClippingHelperImpl.normalize" | 
                        "net.optifine.reflect.IResolvable.resolve" | 
                        "net.minecraft.client.resources.ResourcePackListEntryFound.func_148318_i" | 
                        "net.minecraft.client.resources.ResourcePackListEntryFound.func_148311_a" | 
                        "net.minecraft.client.resources.ResourcePackListEntryFound.func_148312_b" | 
                        "net.minecraft.client.resources.ResourcePackListEntryFound.func_183019_a" | 
                        "net.minecraft.client.resources.ResourcePackListEntryFound.func_148313_c" | 
                        "net.minecraft.block.BlockCommandBlock.getMetaFromState" | 
                        "net.minecraft.block.BlockCommandBlock.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockCommandBlock.onBlockActivated" | 
                        "net.minecraft.block.BlockCommandBlock.getRenderType" | 
                        "net.minecraft.block.BlockCommandBlock.tickRate" | 
                        "net.minecraft.block.BlockCommandBlock.hasComparatorInputOverride" | 
                        "net.minecraft.block.BlockCommandBlock.getComparatorInputOverride" | 
                        "net.minecraft.block.BlockCommandBlock.createBlockState" | 
                        "net.minecraft.block.BlockCommandBlock.quantityDropped" | 
                        "net.minecraft.block.BlockCommandBlock.createNewTileEntity" | 
                        "net.minecraft.block.BlockCommandBlock.onBlockPlacedBy" | 
                        "net.minecraft.block.BlockCommandBlock.getStateFromMeta" | 
                        "net.minecraft.block.BlockCommandBlock.updateTick" | 
                        "net.minecraft.block.BlockCommandBlock.onBlockPlaced" | 
                        "net.minecraft.client.gui.ServerSelectionList.getSize" | 
                        "net.minecraft.client.gui.ServerSelectionList.getListWidth" | 
                        "net.minecraft.client.gui.ServerSelectionList.getScrollBarX" | 
                        "net.minecraft.client.gui.ServerSelectionList.func_148194_a" | 
                        "net.minecraft.client.gui.ServerSelectionList.func_148195_a" | 
                        "net.minecraft.client.gui.ServerSelectionList.isSelected" | 
                        "net.minecraft.client.gui.ServerSelectionList.getListEntry" | 
                        "net.minecraft.client.gui.ServerSelectionList.func_148193_k" | 
                        "net.minecraft.client.gui.ServerSelectionList.setSelectedSlotIndex" | 
                        "net.optifine.ConnectedProperties.parseCtmTileIndexes" | 
                        "net.optifine.ConnectedProperties.isValidRandom" | 
                        "net.optifine.ConnectedProperties.isValidTop" | 
                        "net.optifine.ConnectedProperties.isValidHorizontal" | 
                        "net.optifine.ConnectedProperties.matchesBiome" | 
                        "net.optifine.ConnectedProperties.updateIcons" | 
                        "net.optifine.ConnectedProperties.parseTileNames" | 
                        "net.optifine.ConnectedProperties.detectMatchBlocks" | 
                        "net.optifine.ConnectedProperties.isValidCtm" | 
                        "net.optifine.ConnectedProperties.detectConnect" | 
                        "net.optifine.ConnectedProperties.isValidOverlayRandom" | 
                        "net.optifine.ConnectedProperties.isValidOverlayRepeat" | 
                        "net.optifine.ConnectedProperties.parseMatchTiles" | 
                        "net.optifine.ConnectedProperties.isValidCtmCompact" | 
                        "net.optifine.ConnectedProperties.isValidRepeat" | 
                        "net.optifine.ConnectedProperties.getMax" | 
                        "net.optifine.ConnectedProperties.isValidOverlay" | 
                        "net.optifine.ConnectedProperties.isValid" | 
                        "net.optifine.ConnectedProperties.isValidVerticalHorizontal" | 
                        "net.optifine.ConnectedProperties.matchesBlockId" | 
                        "net.optifine.ConnectedProperties.detectMatchBlockIds" | 
                        "net.optifine.ConnectedProperties.isValidVertical" | 
                        "net.optifine.ConnectedProperties.isValidOverlayCtm" | 
                        "net.optifine.ConnectedProperties.detectMatchTiles" | 
                        "net.optifine.ConnectedProperties.matchesIcon" | 
                        "net.optifine.ConnectedProperties.matchesBlock" | 
                        "net.optifine.ConnectedProperties.isValidFixed" | 
                        "net.optifine.ConnectedProperties.getMetadataMax" | 
                        "net.optifine.ConnectedProperties.toString" | 
                        "net.optifine.ConnectedProperties.isValidHorizontalVertical" | 
                        "net.optifine.ConnectedProperties.isValidOverlayFixed" | 
                        "net.minecraft.world.ChunkCache.getLightFor" | 
                        "net.minecraft.world.ChunkCache.extendedLevelsInChunkCache" | 
                        "net.minecraft.world.ChunkCache.getLightForExt" | 
                        "net.minecraft.world.ChunkCache.getBiomeGenForCoords" | 
                        "net.minecraft.world.ChunkCache.getTileEntity" | 
                        "net.minecraft.world.ChunkCache.getCombinedLight" | 
                        "net.minecraft.world.ChunkCache.isAirBlock" | 
                        "net.minecraft.world.ChunkCache.getStrongPower" | 
                        "net.minecraft.world.ChunkCache.getBlockState" | 
                        "net.minecraft.world.ChunkCache.getWorldType" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$SwampHut.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$SwampHut.addComponentParts" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$SwampHut.writeStructureToNBT" | 
                        "org.cef.callback.CefNativeAdapter.setNativeRef" | 
                        "org.cef.callback.CefNativeAdapter.getNativeRef" | 
                        "net.minecraft.client.renderer.block.model.ModelBlockDefinition$Variants.hashCode" | 
                        "net.minecraft.client.renderer.block.model.ModelBlockDefinition$Variants.equals" | 
                        "net.minecraft.client.renderer.block.model.ModelBlockDefinition$Variants.getVariants" | 
                        "net.minecraft.block.BlockRedstoneLight.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockRedstoneLight.createStackedBlock" | 
                        "net.minecraft.block.BlockRedstoneLight.getItem" | 
                        "net.minecraft.block.BlockRedstoneLight.updateTick" | 
                        "net.minecraft.block.BlockRedstoneLight.onBlockAdded" | 
                        "net.minecraft.block.BlockRedstoneLight.getItemDropped" | 
                        "net.optifine.expr.TokenType.hasCharNext" | 
                        "net.optifine.expr.TokenType.getCharsNext" | 
                        "net.optifine.expr.TokenType.getCharsFirst" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds.actionPerformed" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds.getSoundVolume" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds.initGui" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds.drawScreen" | 
                        "slice.manager.ModuleManager.getModule" | 
                        "slice.manager.ModuleManager.getMinehut" | 
                        "slice.manager.ModuleManager.getInterface" | 
                        "slice.manager.ModuleManager.setModules" | 
                        "slice.manager.ModuleManager.getModules" | 
                        "slice.manager.ModuleManager.unregister" | 
                        "slice.manager.ModuleManager.getEnabledModules" | 
                        "slice.manager.ModuleManager.getTranslator" | 
                        "slice.manager.ModuleManager.getAnimations" | 
                        "slice.manager.ModuleManager.register" | 
                        "net.minecraft.entity.ai.EntityAISit.resetTask" | 
                        "net.minecraft.entity.ai.EntityAISit.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAISit.setSitting" | 
                        "net.minecraft.entity.ai.EntityAISit.startExecuting" | 
                        "net.minecraft.tileentity.TileEntityDropper.getName" | 
                        "net.minecraft.tileentity.TileEntityDropper.getGuiID" | 
                        "net.minecraft.client.particle.EntityLargeExplodeFX.getBrightnessForRender" | 
                        "net.minecraft.client.particle.EntityLargeExplodeFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityLargeExplodeFX.getFXLayer" | 
                        "net.minecraft.client.particle.EntityLargeExplodeFX.onUpdate" | 
                        "net.minecraft.world.gen.layer.GenLayerBiomeEdge.canBiomesBeNeighbors" | 
                        "net.minecraft.world.gen.layer.GenLayerBiomeEdge.replaceBiomeEdge" | 
                        "net.minecraft.world.gen.layer.GenLayerBiomeEdge.getInts" | 
                        "net.minecraft.world.gen.layer.GenLayerBiomeEdge.replaceBiomeEdgeIfNecessary" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$Feature.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$Feature.func_74935_a" | 
                        "net.minecraft.world.gen.structure.ComponentScatteredFeaturePieces$Feature.writeStructureToNBT" | 
                        "net.minecraft.client.particle.EntitySuspendFX$Factory.getEntityFX" | 
                        "net.minecraft.world.Teleporter.makePortal" | 
                        "net.minecraft.world.Teleporter.placeInPortal" | 
                        "net.minecraft.world.Teleporter.removeStalePortalLocations" | 
                        "net.minecraft.world.Teleporter.placeInExistingPortal" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection.getFrameIndex" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection.getFrameHeight" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection.getFrameWidth" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection.isInterpolate" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection.frameHasTime" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection.getAnimationFrame" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection.getFrameCount" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection.getFrameIndexSet" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection.getFrameTimeSingle" | 
                        "net.minecraft.client.resources.data.AnimationMetadataSection.getFrameTime" | 
                        "slice.module.data.Category.getName" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$WoodHut.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$WoodHut.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureVillagePieces$WoodHut.writeStructureToNBT" | 
                        "net.minecraft.block.BlockSilverfish.getMetaFromState" | 
                        "net.minecraft.block.BlockSilverfish.createStackedBlock" | 
                        "net.minecraft.block.BlockSilverfish.createBlockState" | 
                        "net.minecraft.block.BlockSilverfish.quantityDropped" | 
                        "net.minecraft.block.BlockSilverfish.getDamageValue" | 
                        "net.minecraft.block.BlockSilverfish.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockSilverfish.getStateFromMeta" | 
                        "net.minecraft.block.BlockSilverfish.getSubBlocks" | 
                        "net.minecraft.world.storage.WorldInfo.setBorderLerpTime" | 
                        "net.minecraft.world.storage.WorldInfo.getSizeOnDisk" | 
                        "net.minecraft.world.storage.WorldInfo.setSaveVersion" | 
                        "net.minecraft.world.storage.WorldInfo.getNBTTagCompound" | 
                        "net.minecraft.world.storage.WorldInfo.setWorldTotalTime" | 
                        "net.minecraft.world.storage.WorldInfo.setBorderWarningTime" | 
                        "net.minecraft.world.storage.WorldInfo.setBorderSafeZone" | 
                        "net.minecraft.world.storage.WorldInfo.getCleanWeatherTime" | 
                        "net.minecraft.world.storage.WorldInfo.setSpawn" | 
                        "net.minecraft.world.storage.WorldInfo.setHardcore" | 
                        "net.minecraft.world.storage.WorldInfo.setWorldTime" | 
                        "net.minecraft.world.storage.WorldInfo.getGeneratorOptions" | 
                        "net.minecraft.world.storage.WorldInfo.getWorldTime" | 
                        "net.minecraft.world.storage.WorldInfo.getSaveVersion" | 
                        "net.minecraft.world.storage.WorldInfo.setServerInitialized" | 
                        "net.minecraft.world.storage.WorldInfo.getTerrainType" | 
                        "net.minecraft.world.storage.WorldInfo.getThunderTime" | 
                        "net.minecraft.world.storage.WorldInfo.getSpawnY" | 
                        "net.minecraft.world.storage.WorldInfo.setCleanWeatherTime" | 
                        "net.minecraft.world.storage.WorldInfo.getBorderCenterZ" | 
                        "net.minecraft.world.storage.WorldInfo.getSpawnZ" | 
                        "net.minecraft.world.storage.WorldInfo.getBorderCenterX" | 
                        "net.minecraft.world.storage.WorldInfo.getBorderLerpTime" | 
                        "net.minecraft.world.storage.WorldInfo.isHardcoreModeEnabled" | 
                        "net.minecraft.world.storage.WorldInfo.getSpawnX" | 
                        "net.minecraft.world.storage.WorldInfo.setSpawnZ" | 
                        "net.minecraft.world.storage.WorldInfo.setSpawnY" | 
                        "net.minecraft.world.storage.WorldInfo.getBorderSafeZone" | 
                        "net.minecraft.world.storage.WorldInfo.setBorderWarningDistance" | 
                        "net.minecraft.world.storage.WorldInfo.getGameType" | 
                        "net.minecraft.world.storage.WorldInfo.populateFromWorldSettings" | 
                        "net.minecraft.world.storage.WorldInfo.getGameRulesInstance" | 
                        "net.minecraft.world.storage.WorldInfo.setBorderDamagePerBlock" | 
                        "net.minecraft.world.storage.WorldInfo.setThundering" | 
                        "net.minecraft.world.storage.WorldInfo.isRaining" | 
                        "net.minecraft.world.storage.WorldInfo.getBorderSize" | 
                        "net.minecraft.world.storage.WorldInfo.getPlayerNBTTagCompound" | 
                        "net.minecraft.world.storage.WorldInfo.getRainTime" | 
                        "net.minecraft.world.storage.WorldInfo.isInitialized" | 
                        "net.minecraft.world.storage.WorldInfo.getBorderLerpTarget" | 
                        "net.minecraft.world.storage.WorldInfo.setRaining" | 
                        "net.minecraft.world.storage.WorldInfo.setDifficulty" | 
                        "net.minecraft.world.storage.WorldInfo.setAllowCommands" | 
                        "net.minecraft.world.storage.WorldInfo.getWorldName" | 
                        "net.minecraft.world.storage.WorldInfo.setWorldName" | 
                        "net.minecraft.world.storage.WorldInfo.setGameType" | 
                        "net.minecraft.world.storage.WorldInfo.setDifficultyLocked" | 
                        "net.minecraft.world.storage.WorldInfo.cloneNBTCompound" | 
                        "net.minecraft.world.storage.WorldInfo.isMapFeaturesEnabled" | 
                        "net.minecraft.world.storage.WorldInfo.getBorderWarningTime" | 
                        "net.minecraft.world.storage.WorldInfo.getBorderWarningDistance" | 
                        "net.minecraft.world.storage.WorldInfo.setSpawnX" | 
                        "net.minecraft.world.storage.WorldInfo.addToCrashReport" | 
                        "net.minecraft.world.storage.WorldInfo.getSeed" | 
                        "net.minecraft.world.storage.WorldInfo.getWorldTotalTime" | 
                        "net.minecraft.world.storage.WorldInfo.setBorderSize" | 
                        "net.minecraft.world.storage.WorldInfo.isDifficultyLocked" | 
                        "net.minecraft.world.storage.WorldInfo.setBorderLerpTarget" | 
                        "net.minecraft.world.storage.WorldInfo.setMapFeaturesEnabled" | 
                        "net.minecraft.world.storage.WorldInfo.getBorderDamagePerBlock" | 
                        "net.minecraft.world.storage.WorldInfo.getLastTimePlayed" | 
                        "net.minecraft.world.storage.WorldInfo.updateTagCompound" | 
                        "net.minecraft.world.storage.WorldInfo.setRainTime" | 
                        "net.minecraft.world.storage.WorldInfo.isThundering" | 
                        "net.minecraft.world.storage.WorldInfo.areCommandsAllowed" | 
                        "net.minecraft.world.storage.WorldInfo.setTerrainType" | 
                        "net.minecraft.world.storage.WorldInfo.getDifficulty" | 
                        "net.minecraft.world.storage.WorldInfo.setThunderTime" | 
                        "net.minecraft.entity.ai.EntityAIFollowParent.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIFollowParent.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIFollowParent.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIFollowParent.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIFollowParent.continueExecuting" | 
                        "net.minecraft.block.BlockWorkbench$InterfaceCraftingTable.getName" | 
                        "net.minecraft.block.BlockWorkbench$InterfaceCraftingTable.getDisplayName" | 
                        "net.minecraft.block.BlockWorkbench$InterfaceCraftingTable.hasCustomName" | 
                        "net.minecraft.block.BlockWorkbench$InterfaceCraftingTable.createContainer" | 
                        "net.minecraft.block.BlockWorkbench$InterfaceCraftingTable.getGuiID" | 
                        "net.minecraft.world.gen.feature.WorldGenTallGrass.generate" | 
                        "slice.command.commands.CommandToggle.handle" | 
                        "net.minecraft.client.gui.GuiShareToLan.actionPerformed" | 
                        "net.minecraft.client.gui.GuiShareToLan.initGui" | 
                        "net.minecraft.client.gui.GuiShareToLan.drawScreen" | 
                        "net.minecraft.client.gui.GuiShareToLan.func_146595_g" | 
                        "net.minecraft.client.renderer.tileentity.RenderWitherSkull.func_82400_a" | 
                        "net.minecraft.client.renderer.tileentity.RenderWitherSkull.doRender" | 
                        "net.minecraft.client.renderer.tileentity.RenderWitherSkull.getEntityTexture" | 
                        "net.minecraft.client.renderer.entity.layers.LayerMooshroomMushroom.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerMooshroomMushroom.shouldCombineTextures" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.drawEntry" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.setSelected" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178021_b" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178022_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178024_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178023_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178026_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.mousePressed" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178025_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.mouseReleased" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178016_b" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178017_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178027_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178018_a" | 
                        "net.minecraft.client.gui.GuiPageButtonList$GuiEntry.func_178019_b" | 
                        "net.minecraft.entity.IEntityOwnable.getOwnerId" | 
                        "net.minecraft.entity.IEntityOwnable.getOwner" | 
                        "net.minecraft.world.gen.MapGenBase.generate" | 
                        "net.minecraft.world.gen.MapGenBase.recursiveGenerate" | 
                        "org.cef.misc.CefPrintSettings.setColorModel" | 
                        "org.cef.misc.CefPrintSettings.getDuplexMode" | 
                        "org.cef.misc.CefPrintSettings.getPageRanges" | 
                        "org.cef.misc.CefPrintSettings.getPageRangesCount" | 
                        "org.cef.misc.CefPrintSettings.isReadOnly" | 
                        "org.cef.misc.CefPrintSettings.setDPI" | 
                        "org.cef.misc.CefPrintSettings.setCopies" | 
                        "org.cef.misc.CefPrintSettings.setPrinterPrintableArea" | 
                        "org.cef.misc.CefPrintSettings.setDuplexMode" | 
                        "org.cef.misc.CefPrintSettings.setPageRanges" | 
                        "org.cef.misc.CefPrintSettings.getCopies" | 
                        "org.cef.misc.CefPrintSettings.setOrientation" | 
                        "org.cef.misc.CefPrintSettings.getColorModel" | 
                        "org.cef.misc.CefPrintSettings.isValid" | 
                        "org.cef.misc.CefPrintSettings.willCollate" | 
                        "org.cef.misc.CefPrintSettings.getDPI" | 
                        "org.cef.misc.CefPrintSettings.setCollate" | 
                        "org.cef.misc.CefPrintSettings.setDeviceName" | 
                        "org.cef.misc.CefPrintSettings.isLandscape" | 
                        "org.cef.misc.CefPrintSettings.finalize" | 
                        "org.cef.misc.CefPrintSettings.dispose" | 
                        "org.cef.misc.CefPrintSettings.getDeviceName" | 
                        "org.cef.misc.CefPrintSettings.setSelectionOnly" | 
                        "org.cef.misc.CefPrintSettings.isSelectionOnly" | 
                        "net.optifine.shaders.gui.GuiSliderShaderOption.mouseReleased" | 
                        "net.optifine.shaders.gui.GuiSliderShaderOption.mouseDragged" | 
                        "net.optifine.shaders.gui.GuiSliderShaderOption.valueChanged" | 
                        "net.optifine.shaders.gui.GuiSliderShaderOption.isSwitchable" | 
                        "net.optifine.shaders.gui.GuiSliderShaderOption.getHoverState" | 
                        "net.optifine.shaders.gui.GuiSliderShaderOption.mousePressed" | 
                        "net.minecraft.item.crafting.IRecipe.getRecipeOutput" | 
                        "net.minecraft.item.crafting.IRecipe.getRemainingItems" | 
                        "net.minecraft.item.crafting.IRecipe.getCraftingResult" | 
                        "net.minecraft.item.crafting.IRecipe.getRecipeSize" | 
                        "net.minecraft.item.crafting.IRecipe.matches" | 
                        "net.minecraft.client.gui.inventory.GuiBeacon$PowerButton.drawButtonForegroundLayer" | 
                        "net.minecraft.world.border.EnumBorderStatus.getID" | 
                        "net.minecraft.block.BlockSeaLantern.canSilkHarvest" | 
                        "net.minecraft.block.BlockSeaLantern.getMapColor" | 
                        "net.minecraft.block.BlockSeaLantern.quantityDropped" | 
                        "net.minecraft.block.BlockSeaLantern.quantityDroppedWithBonus" | 
                        "net.minecraft.block.BlockSeaLantern.getItemDropped" | 
                        "net.minecraft.profiler.IPlayerUsage.isSnooperEnabled" | 
                        "net.minecraft.profiler.IPlayerUsage.addServerStatsToSnooper" | 
                        "net.minecraft.profiler.IPlayerUsage.addServerTypeToSnooper" | 
                        "net.minecraft.client.model.ModelZombieVillager.setRotationAngles" | 
                        "org.cef.handler.CefResourceHandlerAdapter.cancel" | 
                        "org.cef.handler.CefResourceHandlerAdapter.readResponse" | 
                        "org.cef.handler.CefResourceHandlerAdapter.getResponseHeaders" | 
                        "org.cef.handler.CefResourceHandlerAdapter.processRequest" | 
                        "org.cef.callback.CefDownloadItem.getTotalBytes" | 
                        "org.cef.callback.CefDownloadItem.isCanceled" | 
                        "org.cef.callback.CefDownloadItem.getMimeType" | 
                        "org.cef.callback.CefDownloadItem.getFullPath" | 
                        "org.cef.callback.CefDownloadItem.isValid" | 
                        "org.cef.callback.CefDownloadItem.getId" | 
                        "org.cef.callback.CefDownloadItem.getURL" | 
                        "org.cef.callback.CefDownloadItem.getCurrentSpeed" | 
                        "org.cef.callback.CefDownloadItem.getEndTime" | 
                        "org.cef.callback.CefDownloadItem.getSuggestedFileName" | 
                        "org.cef.callback.CefDownloadItem.getContentDisposition" | 
                        "org.cef.callback.CefDownloadItem.getStartTime" | 
                        "org.cef.callback.CefDownloadItem.isInProgress" | 
                        "org.cef.callback.CefDownloadItem.getReceivedBytes" | 
                        "org.cef.callback.CefDownloadItem.isComplete" | 
                        "org.cef.callback.CefDownloadItem.getPercentComplete" | 
                        "net.minecraft.entity.ai.EntityAIMoveIndoors.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIMoveIndoors.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIMoveIndoors.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIMoveIndoors.continueExecuting" | 
                        "net.minecraft.util.ResourceLocation.hashCode" | 
                        "net.minecraft.util.ResourceLocation.equals" | 
                        "net.minecraft.util.ResourceLocation.getResourceDomain" | 
                        "net.minecraft.util.ResourceLocation.toString" | 
                        "net.minecraft.util.ResourceLocation.getResourcePath" | 
                        "net.minecraft.client.particle.EntitySmokeFX.renderParticle" | 
                        "net.minecraft.client.particle.EntitySmokeFX.onUpdate" | 
                        "net.minecraft.client.network.LanServerDetector$LanServerList.getWasUpdated" | 
                        "net.minecraft.client.network.LanServerDetector$LanServerList.setWasNotUpdated" | 
                        "net.minecraft.client.network.LanServerDetector$LanServerList.getLanServers" | 
                        "net.minecraft.client.network.LanServerDetector$LanServerList.func_77551_a" | 
                        "net.minecraft.block.BlockTripWire.getMetaFromState" | 
                        "net.minecraft.block.BlockTripWire.updateState" | 
                        "net.minecraft.block.BlockTripWire.getBlockLayer" | 
                        "net.minecraft.block.BlockTripWire.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockTripWire.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockTripWire.randomTick" | 
                        "net.minecraft.block.BlockTripWire.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockTripWire.onBlockHarvested" | 
                        "net.minecraft.block.BlockTripWire.notifyHook" | 
                        "net.minecraft.block.BlockTripWire.isFullCube" | 
                        "net.minecraft.block.BlockTripWire.getItem" | 
                        "net.minecraft.block.BlockTripWire.onBlockAdded" | 
                        "net.minecraft.block.BlockTripWire.getActualState" | 
                        "net.minecraft.block.BlockTripWire.createBlockState" | 
                        "net.minecraft.block.BlockTripWire.onEntityCollidedWithBlock" | 
                        "net.minecraft.block.BlockTripWire.getStateFromMeta" | 
                        "net.minecraft.block.BlockTripWire.updateTick" | 
                        "net.minecraft.block.BlockTripWire.breakBlock" | 
                        "net.minecraft.block.BlockTripWire.isOpaqueCube" | 
                        "net.minecraft.block.BlockTripWire.getItemDropped" | 
                        "net.minecraft.entity.monster.EntityGhast$AILookAround.updateTask" | 
                        "net.minecraft.entity.monster.EntityGhast$AILookAround.shouldExecute" | 
                        "net.minecraft.client.network.LanServerDetector$ThreadLanServerFind.run" | 
                        "net.minecraft.world.EnumDifficulty.getDifficultyResourceKey" | 
                        "net.minecraft.world.EnumDifficulty.getDifficultyId" | 
                        "slice.event.events.EventMouse.getButton" | 
                        "slice.event.events.EventMouse.setButton" | 
                        "net.minecraft.block.BlockDragonEgg.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockDragonEgg.onBlockActivated" | 
                        "net.minecraft.block.BlockDragonEgg.onBlockClicked" | 
                        "net.minecraft.block.BlockDragonEgg.teleport" | 
                        "net.minecraft.block.BlockDragonEgg.isFullCube" | 
                        "net.minecraft.block.BlockDragonEgg.checkFall" | 
                        "net.minecraft.block.BlockDragonEgg.getItem" | 
                        "net.minecraft.block.BlockDragonEgg.updateTick" | 
                        "net.minecraft.block.BlockDragonEgg.isOpaqueCube" | 
                        "net.minecraft.block.BlockDragonEgg.onBlockAdded" | 
                        "net.minecraft.block.BlockDragonEgg.tickRate" | 
                        "net.minecraft.block.BlockDragonEgg.shouldSideBeRendered" | 
                        "net.minecraft.tileentity.TileEntityDispenser.decrStackSize" | 
                        "net.minecraft.tileentity.TileEntityDispenser.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityDispenser.openInventory" | 
                        "net.minecraft.tileentity.TileEntityDispenser.setField" | 
                        "net.minecraft.tileentity.TileEntityDispenser.getName" | 
                        "net.minecraft.tileentity.TileEntityDispenser.setCustomName" | 
                        "net.minecraft.tileentity.TileEntityDispenser.clear" | 
                        "net.minecraft.tileentity.TileEntityDispenser.getField" | 
                        "net.minecraft.tileentity.TileEntityDispenser.createContainer" | 
                        "net.minecraft.tileentity.TileEntityDispenser.addItemStack" | 
                        "net.minecraft.tileentity.TileEntityDispenser.getStackInSlot" | 
                        "net.minecraft.tileentity.TileEntityDispenser.setInventorySlotContents" | 
                        "net.minecraft.tileentity.TileEntityDispenser.closeInventory" | 
                        "net.minecraft.tileentity.TileEntityDispenser.getInventoryStackLimit" | 
                        "net.minecraft.tileentity.TileEntityDispenser.getSizeInventory" | 
                        "net.minecraft.tileentity.TileEntityDispenser.isUseableByPlayer" | 
                        "net.minecraft.tileentity.TileEntityDispenser.hasCustomName" | 
                        "net.minecraft.tileentity.TileEntityDispenser.getDispenseSlot" | 
                        "net.minecraft.tileentity.TileEntityDispenser.removeStackFromSlot" | 
                        "net.minecraft.tileentity.TileEntityDispenser.getFieldCount" | 
                        "net.minecraft.tileentity.TileEntityDispenser.writeToNBT" | 
                        "net.minecraft.tileentity.TileEntityDispenser.getGuiID" | 
                        "net.minecraft.tileentity.TileEntityDispenser.isItemValidForSlot" | 
                        "net.minecraft.network.ThreadQuickExitException.fillInStackTrace" | 
                        "net.minecraft.entity.passive.EntityVillager$PriceInfo.getPrice" | 
                        "net.minecraft.util.LongHashMap$Entry.getValue" | 
                        "net.minecraft.util.LongHashMap$Entry.getKey" | 
                        "net.minecraft.util.LongHashMap$Entry.hashCode" | 
                        "net.minecraft.util.LongHashMap$Entry.equals" | 
                        "net.minecraft.util.LongHashMap$Entry.toString" | 
                        "org.cef.scheme.SchemeResponseData.getDataArray" | 
                        "org.cef.scheme.SchemeResponseData.setAmountRead" | 
                        "org.cef.scheme.SchemeResponseData.getBytesToRead" | 
                        "slice.legacy.clickgui.ClickGui.setVisible" | 
                        "slice.legacy.clickgui.ClickGui.setDragging" | 
                        "slice.legacy.clickgui.ClickGui.getOpenModules" | 
                        "slice.legacy.clickgui.ClickGui.doesGuiPauseGame" | 
                        "slice.legacy.clickgui.ClickGui.isVisible" | 
                        "slice.legacy.clickgui.ClickGui.isDragging" | 
                        "slice.legacy.clickgui.ClickGui.setWidth" | 
                        "slice.legacy.clickgui.ClickGui.mouseReleased" | 
                        "slice.legacy.clickgui.ClickGui.setOpenModules" | 
                        "slice.legacy.clickgui.ClickGui.setPaneList" | 
                        "slice.legacy.clickgui.ClickGui.mouseClicked" | 
                        "slice.legacy.clickgui.ClickGui.drawScreen" | 
                        "slice.legacy.clickgui.ClickGui.setWidths" | 
                        "slice.legacy.clickgui.ClickGui.getPane" | 
                        "slice.legacy.clickgui.ClickGui.getWidths" | 
                        "slice.legacy.clickgui.ClickGui.getDragging" | 
                        "slice.legacy.clickgui.ClickGui.getPaneList" | 
                        "net.minecraft.entity.passive.EntityVillager$ITradeList.modifyMerchantRecipeList" | 
                        "net.minecraft.client.gui.GuiCustomizeSkin.actionPerformed" | 
                        "net.minecraft.client.gui.GuiCustomizeSkin.func_175358_a" | 
                        "net.minecraft.client.gui.GuiCustomizeSkin.initGui" | 
                        "net.minecraft.client.gui.GuiCustomizeSkin.drawScreen" | 
                        "net.minecraft.world.gen.structure.MapGenMineshaft.getStructureStart" | 
                        "net.minecraft.world.gen.structure.MapGenMineshaft.canSpawnStructureAtCoords" | 
                        "net.minecraft.world.gen.structure.MapGenMineshaft.getStructureName" | 
                        "slice.manager.CommandManager.getCommand" | 
                        "slice.manager.CommandManager.register" | 
                        "slice.manager.CommandManager.handleChat" | 
                        "slice.manager.CommandManager.removeFirstArgument" | 
                        "net.minecraft.client.audio.ITickableSound.isDonePlaying" | 
                        "net.minecraft.world.gen.feature.WorldGenCanopyTree.func_181638_a" | 
                        "net.minecraft.world.gen.feature.WorldGenCanopyTree.func_181639_b" | 
                        "net.minecraft.world.gen.feature.WorldGenCanopyTree.generate" | 
                        "net.minecraft.world.gen.feature.WorldGenCanopyTree.func_150526_a" | 
                        "net.minecraft.stats.IStatStringFormat.formatString" | 
                        "net.minecraft.util.EnumFacing$AxisDirection.getOffset" | 
                        "net.minecraft.util.EnumFacing$AxisDirection.toString" | 
                        "net.minecraft.tileentity.TileEntityNote.readFromNBT" | 
                        "net.minecraft.tileentity.TileEntityNote.changePitch" | 
                        "net.minecraft.tileentity.TileEntityNote.triggerNote" | 
                        "net.minecraft.tileentity.TileEntityNote.writeToNBT" | 
                        "net.minecraft.client.renderer.entity.RenderBoat.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderBoat.getEntityTexture" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSnowmanHead.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerSnowmanHead.shouldCombineTextures" | 
                        "net.optifine.CustomGuiProperties.matchesPos" | 
                        "net.optifine.CustomGuiProperties.matchesEntity" | 
                        "net.optifine.CustomGuiProperties.getContainer" | 
                        "net.optifine.CustomGuiProperties.getTextureLocation" | 
                        "net.optifine.CustomGuiProperties.matchesDispenser" | 
                        "net.optifine.CustomGuiProperties.isValid" | 
                        "net.optifine.CustomGuiProperties.matchesGeneral" | 
                        "net.optifine.CustomGuiProperties.matchesHorse" | 
                        "net.optifine.CustomGuiProperties.matchesEnderChest" | 
                        "net.optifine.CustomGuiProperties.matchesBeacon" | 
                        "net.optifine.CustomGuiProperties.matchesChest" | 
                        "net.optifine.CustomGuiProperties.toString" | 
                        "net.optifine.CustomGuiProperties.getHorseVariant" | 
                        "net.optifine.CustomGuiProperties.matchesVillager" | 
                        "net.optifine.CustomGuiProperties.getDispenserVariant" | 
                        "net.minecraft.client.particle.EntityEnchantmentTableParticleFX$EnchantmentTable.getEntityFX" | 
                        "net.minecraft.entity.EntityLeashKnot.onValidSurface" | 
                        "net.minecraft.entity.EntityLeashKnot.writeEntityToNBT" | 
                        "net.minecraft.entity.EntityLeashKnot.readEntityFromNBT" | 
                        "net.minecraft.entity.EntityLeashKnot.entityInit" | 
                        "net.minecraft.entity.EntityLeashKnot.interactFirst" | 
                        "net.minecraft.entity.EntityLeashKnot.isInRangeToRenderDist" | 
                        "net.minecraft.entity.EntityLeashKnot.getEyeHeight" | 
                        "net.minecraft.entity.EntityLeashKnot.getWidthPixels" | 
                        "net.minecraft.entity.EntityLeashKnot.writeToNBTOptional" | 
                        "net.minecraft.entity.EntityLeashKnot.getHeightPixels" | 
                        "net.minecraft.entity.EntityLeashKnot.onBroken" | 
                        "net.minecraft.entity.EntityLeashKnot.updateFacingWithBoundingBox" | 
                        "net.optifine.shaders.uniform.CustomUniform.getExpression" | 
                        "net.optifine.shaders.uniform.CustomUniform.getName" | 
                        "net.optifine.shaders.uniform.CustomUniform.getType" | 
                        "net.optifine.shaders.uniform.CustomUniform.update" | 
                        "net.optifine.shaders.uniform.CustomUniform.reset" | 
                        "net.optifine.shaders.uniform.CustomUniform.toString" | 
                        "net.optifine.shaders.uniform.CustomUniform.getShaderUniform" | 
                        "net.optifine.shaders.uniform.CustomUniform.setProgram" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Crossing2.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Crossing2.buildComponent" | 
                        "org.cef.callback.CefQueryCallback.failure" | 
                        "org.cef.callback.CefQueryCallback.success" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Crossing3.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Crossing3.buildComponent" | 
                        "net.minecraft.client.particle.EntityRainFX.onUpdate" | 
                        "net.optifine.entity.model.anim.ModelVariableFloat.getValue" | 
                        "net.optifine.entity.model.anim.ModelVariableFloat.eval" | 
                        "net.optifine.entity.model.anim.ModelVariableFloat.setValue" | 
                        "net.optifine.entity.model.anim.ModelVariableFloat.getExpressionType" | 
                        "net.optifine.entity.model.anim.ModelVariableFloat.toString" | 
                        "net.minecraft.client.resources.IResourceManager.getResource" | 
                        "net.minecraft.client.resources.IResourceManager.getAllResources" | 
                        "net.minecraft.client.resources.IResourceManager.getResourceDomains" | 
                        "com.sliceclient.anticheat.check.data.CheckInfo.name" | 
                        "com.sliceclient.anticheat.check.data.CheckInfo.description" | 
                        "com.sliceclient.anticheat.check.data.CheckInfo.type" | 
                        "net.minecraft.util.BlockPos.add" | 
                        "net.minecraft.util.BlockPos.crossProduct" | 
                        "net.minecraft.util.BlockPos.offset" | 
                        "net.minecraft.util.BlockPos.toLong" | 
                        "net.minecraft.util.BlockPos.south" | 
                        "net.minecraft.util.BlockPos.subtract" | 
                        "net.minecraft.util.BlockPos.north" | 
                        "net.minecraft.util.BlockPos.down" | 
                        "net.minecraft.util.BlockPos.east" | 
                        "net.minecraft.util.BlockPos.west" | 
                        "net.minecraft.util.BlockPos.up" | 
                        "net.optifine.entity.model.ModelAdapterWither.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterWither.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterWither.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterWither.getModelRendererNames" | 
                        "net.optifine.CustomItemProperties.parseFloat" | 
                        "net.optifine.CustomItemProperties.detectItems" | 
                        "net.optifine.CustomItemProperties.updateIcons" | 
                        "net.optifine.CustomItemProperties.isUseTint" | 
                        "net.optifine.CustomItemProperties.parseNbtTagValues" | 
                        "net.optifine.CustomItemProperties.updateModelTexture" | 
                        "net.optifine.CustomItemProperties.parseItems" | 
                        "net.optifine.CustomItemProperties.getBakedModel" | 
                        "net.optifine.CustomItemProperties.parseRangeInt" | 
                        "net.optifine.CustomItemProperties.getTextureHeight" | 
                        "net.optifine.CustomItemProperties.getTextureLocation" | 
                        "net.optifine.CustomItemProperties.isValid" | 
                        "net.optifine.CustomItemProperties.loadModels" | 
                        "net.optifine.CustomItemProperties.parseRangeListInt" | 
                        "net.optifine.CustomItemProperties.parseInt" | 
                        "net.optifine.CustomItemProperties.parseType" | 
                        "net.optifine.CustomItemProperties.parseHand" | 
                        "net.optifine.CustomItemProperties.getSpriteLocation" | 
                        "net.optifine.CustomItemProperties.updateModelsFull" | 
                        "net.optifine.CustomItemProperties.toString" | 
                        "net.optifine.CustomItemProperties.getMapTexture" | 
                        "net.optifine.CustomItemProperties.getModelTextures" | 
                        "net.optifine.CustomItemProperties.getTextureWidth" | 
                        "net.minecraft.client.particle.EntitySnowShovelFX$Factory.getEntityFX" | 
                        "net.minecraft.world.biome.BiomeGenTaiga.decorate" | 
                        "net.minecraft.world.biome.BiomeGenTaiga.createMutatedBiome" | 
                        "net.minecraft.world.biome.BiomeGenTaiga.genTerrainBlocks" | 
                        "net.minecraft.world.biome.BiomeGenTaiga.genBigTreeChance" | 
                        "net.minecraft.world.biome.BiomeGenTaiga.getRandomWorldGenForGrass" | 
                        "net.optifine.shaders.IteratorRenderChunks.next" | 
                        "net.optifine.shaders.IteratorRenderChunks.hasNext" | 
                        "net.optifine.shaders.IteratorRenderChunks.remove" | 
                        "net.minecraft.inventory.ICrafting.sendProgressBarUpdate" | 
                        "net.minecraft.inventory.ICrafting.sendAllWindowProperties" | 
                        "net.minecraft.inventory.ICrafting.sendSlotContents" | 
                        "net.minecraft.inventory.ICrafting.updateCraftingInventory" | 
                        "net.minecraft.entity.ai.EntityAIMoveTowardsRestriction.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIMoveTowardsRestriction.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIMoveTowardsRestriction.continueExecuting" | 
                        "net.minecraft.block.BlockSlab.getVariantProperty" | 
                        "net.minecraft.block.BlockSlab.canSilkHarvest" | 
                        "net.minecraft.block.BlockSlab.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockSlab.getVariant" | 
                        "net.minecraft.block.BlockSlab.isFullCube" | 
                        "net.minecraft.block.BlockSlab.getUnlocalizedName" | 
                        "net.minecraft.block.BlockSlab.quantityDropped" | 
                        "net.minecraft.block.BlockSlab.getDamageValue" | 
                        "net.minecraft.block.BlockSlab.addCollisionBoxesToList" | 
                        "net.minecraft.block.BlockSlab.isOpaqueCube" | 
                        "net.minecraft.block.BlockSlab.setBlockBoundsForItemRender" | 
                        "net.minecraft.block.BlockSlab.onBlockPlaced" | 
                        "net.minecraft.block.BlockSlab.isDouble" | 
                        "net.minecraft.block.BlockSlab.shouldSideBeRendered" | 
                        "net.minecraft.world.gen.feature.WorldGenLakes.generate" | 
                        "net.minecraft.client.gui.GuiSpectator.func_175265_c" | 
                        "net.minecraft.client.gui.GuiSpectator.func_175266_a" | 
                        "net.minecraft.client.gui.GuiSpectator.func_175257_a" | 
                        "net.minecraft.client.gui.GuiSpectator.func_175258_a" | 
                        "net.minecraft.client.gui.GuiSpectator.renderTooltip" | 
                        "net.minecraft.client.gui.GuiSpectator.func_175259_b" | 
                        "net.minecraft.client.gui.GuiSpectator.func_175260_a" | 
                        "net.minecraft.client.gui.GuiSpectator.func_175261_b" | 
                        "net.minecraft.client.gui.GuiSpectator.func_175262_a" | 
                        "net.minecraft.client.gui.GuiSpectator.renderSelectedItem" | 
                        "net.minecraft.inventory.ContainerPlayer.onContainerClosed" | 
                        "net.minecraft.inventory.ContainerPlayer.canMergeSlot" | 
                        "net.minecraft.inventory.ContainerPlayer.transferStackInSlot" | 
                        "net.minecraft.inventory.ContainerPlayer.onCraftMatrixChanged" | 
                        "net.minecraft.inventory.ContainerPlayer.canInteractWith" | 
                        "net.minecraft.network.play.server.S22PacketMultiBlockChange$BlockUpdateData.func_180089_b" | 
                        "net.minecraft.network.play.server.S22PacketMultiBlockChange$BlockUpdateData.getPos" | 
                        "net.minecraft.network.play.server.S22PacketMultiBlockChange$BlockUpdateData.getBlockState" | 
                        "net.minecraft.command.CommandTime.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandTime.getCommandUsage" | 
                        "net.minecraft.command.CommandTime.addTime" | 
                        "net.minecraft.command.CommandTime.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandTime.processCommand" | 
                        "net.minecraft.command.CommandTime.getCommandName" | 
                        "net.minecraft.command.CommandTime.setTime" | 
                        "net.minecraft.command.server.CommandPublishLocalServer.getCommandUsage" | 
                        "net.minecraft.command.server.CommandPublishLocalServer.processCommand" | 
                        "net.minecraft.command.server.CommandPublishLocalServer.getCommandName" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$FitSimpleRoomHelper.func_175969_a" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$FitSimpleRoomHelper.func_175968_a" | 
                        "net.minecraft.dispenser.IBehaviorDispenseItem.dispense" | 
                        "net.minecraft.world.SpawnerAnimals.findChunksForSpawning" | 
                        "slice.font.TTFFontRenderer$CharacterData.bind" | 
                        "net.minecraft.world.GameRules.readFromNBT" | 
                        "net.minecraft.world.GameRules.getInt" | 
                        "net.minecraft.world.GameRules.areSameType" | 
                        "net.minecraft.world.GameRules.setOrCreateGameRule" | 
                        "net.minecraft.world.GameRules.addGameRule" | 
                        "net.minecraft.world.GameRules.getBoolean" | 
                        "net.minecraft.world.GameRules.getRules" | 
                        "net.minecraft.world.GameRules.getString" | 
                        "net.minecraft.world.GameRules.writeToNBT" | 
                        "net.minecraft.world.GameRules.hasRule" | 
                        "net.minecraft.client.model.ModelEnderMite.setRotationAngles" | 
                        "net.minecraft.client.model.ModelEnderMite.render" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Library.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Library.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Library.writeStructureToNBT" | 
                        "net.optifine.util.CacheLocalByte.resetCache" | 
                        "net.optifine.util.CacheLocalByte.setLast" | 
                        "net.optifine.util.CacheLocalByte.setOffset" | 
                        "net.optifine.util.CacheLocalByte.get" | 
                        "net.optifine.util.DisplayModeComparator.compare" | 
                        "net.minecraft.block.BlockFlowerPot.getMetaFromState" | 
                        "net.minecraft.block.BlockFlowerPot.getBlockLayer" | 
                        "net.minecraft.block.BlockFlowerPot.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockFlowerPot.onBlockHarvested" | 
                        "net.minecraft.block.BlockFlowerPot.onBlockActivated" | 
                        "net.minecraft.block.BlockFlowerPot.colorMultiplier" | 
                        "net.minecraft.block.BlockFlowerPot.isFullCube" | 
                        "net.minecraft.block.BlockFlowerPot.getItem" | 
                        "net.minecraft.block.BlockFlowerPot.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockFlowerPot.getRenderType" | 
                        "net.minecraft.block.BlockFlowerPot.getActualState" | 
                        "net.minecraft.block.BlockFlowerPot.getLocalizedName" | 
                        "net.minecraft.block.BlockFlowerPot.createBlockState" | 
                        "net.minecraft.block.BlockFlowerPot.canNotContain" | 
                        "net.minecraft.block.BlockFlowerPot.createNewTileEntity" | 
                        "net.minecraft.block.BlockFlowerPot.getDamageValue" | 
                        "net.minecraft.block.BlockFlowerPot.getTileEntity" | 
                        "net.minecraft.block.BlockFlowerPot.isFlowerPot" | 
                        "net.minecraft.block.BlockFlowerPot.breakBlock" | 
                        "net.minecraft.block.BlockFlowerPot.isOpaqueCube" | 
                        "net.minecraft.block.BlockFlowerPot.getItemDropped" | 
                        "net.minecraft.block.BlockFlowerPot.setBlockBoundsForItemRender" | 
                        "net.optifine.entity.model.ModelAdapterGuardian.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterGuardian.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterGuardian.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterGuardian.getModelRendererNames" | 
                        "net.minecraft.block.BlockColored.getMetaFromState" | 
                        "net.minecraft.block.BlockColored.damageDropped" | 
                        "net.minecraft.block.BlockColored.getMapColor" | 
                        "net.minecraft.block.BlockColored.createBlockState" | 
                        "net.minecraft.block.BlockColored.getStateFromMeta" | 
                        "net.minecraft.block.BlockColored.getSubBlocks" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderModelBrightnessColorQuads" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderModelBrightness" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderModelFlat" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderOverlayModels" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderModel" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderQuadsFlat" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderModelSmooth" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderModelAmbientOcclusion" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderQuadsSmooth" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderModelBrightnessColor" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.renderModelStandard" | 
                        "net.minecraft.client.renderer.BlockModelRenderer.fillQuadBounds" | 
                        "net.minecraft.command.CommandEnchant.isUsernameIndex" | 
                        "net.minecraft.command.CommandEnchant.addTabCompletionOptions" | 
                        "net.minecraft.command.CommandEnchant.getCommandUsage" | 
                        "net.minecraft.command.CommandEnchant.getRequiredPermissionLevel" | 
                        "net.minecraft.command.CommandEnchant.processCommand" | 
                        "net.minecraft.command.CommandEnchant.getCommandName" | 
                        "net.minecraft.command.CommandEnchant.getListOfPlayers" | 
                        "net.minecraft.world.gen.layer.GenLayerDeepOcean.getInts" | 
                        "net.minecraft.client.renderer.entity.RenderChicken.handleRotationFloat" | 
                        "net.minecraft.client.renderer.entity.RenderChicken.getEntityTexture" | 
                        "net.minecraft.item.crafting.RecipesMapExtending.getCraftingResult" | 
                        "net.minecraft.item.crafting.RecipesMapExtending.matches" | 
                        "net.minecraft.block.BlockJukebox.getMetaFromState" | 
                        "net.minecraft.block.BlockJukebox.hasComparatorInputOverride" | 
                        "net.minecraft.block.BlockJukebox.dropRecord" | 
                        "net.minecraft.block.BlockJukebox.onBlockActivated" | 
                        "net.minecraft.block.BlockJukebox.getComparatorInputOverride" | 
                        "net.minecraft.block.BlockJukebox.createBlockState" | 
                        "net.minecraft.block.BlockJukebox.createNewTileEntity" | 
                        "net.minecraft.block.BlockJukebox.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockJukebox.insertRecord" | 
                        "net.minecraft.block.BlockJukebox.getStateFromMeta" | 
                        "net.minecraft.block.BlockJukebox.breakBlock" | 
                        "net.minecraft.block.BlockJukebox.getRenderType" | 
                        "net.optifine.shaders.BlockAlias.getMatchBlockIds" | 
                        "net.optifine.shaders.BlockAlias.getBlockAliasId" | 
                        "net.optifine.shaders.BlockAlias.toString" | 
                        "net.optifine.shaders.BlockAlias.getMatchBlocks" | 
                        "net.optifine.shaders.BlockAlias.matches" | 
                        "net.minecraft.client.model.ModelWitch.setRotationAngles" | 
                        "net.minecraft.command.server.CommandTeleport.isUsernameIndex" | 
                        "net.minecraft.command.server.CommandTeleport.addTabCompletionOptions" | 
                        "net.minecraft.command.server.CommandTeleport.getCommandUsage" | 
                        "net.minecraft.command.server.CommandTeleport.getRequiredPermissionLevel" | 
                        "net.minecraft.command.server.CommandTeleport.processCommand" | 
                        "net.minecraft.command.server.CommandTeleport.getCommandName" | 
                        "org.cef.handler.CefDialogHandler.onFileDialog" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$LeftTurn.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$LeftTurn.buildComponent" | 
                        "net.minecraft.network.ServerStatusResponse.getFavicon" | 
                        "net.minecraft.network.ServerStatusResponse.setFavicon" | 
                        "net.minecraft.network.ServerStatusResponse.setServerDescription" | 
                        "net.minecraft.network.ServerStatusResponse.setPlayerCountData" | 
                        "net.minecraft.network.ServerStatusResponse.setProtocolVersionInfo" | 
                        "net.minecraft.network.ServerStatusResponse.getProtocolVersionInfo" | 
                        "net.minecraft.network.ServerStatusResponse.getPlayerCountData" | 
                        "net.minecraft.network.ServerStatusResponse.getServerDescription" | 
                        "net.minecraft.client.renderer.entity.layers.LayerCustomHead.doRenderLayer" | 
                        "net.minecraft.client.renderer.entity.layers.LayerCustomHead.shouldCombineTextures" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu.func_178647_a" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu.func_178645_b" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu.func_178644_b" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu.func_178641_d" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu.func_178643_a" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu.func_178642_a" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu.func_178650_c" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu.func_178648_e" | 
                        "net.minecraft.client.gui.spectator.SpectatorMenu.func_178646_f" | 
                        "org.cef.scheme.SchemeResponseHeaders.setResponseLength" | 
                        "org.cef.scheme.SchemeResponseHeaders.setMimeType" | 
                        "org.cef.scheme.SchemeResponseHeaders.setStatusText" | 
                        "org.cef.scheme.SchemeResponseHeaders.setRedirectURL" | 
                        "org.cef.scheme.SchemeResponseHeaders.setStatus" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityEndPortalRenderer.func_147525_a" | 
                        "net.minecraft.client.renderer.tileentity.TileEntityEndPortalRenderer.renderTileEntityAt" | 
                        "net.minecraft.entity.ai.EntityAICreeperSwell.updateTask" | 
                        "net.minecraft.entity.ai.EntityAICreeperSwell.resetTask" | 
                        "net.minecraft.entity.ai.EntityAICreeperSwell.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAICreeperSwell.startExecuting" | 
                        "net.minecraft.world.storage.MapData.readFromNBT" | 
                        "net.minecraft.world.storage.MapData.updateMapData" | 
                        "net.minecraft.world.storage.MapData.updateDecorations" | 
                        "net.minecraft.world.storage.MapData.getMapInfo" | 
                        "net.minecraft.world.storage.MapData.updateVisiblePlayers" | 
                        "net.minecraft.world.storage.MapData.calculateMapCenter" | 
                        "net.minecraft.world.storage.MapData.getMapPacket" | 
                        "net.minecraft.world.storage.MapData.writeToNBT" | 
                        "net.minecraft.client.renderer.entity.RenderMooshroom.getEntityTexture" | 
                        "net.minecraft.client.gui.GuiListButton.func_175212_b" | 
                        "net.minecraft.client.gui.GuiListButton.buildDisplayString" | 
                        "net.minecraft.client.gui.GuiListButton.mousePressed" | 
                        "net.minecraft.client.gui.GuiKeyBindingList$CategoryEntry.mouseReleased" | 
                        "net.minecraft.client.gui.GuiKeyBindingList$CategoryEntry.drawEntry" | 
                        "net.minecraft.client.gui.GuiKeyBindingList$CategoryEntry.setSelected" | 
                        "net.minecraft.client.gui.GuiKeyBindingList$CategoryEntry.mousePressed" | 
                        "net.optifine.config.VillagerProfession.hasCareer" | 
                        "net.optifine.config.VillagerProfession.toString" | 
                        "net.optifine.config.VillagerProfession.addCareer" | 
                        "net.optifine.config.VillagerProfession.matches" | 
                        "net.optifine.config.VillagerProfession.getCareers" | 
                        "net.optifine.config.VillagerProfession.getProfession" | 
                        "org.cef.ccbluex.ResourceScheme.readResponse" | 
                        "org.cef.ccbluex.ResourceScheme.getResponseHeaders" | 
                        "org.cef.ccbluex.ResourceScheme.processRequest" | 
                        "net.minecraft.client.renderer.entity.ArmorStandRenderer.rotateCorpse" | 
                        "net.minecraft.client.renderer.entity.ArmorStandRenderer.canRenderName" | 
                        "net.minecraft.client.renderer.entity.ArmorStandRenderer.getMainModel" | 
                        "net.minecraft.client.renderer.entity.ArmorStandRenderer.getEntityTexture" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$StairsStraight.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$StairsStraight.buildComponent" | 
                        "net.minecraft.network.handshake.INetHandlerHandshakeServer.processHandshake" | 
                        "org.cef.handler.CefDisplayHandler.onTooltip" | 
                        "org.cef.handler.CefDisplayHandler.onCursorChange" | 
                        "org.cef.handler.CefDisplayHandler.onAddressChange" | 
                        "org.cef.handler.CefDisplayHandler.onTitleChange" | 
                        "org.cef.handler.CefDisplayHandler.onConsoleMessage" | 
                        "org.cef.handler.CefDisplayHandler.onStatusMessage" | 
                        "net.minecraft.block.BlockContainer.onBlockEventReceived" | 
                        "net.minecraft.block.BlockContainer.hasInvalidNeighbor" | 
                        "net.minecraft.block.BlockContainer.isInvalidNeighbor" | 
                        "net.minecraft.block.BlockContainer.breakBlock" | 
                        "net.minecraft.block.BlockContainer.getRenderType" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Corridor.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Corridor.addComponentParts" | 
                        "net.minecraft.world.gen.structure.StructureStrongholdPieces$Corridor.writeStructureToNBT" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.elementClicked" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.getScrollBarX" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.getContentHeight" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.selectIndex" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.getSize" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.getListWidth" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.drawSlot" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.drawBackground" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.isSelected" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.getSelectedIndex" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.checkCompatible" | 
                        "net.optifine.shaders.gui.GuiSlotShaders.updateList" | 
                        "net.minecraft.client.gui.GuiLockIconButton$Icon.func_178912_b" | 
                        "net.minecraft.client.gui.GuiLockIconButton$Icon.func_178910_a" | 
                        "net.minecraft.entity.ai.EntityMoveHelper.setMoveTo" | 
                        "net.minecraft.entity.ai.EntityMoveHelper.getX" | 
                        "net.minecraft.entity.ai.EntityMoveHelper.getY" | 
                        "net.minecraft.entity.ai.EntityMoveHelper.getZ" | 
                        "net.minecraft.entity.ai.EntityMoveHelper.getSpeed" | 
                        "net.minecraft.entity.ai.EntityMoveHelper.onUpdateMoveHelper" | 
                        "net.minecraft.entity.ai.EntityMoveHelper.isUpdating" | 
                        "net.minecraft.entity.ai.EntityMoveHelper.limitAngle" | 
                        "net.minecraft.world.gen.structure.StructureOceanMonumentPieces$MonumentCoreRoom.addComponentParts" | 
                        "net.minecraft.world.gen.layer.GenLayerAddSnow.getInts" | 
                        "net.minecraft.client.gui.GuiGameOver.updateScreen" | 
                        "net.minecraft.client.gui.GuiGameOver.actionPerformed" | 
                        "net.minecraft.client.gui.GuiGameOver.confirmClicked" | 
                        "net.minecraft.client.gui.GuiGameOver.doesGuiPauseGame" | 
                        "net.minecraft.client.gui.GuiGameOver.initGui" | 
                        "net.minecraft.client.gui.GuiGameOver.drawScreen" | 
                        "net.minecraft.client.gui.GuiGameOver.keyTyped" | 
                        "net.minecraft.entity.item.EntityBoat.performHurtAnimation" | 
                        "net.minecraft.entity.item.EntityBoat.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityBoat.getCollisionBox" | 
                        "net.minecraft.entity.item.EntityBoat.getCollisionBoundingBox" | 
                        "net.minecraft.entity.item.EntityBoat.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityBoat.entityInit" | 
                        "net.minecraft.entity.item.EntityBoat.interactFirst" | 
                        "net.minecraft.entity.item.EntityBoat.getMountedYOffset" | 
                        "net.minecraft.entity.item.EntityBoat.updateFallState" | 
                        "net.minecraft.entity.item.EntityBoat.canTriggerWalking" | 
                        "net.minecraft.entity.item.EntityBoat.updateRiderPosition" | 
                        "net.minecraft.entity.item.EntityBoat.canBeCollidedWith" | 
                        "net.minecraft.entity.item.EntityBoat.attackEntityFrom" | 
                        "net.minecraft.entity.item.EntityBoat.setPositionAndRotation2" | 
                        "net.minecraft.entity.item.EntityBoat.canBePushed" | 
                        "net.minecraft.entity.item.EntityBoat.setDamageTaken" | 
                        "net.minecraft.entity.item.EntityBoat.getTimeSinceHit" | 
                        "net.minecraft.entity.item.EntityBoat.setVelocity" | 
                        "net.minecraft.entity.item.EntityBoat.setForwardDirection" | 
                        "net.minecraft.entity.item.EntityBoat.setTimeSinceHit" | 
                        "net.minecraft.entity.item.EntityBoat.onUpdate" | 
                        "net.minecraft.entity.item.EntityBoat.setIsBoatEmpty" | 
                        "net.minecraft.entity.item.EntityBoat.getForwardDirection" | 
                        "net.minecraft.entity.item.EntityBoat.getDamageTaken" | 
                        "net.minecraft.block.BlockLever.getMetaFromState" | 
                        "net.minecraft.block.BlockLever.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockLever.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockLever.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockLever.onBlockActivated" | 
                        "net.minecraft.block.BlockLever.canPlaceBlockOnSide" | 
                        "net.minecraft.block.BlockLever.isFullCube" | 
                        "net.minecraft.block.BlockLever.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockLever.getWeakPower" | 
                        "net.minecraft.block.BlockLever.createBlockState" | 
                        "net.minecraft.block.BlockLever.func_181091_e" | 
                        "net.minecraft.block.BlockLever.getStrongPower" | 
                        "net.minecraft.block.BlockLever.getStateFromMeta" | 
                        "net.minecraft.block.BlockLever.canProvidePower" | 
                        "net.minecraft.block.BlockLever.breakBlock" | 
                        "net.minecraft.block.BlockLever.isOpaqueCube" | 
                        "net.minecraft.block.BlockLever.onBlockPlaced" | 
                        "net.optifine.util.PropertiesOrdered.keys" | 
                        "net.optifine.util.PropertiesOrdered.keySet" | 
                        "net.optifine.util.PropertiesOrdered.put" | 
                        "net.minecraft.block.BlockObsidian.getMapColor" | 
                        "net.minecraft.block.BlockObsidian.getItemDropped" | 
                        "net.optifine.entity.model.ModelAdapterBook.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterBook.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterBook.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterBook.getModelRendererNames" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$ContainerCreative.canMergeSlot" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$ContainerCreative.transferStackInSlot" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$ContainerCreative.retrySlotClick" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$ContainerCreative.func_148328_e" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$ContainerCreative.canInteractWith" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$ContainerCreative.canDragIntoSlot" | 
                        "net.minecraft.client.gui.inventory.GuiContainerCreative$ContainerCreative.scrollTo" | 
                        "net.minecraft.entity.ai.EntityAIBase.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIBase.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIBase.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIBase.setMutexBits" | 
                        "net.minecraft.entity.ai.EntityAIBase.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIBase.isInterruptible" | 
                        "net.minecraft.entity.ai.EntityAIBase.getMutexBits" | 
                        "net.minecraft.entity.ai.EntityAIBase.continueExecuting" | 
                        "net.minecraft.client.renderer.block.statemap.StateMap.getModelResourceLocation" | 
                        "net.minecraft.client.gui.inventory.GuiBeacon$ConfirmButton.drawButtonForegroundLayer" | 
                        "net.minecraft.block.BlockFarmland.getMetaFromState" | 
                        "net.minecraft.block.BlockFarmland.onFallenUpon" | 
                        "net.minecraft.block.BlockFarmland.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockFarmland.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockFarmland.isFullCube" | 
                        "net.minecraft.block.BlockFarmland.getItem" | 
                        "net.minecraft.block.BlockFarmland.hasCrops" | 
                        "net.minecraft.block.BlockFarmland.createBlockState" | 
                        "net.minecraft.block.BlockFarmland.hasWater" | 
                        "net.minecraft.block.BlockFarmland.getStateFromMeta" | 
                        "net.minecraft.block.BlockFarmland.updateTick" | 
                        "net.minecraft.block.BlockFarmland.isOpaqueCube" | 
                        "net.minecraft.block.BlockFarmland.getItemDropped" | 
                        "net.minecraft.block.BlockFarmland.shouldSideBeRendered" | 
                        "net.optifine.entity.model.ModelAdapterBat.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterBat.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterBat.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterBat.getModelRendererNames" | 
                        "net.minecraft.block.BlockStone$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockStone$EnumType.getName" | 
                        "net.minecraft.block.BlockStone$EnumType.func_181072_c" | 
                        "net.minecraft.block.BlockStone$EnumType.toString" | 
                        "net.minecraft.block.BlockStone$EnumType.getUnlocalizedName" | 
                        "net.minecraft.entity.ai.EntityAIMate.updateTask" | 
                        "net.minecraft.entity.ai.EntityAIMate.resetTask" | 
                        "net.minecraft.entity.ai.EntityAIMate.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIMate.getNearbyMate" | 
                        "net.minecraft.entity.ai.EntityAIMate.spawnBaby" | 
                        "net.minecraft.entity.ai.EntityAIMate.continueExecuting" | 
                        "org.cef.callback.CefBeforeDownloadCallback_N.N_Continue" | 
                        "org.cef.callback.CefBeforeDownloadCallback_N.finalize" | 
                        "org.cef.callback.CefBeforeDownloadCallback_N.Continue" | 
                        "net.minecraft.util.RegistryNamespacedDefaultedByKey.getObject" | 
                        "net.minecraft.util.RegistryNamespacedDefaultedByKey.validateKey" | 
                        "net.minecraft.util.RegistryNamespacedDefaultedByKey.getObjectById" | 
                        "net.minecraft.util.RegistryNamespacedDefaultedByKey.register" | 
                        "org.cef.callback.CefPrintJobCallback_N.N_Continue" | 
                        "org.cef.callback.CefPrintJobCallback_N.finalize" | 
                        "org.cef.callback.CefPrintJobCallback_N.Continue" | 
                        "net.optifine.gui.GuiOptionButtonOF.getOption" | 
                        "net.minecraft.client.particle.EntityNoteFX.renderParticle" | 
                        "net.minecraft.client.particle.EntityNoteFX.onUpdate" | 
                        "net.minecraft.client.renderer.entity.RenderSnowball.func_177082_d" | 
                        "net.minecraft.client.renderer.entity.RenderSnowball.doRender" | 
                        "net.minecraft.client.renderer.entity.RenderSnowball.getEntityTexture" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Piece.readStructureFromNBT" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Piece.getNextComponentZ" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Piece.func_175871_a" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Piece.getNextComponentNormal" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Piece.getNextComponentX" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Piece.func_175870_a" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Piece.getTotalWeight" | 
                        "net.minecraft.world.gen.structure.StructureNetherBridgePieces$Piece.writeStructureToNBT" | 
                        "net.minecraft.client.renderer.InventoryEffectRenderer.updateActivePotionEffects" | 
                        "net.minecraft.client.renderer.InventoryEffectRenderer.initGui" | 
                        "net.minecraft.client.renderer.InventoryEffectRenderer.drawScreen" | 
                        "net.minecraft.client.renderer.InventoryEffectRenderer.drawActivePotionEffects" | 
                        "net.minecraft.world.biome.BiomeGenPlains.decorate" | 
                        "net.minecraft.world.biome.BiomeGenPlains.createMutatedBiome" | 
                        "net.minecraft.world.biome.BiomeGenPlains.pickRandomFlower" | 
                        "net.minecraft.block.BlockOre.damageDropped" | 
                        "net.minecraft.block.BlockOre.quantityDropped" | 
                        "net.minecraft.block.BlockOre.getDamageValue" | 
                        "net.minecraft.block.BlockOre.dropBlockAsItemWithChance" | 
                        "net.minecraft.block.BlockOre.quantityDroppedWithBonus" | 
                        "net.minecraft.block.BlockOre.getItemDropped" | 
                        "net.minecraft.event.ClickEvent.getValue" | 
                        "net.minecraft.event.ClickEvent.hashCode" | 
                        "net.minecraft.event.ClickEvent.equals" | 
                        "net.minecraft.event.ClickEvent.toString" | 
                        "net.minecraft.event.ClickEvent.getAction" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.writeEntityToNBT" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.getWorld" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.readEntityFromNBT" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.canTransfer" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.interactFirst" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.getDefaultDisplayTileOffset" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.createContainer" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.getBlocked" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.setTransferTicker" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.killMinecart" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.getSizeInventory" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.getXPos" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.getMinecartType" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.getYPos" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.getZPos" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.func_96112_aD" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.onUpdate" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.setBlocked" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.getGuiID" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.onActivatorRailPass" | 
                        "net.minecraft.entity.item.EntityMinecartHopper.getDefaultDisplayTile" | 
                        "net.minecraft.client.model.ModelVillager.setRotationAngles" | 
                        "net.minecraft.client.model.ModelVillager.render" | 
                        "net.optifine.expr.IExpressionResolver.getExpression" | 
                        "slice.gui.main.HTMLMainMenu.initGui" | 
                        "slice.gui.main.HTMLMainMenu.drawScreen" | 
                        "net.minecraft.block.BlockButton.getMetaFromState" | 
                        "net.minecraft.block.BlockButton.getCollisionBoundingBox" | 
                        "net.minecraft.block.BlockButton.onBlockActivated" | 
                        "net.minecraft.block.BlockButton.canPlaceBlockAt" | 
                        "net.minecraft.block.BlockButton.getStateFromMeta" | 
                        "net.minecraft.block.BlockButton.updateTick" | 
                        "net.minecraft.block.BlockButton.breakBlock" | 
                        "net.minecraft.block.BlockButton.setBlockBoundsForItemRender" | 
                        "net.minecraft.block.BlockButton.updateBlockBounds" | 
                        "net.minecraft.block.BlockButton.checkForDrop" | 
                        "net.minecraft.block.BlockButton.onNeighborBlockChange" | 
                        "net.minecraft.block.BlockButton.randomTick" | 
                        "net.minecraft.block.BlockButton.setBlockBoundsBasedOnState" | 
                        "net.minecraft.block.BlockButton.canPlaceBlockOnSide" | 
                        "net.minecraft.block.BlockButton.isFullCube" | 
                        "net.minecraft.block.BlockButton.tickRate" | 
                        "net.minecraft.block.BlockButton.checkForArrows" | 
                        "net.minecraft.block.BlockButton.notifyNeighbors" | 
                        "net.minecraft.block.BlockButton.getWeakPower" | 
                        "net.minecraft.block.BlockButton.createBlockState" | 
                        "net.minecraft.block.BlockButton.onEntityCollidedWithBlock" | 
                        "net.minecraft.block.BlockButton.getStrongPower" | 
                        "net.minecraft.block.BlockButton.canProvidePower" | 
                        "net.minecraft.block.BlockButton.isOpaqueCube" | 
                        "net.minecraft.block.BlockButton.onBlockPlaced" | 
                        "net.minecraft.pathfinding.PathEntity.getPosition" | 
                        "net.minecraft.pathfinding.PathEntity.getCurrentPathIndex" | 
                        "net.minecraft.pathfinding.PathEntity.isSamePath" | 
                        "net.minecraft.pathfinding.PathEntity.setCurrentPathLength" | 
                        "net.minecraft.pathfinding.PathEntity.getVectorFromIndex" | 
                        "net.minecraft.pathfinding.PathEntity.setCurrentPathIndex" | 
                        "net.minecraft.pathfinding.PathEntity.getCurrentPathLength" | 
                        "net.minecraft.pathfinding.PathEntity.getPathPointFromIndex" | 
                        "net.minecraft.pathfinding.PathEntity.incrementPathIndex" | 
                        "net.minecraft.pathfinding.PathEntity.isFinished" | 
                        "net.minecraft.pathfinding.PathEntity.getFinalPathPoint" | 
                        "net.minecraft.pathfinding.PathEntity.isDestinationSame" | 
                        "net.optifine.entity.model.ModelAdapterSnowman.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterSnowman.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterSnowman.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterSnowman.getModelRendererNames" | 
                        "org.cef.misc.StringRef.set" | 
                        "org.cef.misc.StringRef.get" | 
                        "net.minecraft.item.crafting.RecipesFood.addRecipes" | 
                        "net.minecraft.nbt.JsonToNBT$Compound.parse" | 
                        "net.optifine.gui.TooltipProvider.isRenderBorder" | 
                        "net.optifine.gui.TooltipProvider.getTooltipLines" | 
                        "net.optifine.gui.TooltipProvider.getTooltipBounds" | 
                        "org.cef.handler.CefCookieAccessFilter.canSaveCookie" | 
                        "org.cef.handler.CefCookieAccessFilter.canSendCookie" | 
                        "net.optifine.entity.model.ModelAdapterBlaze.makeModel" | 
                        "net.optifine.entity.model.ModelAdapterBlaze.makeEntityRender" | 
                        "net.optifine.entity.model.ModelAdapterBlaze.getModelRenderer" | 
                        "net.optifine.entity.model.ModelAdapterBlaze.getModelRendererNames" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.func_148210_b" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.elementClicked" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.getSize" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.drawListHeader" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.func_148142_b" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.func_148132_a" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.drawBackground" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.func_148213_a" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.func_148211_c" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.isSelected" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.func_148212_h" | 
                        "net.minecraft.client.gui.achievement.GuiStats$Stats.func_148209_a" | 
                        "net.minecraft.client.renderer.entity.RenderGhast.preRenderCallback" | 
                        "net.minecraft.client.renderer.entity.RenderGhast.getEntityTexture" | 
                        "com.sliceclient.anticheat.user.User.setCheckManager" | 
                        "com.sliceclient.anticheat.user.User.getPlayer" | 
                        "com.sliceclient.anticheat.user.User.getAllowFlight" | 
                        "com.sliceclient.anticheat.user.User.getCheckManager" | 
                        "com.sliceclient.anticheat.user.User.getVl" | 
                        "com.sliceclient.anticheat.user.User.setPlayer" | 
                        "com.sliceclient.anticheat.user.User.isFlying" | 
                        "com.sliceclient.anticheat.user.User.setVl" | 
                        "net.minecraft.util.ObjectIntIdentityMap.iterator" | 
                        "net.minecraft.util.ObjectIntIdentityMap.get" | 
                        "net.minecraft.util.ObjectIntIdentityMap.getByValue" | 
                        "net.minecraft.util.ObjectIntIdentityMap.put" | 
                        "org.cef.handler.CefContextMenuHandler.onContextMenuCommand" | 
                        "org.cef.handler.CefContextMenuHandler.onBeforeContextMenu" | 
                        "org.cef.handler.CefContextMenuHandler.onContextMenuDismissed" | 
                        "net.minecraft.block.BlockAnvil$Anvil.getName" | 
                        "net.minecraft.block.BlockAnvil$Anvil.getDisplayName" | 
                        "net.minecraft.block.BlockAnvil$Anvil.hasCustomName" | 
                        "net.minecraft.block.BlockAnvil$Anvil.createContainer" | 
                        "net.minecraft.block.BlockAnvil$Anvil.getGuiID" | 
                        "net.minecraft.enchantment.EnchantmentDigging.canApply" | 
                        "net.minecraft.enchantment.EnchantmentDigging.getMaxEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentDigging.getMinEnchantability" | 
                        "net.minecraft.enchantment.EnchantmentDigging.getMaxLevel" | 
                        "net.minecraft.entity.ai.EntityAIWander.setExecutionChance" | 
                        "net.minecraft.entity.ai.EntityAIWander.shouldExecute" | 
                        "net.minecraft.entity.ai.EntityAIWander.startExecuting" | 
                        "net.minecraft.entity.ai.EntityAIWander.makeUpdate" | 
                        "net.minecraft.entity.ai.EntityAIWander.continueExecuting" | 
                        "net.minecraft.block.ITileEntityProvider.createNewTileEntity" | 
                        "net.minecraft.entity.monster.EntitySilverfish$AISummonSilverfish.updateTask" | 
                        "net.minecraft.entity.monster.EntitySilverfish$AISummonSilverfish.shouldExecute" | 
                        "net.minecraft.entity.monster.EntitySilverfish$AISummonSilverfish.func_179462_f" | 
                        "net.optifine.expr.ExpressionFloatCached.eval" | 
                        "net.optifine.expr.ExpressionFloatCached.getExpressionType" | 
                        "net.optifine.expr.ExpressionFloatCached.reset" | 
                        "net.optifine.expr.ExpressionFloatCached.toString" | 
                        "net.minecraft.block.BlockSilverfish$EnumType.getMetadata" | 
                        "net.minecraft.block.BlockSilverfish$EnumType.getName" | 
                        "net.minecraft.block.BlockSilverfish$EnumType.getModelBlock" | 
                        "net.minecraft.block.BlockSilverfish$EnumType.toString" | 
                        "net.minecraft.block.BlockSilverfish$EnumType.getUnlocalizedName" | 
                        "net.minecraft.client.particle.EntityFishWakeFX.onUpdate" | 
                        "net.minecraft.world.demo.DemoWorldManager.blockRemoving" | 
                        "net.minecraft.world.demo.DemoWorldManager.sendDemoReminder" | 
                        "net.minecraft.world.demo.DemoWorldManager.onBlockClicked" | 
                        "net.minecraft.world.demo.DemoWorldManager.tryHarvestBlock" | 
                        "net.minecraft.world.demo.DemoWorldManager.updateBlockRemoving" | 
                        "net.minecraft.world.demo.DemoWorldManager.activateBlockOrUseItem" | 
                        "net.minecraft.world.demo.DemoWorldManager.tryUseItem" | 
                        "net.minecraft.client.particle.EntityReddustFX$Factory.getEntityFX" | 
                        "net.minecraft.inventory.IInventory.decrStackSize" | 
                        "net.minecraft.inventory.IInventory.openInventory" | 
                        "net.minecraft.inventory.IInventory.setField" | 
                        "net.minecraft.inventory.IInventory.markDirty" | 
                        "net.minecraft.inventory.IInventory.clear" | 
                        "net.minecraft.inventory.IInventory.getField" | 
                        "net.minecraft.inventory.IInventory.getStackInSlot" | 
                        "net.minecraft.inventory.IInventory.setInventorySlotContents" | 
                        "net.minecraft.inventory.IInventory.closeInventory" | 
                        "net.minecraft.inventory.IInventory.getInventoryStackLimit" | 
                        "net.minecraft.inventory.IInventory.getSizeInventory" | 
                        "net.minecraft.inventory.IInventory.isUseableByPlayer" | 
                        "net.minecraft.inventory.IInventory.removeStackFromSlot" | 
                        "net.minecraft.inventory.IInventory.getFieldCount" | 
                        "net.minecraft.inventory.IInventory.isItemValidForSlot" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds$Button.mouseReleased" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds$Button.mouseDragged" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds$Button.getHoverState" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds$Button.playPressSound" | 
                        "net.minecraft.client.gui.GuiScreenOptionsSounds$Button.mousePressed" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Slot.addSlot" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Slot.getStitchHolder" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Slot.toString" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Slot.getOriginY" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Slot.getOriginX" | 
                        "net.minecraft.client.renderer.texture.Stitcher$Slot.getAllStitchSlots" | 
                        "net.minecraft.client.renderer.entity.RenderMinecartMobSpawner.func_180560_a"
        )
    ) => {}
};